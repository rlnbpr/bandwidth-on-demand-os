<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="MTOSI" resourceRoot="${projectDir}" soapui-version="4.5.0" abortOnError="false" runType="SEQUENTIAL" activeEnvironment="Default" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="/opt/ums/SmartBear/soapUI-Pro-4.0.1/bin"/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="true"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="true"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="/users/wraith/soapuiresults"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="WsdlSettings@cache-wsdls">true</con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="AlarmRetrievalSoapHttpBinding" type="wsdl" bindingName="{http://www.tmforum.org/mtop/rtm/wsdl/ar/v1-0}AlarmRetrievalSoapHttpBinding" soapVersion="1_1" anonymous="optional" definition="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp.wsdl?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp.wsdl?WSDL"><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp.wsdl?WSDL</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-AlarmRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/rtm/wsdl/ar/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/rtm/wsdl/ar/v1-0" xmlns:WL5G3N2="http://schemas.xmlsoap.org/wsdl/soap/">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?wsdl=2" namespace="http://www.tmforum.org/mtop/rtm/wsdl/ar/v1-0"/>
  <WL5G3N0:documentation>DDP: ResourceTroubleManagement
    Module: AlarmRetrieval Service Interface WSDL HTTP Module
    Description: This module contains all the mTOP AlarmRetrieval Service Interface WSDL definitions for the Web Service deployment profile with SOAP/HTTP binding.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:binding name="AlarmRetrievalSoapHttpBinding" type="WL5G3N1:AlarmRetrieval">
    <WL5G3N0:documentation>SOAP HTTP binding definitions of the operations of the AlarmRetrieval portType (interface)</WL5G3N0:documentation>
    <WL5G3N2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <WL5G3N0:operation name="getActiveAlarms">
      <WL5G3N2:operation soapAction="getActiveAlarms" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getActiveAlarmsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getActiveAlarmsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getActiveAlarmsException">
        <WL5G3N2:fault name="getActiveAlarmsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getActiveAlarmsIterator">
      <WL5G3N2:operation style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getActiveAlarmsIteratorRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getActiveAlarmsIteratorResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getActiveAlarmsIteratorException">
        <WL5G3N2:fault name="getActiveAlarmsIteratorException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getActiveAlarmsCount">
      <WL5G3N2:operation soapAction="getActiveAlarmsCount" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getActiveAlarmsCountRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getActiveAlarmsCountResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getActiveAlarmsCountException">
        <WL5G3N2:fault name="getActiveAlarmsCountException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
  </WL5G3N0:binding>
  <WL5G3N0:service name="AlarmRetrievalHttp">
    <WL5G3N0:documentation>Example of the AlarmRetrieval WSDL Service definition as a deployment example of this mTOP Service Interface. It is expected to be modified to match the specific deployment configuration in a service provider's CCV.</WL5G3N0:documentation>
    <WL5G3N0:port binding="WL5G3N1:AlarmRetrievalSoapHttpBinding" name="AlarmRetrievalSoapHttp">
      <WL5G3N2:address location="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp"/>
    </WL5G3N0:port>
  </WL5G3N0:service>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?wsdl=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-AlarmRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/rtm/wsdl/ar/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/rtm/wsdl/ar/v1-0">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?wsdl=1" namespace="http://www.tmforum.org/mtop/rtm/wsdl/ar/v1-0"/>
  <WL5G3N0:documentation>DDP: ResourceTroubleManagement
    Module: AlarmRetrieval Service Interface WSDL PortType Module
    Description: This module contains all the mTOP AlarmRetrieval Service Interface PortType WSDL definitions common to both Web Service deployment profiles; SOAP/HTTP and SOAP/JMS.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:portType name="AlarmRetrieval">
    <WL5G3N0:documentation>The AlarmRetrieval porttype (interface) common to both RPC (synchronous) and MSG (asynchronous) based client/server communication patterns.</WL5G3N0:documentation>
    <WL5G3N0:operation name="getActiveAlarms">
      <WL5G3N0:input message="WL5G3N1:getActiveAlarmsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getActiveAlarmsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getActiveAlarmsException" name="getActiveAlarmsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getActiveAlarmsIterator">
      <WL5G3N0:input message="WL5G3N1:getActiveAlarmsIteratorRequest"/>
      <WL5G3N0:output message="WL5G3N1:getActiveAlarmsIteratorResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getActiveAlarmsIteratorException" name="getActiveAlarmsIteratorException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getActiveAlarmsCount">
      <WL5G3N0:input message="WL5G3N1:getActiveAlarmsCountRequest"/>
      <WL5G3N0:output message="WL5G3N1:getActiveAlarmsCountResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getActiveAlarmsCountException" name="getActiveAlarmsCountException"/>
    </WL5G3N0:operation>
  </WL5G3N0:portType>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?wsdl=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-AlarmRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/rtm/wsdl/ar/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:WL5G3N2="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
  <WL5G3N0:documentation>DDP: ResourceTroubleManagement
    Module: AlarmRetrieval Service Interface WSDL Message Module
    Description: This module contains all the mTOP AlarmRetrieval Service Interface WSDL message definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:types>
    <xsd:schema xmlns:ar="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/rtm/wsdl/ar/v1-0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=1"/>
    </xsd:schema>
  </WL5G3N0:types>
  <WL5G3N0:message name="getActiveAlarmsRequest">
    <WL5G3N0:documentation>The getActiveAlarms request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getActiveAlarmsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getActiveAlarmsResponse">
    <WL5G3N0:documentation>The getActiveAlarms response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getActiveAlarmsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getActiveAlarmsException">
    <WL5G3N0:documentation>The getActiveAlarms exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getActiveAlarmsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getActiveAlarmsIteratorRequest">
    <WL5G3N0:documentation>The getActiveAlarmsIterator request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getActiveAlarmsIteratorRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getActiveAlarmsIteratorResponse">
    <WL5G3N0:documentation>The getActiveAlarmsIterator response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getActiveAlarmsIteratorResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getActiveAlarmsIteratorException">
    <WL5G3N0:documentation>The getActiveAlarmsIterator exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getActiveAlarmsIteratorException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getActiveAlarmsCountRequest">
    <WL5G3N0:documentation>The getActiveAlarmsCount request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getActiveAlarmsCountRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getActiveAlarmsCountResponse">
    <WL5G3N0:documentation>The getActiveAlarmsCount response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getActiveAlarmsCountResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getActiveAlarmsCountException">
    <WL5G3N0:documentation>The getActiveAlarmsCount exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getActiveAlarmsCountException" name="mtopBody"/>
  </WL5G3N0:message>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" version="1.0" xmlns:alm="http://www.tmforum.org/mtop/nra/xsd/alm/v1" xmlns:com="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:prc="http://www.tmforum.org/mtop/nra/xsd/prc/v1" xmlns:tns="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: ResourceTroubleManagement</p>
      <p>Module:  Message XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP AlarmRetrieval SI XML
                message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=10"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/prc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=12"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/alm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=5"/>
  <!--================-->
  <xsd:element name="getActiveAlarmsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getActiveAlarms operation</p>
        <p>This operation returns (to the requesting OS) a
                    specified subset of the active alarms known to the
                    target OS. The target OS returns all alarms
                    satisfying the filter constraints of the requesting
                    OS. This operation can only be directed to a
                    top-level OS and not to a subordinate OS.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="filter" type="tns:ActiveAlarmFilterType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Defines the subset of the set of active
                                alarms known to the target OS that are
                                to be returned to the requesting OS.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getActiveAlarmsResponse" type="alm:AlarmListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getActiveAlarms operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getActiveAlarmsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getActiveAlarms operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
            <xsd:element ref="msg:unsupportedCompressionFormat"/>
            <xsd:element ref="msg:unsupportedPackingFormat"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getActiveAlarmsIteratorRequest" type="msg:GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getActiveAlarmsIterator operation</p>
        <p>This operation .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getActiveAlarmsIteratorResponse" type="alm:AlarmListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getActiveAlarmsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getActiveAlarmsIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getActiveAlarmsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="getActiveAlarmsCountRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getActiveAlarmsCount operation</p>
        <p>This operation returns the number of active alarms as
                    restricted by the provided filter. The target OS
                    sends the result to the requesting OS.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="filter" type="tns:ActiveAlarmFilterType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Defines the subset of the set of active
                                alarms known to the target OS that are
                                to be returned to the requesting OS.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getActiveAlarmsCountResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getActiveAlarmsCount operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="activeAlarmCount" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>The number of active alarms that pass the
                                filter conditions.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getActiveAlarmsCountException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getActiveAlarmsCount operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--=================-->
  <xsd:simpleType name="AlarmSourceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The source of the alarm with respect to the OS
                    receiving this request. This is one of  the active
                    alarm filter criteria.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INTERNAL"/>
      <xsd:enumeration value="EXTERNAL"/>
      <xsd:enumeration value="NOT_APPLICABLE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ActiveAlarmFilterType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The active alarm filter data structure. Default
                    interpretation (filter criteria is missing or is an
                    empty list) indicates that it is not relevant to the
                    query. All the filter criteria possible enumerations
                    are applicable.</p>
        <p>
          Examples:
          <ul>
            <li>#1: All filter criteria missing -> Retrieve
                            all alarms associated with all MEs and this OS</li>
            <li>#2: source=internal, all other criteria
                            missing -> Retrieve all alarms associated
                            with this OS only</li>
            <li>#3: source=external, all other criteria
                            missing -> Retrieve all alarms associated
                            with the MEs only</li>
          </ul>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="source" type="tns:AlarmSourceType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute filters the alarms based on
                            their source (with respect to the OS
                            receiving this request). Possible values are
                            INTERNAL, EXTERNAL, NOT_APPLICABLE. The
                            value NOT_APPLICABLE means there is no
                            filtering on the alarm source; i.e.,
                            internal and external alarms are in the scope.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:choice>
        <xsd:annotation>
          <xsd:documentation>
            <p>
              Two options for the retrieval of active
                            alarms:
              <ul>
                <li>Match with typed list of alarm attributes</li>
                <li>Match based on a generic query expresion</li>
              </ul>
            </p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="scope" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute filters the alarms
                                    based on a list of managed elements.
                                    The listed managed elements are in
                                    the scope.  If no managed element is
                                    provided, alarms from all managed
                                    elements are in scope.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="perceivedSeverityList" type="com:PerceivedSeverityListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute filters the alarms
                                    based on a list of severities (see
                                    ITU-T X.733 definitions). The listed
                                    severities are in the scope.  If no
                                    severity is provided, alarms with
                                    any severity are in scope.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="probableCauseList" type="prc:ProbableCauseListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute filters the alarms
                                    based on a list of probable causes
                                    (for details refer to the supporting
                                    document: ProbableCauses). The
                                    listed probable causes are in the
                                    scope. If no probable cause is
                                    provided, alarms with any probable
                                    cause are in scope.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="acknowledgeIndication" type="com:AcknowledgeIndicationType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute filters the alarms
                                    based on its acknowledge indication.
                                    Possible values are
                                    EVENT_ACKNOWLEDGED,
                                    EVENT_UNACKNOWLEDGED, and
                                    NOT_APPLICABLE. The value
                                    NOT_APPLICABLE indicates that alarms
                                    with any acknowledge indication are
                                    in scope.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:element minOccurs="0" name="queryExpression" type="gen:QueryExpressionType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Specify an alarm attribute matching query
                                expression based on a standard
                                specification query language (Xpath, ansi-92).</p>
              <p>Refer to the Business Agrrement (BA)
                                requirement description for details of
                                the minimum set of supported query operations.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=7</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of generic mTOP simple data types.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="NameAndStringValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvsList" type="tns:NameAndValueStringListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndValueStringListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndStringValue</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nvs" type="tns:NameAndStringValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:any minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvList" type="tns:NameAndAnyValueListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndAnyValueType</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nv" type="tns:NameAndAnyValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AliasNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    contains the list of aliases for the network entity.
                    The attribute is a name-value list. The name refers
                    to the type of alias (e.g., nativeEMSname) and the
                    value component holds the alias itself</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alias">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="aliasName" type="xsd:string"/>
            <xsd:element name="aliasValue" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AnyListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A generic list of any type of elements. Used for
                    vendor Extensions or loose element encapsulation
                    from other namespaces.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="DiscoveredNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the name of the object when
                    its existence is first published on the CCV but only
                    in the case where the OS that publishes the object
                    on the CCV is not the naming OS. If the naming OS
                    first publishes the object on the CCV, this
                    attribute may be left empty.</p>
        <p>The discovered name is assumed to be unique from the
                    perspective of the publishing OS.</p>
        <p>The discovered name published on the CCV does not
                    necessarily need to be the name of the object as
                    discovered by the OS from the subtending network.</p>
        <p>There are no specific rules concerning the
                    relationship between the "name" and
                    "discovered name" of the object. They
                    could be set to the same value or they could be different.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ManufactureDateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type identifies the production date of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="MultiEventInventoryAttributesType">
    <xsd:annotation>
      <xsd:documentation>This attribute is used when a object
                instance is embedded in the inventory    layout payload
                of a Multi-Event Inventory (MEI) notification.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="neTime" nillable="true" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the time at which the NE detected the
                            inventory change (if available)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventIndication" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is an indication of the type of
                            inventory update.</p>
            <p>Possible values are Object Creation (OC),
                            Object Discovery (ODsc), Object Deletion
                            (OD),        Attribute Value Change (AVC),
                            State Change (SC) and AVC_SC_and_Childern.
                            Only the acronym (e.g., OC)        is used
                            in the actual attribute value. The following
                            conventions apply:</p>
            <p>If an object creation or object discovery
                            indicator is applied to a parent object,
                            it implicitly applies to all the children,
                            i.e., the OS sending the notification only
                            needs       to set the indicator attribute
                            in the parent object.</p>
            <p>If an object deletion is applied to a parent
                            object, it is assumed that all the children
                            are also deleted. The childern should not be listed.</p>
            <p>The AVC_SC_and_Childern indication may be
                            applied to a parent object to imply that
                            there       may be AVC or SC changes to the
                            parent and some or all of the children.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="NetworkAccessDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A free-format string used to associate a resource to
                    a Network Access Domain.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="NotificationIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the notification ID.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="NotificationIdentifierListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of notification IDs  (free string). Also,  the
                    value found in notificationId field of the event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="notificationId" type="tns:NotificationIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of all the object types. It is
                    left as a string for maximum compatibility with
                    future supported object types.</p>
        <p>Refer to the SD2-7 ObjectNaming for the list of all
                    supported values.</p>
        <p>Otherwise, one can also refer to the
                    ObjectEnumTypedefined in CommonResourceInfo (see NRB
                    DDP), which is provided as XML Schema enumerations
                    solely as a helper (not used in any messaging validation).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enumeration of all the supported query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI">
      <xsd:enumeration value="ANSI-92"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath20/"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The loose definition of all the supported query
                    dialect types.</p>
        <p>Refer to QueryDialectEnumType definition to the
                    enumeration of recommended query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The generic schema datatype definition for the query
                    expression used in most filters.</p>
        <p>This definition is borrowed from WS-Notification v1.3.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="tns:QueryDialectTypeType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          <p>The dialect of the given query expression</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=10</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=8"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=7"/>
  <!--==============-->
  <xsd:complexType abstract="false" name="BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The (abstract) base type definition of all exception messages.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="hdr:header">
        <xsd:annotation>
          <xsd:documentation>The mTOP header as it cannot be
                        part of the SOAP Header in a SOAP v1.1 Fault message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="reason" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>A string indicating further details about the
                            exception. It is a free format string filled
                            by the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The extension for specific vendor exception information.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:element name="notImplemented" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised by OS for an optional operation that is not implemented</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="internalError" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised in case of non-specific OS internal failure</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidInput" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters are invalid</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tooManyOpenIterators" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when data retrieval iterator capacity is full</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="entityNotFound" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters do not refer to an existing object</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="commLoss" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when communication to an entity (needed to
                    help fulfill the request) is lost</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedCompressionFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given data compression format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedPackingFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given file packing format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidFilterDefinition" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the filter is invalid.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="objectInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tpInvalidEndPoint" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="timeslotInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="protectionEffortNotMet" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notInValidState" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unableToComply" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="capacityExceeded" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="accessDenied" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedRoutingConstraints" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="userlabelInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidTopic" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the topic is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notificationServiceProblem" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when there is a failure with the Broker.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AllExceptionsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reference to all supported exception types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="tns:accessDenied"/>
      <xsd:element ref="tns:capacityExceeded"/>
      <xsd:element ref="tns:commLoss"/>
      <xsd:element ref="tns:entityNotFound"/>
      <xsd:element ref="tns:internalError"/>
      <xsd:element ref="tns:invalidFilterDefinition"/>
      <xsd:element ref="tns:invalidInput"/>
      <xsd:element ref="tns:invalidTopic"/>
      <xsd:element ref="tns:notificationServiceProblem"/>
      <xsd:element ref="tns:notImplemented"/>
      <xsd:element ref="tns:notInValidState"/>
      <xsd:element ref="tns:objectInUse"/>
      <xsd:element ref="tns:protectionEffortNotMet"/>
      <xsd:element ref="tns:timeslotInUse"/>
      <xsd:element ref="tns:tooManyOpenIterators"/>
      <xsd:element ref="tns:tpInvalidEndPoint"/>
      <xsd:element ref="tns:unableToComply"/>
      <xsd:element ref="tns:unsupportedCompressionFormat"/>
      <xsd:element ref="tns:unsupportedPackingFormat"/>
      <xsd:element ref="tns:unsupportedRoutingConstraints"/>
      <xsd:element ref="tns:userlabelInUse"/>
    </xsd:choice>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Profile of exception types supported by all mTOP
                    iterator operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="tns:AllExceptionsType">
        <xsd:choice>
          <xsd:element ref="tns:commLoss"/>
          <xsd:element ref="tns:internalError"/>
          <xsd:element ref="tns:invalidInput"/>
          <xsd:element ref="tns:notImplemented"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Generic request message structure for all data
                    iterator operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=8</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML header.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=7"/>
  <!--==============-->
  <xsd:simpleType name="ActivityStatusEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies the high-level response status for an
                    activity.  Required for response messages, including
                    error responses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="WARNING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="ActivityStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Add to the initial enumerations the Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ActivityStatusEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="MessageTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type of the message that is being exchanged as
                    part of an activity.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REQUEST"/>
      <xsd:enumeration value="RESPONSE"/>
      <xsd:enumeration value="NOTIFICATION"/>
      <xsd:enumeration value="ERROR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationPatternType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Styles supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SimpleResponse"/>
      <xsd:enumeration value="MultipleBatchResponse"/>
      <xsd:enumeration value="BulkResponse"/>
      <xsd:enumeration value="Notification"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationStyleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Style supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MSG"/>
      <xsd:enumeration value="RPC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="CompressionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if compression is to be performed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:CompressionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CompressionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported compressions. All extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_COMPRESSION"/>
      <xsd:enumeration value="GZIP"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PackingTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if the output file(s) are to be packed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:PackingEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PackingEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported packing/packaging. All
                    extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PACKING"/>
      <xsd:enumeration value="ZIP"/>
      <xsd:enumeration value="TAR"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="header">
    <xsd:annotation>
      <xsd:documentation>
        <p>MTOSI Standard Header.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="activityName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the business
                                transaction activity for the message
                                being exchanged.       The value is
                                usually the name of the mTOP operation,
                                e.g. getInventory.       This value
                                corresponds to the “operation” in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the message (or
                                contract) that is being exchanged as
                                part of an activity. E.g.
                                getInventoryResponse. This field
                                corresponds to the message name in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgType" type="tns:MessageTypeType"/>
        <xsd:element minOccurs="0" name="senderURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application sending this message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="destinationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the final destination of the
                                message (the OS that will process the
                                content of the message). This field may
                                point to a logical end point or abstract
                                topic name to be resolved by the
                                communication transport middleware in
                                order to deliver the message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="replyToURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used by request messages to specify
                                destination for response message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="originatorURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the originating application of
                                the message that resulted in this
                                response or notification message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="failureReplytoURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application receiving the
                                potential error notification message.
                                Required for all response messages and
                                notifications which are triggered by
                                request/response. If not specified the
                                replyToURI is used. If the replyToURI is
                                also not specified, senderURI endpoint
                                is used to send back the failure response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="activityStatus" type="tns:ActivityStatusType"/>
        <xsd:element minOccurs="0" name="correlationId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>An identifier that could be set by the
                                originator of an asynchronous request
                                that will allow it to correlate the
                                response to the request.  If this field
                                is set, it should be reflected in the
                                header of the response message.  Not
                                required for notification headers.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="security" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Provides credential nformation for use by
                                a security service for identification,
                                authentication, or authorization.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="securityType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the type of credential
                                contained in the security element.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="priority">
          <xsd:annotation>
            <xsd:documentation>
              <p>Indicates message-handling priority for
                                asynchronous messages.  It must be in
                                the range 0-9 (lowest-highest). Default: 4</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string"/>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgSpecificProperties">
          <xsd:annotation>
            <xsd:documentation>
              <p>Conditionally required for request,
                                response, and notification messages as
                                identified by the documentation for a
                                specific interface message.  The
                                communications infrastructure or the
                                receiving application can use this value
                                for routing or filtering messages.</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" minOccurs="0" name="property">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="propName" type="xsd:string"/>
                    <xsd:element name="propValue" type="xsd:string"/>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="communicationPattern" type="tns:CommunicationPatternType"/>
        <xsd:element minOccurs="0" name="communicationStyle" type="tns:CommunicationStyleType"/>
        <xsd:element minOccurs="0" name="requestedBatchSize" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>The RequestedBatchSize parameter provides
                                the control for the batch segmentation
                                of the full set of output data generated
                                by a coarse-grained operation such as
                                getInventory or getActiveAlarms. The
                                unit is any of the MTOSI objects. And,
                                it defines the maximum number of MTOSI
                                objects that can be included in all the
                                batches of data sent as part of a
                                multiple responses MEP.</p>
              <p>However, they are cases where a batch may
                                exceed the number of objects defined in
                                the RequestedBatchSize parameter. This
                                is true if the granularity of a response
                                atomic data representation is greater
                                than just one object. This is true for
                                the getInventory response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceNumber" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm. Pattern
                                to identify the batch seq number in a sequence.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceEndOfReply" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm.
                                Pattern, true if it is the last result
                                batch in a sequence</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="iteratorReferenceURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Mandatory for all SIT (iterators) MEP to
                                allow description of the data retrieval iterator.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="fileLocationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used for file retrieval. Specify the base
                                name of the file(s) to be generated and
                                the remote destination.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="compressionType" type="tns:CompressionTypeType"/>
        <xsd:element minOccurs="0" name="packingType" type="tns:PackingTypeType"/>
        <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>Message originating timestamp</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Location for all vendor extensions to the
                                MTOSI standard header.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=11</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML naming structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=7"/>
  <!--=================-->
  <xsd:complexType name="RelativeDistinguishNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of relative distinguish
                    name (RDN) data structure used in all object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="type" type="gen:ObjectTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN object type acronym.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of the MTOSI object name
                    data structure as a sequence of RDNs, which
                    represents a unique identifier for the MTOSI object
                    on the CCV. Once set by the naming OS, the name is
                    invariant for the life of the object and should be
                    used when referring to the object over the CCV. Name
                    attribute of an object instance shall always be
                    assigned a value, unless the object instance is
                    first discovered by an OS that is not the naming OS
                    for the object instance. In such a case, the
                    discovering OS shall provide a value for the
                    Discovered Name attribute of the object. The naming
                    OS shall provide a value for the Name attribute of
                    the object once it becomes aware of the new object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="rdn" type="tns:RelativeDistinguishNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition for the list of MTOSI object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="name" nillable="true" type="tns:NamingAttributeType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=3</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common
                type definitions used in some the mTOP XML Network
                Resource Assurance objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:simpleType name="AcknowledgeIndicationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>AcknowledgeIndicationType describes the event
                    acknowledge state.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ACKNOWLEDGED">
        <xsd:annotation>
          <xsd:documentation>provided in case of manual or
                        auto acknowledgement</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNACKNOWLEDGED">
        <xsd:annotation>
          <xsd:documentation>provided if the event has not
                        been acknowledged but the OS supports
                        acknowledgement for this event or in the case
                        that the alarm has been previously acknowledged
                        and then unacknowledged</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NOT_APPLICABLE">
        <xsd:annotation>
          <xsd:documentation>provided in case the OS does not
                        support acknowledgement for this event or does
                        not support acknowledgement at all</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=====================-->
  <xsd:complexType name="AssignedSeverityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The assigned severity is allocated to a probable
                    cause using the alarm severity assignment profile.</p>
        <p>The identified probable cause should be raised with
                    the assigned severity.</p>
        <p>The assignment of severities is extended beyond
                    PerceivedSeverity to cover the case where:</p>
        <p>- no alarm should be raised: "NOT_ALARMED"</p>
        <p>- the EMS/NE is free to make a choice based upon its
                    local criteria: "FREE_CHOICE"</p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:AssignedSeverityEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="AssignedSeverityEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enum values of a probable cause.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="CRITICAL"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="NOT_ALARMED"/>
      <xsd:enumeration value="FREE_CHOICE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentProtectionGroupTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The EquipmentProtectionGroupType with MTOSI minor
                    version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentProtectionGroupTypeEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentProtectionGroupTypeEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The equipment protection group type is a string that
                    identifies the type of equipment protection. The
                    string can take on the following value:
                    "M_FOR_N." M:N equipment protection means
                    that M pieces of equipment protect N pieces of equipment.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="M_FOR_N"/>
      <xsd:enumeration value="M:N"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentSwitchReasonType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The equipment switch reason reflects the reason why a
                    switch occurred.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentSwitchReasonEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentSwitchReasonEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>EswitchReason is a string that can take           the
                    following values:</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="NOT_APPLICABLE">
        <xsd:annotation>
          <xsd:documentation>
            <p>is used if a more precise value is not available</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FAILURE">
        <xsd:annotation>
          <xsd:documentation>
            <p>is used when an instance of equipment has failed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MANUAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>indicates a switch that was requested by the
                            operator          and includes forced switches</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NativeProbableCauseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Represents the native probable cause.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PerceivedSeverityListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of PerceivedSeverityType elements.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="perceivedSeverity" type="tns:PerceivedSeverityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PerceivedSeverityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The PerceivedSeverity values are consistent with
                    ITU-T X.733 definitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="CRITICAL"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="CLEARED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProbableCauseQualifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Represents the probable cause qualifier and shall be
                    present if the probable cause</p>
        <p>attribute is not sufficient to uniquely identify an alarm.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProposedRepairActionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Element of ProposedRepairActionListType.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProposedRepairActionListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of ProposedRepairActionType elements.</p>
        The
                optional "X.733::ProposedRepairActions"
                parameter uses this type. When present in an alarm
                notification, it indicates if the cause is known and the
                system being managed can suggest one or more solutions
                (such as switch in standby equipment, retry, replace
                media). This is consistent with the ITU-T X.733
                definition.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="proposedRepairAction" type="tns:ProposedRepairActionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionCommandType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This type identifies the possible protection switch
                    commands. See ITU-T Recommendation G.841 for definitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CLEAR"/>
      <xsd:enumeration value="LOCKOUT"/>
      <xsd:enumeration value="FORCED_SWITCH"/>
      <xsd:enumeration value="MANUAL_SWITCH"/>
      <xsd:enumeration value="EXERCISER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionGroupTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionGroupType with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionGroupTypeEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionGroupTypeEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection group type identifies the type of the
                    protection Group.</p>
        <p>It should be noted that although the term MSP was
                    chosen as the original specific protection scheme to
                    which the related behaviour applied was Multiplex
                    Section Protection, the label is now more generally
                    applied to any 1+1 or 1:N Trail protection scheme</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="MSP_1_PLUS_1"/>
      <xsd:enumeration value="MSP_1_FOR_N"/>
      <xsd:enumeration value="2_FIBER_BLSR"/>
      <xsd:enumeration value="4_FIBER_BLSR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionType with MTOSI minor version and
                    vendor extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionTypeEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionTypeEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection type identifies whether a protection
                    switch is an MS protection switch or an SNCP
                    protection switch.  It should be noted that although
                    the term MSP was chosen as the original specific
                    protection scheme to which the related behaviour
                    applied was Multiplex Section Protection, the label
                    is now more generally applied to any 1+1 or 1:N
                    Trail protection scheme.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MSP_APS"/>
      <xsd:enumeration value="SNCP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ReversionModeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reversion mode is used to indicate whether, after
                    repair of a failed resource, an additional switch
                    should be made to revert to the preferred resource.
                    Revertive modes may require a wait to restore (WTR)
                    time setting.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="NON_REVERTIVE"/>
      <xsd:enumeration value="REVERTIVE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ServiceAffectingType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the impact of a fault on monitored entities</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>The OS cannot determine if the
                        condition affects service or not</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SERVICE_AFFECTING">
        <xsd:annotation>
          <xsd:documentation>The OS determines that the
                        condition affects service</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NON_SERVICE_AFFECTING">
        <xsd:annotation>
          <xsd:documentation>TheOS determines that the
                        condition does not affect service</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="SpecificProblemListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of SpecificProblemType elements. The optional
                    "X.733::SpecificProblems" parameter uses
                    that type. When present in an alarm notification, it
                    identifies further refinements to the probable cause
                    of the alarm. This is consistent with the ITU-T
                    X.733 definition.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="specificProblem" type="tns:SpecificProblemType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SpecificProblemType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Element of SpecificProblemListType.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SwitchReasonType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The switch reason reflects the reason why a switch occurred.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_APPLICABLE">
        <xsd:annotation>
          <xsd:documentation>Value used upon retrieval of
                        switch data for non-revertive groups, if a more
                        precise value is not available</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="RESTORED">
        <xsd:annotation>
          <xsd:documentation>used for revertive groups to
                        indicate a return to the normal state</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIGNAL_FAIL">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIGNAL_MISMATCH">
        <xsd:annotation>
          <xsd:documentation>Value used in the case the signal
                        is ok, but is identified as coming from an
                        incorrect source:
                        TRAIL_TRACE_IDENTIFIER_MISMATCH, Signal Label
                        Mismatch, etc</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIGNAL_DEGRADE">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="AUTOMATIC_SWITCH">
        <xsd:annotation>
          <xsd:documentation>Value used when the exact switch
                        reason is unknown, in retrievals of switch data
                        if a protection switch is currently active or in
                        protection switch notifications</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MANUAL">
        <xsd:annotation>
          <xsd:documentation>Value indicates a switch that was
                        requested by the operator and includes forced switches</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="G_774_3_APSfunctionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The G_774_3_APSfunction with MTOSI minor version and
                    vendor extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:G_774_3_APSfunctionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="G_774_3_APSfunctionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Indicates if the switching function is based on APS
                    standardized protocol or on a proprietary protocol.
                    "G.783" is set in case of K1/K2 based APS,
                    and "Legacy" is set in case of proprietary
                    protocol, as for radio equipment for example.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="G.783"/>
      <xsd:enumeration value="Legacy"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=12</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/prc/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/prc/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP probable causes.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=====================-->
  <xsd:complexType name="ProbableCauseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The MTOSI alarm probable causes. For details refer to
                    the supporting document: ProbableCauses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element default="false" minOccurs="0" name="ru" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>This boolean parameter stands
                        for Remote Unit (RU). It indicates the location
                        of the network resource the alarm probable cause
                        is associated with. The default setting (false)
                        is for an alarm detected with a local network
                        resource. And, the value is "true"
                        when the alarm is associated with a remote
                        network resource.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element default="false" minOccurs="0" name="contra" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>This is a boolean parameter used
                        to distinguish the direction of the signal
                        related alarm. The default setting (false) is
                        for an alarm detected on the signal that is
                        related to the sink atomic function. And, the
                        value is "true" for an alarm detected
                        on the signal that is related to the source
                        atomic function.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="1" name="probableCause" type="tns:ProbableCauseEnumType"/>
    </xsd:sequence>
    <xsd:attribute name="extension" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          <p>This is used to capture the extended value</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="qualifier" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          <p>This is used with other attributes; objectName,
                        layerRate, and probableCause to uniquely
                        identify an alarm</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="ProbableCauseEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="UNIDENTIFIED"/>
      <xsd:enumeration value="AIS"/>
      <xsd:enumeration value="AMS"/>
      <xsd:enumeration value="ATPC_FAIL"/>
      <xsd:enumeration value="AU-AIS"/>
      <xsd:enumeration value="BER_SD"/>
      <xsd:enumeration value="BER_SF"/>
      <xsd:enumeration value="BLOCKED_FE"/>
      <xsd:enumeration value="CFG_ABORT"/>
      <xsd:enumeration value="CFG_ABORT_FE"/>
      <xsd:enumeration value="DCC_FAILURE"/>
      <xsd:enumeration value="DEMODULATION_FAIL"/>
      <xsd:enumeration value="EMS"/>
      <xsd:enumeration value="EMS_ALM_LOSS"/>
      <xsd:enumeration value="EMS_LIFECYCLE_LOSS"/>
      <xsd:enumeration value="EMS_ALM_AND_LIFECYCLE_LOSS"/>
      <xsd:enumeration value="EQPT"/>
      <xsd:enumeration value="ENV"/>
      <xsd:enumeration value="FF"/>
      <xsd:enumeration value="FOP_APS"/>
      <xsd:enumeration value="INSUFF_LINKS"/>
      <xsd:enumeration value="INSUFF_LINKS_FE"/>
      <xsd:enumeration value="LCD"/>
      <xsd:enumeration value="LIF"/>
      <xsd:enumeration value="LOA"/>
      <xsd:enumeration value="LOC"/>
      <xsd:enumeration value="LODS"/>
      <xsd:enumeration value="LOF"/>
      <xsd:enumeration value="LOM"/>
      <xsd:enumeration value="LOP"/>
      <xsd:enumeration value="LOPC"/>
      <xsd:enumeration value="LOS"/>
      <xsd:enumeration value="LOTC"/>
      <xsd:enumeration value="MODULATION_FAIL"/>
      <xsd:enumeration value="MS-AIS"/>
      <xsd:enumeration value="OS"/>
      <xsd:enumeration value="OS_ALM_LOSS"/>
      <xsd:enumeration value="OS_LIFECYCLE_LOSS"/>
      <xsd:enumeration value="OS_ALM_AND_LIFECYCLE_LOSS"/>
      <xsd:enumeration value="OSC-AIS"/>
      <xsd:enumeration value="OSC_BER_SF"/>
      <xsd:enumeration value="OSC_FERF"/>
      <xsd:enumeration value="OSC_LOF"/>
      <xsd:enumeration value="OSC_LOS"/>
      <xsd:enumeration value="OSC_SD"/>
      <xsd:enumeration value="PLM"/>
      <xsd:enumeration value="RAI"/>
      <xsd:enumeration value="RX_FAIL"/>
      <xsd:enumeration value="RX_MIS_CONNECT"/>
      <xsd:enumeration value="RX_UNUSABLE_FE"/>
      <xsd:enumeration value="SECURITY_VIOLATION"/>
      <xsd:enumeration value="SQL"/>
      <xsd:enumeration value="SSF"/>
      <xsd:enumeration value="STARTUP_FE"/>
      <xsd:enumeration value="TCF"/>
      <xsd:enumeration value="TCFE"/>
      <xsd:enumeration value="TCFI"/>
      <xsd:enumeration value="TIM"/>
      <xsd:enumeration value="TIMING_SYNCH"/>
      <xsd:enumeration value="TSD"/>
      <xsd:enumeration value="TSF"/>
      <xsd:enumeration value="TU-AIS"/>
      <xsd:enumeration value="TX_DEGRADE"/>
      <xsd:enumeration value="TX_FAIL"/>
      <xsd:enumeration value="TX_MIS_CONNECT"/>
      <xsd:enumeration value="TX_UNUSABLE_FE"/>
      <xsd:enumeration value="UAT"/>
      <xsd:enumeration value="UNEQ"/>
      <xsd:enumeration value="VC-AIS"/>
      <xsd:enumeration value="VC-RDI"/>
      <xsd:enumeration value="VP-AIS"/>
      <xsd:enumeration value="VP-RDI"/>
      <xsd:enumeration value="XPIC_FAIL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=====================-->
  <xsd:complexType name="ProbableCauseListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of MTOSI alarm probable causes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="prc" type="tns:ProbableCauseType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=5</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/alm/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:com="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:cornot="http://www.tmforum.org/mtop/fmw/xsd/cornot/v1" xmlns:ei="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:prc="http://www.tmforum.org/mtop/nra/xsd/prc/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/alm/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the Alarm event.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cornot/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/prc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=12"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=3"/>
  <!--================-->
  <xsd:element name="alarm" substitutionGroup="cei:commonEventInformation" type="tns:AlarmType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of the alarm event.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AlarmType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the alarm event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ei:EventInformationType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="isEdgePointRelated" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>TRUE if this event relates to a PTP
                                    that is an edge point or to a PGP
                                    that contains a PTP that is an edge
                                    point. FALSE otherwise; this field
                                    is optional in this case.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isClearable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the event is clearable
                                    (or is itself a clear).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="aliasNameList" type="gen:AliasNameListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies all the object list of
                                    aliases to describe the network
                                    entity as portrayed on the OS user interface.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="layerRate" type="lay:LayerRateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The layer which this alarm is
                                    relevant to.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="probableCause" type="prc:ProbableCauseType">
            <xsd:annotation>
              <xsd:documentation>
                <p>No other string than the ones defined
                                    by the TM Forum should be used for
                                    this field.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="nativeProbableCause" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies the probableCause as
                                    portrayed on the OS user interface.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="additionalText" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>More information about the alarm.
                                    such as, "Unit is mismounted".</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="perceivedSeverity" type="com:PerceivedSeverityType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the severity of the alarm.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="affectedPtpRefList" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of affected TPs. Contained
                                    CTPs are not listed. This field is
                                    optional for all alarms except for
                                    alarms on equipment. This is used to
                                    indicate a list of TPs affected by
                                    an equipment failure for example. If
                                    the alarm is an alarm on an
                                    equipment that supports PTPs, then
                                    the ports (PTPs) supported by this
                                    equipment will be listed in this
                                    field (irrespective of whether the
                                    alarm is Service Affecting or not).
                                    The list should be ordered by PTP
                                    names (ASCII order).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="serviceAffecting" type="com:ServiceAffectingType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the alarm has
                                    affected service</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="rootCauseAlarmIndication" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The RCAI indicator has two values,
                                    i.e., TRUE (meaning that the alarm
                                    is a Root Cause Alarm Indication) or
                                    FALSE (meaning the alarm is a raw alarm).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="acknowledgeIndication" type="com:AcknowledgeIndicationType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The acknowledge indication state.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_EventType" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Classifies the alarm into one of the
                                    five basic categories specified in
                                    ITU-T X.733. Value is one of the
                                    following:
                                    "communicationsAlarm",
                                    "environmentalAlarm",
                                    "equipmentAlarm",
                                    "processingErrorAlarm",
                                    "qualityofServiceAlarm"
                                    This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_SpecificProblems" type="com:SpecificProblemListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies further refinements to the
                                    Probable cause of the alarm.
                                    (Similar to ProbableCauseQualifier,
                                    but this parameter is designed to be
                                    human readable and compatible with
                                    ITU usage.) This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_BackedUpStatus" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Specifies whether or not the object
                                    emitting the alarm has been
                                    backed-up, and services provided to
                                    the user have, therefore, not been
                                    disrupted. Value is one of the
                                    following: "BACKED_UP",
                                    "NOT_BACKED_UP" This field
                                    is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_BackUpObjectRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Specifies the object that is
                                    providing back-up services for the
                                    object about which the notification
                                    pertains. This parameter shall be
                                    present when the
                                    X733::BackedupStatus parameter is
                                    present and has the value
                                    "BACKED_UP".  This field
                                    is optional otherwise.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_TrendIndication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Specifies the current severity trend
                                    of the object. If present it
                                    indicates that there are one or more
                                    alarms ("outstanding
                                    alarms") which have not been
                                    cleared, and pertain to the same
                                    object as that to which this alarm
                                    ("current alarm")
                                    pertains. Value is one of the
                                    following: "MORE_SEVERE",
                                    "NO_CHANGE",
                                    "LESS_SEVERE" This field
                                    is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_CorrelatedNotificationList" type="cornot:CorrelatedNotificationListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains a set of Notification
                                    identifiers and, if necessary, their
                                    associated object names. This set is
                                    defined to be the set of all
                                    notifications to which this
                                    notification is considered to be
                                    correlated. This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_MonitoredAttributeList" type="gen:NameAndValueStringListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Defines one or more attributes of the
                                    managed object and their
                                    corresponding values at the time of
                                    the alarm. This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_ProposedRepairActionList" type="com:ProposedRepairActionListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Used if the cause is known and the
                                    system being managed can suggest one
                                    or more solutions (such as switch in
                                    standby equipment, retry, replace
                                    media). This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_AdditionalInformation" type="gen:NameAndAnyValueListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Allows the inclusion of a set of
                                    additional information.  (For
                                    consistency with X.733) This field
                                    is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="AlarmListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of alarms.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alarm" type="tns:AlarmType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common event information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=7"/>
  <!--================-->
  <xsd:element name="commonEventInformation" type="tns:CommonEventInformationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of the common set of
                    attributes used for all events.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonEventInformationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the common set of attributes
                    used for all events.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="notificationId" type="gen:NotificationIdentifierType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The uniqueness and the sequence of the
                            notificationId are not guaranteed.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="sourceTime" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>
            <p>The time at which the event was reported by
                            the source system (NE, EMS or OS).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Containment for all vendor extensions</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=6</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common event information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=11"/>
  <!--================-->
  <xsd:complexType abstract="true" name="EventInformationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the event information set of attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cei:CommonEventInformationType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="objectType" type="gen:ObjectTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies the type of the object
                                    associated with the event. This
                                    attribute is needed to allow simple
                                    notification filtering based on the
                                    object type.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="objectName" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies the name of the object
                                    associated with the event.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="osTime" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:documentation>
                <p>The time at which the event was
                                    reported by the OS (EMS).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=4</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/cornot/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/cornot/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP CorrelatedNotifications XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=7"/>
  <!--=================-->
  <xsd:complexType name="CorrelatedNotificationsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Correlated notifications are identified by the object
                    that emitted the notification and the notification
                    IDs. Both are included in case the Notification IDs
                    are not unique across objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="nam:NamingAttributeType"/>
      <xsd:element name="notifIds" type="gen:NotificationIdentifierListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="CorrelatedNotificationListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of CorrelatedNotificationsType elements.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="correlatedNotifications" type="tns:CorrelatedNotificationsType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval/AlarmRetrievalHttp?xsd=9</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP layer rates.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:element name="layerRateListType" type="tns:LayerRateListType"/>
  <!--================-->
  <xsd:complexType name="LayerRateListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of LayerRates</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="layerRate" nillable="true" type="tns:LayerRateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="LayerRateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          The LayerRateType value is used to identify:
          <li>the Layer of a PTP/CTP,</li>
          <li>the characteristic information of a PTP/FTP,</li>
          <li>the Layer/Rate of a connection.</li>
        </p>
        <p>Each LayerRateType may be used in conjunction with a
                    CTP/PTP/FTP of that layer. In the SDH definitions,
                    the G.805 CP and G.805 Termination Function layer
                    names differ, for example TU12 is used for the G.805
                    CP and VC12 for the corresponding G.805 Termination
                    Function. In this interface definition the TU and VC
                    definitions have been combined into a single
                    composite layer and this has been named to include
                    the equivalent SONET layer, e.g. LR_VT2_andTypeU12_VC12.</p>
        <p>
          For more details refer to the following supporting
                    document:
          <li>layering documentfor
                        all layering concepts</li>
          <li>LayerRates document for information about
                        recognized values in MTOSI</li>
        </p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:LayerRateEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="LayerRateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="LR_DS0_64K"/>
      <xsd:enumeration value="LR_DSL"/>
      <xsd:enumeration value="LR_Not_Applicable"/>
      <xsd:enumeration value="LR_Async_FOTS_150M"/>
      <xsd:enumeration value="LR_Async_FOTS_417M"/>
      <xsd:enumeration value="LR_Async_FOTS_560M"/>
      <xsd:enumeration value="LR_Async_FOTS_565M"/>
      <xsd:enumeration value="LR_Async_FOTS_1130M"/>
      <xsd:enumeration value="LR_Async_FOTS_1G7"/>
      <xsd:enumeration value="LR_Async_FOTS_1G8"/>
      <xsd:enumeration value="LR_ATM_NI"/>
      <xsd:enumeration value="LR_ATM_VC"/>
      <xsd:enumeration value="LR_ATM_VP"/>
      <xsd:enumeration value="LR_D1_Video"/>
      <xsd:enumeration value="LR_DIGITAL_SIGNAL_RATE"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_DSR_1_5M"/>
      <xsd:enumeration value="LR_DSR_2M"/>
      <xsd:enumeration value="LR_DSR_4M"/>
      <xsd:enumeration value="LR_DSR_6M"/>
      <xsd:enumeration value="LR_DSR_8M"/>
      <xsd:enumeration value="LR_DSR_16M"/>
      <xsd:enumeration value="LR_DSR_34M"/>
      <xsd:enumeration value="LR_E2_8M"/>
      <xsd:enumeration value="LR_E5_565M"/>
      <xsd:enumeration value="LR_Encapsulation"/>
      <xsd:enumeration value="LR_Fragment"/>
      <xsd:enumeration value="LR_DSR_45M"/>
      <xsd:enumeration value="LR_DSR_140M"/>
      <xsd:enumeration value="LR_DSR_565M"/>
      <xsd:enumeration value="LR_DSR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_DSR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OC1_STM0"/>
      <xsd:enumeration value="LR_DSR_OC3_STM1"/>
      <xsd:enumeration value="LR_DSR_2xSTM1"/>
      <xsd:enumeration value="LR_DSR_OC12_STM4"/>
      <xsd:enumeration value="LR_DSR_OC24_STM8"/>
      <xsd:enumeration value="LR_DSR_OC48_and_STM16"/>
      <xsd:enumeration value="LR_DSR_OC192_and_STM64"/>
      <xsd:enumeration value="LR_DSR_OC768_and_STM256"/>
      <xsd:enumeration value="LR_DSR_OTU1"/>
      <xsd:enumeration value="LR_DSR_OTU2"/>
      <xsd:enumeration value="LR_DSR_OTU3"/>
      <xsd:enumeration value="LR_E1_2M"/>
      <xsd:enumeration value="LR_E20_2x2M"/>
      <xsd:enumeration value="LR_E30_8x2M"/>
      <xsd:enumeration value="LR_E3_34M"/>
      <xsd:enumeration value="LR_E4_140M"/>
      <xsd:enumeration value="LR_ESCON"/>
      <xsd:enumeration value="LR_Ethernet"/>
      <xsd:enumeration value="LR_ETR"/>
      <xsd:enumeration value="LR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_FC_12_133M"/>
      <xsd:enumeration value="LR_FC_25_266M"/>
      <xsd:enumeration value="LR_FC_50_531M"/>
      <xsd:enumeration value="LR_FC_100_1063M"/>
      <xsd:enumeration value="LR_FDDI"/>
      <xsd:enumeration value="LR_FICON"/>
      <xsd:enumeration value="LR_FR_IF"/>
      <xsd:enumeration value="LR_FR_PVC"/>
      <xsd:enumeration value="LR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_ISDN_BRI"/>
      <xsd:enumeration value="LR_Line_OC1_STS1_and_MS_STM0"/>
      <xsd:enumeration value="LR_Line_OC3_STS3_and_MS_STM1"/>
      <xsd:enumeration value="LR_Line_OC12_STS12_and_MS_STM4"/>
      <xsd:enumeration value="LR_Line_OC24_STS24_and_MS_STM8"/>
      <xsd:enumeration value="LR_Line_OC48_STS48_and_MS_STM16"/>
      <xsd:enumeration value="LR_Line_OC192_STS192_and_MS_STM64"/>
      <xsd:enumeration value="LR_Line_OC768_STS768_and_MS_STM256"/>
      <xsd:enumeration value="LR_Low_Order_TU3_VC3"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3"/>
      <xsd:enumeration value="LR_STS3c_and_AU4_VC4"/>
      <xsd:enumeration value="LR_STS4c_and_VC3_4c"/>
      <xsd:enumeration value="LR_STS5c_and_VC3_5c"/>
      <xsd:enumeration value="LR_STS6c_and_VC4_2c"/>
      <xsd:enumeration value="LR_STS7c_and_VC3_7c"/>
      <xsd:enumeration value="LR_STS8c_and_VC3_8c"/>
      <xsd:enumeration value="LR_STS9c_and_VC4_3c"/>
      <xsd:enumeration value="LR_Optical_Channel"/>
      <xsd:enumeration value="LR_Optical_Multiplex_Section"/>
      <xsd:enumeration value="LR_OPTICAL_SECTION"/>
      <xsd:enumeration value="LR_Optical_Transmission_Section"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_PHYSICAL_MEDIALESS"/>
      <xsd:enumeration value="LR_PHYSICAL_OPTICAL"/>
      <xsd:enumeration value="LR_POTS"/>
      <xsd:enumeration value="LR_Section_OC1_STS1_and_RS_STM0"/>
      <xsd:enumeration value="LR_Section_OC3_STS3_and_RS_STM1"/>
      <xsd:enumeration value="LR_Section_OC12_STS12_and_RS_STM4"/>
      <xsd:enumeration value="LR_Section_OC24_STS24_and_RS_STM8"/>
      <xsd:enumeration value="LR_Section_OC48_STS48_and_RS_STM16"/>
      <xsd:enumeration value="LR_Section_OC192_STS192_and_RS_STM64"/>
      <xsd:enumeration value="LR_Section_OC768_STS768_and_RS_STM256"/>
      <xsd:enumeration value="LR_STS1_and_AU3_High_Order_VC3"/>
      <xsd:enumeration value="LR_STS2c_and_VC3_2c"/>
      <xsd:enumeration value="LR_STS10c_and_VC3_10c"/>
      <xsd:enumeration value="LR_STS11c_and_VC3_11c"/>
      <xsd:enumeration value="LR_STS12c_and_VC4_4c"/>
      <xsd:enumeration value="LR_STS13c_and_VC3_13c"/>
      <xsd:enumeration value="LR_STS14c_and_VC3_14c"/>
      <xsd:enumeration value="LR_STS15c_and_VC4_5c"/>
      <xsd:enumeration value="LR_STS16c_and_VC3_16c"/>
      <xsd:enumeration value="LR_STS17c_and_VC3_17c"/>
      <xsd:enumeration value="LR_STS18c_and_VC4_6c"/>
      <xsd:enumeration value="LR_STS19c_and_VC3_19c"/>
      <xsd:enumeration value="LR_STS20c_and_VC3_20c"/>
      <xsd:enumeration value="LR_STS21c_and_VC4_7c"/>
      <xsd:enumeration value="LR_STS22c_and_VC3_22c"/>
      <xsd:enumeration value="LR_STS23c_and_VC3_23c"/>
      <xsd:enumeration value="LR_STS24c_and_VC4_8c"/>
      <xsd:enumeration value="LR_STS25c_and_VC3_25c"/>
      <xsd:enumeration value="LR_STS26c_and_VC3_26c"/>
      <xsd:enumeration value="LR_STS27c_and_VC4_9c"/>
      <xsd:enumeration value="LR_STS28c_and_VC3_28c"/>
      <xsd:enumeration value="LR_STS29c_and_VC3_29c"/>
      <xsd:enumeration value="LR_STS30c_and_VC4_10c"/>
      <xsd:enumeration value="LR_STS31c_and_VC3_31c"/>
      <xsd:enumeration value="LR_STS32c_and_VC3_32c"/>
      <xsd:enumeration value="LR_STS33c_and_VC4_11c"/>
      <xsd:enumeration value="LR_STS34c_and_VC3_34c"/>
      <xsd:enumeration value="LR_STS35c_and_VC3_35c"/>
      <xsd:enumeration value="LR_STS36c_and_VC4_12c"/>
      <xsd:enumeration value="LR_STS37c_and_VC3_37c"/>
      <xsd:enumeration value="LR_STS38c_and_VC3_38c"/>
      <xsd:enumeration value="LR_STS39c_and_VC4_13c"/>
      <xsd:enumeration value="LR_STS40c_and_VC3_40c"/>
      <xsd:enumeration value="LR_STS41c_and_VC3_41c"/>
      <xsd:enumeration value="LR_STS42c_and_VC4_14c"/>
      <xsd:enumeration value="LR_STS43c_and_VC3_43c"/>
      <xsd:enumeration value="LR_STS44c_and_VC3_44c"/>
      <xsd:enumeration value="LR_STS45c_and_VC4_15c"/>
      <xsd:enumeration value="LR_STS46c_and_VC3_46c"/>
      <xsd:enumeration value="LR_STS47c_and_VC3_47c"/>
      <xsd:enumeration value="LR_STS48c_and_VC4_16c"/>
      <xsd:enumeration value="LR_STS49c_and_VC3_49c"/>
      <xsd:enumeration value="LR_STS50c_and_VC3_50c"/>
      <xsd:enumeration value="LR_STS51c_and_VC4_17c"/>
      <xsd:enumeration value="LR_STS52c_and_VC3_52c"/>
      <xsd:enumeration value="LR_STS53c_and_VC3_53c"/>
      <xsd:enumeration value="LR_STS54c_and_VC4_18c"/>
      <xsd:enumeration value="LR_STS55c_and_VC3_55c"/>
      <xsd:enumeration value="LR_STS56c_and_VC3_56c"/>
      <xsd:enumeration value="LR_STS57c_and_VC4_19c"/>
      <xsd:enumeration value="LR_STS58c_and_VC3_58c"/>
      <xsd:enumeration value="LR_STS59c_and_VC3_59c"/>
      <xsd:enumeration value="LR_STS60c_and_VC4_20c"/>
      <xsd:enumeration value="LR_STS61c_and_VC3_61c"/>
      <xsd:enumeration value="LR_STS62c_and_VC3_62c"/>
      <xsd:enumeration value="LR_STS63c_and_VC4_21c"/>
      <xsd:enumeration value="LR_STS64c_and_VC3_64c"/>
      <xsd:enumeration value="LR_STS65c_and_VC3_65c"/>
      <xsd:enumeration value="LR_STS66c_and_VC4_22c"/>
      <xsd:enumeration value="LR_STS67c_and_VC3_67c"/>
      <xsd:enumeration value="LR_STS68c_and_VC3_68c"/>
      <xsd:enumeration value="LR_STS69c_and_VC4_23c"/>
      <xsd:enumeration value="LR_STS70c_and_VC3_70c"/>
      <xsd:enumeration value="LR_STS71c_and_VC3_71c"/>
      <xsd:enumeration value="LR_STS72c_and_VC4_24c"/>
      <xsd:enumeration value="LR_STS73c_and_VC3_73c"/>
      <xsd:enumeration value="LR_STS74c_and_VC3_74c"/>
      <xsd:enumeration value="LR_STS75c_and_VC4_25c"/>
      <xsd:enumeration value="LR_STS76c_and_VC3_76c"/>
      <xsd:enumeration value="LR_STS77c_and_VC3_77c"/>
      <xsd:enumeration value="LR_STS78c_and_VC4_26c"/>
      <xsd:enumeration value="LR_STS79c_and_VC3_79c"/>
      <xsd:enumeration value="LR_STS80c_and_VC3_80c"/>
      <xsd:enumeration value="LR_STS81c_and_VC4_27c"/>
      <xsd:enumeration value="LR_STS82c_and_VC3_82c"/>
      <xsd:enumeration value="LR_STS83c_and_VC3_83c"/>
      <xsd:enumeration value="LR_STS84c_and_VC4_28c"/>
      <xsd:enumeration value="LR_STS85c_and_VC3_85c"/>
      <xsd:enumeration value="LR_STS86c_and_VC3_86c"/>
      <xsd:enumeration value="LR_STS87c_and_VC4_29c"/>
      <xsd:enumeration value="LR_STS88c_and_VC3_88c"/>
      <xsd:enumeration value="LR_STS89c_and_VC3_89c"/>
      <xsd:enumeration value="LR_STS90c_and_VC4_30c"/>
      <xsd:enumeration value="LR_STS91c_and_VC3_91c"/>
      <xsd:enumeration value="LR_STS92c_and_VC3_92c"/>
      <xsd:enumeration value="LR_STS93c_and_VC4_31c"/>
      <xsd:enumeration value="LR_STS94c_and_VC3_94c"/>
      <xsd:enumeration value="LR_STS95c_and_VC3_95c"/>
      <xsd:enumeration value="LR_STS96c_and_VC4_32c"/>
      <xsd:enumeration value="LR_STS97c_and_VC3_97c"/>
      <xsd:enumeration value="LR_STS98c_and_VC3_98c"/>
      <xsd:enumeration value="LR_STS99c_and_VC4_33c"/>
      <xsd:enumeration value="LR_STS100c_and_VC3_100c"/>
      <xsd:enumeration value="LR_STS101c_and_VC3_101c"/>
      <xsd:enumeration value="LR_STS102c_and_VC4_34c"/>
      <xsd:enumeration value="LR_STS103c_and_VC3_103c"/>
      <xsd:enumeration value="LR_STS104c_and_VC3_104c"/>
      <xsd:enumeration value="LR_STS105c_and_VC4_35c"/>
      <xsd:enumeration value="LR_STS106c_and_VC3_106c"/>
      <xsd:enumeration value="LR_STS107c_and_VC3_107c"/>
      <xsd:enumeration value="LR_STS108c_and_VC4_36c"/>
      <xsd:enumeration value="LR_STS109c_and_VC3_109c"/>
      <xsd:enumeration value="LR_STS110c_and_VC3_110c"/>
      <xsd:enumeration value="LR_STS111c_and_VC4_37c"/>
      <xsd:enumeration value="LR_STS112c_and_VC3_112c"/>
      <xsd:enumeration value="LR_STS113c_and_VC3_113c"/>
      <xsd:enumeration value="LR_STS114c_and_VC4_38c"/>
      <xsd:enumeration value="LR_STS115c_and_VC3_115c"/>
      <xsd:enumeration value="LR_STS116c_and_VC3_116c"/>
      <xsd:enumeration value="LR_STS117c_and_VC4_39c"/>
      <xsd:enumeration value="LR_STS118c_and_VC3_118c"/>
      <xsd:enumeration value="LR_STS119c_and_VC3_119c"/>
      <xsd:enumeration value="LR_STS120c_and_VC4_40c"/>
      <xsd:enumeration value="LR_STS121c_and_VC3_121c"/>
      <xsd:enumeration value="LR_STS122c_and_VC3_122c"/>
      <xsd:enumeration value="LR_STS123c_and_VC4_41c"/>
      <xsd:enumeration value="LR_STS124c_and_VC3_124c"/>
      <xsd:enumeration value="LR_STS125c_and_VC3_125c"/>
      <xsd:enumeration value="LR_STS126c_and_VC4_42c"/>
      <xsd:enumeration value="LR_STS127c_and_VC3_127c"/>
      <xsd:enumeration value="LR_STS128c_and_VC3_128c"/>
      <xsd:enumeration value="LR_STS129c_and_VC4_43c"/>
      <xsd:enumeration value="LR_STS130c_and_VC3_130c"/>
      <xsd:enumeration value="LR_STS131c_and_VC3_131c"/>
      <xsd:enumeration value="LR_STS132c_and_VC4_44c"/>
      <xsd:enumeration value="LR_STS133c_and_VC3_133c"/>
      <xsd:enumeration value="LR_STS134c_and_VC3_134c"/>
      <xsd:enumeration value="LR_STS135c_and_VC4_45c"/>
      <xsd:enumeration value="LR_STS136c_and_VC3_136c"/>
      <xsd:enumeration value="LR_STS137c_and_VC3_137c"/>
      <xsd:enumeration value="LR_STS138c_and_VC4_46c"/>
      <xsd:enumeration value="LR_STS139c_and_VC3_139c"/>
      <xsd:enumeration value="LR_STS140c_and_VC3_140c"/>
      <xsd:enumeration value="LR_STS141c_and_VC4_47c"/>
      <xsd:enumeration value="LR_STS142c_and_VC3_142c"/>
      <xsd:enumeration value="LR_STS143c_and_VC3_143c"/>
      <xsd:enumeration value="LR_STS144c_and_VC4_48c"/>
      <xsd:enumeration value="LR_STS145c_and_VC3_145c"/>
      <xsd:enumeration value="LR_STS146c_and_VC3_146c"/>
      <xsd:enumeration value="LR_STS147c_and_VC4_49c"/>
      <xsd:enumeration value="LR_STS148c_and_VC3_148c"/>
      <xsd:enumeration value="LR_STS149c_and_VC3_149c"/>
      <xsd:enumeration value="LR_STS150c_and_VC4_50c"/>
      <xsd:enumeration value="LR_STS151c_and_VC3_151c"/>
      <xsd:enumeration value="LR_STS152c_and_VC3_152c"/>
      <xsd:enumeration value="LR_STS153c_and_VC4_51c"/>
      <xsd:enumeration value="LR_STS154c_and_VC3_154c"/>
      <xsd:enumeration value="LR_STS155c_and_VC3_155c"/>
      <xsd:enumeration value="LR_STS156c_and_VC4_52c"/>
      <xsd:enumeration value="LR_STS157c_and_VC3_157c"/>
      <xsd:enumeration value="LR_STS158c_and_VC3_158c"/>
      <xsd:enumeration value="LR_STS159c_and_VC4_53c"/>
      <xsd:enumeration value="LR_STS160c_and_VC3_160c"/>
      <xsd:enumeration value="LR_STS161c_and_VC3_161c"/>
      <xsd:enumeration value="LR_STS162c_and_VC4_54c"/>
      <xsd:enumeration value="LR_STS163c_and_VC3_163c"/>
      <xsd:enumeration value="LR_STS164c_and_VC3_164c"/>
      <xsd:enumeration value="LR_STS165c_and_VC4_55c"/>
      <xsd:enumeration value="LR_STS166c_and_VC3_166c"/>
      <xsd:enumeration value="LR_STS167c_and_VC3_167c"/>
      <xsd:enumeration value="LR_STS168c_and_VC4_56c"/>
      <xsd:enumeration value="LR_STS169c_and_VC3_169c"/>
      <xsd:enumeration value="LR_STS170c_and_VC3_170c"/>
      <xsd:enumeration value="LR_STS171c_and_VC4_57c"/>
      <xsd:enumeration value="LR_STS172c_and_VC3_172c"/>
      <xsd:enumeration value="LR_STS173c_and_VC3_173c"/>
      <xsd:enumeration value="LR_STS174c_and_VC4_58c"/>
      <xsd:enumeration value="LR_STS175c_and_VC3_175c"/>
      <xsd:enumeration value="LR_STS176c_and_VC3_176c"/>
      <xsd:enumeration value="LR_STS177c_and_VC4_59c"/>
      <xsd:enumeration value="LR_STS178c_and_VC3_178c"/>
      <xsd:enumeration value="LR_STS179c_and_VC3_179c"/>
      <xsd:enumeration value="LR_STS180c_and_VC4_60c"/>
      <xsd:enumeration value="LR_STS181c_and_VC3_181c"/>
      <xsd:enumeration value="LR_STS182c_and_VC3_182c"/>
      <xsd:enumeration value="LR_STS183c_and_VC4_61c"/>
      <xsd:enumeration value="LR_STS184c_and_VC3_184c"/>
      <xsd:enumeration value="LR_STS185c_and_VC3_185c"/>
      <xsd:enumeration value="LR_STS186c_and_VC4_62c"/>
      <xsd:enumeration value="LR_STS187c_and_VC3_187c"/>
      <xsd:enumeration value="LR_STS188c_and_VC3_188c"/>
      <xsd:enumeration value="LR_STS189c_and_VC4_63c"/>
      <xsd:enumeration value="LR_STS190c_and_VC3_190c"/>
      <xsd:enumeration value="LR_STS191c_and_VC3_191c"/>
      <xsd:enumeration value="LR_STS192c_and_VC4_64c"/>
      <xsd:enumeration value="LR_STS768c_and_VC4_256c"/>
      <xsd:enumeration value="LR_T1_and_DS1_1_5M"/>
      <xsd:enumeration value="LR_T2_and_DS2_6M"/>
      <xsd:enumeration value="LR_T3_and_DS3_45M"/>
      <xsd:enumeration value="LR_VT1_5_and_TU11_VC11"/>
      <xsd:enumeration value="LR_VT2_and_TU12_VC12"/>
      <xsd:enumeration value="LR_VT6_and_TU2_VC2"/>
      <!--The ones below were added in the MTOSI 2.1 release-->
      <xsd:enumeration value="LR_LAG_Fragment"/>
      <xsd:enumeration value="LR_DSR_10Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2.5Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10.7Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_11.1Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_LAN"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_WAN"/>
      <xsd:enumeration value="LR_DSR_40Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OTU2e"/>
      <xsd:enumeration value="LR_DSR_OTU3e1"/>
      <xsd:enumeration value="LR_DSR_OTU3e2"/>
      <xsd:enumeration value="LR_DSR_OTU4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_0"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_Flexible"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_4"/>
      <xsd:enumeration value="LR_Optical_Physical_Section"/>
      <xsd:enumeration value="LR_Optical_Physical_Section_Multilane"/>
      <xsd:enumeration value="LR_Section_OC3072_STS3072_and_RS_STM1024"/>
      <xsd:enumeration value="LR_Line_OC3072_STS3072_and_MS_STM1024"/>
      <xsd:enumeration value="LR_DSR_OC3072_and_STM1024"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:endpoint>http://62.190.191.48:9009/mtosi/something/activeAlarm</con:endpoint><con:endpoint>http://aserver/mtosi/AlarmRetrieval</con:endpoint></con:endpoints><con:operation isOneWay="false" action="getActiveAlarms" name="getActiveAlarms" bindingOperationName="getActiveAlarms" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:destinationURI>http://62.190.191.48:9006/AlarmRetrieval/AlarmRetrievalService?wsdl</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>Request</v1:msgType>

         <!--Optional:-->
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <!--Optional:-->
         <v11:filter>
            <!--Optional:-->
            <v11:source>?</v11:source>
            <!--You have a CHOICE of the next 2 items at this level-->
            <!--Optional:-->
            <v11:scope>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:scope>
            <!--Optional:-->
            <v11:perceivedSeverityList>
               <!--Zero or more repetitions:-->
               <v13:perceivedSeverity>?</v13:perceivedSeverity>
            </v11:perceivedSeverityList>
            <!--Optional:-->
            <v11:probableCauseList>
               <!--Zero or more repetitions:-->
               <v14:prc extension="?" qualifier="?">
                  <!--Optional:-->
                  <v14:ru>false</v14:ru>
                  <!--Optional:-->
                  <v14:contra>false</v14:contra>
                  <v14:probableCause>?</v14:probableCause>
               </v14:prc>
            </v11:probableCauseList>
            <!--Optional:-->
            <v11:acknowledgeIndication>?</v11:acknowledgeIndication>
            <!--Optional:-->
            <v11:queryExpression Dialect="?">
               e
               <!--You may enter ANY elements at this point-->
               gero
            </v11:queryExpression>
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="getActiveAlarmsCount" name="getActiveAlarmsCount" bindingOperationName="getActiveAlarmsCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsCountRequest>
         <!--Optional:-->
         <v11:filter>
            <!--Optional:-->
            <v11:source>?</v11:source>
            <!--You have a CHOICE of the next 2 items at this level-->
            <!--Optional:-->
            <v11:scope>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:scope>
            <!--Optional:-->
            <v11:perceivedSeverityList>
               <!--Zero or more repetitions:-->
               <v13:perceivedSeverity>?</v13:perceivedSeverity>
            </v11:perceivedSeverityList>
            <!--Optional:-->
            <v11:probableCauseList>
               <!--Zero or more repetitions:-->
               <v14:prc extension="?" qualifier="?">
                  <!--Optional:-->
                  <v14:ru>false</v14:ru>
                  <!--Optional:-->
                  <v14:contra>false</v14:contra>
                  <v14:probableCause>?</v14:probableCause>
               </v14:prc>
            </v11:probableCauseList>
            <!--Optional:-->
            <v11:acknowledgeIndication>?</v11:acknowledgeIndication>
            <!--Optional:-->
            <v11:queryExpression Dialect="?">
               e
               <!--You may enter ANY elements at this point-->
               gero
            </v11:queryExpression>
         </v11:filter>
      </v11:getActiveAlarmsCountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarmsCount"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsCountRequest>
         <!--Optional:-->
         <v11:filter>
            <!--Optional:-->
            <v11:source>?</v11:source>
            <!--You have a CHOICE of the next 2 items at this level-->
            <!--Optional:-->
            <v11:scope>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:scope>
            <!--Optional:-->
            <v11:perceivedSeverityList>
               <!--Zero or more repetitions:-->
               <v13:perceivedSeverity>?</v13:perceivedSeverity>
            </v11:perceivedSeverityList>
            <!--Optional:-->
            <v11:probableCauseList>
               <!--Zero or more repetitions:-->
               <v14:prc extension="?" qualifier="?">
                  <!--Optional:-->
                  <v14:ru>false</v14:ru>
                  <!--Optional:-->
                  <v14:contra>false</v14:contra>
                  <v14:probableCause>?</v14:probableCause>
               </v14:prc>
            </v11:probableCauseList>
            <!--Optional:-->
            <v11:acknowledgeIndication>?</v11:acknowledgeIndication>
            <!--Optional:-->
            <v11:queryExpression Dialect="?">
               e
               <!--You may enter ANY elements at this point-->
               gero
            </v11:queryExpression>
         </v11:filter>
      </v11:getActiveAlarmsCountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarmsCount"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getActiveAlarmsIterator" bindingOperationName="getActiveAlarmsIterator" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.tmforum.org/mtop/rtm/wsdl/ar/v1-0/AlarmRetrieval/getActiveAlarmsIteratorRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ManagedElementRetrievalSoapHttpBinding" type="wsdl" bindingName="{http://www.tmforum.org/mtop/mri/wsdl/mer/v1-0}ManagedElementRetrievalSoapHttpBinding" soapVersion="1_1" anonymous="optional" definition="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp.wsdl?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp.wsdl?WSDL"><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp.wsdl?WSDL</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-ManagedElementRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/mri/wsdl/mer/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/mri/wsdl/mer/v1-0" xmlns:WL5G3N2="http://schemas.xmlsoap.org/wsdl/soap/">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?wsdl=1" namespace="http://www.tmforum.org/mtop/mri/wsdl/mer/v1-0"/>
  <WL5G3N0:documentation>DDP: ManageResourceInventory
    Module: ManagedElementRetrieval Service Interface WSDL HTTP Module
    Description: This module contains all the mTOP ManagedElementRetrieval Service Interface WSDL definitions for the Web Service deployment profile with SOAP/HTTP binding.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:portType name="ManagedElementRetrieval_RPC">
    <WL5G3N0:documentation>The ManagedElementRetrieval porttype (interface) for RPC (synchronous) based client/server communication patterns. All SIT operations use the specific get"ObjectType"Iterator operation to handle multiple responses.</WL5G3N0:documentation>
    <WL5G3N0:operation name="getAllManagedElements">
      <WL5G3N0:input message="WL5G3N1:getAllManagedElementsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllManagedElementsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllManagedElementsException" name="getAllManagedElementsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllManagedElementsPassingFilter">
      <WL5G3N0:input message="WL5G3N1:getAllManagedElementsPassingFilterRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllManagedElementsPassingFilterResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllManagedElementsPassingFilterException" name="getAllManagedElementsPassingFilterException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllManagedElementsWrtOs">
      <WL5G3N0:input message="WL5G3N1:getAllManagedElementsWrtOsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllManagedElementsWrtOsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllManagedElementsWrtOsException" name="getAllManagedElementsWrtOsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getManagedElement">
      <WL5G3N0:input message="WL5G3N1:getManagedElementRequest"/>
      <WL5G3N0:output message="WL5G3N1:getManagedElementResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getManagedElementException" name="getManagedElementException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getManagedElementsIterator">
      <WL5G3N0:input message="WL5G3N1:getManagedElementsIteratorRequest"/>
      <WL5G3N0:output message="WL5G3N1:getManagedElementsIteratorResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getManagedElementsIteratorException" name="getManagedElementsIteratorException"/>
    </WL5G3N0:operation>
  </WL5G3N0:portType>
  <WL5G3N0:binding name="ManagedElementRetrievalSoapHttpBinding" type="WL5G3N1:ManagedElementRetrieval_RPC">
    <WL5G3N0:documentation>SOAP HTTP binding definitions of the operations of the ManagedElementRetrieval RPC portType (interface)</WL5G3N0:documentation>
    <WL5G3N2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <WL5G3N0:operation name="getAllManagedElements">
      <WL5G3N2:operation soapAction="getAllManagedElements" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllManagedElementsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllManagedElementsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllManagedElementsException">
        <WL5G3N2:fault name="getAllManagedElementsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllManagedElementsPassingFilter">
      <WL5G3N2:operation soapAction="getAllManagedElementsPassingFilter" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllManagedElementsPassingFilterRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllManagedElementsPassingFilterResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllManagedElementsPassingFilterException">
        <WL5G3N2:fault name="getAllManagedElementsPassingFilterException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllManagedElementsWrtOs">
      <WL5G3N2:operation soapAction="getAllManagedElementsWrtOs" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllManagedElementsWrtOsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllManagedElementsWrtOsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllManagedElementsWrtOsException">
        <WL5G3N2:fault name="getAllManagedElementsWrtOsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getManagedElement">
      <WL5G3N2:operation soapAction="getManagedElement" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getManagedElementRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getManagedElementResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getManagedElementException">
        <WL5G3N2:fault name="getManagedElementException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getManagedElementsIterator">
      <WL5G3N2:operation soapAction="getManagedElementsIterator" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getManagedElementsIteratorRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getManagedElementsIteratorResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getManagedElementsIteratorException">
        <WL5G3N2:fault name="getManagedElementsIteratorException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
  </WL5G3N0:binding>
  <WL5G3N0:service name="ManagedElementRetrievalHttp">
    <WL5G3N0:documentation>Example of the ManagedElementRetrieval WSDL Service definition as a deployment example of this mTOP Service Interface. It is expected to be modified to match the specific deployment configuration in a service provider's CCV.</WL5G3N0:documentation>
    <WL5G3N0:port binding="WL5G3N1:ManagedElementRetrievalSoapHttpBinding" name="ManagedElementRetrievalSoapHttp">
      <WL5G3N2:address location="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp"/>
    </WL5G3N0:port>
  </WL5G3N0:service>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?wsdl=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-ManagedElementRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/mri/wsdl/mer/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:WL5G3N2="http://www.tmforum.org/mtop/mri/xsd/mer/v1">
  <WL5G3N0:documentation>DDP: ManageResourceInventory
    Module: ManagedElementRetrieval Service Interface WSDL Message Module
    Description: This module contains all the mTOP ManagedElementRetrieval Service Interface WSDL message definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:types>
    <xsd:schema xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:mer="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:tns="http://www.tmforum.org/mtop/mri/wsdl/mer/v1-0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.tmforum.org/mtop/mri/xsd/mer/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=8"/>
    </xsd:schema>
  </WL5G3N0:types>
  <WL5G3N0:message name="getAllManagedElementsRequest">
    <WL5G3N0:documentation>The getAllManagedElements request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllManagedElementsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllManagedElementsResponse">
    <WL5G3N0:documentation>The getAllManagedElements response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllManagedElementsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllManagedElementsException">
    <WL5G3N0:documentation>The getAllManagedElements exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllManagedElementsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllManagedElementsPassingFilterRequest">
    <WL5G3N0:documentation>The getAllManagedElementsPassingFilter request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllManagedElementsPassingFilterRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllManagedElementsPassingFilterResponse">
    <WL5G3N0:documentation>The getAllManagedElementsPassingFilter response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllManagedElementsPassingFilterResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllManagedElementsPassingFilterException">
    <WL5G3N0:documentation>The getAllManagedElementsPassingFilter exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllManagedElementsPassingFilterException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllManagedElementsWrtOsRequest">
    <WL5G3N0:documentation>The getAllManagedElementsWrtOs request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllManagedElementsWrtOsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllManagedElementsWrtOsResponse">
    <WL5G3N0:documentation>The getAllManagedElementsWrtOs response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllManagedElementsWrtOsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllManagedElementsWrtOsException">
    <WL5G3N0:documentation>The getAllManagedElementsWrtOs exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllManagedElementsWrtOsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getManagedElementRequest">
    <WL5G3N0:documentation>The getManagedElement request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getManagedElementRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getManagedElementResponse">
    <WL5G3N0:documentation>The getManagedElement response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getManagedElementResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getManagedElementException">
    <WL5G3N0:documentation>The getManagedElement exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getManagedElementException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getManagedElementsIteratorRequest">
    <WL5G3N0:documentation>The getManagedElementsIterator request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getManagedElementsIteratorRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getManagedElementsIteratorResponse">
    <WL5G3N0:documentation>The getManagedElementsIterator response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getManagedElementsIteratorResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getManagedElementsIteratorException">
    <WL5G3N0:documentation>The getManagedElementsIterator exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getManagedElementsIteratorException" name="mtopBody"/>
  </WL5G3N0:message>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=8</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/mri/xsd/mer/v1" version="1.0" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:me="http://www.tmforum.org/mtop/nrf/xsd/me/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Manage Resource Inventory</p>
      <p>Module: Message XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP ManagedElementRetrieval SI
                XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=10"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/me/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=9"/>
  <!--================-->
  <xsd:complexType name="FilterType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Definition of the ME Filter data type.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="location" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The location is the geographical location of
                            the Managed Element.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="manufacturer" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The manufacturer attribute identifies the
                            managed element manufacturer name.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="productName" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The productName identifies the managed
                            element product/type name.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="resourceState" type="cri:ResourceStateType">
        <xsd:annotation>
          <xsd:documentation>
            <p>See SD2-17_MTOSI_EnhancedResourceStates
                            supporting document.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
  <xsd:element name="getAllManagedElementsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllManagedElements operation</p>
        <p>This operation returns all the Managed Elements
                    contained by a provided Management Domain or Multi
                    Layer Subnetwork.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="mdOrMlsnRef " type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter provides the name of the
                                Management Domain or Multi Layer
                                Subnetwork for which to retrieve the
                                contained Managed Elements.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllManagedElementsResponse" type="tns:MultipleMeObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllManagedElements operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllManagedElementsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllManagedElements operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllManagedElementsPassingFilterRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllManagedElementsPassingFilter operation</p>
        <p>This operation returns all ManagedElements (MEs)
                    contained by a specific Management Domain that pass
                    a given filter condition. The filter condition
                    should test for equality based on any combination of
                    location, manufacturer, productName and
                    resourceState. The matching is based in
                    "AND", i.e., all the supplied filter
                    conditions must be met. If the filter is left empty,
                    then all the MEs contained by the given MD are returned.</p>
        <p>The operation can only be directed to a top-level OS
                    and not to a subordinate OS.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="mdRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the Management Domain whose
                                contained MEs are being requested.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="filter" type="tns:FilterType">
          <xsd:annotation>
            <xsd:documentation>
              <p>A list of any combination of a location,
                                manufacturer, productName and
                                resourceState. The matching is based on
                                "AND", i.e., all the supplied
                                filter conditions must be met.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllManagedElementsPassingFilterResponse" type="tns:MultipleMeObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllManagedElementsPassingFilter operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllManagedElementsPassingFilterException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllManagedElementsPassingFilter operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllManagedElementsWrtOsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllManagedElementsWrtOs operation</p>
        <p>This operation returns the data structure for each
                    ManagedElement (ME) managed by a given subordinate
                    OS AND contained by a specific Management Domain.
                    Note that Wrt in the name of the operation stands
                    for "with respect to".</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="osRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the subordinate OS whose
                                contained MEs are being requested.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="mdRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the Management Domain whose
                                contained MEs are being requested.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllManagedElementsWrtOsResponse" type="tns:MultipleMeObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllManagedElementsWrtOs operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllManagedElementsWrtOsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllManagedElementsWrtOs operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getManagedElementRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getManagedElement operation</p>
        <p>This operation returns the Managed Element for the
                    given managed element name.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="meRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the Managed Element requested.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getManagedElementResponse" type="tns:SingleMeObjectResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getManagedElement operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getManagedElementException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getManagedElement operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--=================-->
  <!--Definitions of Iterator messages for Object and Object Name retrievals-->
  <!--=================-->
  <xsd:element name="getManagedElementsIteratorRequest" type="msg:GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getManagedElementsIterator operation</p>
        <p>This is the iterator request to return the next batch
                    of Managed Elements from the OS to which an ME
                    retrieval request was initially sent.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getManagedElementsIteratorResponse" type="tns:MultipleMeObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getManagedElementsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getManagedElementsIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getManagedElementsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--=================-->
  <!--Type Definitions of various Object responses-->
  <!--=================-->
  <xsd:complexType name="SingleMeObjectResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for a single
                    ManagedElement object</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="me" type="me:ManagedElementType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The retrieved ME</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="MultipleMeObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for a set of
                    ManagedElement objects</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="meList" type="me:ManagedElementListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of MEs</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=3</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of generic mTOP simple data types.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="NameAndStringValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvsList" type="tns:NameAndValueStringListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndValueStringListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndStringValue</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nvs" type="tns:NameAndStringValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:any minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvList" type="tns:NameAndAnyValueListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndAnyValueType</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nv" type="tns:NameAndAnyValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AliasNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    contains the list of aliases for the network entity.
                    The attribute is a name-value list. The name refers
                    to the type of alias (e.g., nativeEMSname) and the
                    value component holds the alias itself</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alias">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="aliasName" type="xsd:string"/>
            <xsd:element name="aliasValue" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AnyListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A generic list of any type of elements. Used for
                    vendor Extensions or loose element encapsulation
                    from other namespaces.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="DiscoveredNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the name of the object when
                    its existence is first published on the CCV but only
                    in the case where the OS that publishes the object
                    on the CCV is not the naming OS. If the naming OS
                    first publishes the object on the CCV, this
                    attribute may be left empty.</p>
        <p>The discovered name is assumed to be unique from the
                    perspective of the publishing OS.</p>
        <p>The discovered name published on the CCV does not
                    necessarily need to be the name of the object as
                    discovered by the OS from the subtending network.</p>
        <p>There are no specific rules concerning the
                    relationship between the "name" and
                    "discovered name" of the object. They
                    could be set to the same value or they could be different.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ManufactureDateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type identifies the production date of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="MultiEventInventoryAttributesType">
    <xsd:annotation>
      <xsd:documentation>This attribute is used when a object
                instance is embedded in the inventory    layout payload
                of a Multi-Event Inventory (MEI) notification.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="neTime" nillable="true" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the time at which the NE detected the
                            inventory change (if available)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventIndication" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is an indication of the type of
                            inventory update.</p>
            <p>Possible values are Object Creation (OC),
                            Object Discovery (ODsc), Object Deletion
                            (OD),        Attribute Value Change (AVC),
                            State Change (SC) and AVC_SC_and_Childern.
                            Only the acronym (e.g., OC)        is used
                            in the actual attribute value. The following
                            conventions apply:</p>
            <p>If an object creation or object discovery
                            indicator is applied to a parent object,
                            it implicitly applies to all the children,
                            i.e., the OS sending the notification only
                            needs       to set the indicator attribute
                            in the parent object.</p>
            <p>If an object deletion is applied to a parent
                            object, it is assumed that all the children
                            are also deleted. The childern should not be listed.</p>
            <p>The AVC_SC_and_Childern indication may be
                            applied to a parent object to imply that
                            there       may be AVC or SC changes to the
                            parent and some or all of the children.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="NetworkAccessDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A free-format string used to associate a resource to
                    a Network Access Domain.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="NotificationIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the notification ID.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="NotificationIdentifierListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of notification IDs  (free string). Also,  the
                    value found in notificationId field of the event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="notificationId" type="tns:NotificationIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of all the object types. It is
                    left as a string for maximum compatibility with
                    future supported object types.</p>
        <p>Refer to the SD2-7 ObjectNaming for the list of all
                    supported values.</p>
        <p>Otherwise, one can also refer to the
                    ObjectEnumTypedefined in CommonResourceInfo (see NRB
                    DDP), which is provided as XML Schema enumerations
                    solely as a helper (not used in any messaging validation).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enumeration of all the supported query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI">
      <xsd:enumeration value="ANSI-92"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath20/"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The loose definition of all the supported query
                    dialect types.</p>
        <p>Refer to QueryDialectEnumType definition to the
                    enumeration of recommended query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The generic schema datatype definition for the query
                    expression used in most filters.</p>
        <p>This definition is borrowed from WS-Notification v1.3.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="tns:QueryDialectTypeType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          <p>The dialect of the given query expression</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=10</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=3"/>
  <!--==============-->
  <xsd:complexType abstract="false" name="BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The (abstract) base type definition of all exception messages.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="hdr:header">
        <xsd:annotation>
          <xsd:documentation>The mTOP header as it cannot be
                        part of the SOAP Header in a SOAP v1.1 Fault message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="reason" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>A string indicating further details about the
                            exception. It is a free format string filled
                            by the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The extension for specific vendor exception information.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:element name="notImplemented" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised by OS for an optional operation that is not implemented</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="internalError" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised in case of non-specific OS internal failure</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidInput" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters are invalid</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tooManyOpenIterators" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when data retrieval iterator capacity is full</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="entityNotFound" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters do not refer to an existing object</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="commLoss" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when communication to an entity (needed to
                    help fulfill the request) is lost</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedCompressionFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given data compression format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedPackingFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given file packing format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidFilterDefinition" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the filter is invalid.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="objectInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tpInvalidEndPoint" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="timeslotInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="protectionEffortNotMet" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notInValidState" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unableToComply" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="capacityExceeded" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="accessDenied" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedRoutingConstraints" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="userlabelInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidTopic" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the topic is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notificationServiceProblem" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when there is a failure with the Broker.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AllExceptionsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reference to all supported exception types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="tns:accessDenied"/>
      <xsd:element ref="tns:capacityExceeded"/>
      <xsd:element ref="tns:commLoss"/>
      <xsd:element ref="tns:entityNotFound"/>
      <xsd:element ref="tns:internalError"/>
      <xsd:element ref="tns:invalidFilterDefinition"/>
      <xsd:element ref="tns:invalidInput"/>
      <xsd:element ref="tns:invalidTopic"/>
      <xsd:element ref="tns:notificationServiceProblem"/>
      <xsd:element ref="tns:notImplemented"/>
      <xsd:element ref="tns:notInValidState"/>
      <xsd:element ref="tns:objectInUse"/>
      <xsd:element ref="tns:protectionEffortNotMet"/>
      <xsd:element ref="tns:timeslotInUse"/>
      <xsd:element ref="tns:tooManyOpenIterators"/>
      <xsd:element ref="tns:tpInvalidEndPoint"/>
      <xsd:element ref="tns:unableToComply"/>
      <xsd:element ref="tns:unsupportedCompressionFormat"/>
      <xsd:element ref="tns:unsupportedPackingFormat"/>
      <xsd:element ref="tns:unsupportedRoutingConstraints"/>
      <xsd:element ref="tns:userlabelInUse"/>
    </xsd:choice>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Profile of exception types supported by all mTOP
                    iterator operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="tns:AllExceptionsType">
        <xsd:choice>
          <xsd:element ref="tns:commLoss"/>
          <xsd:element ref="tns:internalError"/>
          <xsd:element ref="tns:invalidInput"/>
          <xsd:element ref="tns:notImplemented"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Generic request message structure for all data
                    iterator operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=4</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML header.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=3"/>
  <!--==============-->
  <xsd:simpleType name="ActivityStatusEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies the high-level response status for an
                    activity.  Required for response messages, including
                    error responses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="WARNING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="ActivityStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Add to the initial enumerations the Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ActivityStatusEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="MessageTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type of the message that is being exchanged as
                    part of an activity.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REQUEST"/>
      <xsd:enumeration value="RESPONSE"/>
      <xsd:enumeration value="NOTIFICATION"/>
      <xsd:enumeration value="ERROR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationPatternType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Styles supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SimpleResponse"/>
      <xsd:enumeration value="MultipleBatchResponse"/>
      <xsd:enumeration value="BulkResponse"/>
      <xsd:enumeration value="Notification"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationStyleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Style supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MSG"/>
      <xsd:enumeration value="RPC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="CompressionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if compression is to be performed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:CompressionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CompressionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported compressions. All extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_COMPRESSION"/>
      <xsd:enumeration value="GZIP"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PackingTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if the output file(s) are to be packed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:PackingEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PackingEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported packing/packaging. All
                    extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PACKING"/>
      <xsd:enumeration value="ZIP"/>
      <xsd:enumeration value="TAR"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="header">
    <xsd:annotation>
      <xsd:documentation>
        <p>MTOSI Standard Header.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="activityName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the business
                                transaction activity for the message
                                being exchanged.       The value is
                                usually the name of the mTOP operation,
                                e.g. getInventory.       This value
                                corresponds to the “operation” in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the message (or
                                contract) that is being exchanged as
                                part of an activity. E.g.
                                getInventoryResponse. This field
                                corresponds to the message name in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgType" type="tns:MessageTypeType"/>
        <xsd:element minOccurs="0" name="senderURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application sending this message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="destinationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the final destination of the
                                message (the OS that will process the
                                content of the message). This field may
                                point to a logical end point or abstract
                                topic name to be resolved by the
                                communication transport middleware in
                                order to deliver the message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="replyToURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used by request messages to specify
                                destination for response message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="originatorURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the originating application of
                                the message that resulted in this
                                response or notification message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="failureReplytoURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application receiving the
                                potential error notification message.
                                Required for all response messages and
                                notifications which are triggered by
                                request/response. If not specified the
                                replyToURI is used. If the replyToURI is
                                also not specified, senderURI endpoint
                                is used to send back the failure response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="activityStatus" type="tns:ActivityStatusType"/>
        <xsd:element minOccurs="0" name="correlationId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>An identifier that could be set by the
                                originator of an asynchronous request
                                that will allow it to correlate the
                                response to the request.  If this field
                                is set, it should be reflected in the
                                header of the response message.  Not
                                required for notification headers.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="security" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Provides credential nformation for use by
                                a security service for identification,
                                authentication, or authorization.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="securityType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the type of credential
                                contained in the security element.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="priority">
          <xsd:annotation>
            <xsd:documentation>
              <p>Indicates message-handling priority for
                                asynchronous messages.  It must be in
                                the range 0-9 (lowest-highest). Default: 4</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string"/>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgSpecificProperties">
          <xsd:annotation>
            <xsd:documentation>
              <p>Conditionally required for request,
                                response, and notification messages as
                                identified by the documentation for a
                                specific interface message.  The
                                communications infrastructure or the
                                receiving application can use this value
                                for routing or filtering messages.</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" minOccurs="0" name="property">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="propName" type="xsd:string"/>
                    <xsd:element name="propValue" type="xsd:string"/>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="communicationPattern" type="tns:CommunicationPatternType"/>
        <xsd:element minOccurs="0" name="communicationStyle" type="tns:CommunicationStyleType"/>
        <xsd:element minOccurs="0" name="requestedBatchSize" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>The RequestedBatchSize parameter provides
                                the control for the batch segmentation
                                of the full set of output data generated
                                by a coarse-grained operation such as
                                getInventory or getActiveAlarms. The
                                unit is any of the MTOSI objects. And,
                                it defines the maximum number of MTOSI
                                objects that can be included in all the
                                batches of data sent as part of a
                                multiple responses MEP.</p>
              <p>However, they are cases where a batch may
                                exceed the number of objects defined in
                                the RequestedBatchSize parameter. This
                                is true if the granularity of a response
                                atomic data representation is greater
                                than just one object. This is true for
                                the getInventory response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceNumber" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm. Pattern
                                to identify the batch seq number in a sequence.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceEndOfReply" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm.
                                Pattern, true if it is the last result
                                batch in a sequence</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="iteratorReferenceURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Mandatory for all SIT (iterators) MEP to
                                allow description of the data retrieval iterator.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="fileLocationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used for file retrieval. Specify the base
                                name of the file(s) to be generated and
                                the remote destination.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="compressionType" type="tns:CompressionTypeType"/>
        <xsd:element minOccurs="0" name="packingType" type="tns:PackingTypeType"/>
        <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>Message originating timestamp</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Location for all vendor extensions to the
                                MTOSI standard header.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=11</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML naming structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=3"/>
  <!--=================-->
  <xsd:complexType name="RelativeDistinguishNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of relative distinguish
                    name (RDN) data structure used in all object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="type" type="gen:ObjectTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN object type acronym.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of the MTOSI object name
                    data structure as a sequence of RDNs, which
                    represents a unique identifier for the MTOSI object
                    on the CCV. Once set by the naming OS, the name is
                    invariant for the life of the object and should be
                    used when referring to the object over the CCV. Name
                    attribute of an object instance shall always be
                    assigned a value, unless the object instance is
                    first discovered by an OS that is not the naming OS
                    for the object instance. In such a case, the
                    discovering OS shall provide a value for the
                    Discovered Name attribute of the object. The naming
                    OS shall provide a value for the Name attribute of
                    the object once it becomes aware of the new object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="rdn" type="tns:RelativeDistinguishNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition for the list of MTOSI object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="name" nillable="true" type="tns:NamingAttributeType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" version="1.0" xmlns:coi="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:itu="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP XML CommonResourceInfo structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=6"/>
  <!--=================-->
  <xsd:element name="commonResourceInfo" substitutionGroup="coi:commonObjectInfo" type="tns:CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition for common resource info</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines attributes common to all mTOP
                    resource objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="coi:CommonObjectInfoType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="source" nillable="true" type="tns:SourceType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the object was
                                    discovered or entered in OS inventory.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="networkAccessDomain" nillable="true" type="gen:NetworkAccessDomainType"/>
          <xsd:element minOccurs="0" name="meiAttributes" nillable="true" type="gen:MultiEventInventoryAttributesType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is used when a object
                                    instance is embedded in the
                                    inventory      layout payload of a
                                    Multi-Event Inventory (MEI)
                                    notification. It provides the
                                    time at which the NE detected the
                                    inventory change (if available) and
                                    an indication      of the type of
                                    inventory update, e.g., Object Creation.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="resourceState" nillable="true" type="tns:ResourceStateType"/>
          <xsd:element name="ituStateAndStatusList" type="itu:ItuStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates whether the object was discovered from the
                    network, or was entered into the OS's inventory.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:SourceEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SourceEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NETWORK_ME">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered directly from the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was entered into an OS on the CCV,
                            e.g., OS GUI or file transfer to the OS from
                            some other system.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NETWORK_EMS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered from an EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates the state of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceStateEnumType">
        <xsd:attribute name="overlap" type="xsd:string" use="optional"/>
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ResourceStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="INSTALLING"/>
      <xsd:enumeration value="INSTALLING_ACCEPTED"/>
      <xsd:enumeration value="INSTALLING_COMMISSIONED"/>
      <xsd:enumeration value="INSTALLING_DELIVERED"/>
      <xsd:enumeration value="INSTALLING_INSTALLED"/>
      <xsd:enumeration value="INSTALLING_INTEGRATED"/>
      <xsd:enumeration value="INSTALLING_REJECTED"/>
      <xsd:enumeration value="NON_WORKING"/>
      <xsd:enumeration value="PLANNING"/>
      <xsd:enumeration value="PLANNING_INITIAL_PLAN"/>
      <xsd:enumeration value="PLANNING_ORDERED"/>
      <xsd:enumeration value="PLANNING_PLANNED"/>
      <xsd:enumeration value="RETIRING"/>
      <xsd:enumeration value="RETIRING_DECOMMISSIONED"/>
      <xsd:enumeration value="RETIRING_DEINSTALLED"/>
      <xsd:enumeration value="RETIRING_DEINTEGRATED"/>
      <xsd:enumeration value="RETIRING_RECOVERED"/>
      <xsd:enumeration value="RETIRING_STORED"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_ACTIVE"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_UNAVAILABLE"/>
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="WORKING"/>
      <xsd:enumeration value="WORKING_ACTIVATED"/>
      <xsd:enumeration value="WORKING_DEACTIVATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ObjectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the enumeration of all the known object type
                    short names related to resources (at the time of
                    this module definition). It is only provided as an
                    implementation helper. For details of all object
                    types and their naming refer to SD2-7 ObjectNaming
                    (FMW DDP).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AID">
        <xsd:annotation>
          <xsd:documentation>Alarm IDentifier (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASA">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASAP">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment Profile (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CTP">
        <xsd:annotation>
          <xsd:documentation>Connection Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EH">
        <xsd:annotation>
          <xsd:documentation>Equipment Holder (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EPG">
        <xsd:annotation>
          <xsd:documentation>Equipment Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EQ">
        <xsd:annotation>
          <xsd:documentation>Equipment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FD">
        <xsd:annotation>
          <xsd:documentation>Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FDFR">
        <xsd:annotation>
          <xsd:documentation>Flow Domain Fragment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FTP">
        <xsd:annotation>
          <xsd:documentation>Flow Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GTP">
        <xsd:annotation>
          <xsd:documentation>Group Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MD">
        <xsd:annotation>
          <xsd:documentation>Management Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ME">
        <xsd:annotation>
          <xsd:documentation>Managed Element (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MFD">
        <xsd:annotation>
          <xsd:documentation>Matrix Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MLSN">
        <xsd:annotation>
          <xsd:documentation>Multi Layer Subnetwork (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>Operations System (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PG">
        <xsd:annotation>
          <xsd:documentation>Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PMP">
        <xsd:annotation>
          <xsd:documentation>Performance Monitoring Point (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PTP">
        <xsd:annotation>
          <xsd:documentation>Physical Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SNC">
        <xsd:annotation>
          <xsd:documentation>Subnetwork Connection (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCPROFILE">
        <xsd:annotation>
          <xsd:documentation>Traffic Condifitioning Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCAPP">
        <xsd:annotation>
          <xsd:documentation>Threshold Crossing Alert
                        Parameter Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TL">
        <xsd:annotation>
          <xsd:documentation>Topological Link (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TMD">
        <xsd:annotation>
          <xsd:documentation>Transmission Descriptor (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TPPOOL">
        <xsd:annotation>
          <xsd:documentation>Termination Point Pool (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common object information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=3"/>
  <!--==============-->
  <xsd:element name="commonObjectInfo" type="tns:CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute represents a unique
                            name/identifier for the object on the CCV.
                            Consult the SD2-7 about object naming for
                            additional normative references.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="userLabel" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="discoveredName" type="gen:DiscoveredNameType"/>
      <xsd:element minOccurs="0" name="namingOs" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the object attribute definition to
                            identify the name of the OS that provided
                            the unique MTOSI name for the object. It is
                            assumed that each object (that is published
                            on the CCV) has a unique naming OS. This
                            attribute is optional in a point to point
                            NMS-EMS paradigm.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="owner" nillable="true" type="gen:OwnerType"/>
      <xsd:element minOccurs="0" name="aliasNameList" nillable="true" type="gen:AliasNameListType"/>
      <xsd:element minOccurs="0" name="vendorExtensions" nillable="true" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=6</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T state or status
                parameters supported in mTOP</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="x721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="x721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="x721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="x721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="x721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="m3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="m3100.CircuitPackType" type="tns:M3100.CircuitPackTypeType"/>
      <xsd:element minOccurs="0" name="x721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:element minOccurs="0" name="x721.State" type="tns:X721.StateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="X721.OperationalStateType">
    <xsd:annotation>
      <xsd:documentation>Oper[ational] State parameter from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DISABLED"/>
      <xsd:enumeration value="UNABLED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AdministrativeStateType">
    <xsd:annotation>
      <xsd:documentation>Admin[istrative] State parameter from
                ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="LOCKED"/>
      <xsd:enumeration value="UNLOCKED"/>
      <xsd:enumeration value="SHUTTING_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UsageStateType">
    <xsd:annotation>
      <xsd:documentation>Usage State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IDLE"/>
      <xsd:enumeration value="ACTIVE"/>
      <xsd:enumeration value="BUSY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AvailabilityStatusType">
    <xsd:annotation>
      <xsd:documentation>Avail[ability] Status based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="INTypeEST"/>
      <xsd:enumeration value="FAILED"/>
      <xsd:enumeration value="POWER_OFF"/>
      <xsd:enumeration value="OFF_LINE"/>
      <xsd:enumeration value="OFF_DUTY"/>
      <xsd:enumeration value="DEPENDENCY"/>
      <xsd:enumeration value="DEGRADED"/>
      <xsd:enumeration value="NOT_INSTALLED"/>
      <xsd:enumeration value="LOG_FULL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.ControlStatusType">
    <xsd:annotation>
      <xsd:documentation>Control Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="SUBJECTTypeOTypeEST"/>
      <xsd:enumeration value="PART_OF_SERVICES_LOCKED"/>
      <xsd:enumeration value="RESERVED_FORTypeEST"/>
      <xsd:enumeration value="SUSPENDED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.HolderStatusType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HOLDER_EMPTY"/>
      <xsd:enumeration value="INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="NOT_INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="UNKNOWNTypeYPE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.CircuitPackTypeType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UnkownstatusType">
    <xsd:annotation>
      <xsd:documentation>Unknown Status parameter based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="X721.StateType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="X721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="X721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="X721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="X721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="X721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="M3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="X721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=9</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/me/v1" version="1.0" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/me/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP ME XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=5"/>
  <!--=================-->
  <xsd:element name="me" type="tns:ManagedElementType"/>
  <!--=================-->
  <xsd:complexType name="ManagedElementType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines all the Managed Element mTOP
                    network resource object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="location" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="manufacturer" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="manufactureDate" nillable="true" type="gen:ManufactureDateType"/>
          <xsd:element minOccurs="0" name="productName" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="softwareVersion" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="isInSyncState" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the EMS/OS is able to
                                    keep the current EMS/OS data
                                    synchronized with the current NE
                                    data and generate all appropriate
                                    notifications. The EMS sets this
                                    attribute to false to indicate that
                                    it requires resynchronization with
                                    NE data and that it is not able to
                                    generate the appropriate
                                    notifications (such as OCs/ODs/AVCs)
                                    while doing so.</p>
                <p>The EMS/OS sets this attribute back
                                    to true when the resynchronization
                                    is completed and when notifications
                                    can start being generated as appropriate.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="supportedConnectionLayerRateList" nillable="true" type="lay:LayerRateListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is a list (possibly
                                    empty) of potential Cross Connection
                                    Rates at which it is possible to
                                    have cross-connections within the
                                    managed element.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="communicationState" nillable="true" type="tns:CommunicationStateType"/>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this ME object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="ManagedElementListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of ManagedElements</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:me"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CommunicationStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This state reflects a communication state between the
                    EMS and its ManagedElement.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CS_AVAILABLE"/>
      <xsd:enumeration value="CS_UNAVAILABLE"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=7</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP layer rates.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:element name="layerRateListType" type="tns:LayerRateListType"/>
  <!--================-->
  <xsd:complexType name="LayerRateListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of LayerRates</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="layerRate" nillable="true" type="tns:LayerRateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="LayerRateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          The LayerRateType value is used to identify:
          <li>the Layer of a PTP/CTP,</li>
          <li>the characteristic information of a PTP/FTP,</li>
          <li>the Layer/Rate of a connection.</li>
        </p>
        <p>Each LayerRateType may be used in conjunction with a
                    CTP/PTP/FTP of that layer. In the SDH definitions,
                    the G.805 CP and G.805 Termination Function layer
                    names differ, for example TU12 is used for the G.805
                    CP and VC12 for the corresponding G.805 Termination
                    Function. In this interface definition the TU and VC
                    definitions have been combined into a single
                    composite layer and this has been named to include
                    the equivalent SONET layer, e.g. LR_VT2_andTypeU12_VC12.</p>
        <p>
          For more details refer to the following supporting
                    document:
          <li>layering documentfor
                        all layering concepts</li>
          <li>LayerRates document for information about
                        recognized values in MTOSI</li>
        </p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:LayerRateEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="LayerRateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="LR_DS0_64K"/>
      <xsd:enumeration value="LR_DSL"/>
      <xsd:enumeration value="LR_Not_Applicable"/>
      <xsd:enumeration value="LR_Async_FOTS_150M"/>
      <xsd:enumeration value="LR_Async_FOTS_417M"/>
      <xsd:enumeration value="LR_Async_FOTS_560M"/>
      <xsd:enumeration value="LR_Async_FOTS_565M"/>
      <xsd:enumeration value="LR_Async_FOTS_1130M"/>
      <xsd:enumeration value="LR_Async_FOTS_1G7"/>
      <xsd:enumeration value="LR_Async_FOTS_1G8"/>
      <xsd:enumeration value="LR_ATM_NI"/>
      <xsd:enumeration value="LR_ATM_VC"/>
      <xsd:enumeration value="LR_ATM_VP"/>
      <xsd:enumeration value="LR_D1_Video"/>
      <xsd:enumeration value="LR_DIGITAL_SIGNAL_RATE"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_DSR_1_5M"/>
      <xsd:enumeration value="LR_DSR_2M"/>
      <xsd:enumeration value="LR_DSR_4M"/>
      <xsd:enumeration value="LR_DSR_6M"/>
      <xsd:enumeration value="LR_DSR_8M"/>
      <xsd:enumeration value="LR_DSR_16M"/>
      <xsd:enumeration value="LR_DSR_34M"/>
      <xsd:enumeration value="LR_E2_8M"/>
      <xsd:enumeration value="LR_E5_565M"/>
      <xsd:enumeration value="LR_Encapsulation"/>
      <xsd:enumeration value="LR_Fragment"/>
      <xsd:enumeration value="LR_DSR_45M"/>
      <xsd:enumeration value="LR_DSR_140M"/>
      <xsd:enumeration value="LR_DSR_565M"/>
      <xsd:enumeration value="LR_DSR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_DSR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OC1_STM0"/>
      <xsd:enumeration value="LR_DSR_OC3_STM1"/>
      <xsd:enumeration value="LR_DSR_2xSTM1"/>
      <xsd:enumeration value="LR_DSR_OC12_STM4"/>
      <xsd:enumeration value="LR_DSR_OC24_STM8"/>
      <xsd:enumeration value="LR_DSR_OC48_and_STM16"/>
      <xsd:enumeration value="LR_DSR_OC192_and_STM64"/>
      <xsd:enumeration value="LR_DSR_OC768_and_STM256"/>
      <xsd:enumeration value="LR_DSR_OTU1"/>
      <xsd:enumeration value="LR_DSR_OTU2"/>
      <xsd:enumeration value="LR_DSR_OTU3"/>
      <xsd:enumeration value="LR_E1_2M"/>
      <xsd:enumeration value="LR_E20_2x2M"/>
      <xsd:enumeration value="LR_E30_8x2M"/>
      <xsd:enumeration value="LR_E3_34M"/>
      <xsd:enumeration value="LR_E4_140M"/>
      <xsd:enumeration value="LR_ESCON"/>
      <xsd:enumeration value="LR_Ethernet"/>
      <xsd:enumeration value="LR_ETR"/>
      <xsd:enumeration value="LR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_FC_12_133M"/>
      <xsd:enumeration value="LR_FC_25_266M"/>
      <xsd:enumeration value="LR_FC_50_531M"/>
      <xsd:enumeration value="LR_FC_100_1063M"/>
      <xsd:enumeration value="LR_FDDI"/>
      <xsd:enumeration value="LR_FICON"/>
      <xsd:enumeration value="LR_FR_IF"/>
      <xsd:enumeration value="LR_FR_PVC"/>
      <xsd:enumeration value="LR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_ISDN_BRI"/>
      <xsd:enumeration value="LR_Line_OC1_STS1_and_MS_STM0"/>
      <xsd:enumeration value="LR_Line_OC3_STS3_and_MS_STM1"/>
      <xsd:enumeration value="LR_Line_OC12_STS12_and_MS_STM4"/>
      <xsd:enumeration value="LR_Line_OC24_STS24_and_MS_STM8"/>
      <xsd:enumeration value="LR_Line_OC48_STS48_and_MS_STM16"/>
      <xsd:enumeration value="LR_Line_OC192_STS192_and_MS_STM64"/>
      <xsd:enumeration value="LR_Line_OC768_STS768_and_MS_STM256"/>
      <xsd:enumeration value="LR_Low_Order_TU3_VC3"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3"/>
      <xsd:enumeration value="LR_STS3c_and_AU4_VC4"/>
      <xsd:enumeration value="LR_STS4c_and_VC3_4c"/>
      <xsd:enumeration value="LR_STS5c_and_VC3_5c"/>
      <xsd:enumeration value="LR_STS6c_and_VC4_2c"/>
      <xsd:enumeration value="LR_STS7c_and_VC3_7c"/>
      <xsd:enumeration value="LR_STS8c_and_VC3_8c"/>
      <xsd:enumeration value="LR_STS9c_and_VC4_3c"/>
      <xsd:enumeration value="LR_Optical_Channel"/>
      <xsd:enumeration value="LR_Optical_Multiplex_Section"/>
      <xsd:enumeration value="LR_OPTICAL_SECTION"/>
      <xsd:enumeration value="LR_Optical_Transmission_Section"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_PHYSICAL_MEDIALESS"/>
      <xsd:enumeration value="LR_PHYSICAL_OPTICAL"/>
      <xsd:enumeration value="LR_POTS"/>
      <xsd:enumeration value="LR_Section_OC1_STS1_and_RS_STM0"/>
      <xsd:enumeration value="LR_Section_OC3_STS3_and_RS_STM1"/>
      <xsd:enumeration value="LR_Section_OC12_STS12_and_RS_STM4"/>
      <xsd:enumeration value="LR_Section_OC24_STS24_and_RS_STM8"/>
      <xsd:enumeration value="LR_Section_OC48_STS48_and_RS_STM16"/>
      <xsd:enumeration value="LR_Section_OC192_STS192_and_RS_STM64"/>
      <xsd:enumeration value="LR_Section_OC768_STS768_and_RS_STM256"/>
      <xsd:enumeration value="LR_STS1_and_AU3_High_Order_VC3"/>
      <xsd:enumeration value="LR_STS2c_and_VC3_2c"/>
      <xsd:enumeration value="LR_STS10c_and_VC3_10c"/>
      <xsd:enumeration value="LR_STS11c_and_VC3_11c"/>
      <xsd:enumeration value="LR_STS12c_and_VC4_4c"/>
      <xsd:enumeration value="LR_STS13c_and_VC3_13c"/>
      <xsd:enumeration value="LR_STS14c_and_VC3_14c"/>
      <xsd:enumeration value="LR_STS15c_and_VC4_5c"/>
      <xsd:enumeration value="LR_STS16c_and_VC3_16c"/>
      <xsd:enumeration value="LR_STS17c_and_VC3_17c"/>
      <xsd:enumeration value="LR_STS18c_and_VC4_6c"/>
      <xsd:enumeration value="LR_STS19c_and_VC3_19c"/>
      <xsd:enumeration value="LR_STS20c_and_VC3_20c"/>
      <xsd:enumeration value="LR_STS21c_and_VC4_7c"/>
      <xsd:enumeration value="LR_STS22c_and_VC3_22c"/>
      <xsd:enumeration value="LR_STS23c_and_VC3_23c"/>
      <xsd:enumeration value="LR_STS24c_and_VC4_8c"/>
      <xsd:enumeration value="LR_STS25c_and_VC3_25c"/>
      <xsd:enumeration value="LR_STS26c_and_VC3_26c"/>
      <xsd:enumeration value="LR_STS27c_and_VC4_9c"/>
      <xsd:enumeration value="LR_STS28c_and_VC3_28c"/>
      <xsd:enumeration value="LR_STS29c_and_VC3_29c"/>
      <xsd:enumeration value="LR_STS30c_and_VC4_10c"/>
      <xsd:enumeration value="LR_STS31c_and_VC3_31c"/>
      <xsd:enumeration value="LR_STS32c_and_VC3_32c"/>
      <xsd:enumeration value="LR_STS33c_and_VC4_11c"/>
      <xsd:enumeration value="LR_STS34c_and_VC3_34c"/>
      <xsd:enumeration value="LR_STS35c_and_VC3_35c"/>
      <xsd:enumeration value="LR_STS36c_and_VC4_12c"/>
      <xsd:enumeration value="LR_STS37c_and_VC3_37c"/>
      <xsd:enumeration value="LR_STS38c_and_VC3_38c"/>
      <xsd:enumeration value="LR_STS39c_and_VC4_13c"/>
      <xsd:enumeration value="LR_STS40c_and_VC3_40c"/>
      <xsd:enumeration value="LR_STS41c_and_VC3_41c"/>
      <xsd:enumeration value="LR_STS42c_and_VC4_14c"/>
      <xsd:enumeration value="LR_STS43c_and_VC3_43c"/>
      <xsd:enumeration value="LR_STS44c_and_VC3_44c"/>
      <xsd:enumeration value="LR_STS45c_and_VC4_15c"/>
      <xsd:enumeration value="LR_STS46c_and_VC3_46c"/>
      <xsd:enumeration value="LR_STS47c_and_VC3_47c"/>
      <xsd:enumeration value="LR_STS48c_and_VC4_16c"/>
      <xsd:enumeration value="LR_STS49c_and_VC3_49c"/>
      <xsd:enumeration value="LR_STS50c_and_VC3_50c"/>
      <xsd:enumeration value="LR_STS51c_and_VC4_17c"/>
      <xsd:enumeration value="LR_STS52c_and_VC3_52c"/>
      <xsd:enumeration value="LR_STS53c_and_VC3_53c"/>
      <xsd:enumeration value="LR_STS54c_and_VC4_18c"/>
      <xsd:enumeration value="LR_STS55c_and_VC3_55c"/>
      <xsd:enumeration value="LR_STS56c_and_VC3_56c"/>
      <xsd:enumeration value="LR_STS57c_and_VC4_19c"/>
      <xsd:enumeration value="LR_STS58c_and_VC3_58c"/>
      <xsd:enumeration value="LR_STS59c_and_VC3_59c"/>
      <xsd:enumeration value="LR_STS60c_and_VC4_20c"/>
      <xsd:enumeration value="LR_STS61c_and_VC3_61c"/>
      <xsd:enumeration value="LR_STS62c_and_VC3_62c"/>
      <xsd:enumeration value="LR_STS63c_and_VC4_21c"/>
      <xsd:enumeration value="LR_STS64c_and_VC3_64c"/>
      <xsd:enumeration value="LR_STS65c_and_VC3_65c"/>
      <xsd:enumeration value="LR_STS66c_and_VC4_22c"/>
      <xsd:enumeration value="LR_STS67c_and_VC3_67c"/>
      <xsd:enumeration value="LR_STS68c_and_VC3_68c"/>
      <xsd:enumeration value="LR_STS69c_and_VC4_23c"/>
      <xsd:enumeration value="LR_STS70c_and_VC3_70c"/>
      <xsd:enumeration value="LR_STS71c_and_VC3_71c"/>
      <xsd:enumeration value="LR_STS72c_and_VC4_24c"/>
      <xsd:enumeration value="LR_STS73c_and_VC3_73c"/>
      <xsd:enumeration value="LR_STS74c_and_VC3_74c"/>
      <xsd:enumeration value="LR_STS75c_and_VC4_25c"/>
      <xsd:enumeration value="LR_STS76c_and_VC3_76c"/>
      <xsd:enumeration value="LR_STS77c_and_VC3_77c"/>
      <xsd:enumeration value="LR_STS78c_and_VC4_26c"/>
      <xsd:enumeration value="LR_STS79c_and_VC3_79c"/>
      <xsd:enumeration value="LR_STS80c_and_VC3_80c"/>
      <xsd:enumeration value="LR_STS81c_and_VC4_27c"/>
      <xsd:enumeration value="LR_STS82c_and_VC3_82c"/>
      <xsd:enumeration value="LR_STS83c_and_VC3_83c"/>
      <xsd:enumeration value="LR_STS84c_and_VC4_28c"/>
      <xsd:enumeration value="LR_STS85c_and_VC3_85c"/>
      <xsd:enumeration value="LR_STS86c_and_VC3_86c"/>
      <xsd:enumeration value="LR_STS87c_and_VC4_29c"/>
      <xsd:enumeration value="LR_STS88c_and_VC3_88c"/>
      <xsd:enumeration value="LR_STS89c_and_VC3_89c"/>
      <xsd:enumeration value="LR_STS90c_and_VC4_30c"/>
      <xsd:enumeration value="LR_STS91c_and_VC3_91c"/>
      <xsd:enumeration value="LR_STS92c_and_VC3_92c"/>
      <xsd:enumeration value="LR_STS93c_and_VC4_31c"/>
      <xsd:enumeration value="LR_STS94c_and_VC3_94c"/>
      <xsd:enumeration value="LR_STS95c_and_VC3_95c"/>
      <xsd:enumeration value="LR_STS96c_and_VC4_32c"/>
      <xsd:enumeration value="LR_STS97c_and_VC3_97c"/>
      <xsd:enumeration value="LR_STS98c_and_VC3_98c"/>
      <xsd:enumeration value="LR_STS99c_and_VC4_33c"/>
      <xsd:enumeration value="LR_STS100c_and_VC3_100c"/>
      <xsd:enumeration value="LR_STS101c_and_VC3_101c"/>
      <xsd:enumeration value="LR_STS102c_and_VC4_34c"/>
      <xsd:enumeration value="LR_STS103c_and_VC3_103c"/>
      <xsd:enumeration value="LR_STS104c_and_VC3_104c"/>
      <xsd:enumeration value="LR_STS105c_and_VC4_35c"/>
      <xsd:enumeration value="LR_STS106c_and_VC3_106c"/>
      <xsd:enumeration value="LR_STS107c_and_VC3_107c"/>
      <xsd:enumeration value="LR_STS108c_and_VC4_36c"/>
      <xsd:enumeration value="LR_STS109c_and_VC3_109c"/>
      <xsd:enumeration value="LR_STS110c_and_VC3_110c"/>
      <xsd:enumeration value="LR_STS111c_and_VC4_37c"/>
      <xsd:enumeration value="LR_STS112c_and_VC3_112c"/>
      <xsd:enumeration value="LR_STS113c_and_VC3_113c"/>
      <xsd:enumeration value="LR_STS114c_and_VC4_38c"/>
      <xsd:enumeration value="LR_STS115c_and_VC3_115c"/>
      <xsd:enumeration value="LR_STS116c_and_VC3_116c"/>
      <xsd:enumeration value="LR_STS117c_and_VC4_39c"/>
      <xsd:enumeration value="LR_STS118c_and_VC3_118c"/>
      <xsd:enumeration value="LR_STS119c_and_VC3_119c"/>
      <xsd:enumeration value="LR_STS120c_and_VC4_40c"/>
      <xsd:enumeration value="LR_STS121c_and_VC3_121c"/>
      <xsd:enumeration value="LR_STS122c_and_VC3_122c"/>
      <xsd:enumeration value="LR_STS123c_and_VC4_41c"/>
      <xsd:enumeration value="LR_STS124c_and_VC3_124c"/>
      <xsd:enumeration value="LR_STS125c_and_VC3_125c"/>
      <xsd:enumeration value="LR_STS126c_and_VC4_42c"/>
      <xsd:enumeration value="LR_STS127c_and_VC3_127c"/>
      <xsd:enumeration value="LR_STS128c_and_VC3_128c"/>
      <xsd:enumeration value="LR_STS129c_and_VC4_43c"/>
      <xsd:enumeration value="LR_STS130c_and_VC3_130c"/>
      <xsd:enumeration value="LR_STS131c_and_VC3_131c"/>
      <xsd:enumeration value="LR_STS132c_and_VC4_44c"/>
      <xsd:enumeration value="LR_STS133c_and_VC3_133c"/>
      <xsd:enumeration value="LR_STS134c_and_VC3_134c"/>
      <xsd:enumeration value="LR_STS135c_and_VC4_45c"/>
      <xsd:enumeration value="LR_STS136c_and_VC3_136c"/>
      <xsd:enumeration value="LR_STS137c_and_VC3_137c"/>
      <xsd:enumeration value="LR_STS138c_and_VC4_46c"/>
      <xsd:enumeration value="LR_STS139c_and_VC3_139c"/>
      <xsd:enumeration value="LR_STS140c_and_VC3_140c"/>
      <xsd:enumeration value="LR_STS141c_and_VC4_47c"/>
      <xsd:enumeration value="LR_STS142c_and_VC3_142c"/>
      <xsd:enumeration value="LR_STS143c_and_VC3_143c"/>
      <xsd:enumeration value="LR_STS144c_and_VC4_48c"/>
      <xsd:enumeration value="LR_STS145c_and_VC3_145c"/>
      <xsd:enumeration value="LR_STS146c_and_VC3_146c"/>
      <xsd:enumeration value="LR_STS147c_and_VC4_49c"/>
      <xsd:enumeration value="LR_STS148c_and_VC3_148c"/>
      <xsd:enumeration value="LR_STS149c_and_VC3_149c"/>
      <xsd:enumeration value="LR_STS150c_and_VC4_50c"/>
      <xsd:enumeration value="LR_STS151c_and_VC3_151c"/>
      <xsd:enumeration value="LR_STS152c_and_VC3_152c"/>
      <xsd:enumeration value="LR_STS153c_and_VC4_51c"/>
      <xsd:enumeration value="LR_STS154c_and_VC3_154c"/>
      <xsd:enumeration value="LR_STS155c_and_VC3_155c"/>
      <xsd:enumeration value="LR_STS156c_and_VC4_52c"/>
      <xsd:enumeration value="LR_STS157c_and_VC3_157c"/>
      <xsd:enumeration value="LR_STS158c_and_VC3_158c"/>
      <xsd:enumeration value="LR_STS159c_and_VC4_53c"/>
      <xsd:enumeration value="LR_STS160c_and_VC3_160c"/>
      <xsd:enumeration value="LR_STS161c_and_VC3_161c"/>
      <xsd:enumeration value="LR_STS162c_and_VC4_54c"/>
      <xsd:enumeration value="LR_STS163c_and_VC3_163c"/>
      <xsd:enumeration value="LR_STS164c_and_VC3_164c"/>
      <xsd:enumeration value="LR_STS165c_and_VC4_55c"/>
      <xsd:enumeration value="LR_STS166c_and_VC3_166c"/>
      <xsd:enumeration value="LR_STS167c_and_VC3_167c"/>
      <xsd:enumeration value="LR_STS168c_and_VC4_56c"/>
      <xsd:enumeration value="LR_STS169c_and_VC3_169c"/>
      <xsd:enumeration value="LR_STS170c_and_VC3_170c"/>
      <xsd:enumeration value="LR_STS171c_and_VC4_57c"/>
      <xsd:enumeration value="LR_STS172c_and_VC3_172c"/>
      <xsd:enumeration value="LR_STS173c_and_VC3_173c"/>
      <xsd:enumeration value="LR_STS174c_and_VC4_58c"/>
      <xsd:enumeration value="LR_STS175c_and_VC3_175c"/>
      <xsd:enumeration value="LR_STS176c_and_VC3_176c"/>
      <xsd:enumeration value="LR_STS177c_and_VC4_59c"/>
      <xsd:enumeration value="LR_STS178c_and_VC3_178c"/>
      <xsd:enumeration value="LR_STS179c_and_VC3_179c"/>
      <xsd:enumeration value="LR_STS180c_and_VC4_60c"/>
      <xsd:enumeration value="LR_STS181c_and_VC3_181c"/>
      <xsd:enumeration value="LR_STS182c_and_VC3_182c"/>
      <xsd:enumeration value="LR_STS183c_and_VC4_61c"/>
      <xsd:enumeration value="LR_STS184c_and_VC3_184c"/>
      <xsd:enumeration value="LR_STS185c_and_VC3_185c"/>
      <xsd:enumeration value="LR_STS186c_and_VC4_62c"/>
      <xsd:enumeration value="LR_STS187c_and_VC3_187c"/>
      <xsd:enumeration value="LR_STS188c_and_VC3_188c"/>
      <xsd:enumeration value="LR_STS189c_and_VC4_63c"/>
      <xsd:enumeration value="LR_STS190c_and_VC3_190c"/>
      <xsd:enumeration value="LR_STS191c_and_VC3_191c"/>
      <xsd:enumeration value="LR_STS192c_and_VC4_64c"/>
      <xsd:enumeration value="LR_STS768c_and_VC4_256c"/>
      <xsd:enumeration value="LR_T1_and_DS1_1_5M"/>
      <xsd:enumeration value="LR_T2_and_DS2_6M"/>
      <xsd:enumeration value="LR_T3_and_DS3_45M"/>
      <xsd:enumeration value="LR_VT1_5_and_TU11_VC11"/>
      <xsd:enumeration value="LR_VT2_and_TU12_VC12"/>
      <xsd:enumeration value="LR_VT6_and_TU2_VC2"/>
      <!--The ones below were added in the MTOSI 2.1 release-->
      <xsd:enumeration value="LR_LAG_Fragment"/>
      <xsd:enumeration value="LR_DSR_10Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2.5Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10.7Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_11.1Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_LAN"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_WAN"/>
      <xsd:enumeration value="LR_DSR_40Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OTU2e"/>
      <xsd:enumeration value="LR_DSR_OTU3e1"/>
      <xsd:enumeration value="LR_DSR_OTU3e2"/>
      <xsd:enumeration value="LR_DSR_OTU4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_0"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_Flexible"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_4"/>
      <xsd:enumeration value="LR_Optical_Physical_Section"/>
      <xsd:enumeration value="LR_Optical_Physical_Section_Multilane"/>
      <xsd:enumeration value="LR_Section_OC3072_STS3072_and_RS_STM1024"/>
      <xsd:enumeration value="LR_Line_OC3072_STS3072_and_MS_STM1024"/>
      <xsd:enumeration value="LR_DSR_OC3072_and_STM1024"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval/ManagedElementRetrievalHttp?xsd=5</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported Alarm ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuArcStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T Alarm Reporting
                Control (ARC) state or status parameters supported in
                mTOP;    Each element of the list identifies a state or
                status and provides its relevant value.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="m3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="m3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="m3100.NALMTIInterval" type="tns:M3100.NALMTIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.NALMQIInterval" type="tns:M3100.NALMQIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
      <xsd:element minOccurs="0" name="m3100.State" type="tns:M3100.ArcStateListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="M3100.AlarmStatusType">
    <xsd:annotation>
      <xsd:documentation>Alarm Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CLEARED"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="CRITICAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcStateType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ALM"/>
      <xsd:enumeration value="NALM"/>
      <xsd:enumeration value="NALMTypeIMED_INHIBIT"/>
      <xsd:enumeration value="NALM_QUALIFIED_INHIBIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMTIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMQIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcQIStatusType">
    <xsd:annotation>
      <xsd:documentation>ARC QI Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="NALM_NOT_READY"/>
      <xsd:enumeration value="NALM_COUNT_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="M3100.ArcStateListType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="M3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="M3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="M3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint></con:endpoints><con:operation isOneWay="false" action="getAllManagedElements" name="getAllManagedElements" bindingOperationName="getAllManagedElements" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllManagedElementsRequest>
         <!--Optional:-->
          
         <v11:mdOrMlsnRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mdOrMlsnRef>
      </v11:getAllManagedElementsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllManagedElements"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="getAllManagedElementsPassingFilter" name="getAllManagedElementsPassingFilter" bindingOperationName="getAllManagedElementsPassingFilter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllManagedElementsPassingFilterRequest>
         <!--Optional:-->
         <v11:mdRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mdRef>
         <!--Optional:-->
         <v11:filter>
            <!--Optional:-->
            <v11:location>?</v11:location>
            <!--Optional:-->
            <v11:manufacturer>?</v11:manufacturer>
            <!--Optional:-->
            <v11:productName>?</v11:productName>
            <!--Optional:-->
            <v11:resourceState overlap="?" qualifier="?" extension="?">?</v11:resourceState>
         </v11:filter>
      </v11:getAllManagedElementsPassingFilterRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllManagedElementsPassingFilter"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="getAllManagedElementsWrtOs" name="getAllManagedElementsWrtOs" bindingOperationName="getAllManagedElementsWrtOs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllManagedElementsWrtOsRequest>
         <!--Optional:-->
         <v11:osRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:osRef>
         <!--Optional:-->
         <v11:mdRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mdRef>
      </v11:getAllManagedElementsWrtOsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllManagedElementsWrtOs"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="getManagedElement" name="getManagedElement" bindingOperationName="getManagedElement" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getManagedElementRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
      </v11:getManagedElementRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getManagedElement"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="getManagedElementsIterator" name="getManagedElementsIterator" bindingOperationName="getManagedElementsIterator" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getManagedElementsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getManagedElementsIterator"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="NotificationConsumerSoapHttpBinding" type="wsdl" bindingName="{http://www.tmforum.org/mtop/fmw/wsdl/notc/v1-0}NotificationConsumerSoapHttpBinding" soapVersion="1_1" anonymous="optional" definition="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp.wsdl?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp.wsdl?WSDL"><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp.wsdl?WSDL</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-NotificationConsumerV1-0" targetNamespace="http://www.tmforum.org/mtop/fmw/wsdl/notc/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/wsdl/notc/v1-0" xmlns:WL5G3N2="http://schemas.xmlsoap.org/wsdl/soap/">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?wsdl=2" namespace="http://www.tmforum.org/mtop/fmw/wsdl/notc/v1-0"/>
  <WL5G3N0:documentation>DDP: Framework
    Module: NotificationConsumer Service Interface WSDL HTTP Module
    Description: This module contains all the mTOP NotificationConsumer Service Interface WSDL SOAP/HTTP binding definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:binding name="NotificationConsumerSoapHttpBinding" type="WL5G3N1:NotificationConsumer">
    <WL5G3N0:documentation>SOAP HTTP binding definitions of the operations of the NotificationConsumer portType (interface)</WL5G3N0:documentation>
    <WL5G3N2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <WL5G3N0:operation name="notify">
      <WL5G3N2:operation soapAction="notify" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:notify" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
    </WL5G3N0:operation>
  </WL5G3N0:binding>
  <WL5G3N0:service name="NotificationConsumerHttp">
    <WL5G3N0:port binding="WL5G3N1:NotificationConsumerSoapHttpBinding" name="NotificationConsumerSoapHttp">
      <WL5G3N0:documentation>Example of the NotificationConsumer WSDL Service definition as a deployment example of this mTOP Service Interface. It is expected to be modified to match the specific deployment configuration in a service provider's CCV.</WL5G3N0:documentation>
      <WL5G3N2:address location="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp"/>
    </WL5G3N0:port>
  </WL5G3N0:service>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?wsdl=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-NotificationConsumerV1-0" targetNamespace="http://www.tmforum.org/mtop/fmw/wsdl/notc/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/wsdl/notc/v1-0">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?wsdl=1" namespace="http://www.tmforum.org/mtop/fmw/wsdl/notc/v1-0"/>
  <WL5G3N0:documentation>DDP: Framework
    Module: NotificationConsumer Service Interface WSDL PortType Module
    Description: This module contains all the mTOP NotificationConsumer Service Interface WSDL portType definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:portType name="NotificationConsumer">
    <WL5G3N0:documentation>The NotificationConsumer portType (interface)</WL5G3N0:documentation>
    <WL5G3N0:operation name="notify">
      <WL5G3N0:documentation>This is the notify operation used to receive notifications from producer or broker.</WL5G3N0:documentation>
      <WL5G3N0:input message="WL5G3N1:notify"/>
    </WL5G3N0:operation>
  </WL5G3N0:portType>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?wsdl=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-NotificationConsumerV1-0" targetNamespace="http://www.tmforum.org/mtop/fmw/wsdl/notc/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:WL5G3N2="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1">
  <WL5G3N0:documentation>DDP: Framework
    Module: NotificationConsumer Service Interface WSDL Messages Module
    Description: This module contains all the mTOP NotificationConsumer Service Interface WSDL message definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:types>
    <xsd:schema xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:not="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/wsdl/notc/v1-0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=14"/>
    </xsd:schema>
  </WL5G3N0:types>
  <WL5G3N0:message name="notify">
    <WL5G3N0:documentation>The notify message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:notify" name="mtopBody"/>
  </WL5G3N0:message>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=14</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Messages Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the mTOP notification service
                interfaces messages.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=12"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=1"/>
  <!--************* OneControl MTOSI: Begin xsl insertions *************-->
  <!--Import substitution group elements of CommonEventInformation so that-->
  <!--later the wsdl compiler will recognize them as needed java classes.-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hbt/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/alm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/tca/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=8"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/eps/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=5"/>
  <!--************* OneControl MTOSI: End xsl insertions   *************-->
  <!--==============-->
  <xsd:element name="subscribeRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the subscribe operation</p>
        <p>This operation allows the Client OS to subscribe for notifications.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="consumerEpr" type="tns:EndPointReferenceType">
          <xsd:annotation>
            <xsd:documentation>
              <p>the notification consumer endpoint
                                (callback handler) that the broker will
                                call to send the notification</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="topic" type="tns:TopicExpressionType">
          <xsd:annotation>
            <xsd:documentation>
              <p>the unique name of the topic object of
                                the subscription</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="selector" type="gen:QueryExpressionType">
          <xsd:annotation>
            <xsd:documentation>
              <p>It is the optional "filter"
                                expression to restrict the flow of
                                messages sent to the notification
                                consumer. By default, an empty selector
                                defines the desire to be notified of all
                                events for the given topic.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:element name="subscribeResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the subscribe operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="subscriptionID" type="tns:SubscriptionIdentifierType">
          <xsd:annotation>
            <xsd:documentation>
              <p>A unique subscription identifier is
                                returned to the Client OS to be used
                                when invoking the unsubscribe() for the
                                given topic. Note that it must uniquely
                                identify the request signature by its
                                three elements; consumerEPR , topic, and selector.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:element name="subscribeException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the subscribe operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidFilterDefinition"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:invalidTopic"/>
            <xsd:element ref="msg:notificationServiceProblem"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:element name="unsubscribeRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the unsubscribe operation</p>
        <p>This operation allows the Client OS to unsubscribe
                    from a previously subscribed notification channel.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="subscriptionID" type="tns:SubscriptionIdentifierType">
          <xsd:annotation>
            <xsd:documentation>
              <p>It is the same subscription identifier
                                that was returned on successful
                                subscription of the Client OS.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="topic" type="tns:TopicExpressionType">
          <xsd:annotation>
            <xsd:documentation>
              <p>it is the unique name of the topic object
                                of the unsubscription.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:element name="unsubscribeResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the unsubscribe operation</p>
        <p>Note that it is an empty payload. Failure should be
                    handled as an exception</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence/>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:element name="unsubscribeException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the unsubscribe operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notificationServiceProblem"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:element name="notify">
    <xsd:annotation>
      <xsd:documentation>
        <p>One way (notification) message structure of the
                    notify operation</p>
        <p>This operation allows event notification to a client OS.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="topic" type="tns:TopicExpressionType">
          <xsd:annotation>
            <xsd:documentation>
              <p>it is the unique name of the topic on
                                which the notification
                                "message" was published. The
                                topic is based on a TopicExpression,
                                which is associated as a unique JNDI
                                entry. In MTOSI Release 1, it represents
                                the address of a JMS topic instance
                                created at deployment.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="message">
          <xsd:annotation>
            <xsd:documentation>
              <p>the notification payload which can be one
                                of the supported mTOP XML events, which
                                are all based on the commonEventInfo</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" ref="cei:commonEventInformation"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:simpleType name="EndPointReferenceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>the unique service end point address on the CCV.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="SubscriptionIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>the identifier to uniquely identify a valid subscription.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="TopicExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>the unique name of topic instance published on the CCV.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=9</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of generic mTOP simple data types.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="NameAndStringValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvsList" type="tns:NameAndValueStringListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndValueStringListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndStringValue</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nvs" type="tns:NameAndStringValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:any minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvList" type="tns:NameAndAnyValueListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndAnyValueType</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nv" type="tns:NameAndAnyValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AliasNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    contains the list of aliases for the network entity.
                    The attribute is a name-value list. The name refers
                    to the type of alias (e.g., nativeEMSname) and the
                    value component holds the alias itself</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alias">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="aliasName" type="xsd:string"/>
            <xsd:element name="aliasValue" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AnyListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A generic list of any type of elements. Used for
                    vendor Extensions or loose element encapsulation
                    from other namespaces.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="DiscoveredNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the name of the object when
                    its existence is first published on the CCV but only
                    in the case where the OS that publishes the object
                    on the CCV is not the naming OS. If the naming OS
                    first publishes the object on the CCV, this
                    attribute may be left empty.</p>
        <p>The discovered name is assumed to be unique from the
                    perspective of the publishing OS.</p>
        <p>The discovered name published on the CCV does not
                    necessarily need to be the name of the object as
                    discovered by the OS from the subtending network.</p>
        <p>There are no specific rules concerning the
                    relationship between the "name" and
                    "discovered name" of the object. They
                    could be set to the same value or they could be different.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ManufactureDateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type identifies the production date of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="MultiEventInventoryAttributesType">
    <xsd:annotation>
      <xsd:documentation>This attribute is used when a object
                instance is embedded in the inventory    layout payload
                of a Multi-Event Inventory (MEI) notification.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="neTime" nillable="true" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the time at which the NE detected the
                            inventory change (if available)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventIndication" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is an indication of the type of
                            inventory update.</p>
            <p>Possible values are Object Creation (OC),
                            Object Discovery (ODsc), Object Deletion
                            (OD),        Attribute Value Change (AVC),
                            State Change (SC) and AVC_SC_and_Childern.
                            Only the acronym (e.g., OC)        is used
                            in the actual attribute value. The following
                            conventions apply:</p>
            <p>If an object creation or object discovery
                            indicator is applied to a parent object,
                            it implicitly applies to all the children,
                            i.e., the OS sending the notification only
                            needs       to set the indicator attribute
                            in the parent object.</p>
            <p>If an object deletion is applied to a parent
                            object, it is assumed that all the children
                            are also deleted. The childern should not be listed.</p>
            <p>The AVC_SC_and_Childern indication may be
                            applied to a parent object to imply that
                            there       may be AVC or SC changes to the
                            parent and some or all of the children.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="NetworkAccessDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A free-format string used to associate a resource to
                    a Network Access Domain.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="NotificationIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the notification ID.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="NotificationIdentifierListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of notification IDs  (free string). Also,  the
                    value found in notificationId field of the event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="notificationId" type="tns:NotificationIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of all the object types. It is
                    left as a string for maximum compatibility with
                    future supported object types.</p>
        <p>Refer to the SD2-7 ObjectNaming for the list of all
                    supported values.</p>
        <p>Otherwise, one can also refer to the
                    ObjectEnumTypedefined in CommonResourceInfo (see NRB
                    DDP), which is provided as XML Schema enumerations
                    solely as a helper (not used in any messaging validation).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enumeration of all the supported query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI">
      <xsd:enumeration value="ANSI-92"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath20/"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The loose definition of all the supported query
                    dialect types.</p>
        <p>Refer to QueryDialectEnumType definition to the
                    enumeration of recommended query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The generic schema datatype definition for the query
                    expression used in most filters.</p>
        <p>This definition is borrowed from WS-Notification v1.3.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="tns:QueryDialectTypeType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          <p>The dialect of the given query expression</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=12</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=10"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=9"/>
  <!--==============-->
  <xsd:complexType abstract="false" name="BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The (abstract) base type definition of all exception messages.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="hdr:header">
        <xsd:annotation>
          <xsd:documentation>The mTOP header as it cannot be
                        part of the SOAP Header in a SOAP v1.1 Fault message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="reason" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>A string indicating further details about the
                            exception. It is a free format string filled
                            by the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The extension for specific vendor exception information.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:element name="notImplemented" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised by OS for an optional operation that is not implemented</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="internalError" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised in case of non-specific OS internal failure</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidInput" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters are invalid</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tooManyOpenIterators" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when data retrieval iterator capacity is full</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="entityNotFound" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters do not refer to an existing object</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="commLoss" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when communication to an entity (needed to
                    help fulfill the request) is lost</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedCompressionFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given data compression format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedPackingFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given file packing format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidFilterDefinition" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the filter is invalid.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="objectInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tpInvalidEndPoint" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="timeslotInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="protectionEffortNotMet" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notInValidState" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unableToComply" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="capacityExceeded" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="accessDenied" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedRoutingConstraints" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="userlabelInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidTopic" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the topic is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notificationServiceProblem" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when there is a failure with the Broker.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AllExceptionsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reference to all supported exception types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="tns:accessDenied"/>
      <xsd:element ref="tns:capacityExceeded"/>
      <xsd:element ref="tns:commLoss"/>
      <xsd:element ref="tns:entityNotFound"/>
      <xsd:element ref="tns:internalError"/>
      <xsd:element ref="tns:invalidFilterDefinition"/>
      <xsd:element ref="tns:invalidInput"/>
      <xsd:element ref="tns:invalidTopic"/>
      <xsd:element ref="tns:notificationServiceProblem"/>
      <xsd:element ref="tns:notImplemented"/>
      <xsd:element ref="tns:notInValidState"/>
      <xsd:element ref="tns:objectInUse"/>
      <xsd:element ref="tns:protectionEffortNotMet"/>
      <xsd:element ref="tns:timeslotInUse"/>
      <xsd:element ref="tns:tooManyOpenIterators"/>
      <xsd:element ref="tns:tpInvalidEndPoint"/>
      <xsd:element ref="tns:unableToComply"/>
      <xsd:element ref="tns:unsupportedCompressionFormat"/>
      <xsd:element ref="tns:unsupportedPackingFormat"/>
      <xsd:element ref="tns:unsupportedRoutingConstraints"/>
      <xsd:element ref="tns:userlabelInUse"/>
    </xsd:choice>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Profile of exception types supported by all mTOP
                    iterator operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="tns:AllExceptionsType">
        <xsd:choice>
          <xsd:element ref="tns:commLoss"/>
          <xsd:element ref="tns:internalError"/>
          <xsd:element ref="tns:invalidInput"/>
          <xsd:element ref="tns:notImplemented"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Generic request message structure for all data
                    iterator operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=10</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML header.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=9"/>
  <!--==============-->
  <xsd:simpleType name="ActivityStatusEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies the high-level response status for an
                    activity.  Required for response messages, including
                    error responses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="WARNING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="ActivityStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Add to the initial enumerations the Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ActivityStatusEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="MessageTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type of the message that is being exchanged as
                    part of an activity.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REQUEST"/>
      <xsd:enumeration value="RESPONSE"/>
      <xsd:enumeration value="NOTIFICATION"/>
      <xsd:enumeration value="ERROR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationPatternType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Styles supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SimpleResponse"/>
      <xsd:enumeration value="MultipleBatchResponse"/>
      <xsd:enumeration value="BulkResponse"/>
      <xsd:enumeration value="Notification"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationStyleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Style supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MSG"/>
      <xsd:enumeration value="RPC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="CompressionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if compression is to be performed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:CompressionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CompressionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported compressions. All extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_COMPRESSION"/>
      <xsd:enumeration value="GZIP"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PackingTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if the output file(s) are to be packed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:PackingEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PackingEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported packing/packaging. All
                    extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PACKING"/>
      <xsd:enumeration value="ZIP"/>
      <xsd:enumeration value="TAR"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="header">
    <xsd:annotation>
      <xsd:documentation>
        <p>MTOSI Standard Header.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="activityName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the business
                                transaction activity for the message
                                being exchanged.       The value is
                                usually the name of the mTOP operation,
                                e.g. getInventory.       This value
                                corresponds to the “operation” in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the message (or
                                contract) that is being exchanged as
                                part of an activity. E.g.
                                getInventoryResponse. This field
                                corresponds to the message name in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgType" type="tns:MessageTypeType"/>
        <xsd:element minOccurs="0" name="senderURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application sending this message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="destinationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the final destination of the
                                message (the OS that will process the
                                content of the message). This field may
                                point to a logical end point or abstract
                                topic name to be resolved by the
                                communication transport middleware in
                                order to deliver the message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="replyToURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used by request messages to specify
                                destination for response message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="originatorURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the originating application of
                                the message that resulted in this
                                response or notification message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="failureReplytoURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application receiving the
                                potential error notification message.
                                Required for all response messages and
                                notifications which are triggered by
                                request/response. If not specified the
                                replyToURI is used. If the replyToURI is
                                also not specified, senderURI endpoint
                                is used to send back the failure response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="activityStatus" type="tns:ActivityStatusType"/>
        <xsd:element minOccurs="0" name="correlationId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>An identifier that could be set by the
                                originator of an asynchronous request
                                that will allow it to correlate the
                                response to the request.  If this field
                                is set, it should be reflected in the
                                header of the response message.  Not
                                required for notification headers.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="security" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Provides credential nformation for use by
                                a security service for identification,
                                authentication, or authorization.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="securityType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the type of credential
                                contained in the security element.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="priority">
          <xsd:annotation>
            <xsd:documentation>
              <p>Indicates message-handling priority for
                                asynchronous messages.  It must be in
                                the range 0-9 (lowest-highest). Default: 4</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string"/>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgSpecificProperties">
          <xsd:annotation>
            <xsd:documentation>
              <p>Conditionally required for request,
                                response, and notification messages as
                                identified by the documentation for a
                                specific interface message.  The
                                communications infrastructure or the
                                receiving application can use this value
                                for routing or filtering messages.</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" minOccurs="0" name="property">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="propName" type="xsd:string"/>
                    <xsd:element name="propValue" type="xsd:string"/>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="communicationPattern" type="tns:CommunicationPatternType"/>
        <xsd:element minOccurs="0" name="communicationStyle" type="tns:CommunicationStyleType"/>
        <xsd:element minOccurs="0" name="requestedBatchSize" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>The RequestedBatchSize parameter provides
                                the control for the batch segmentation
                                of the full set of output data generated
                                by a coarse-grained operation such as
                                getInventory or getActiveAlarms. The
                                unit is any of the MTOSI objects. And,
                                it defines the maximum number of MTOSI
                                objects that can be included in all the
                                batches of data sent as part of a
                                multiple responses MEP.</p>
              <p>However, they are cases where a batch may
                                exceed the number of objects defined in
                                the RequestedBatchSize parameter. This
                                is true if the granularity of a response
                                atomic data representation is greater
                                than just one object. This is true for
                                the getInventory response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceNumber" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm. Pattern
                                to identify the batch seq number in a sequence.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceEndOfReply" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm.
                                Pattern, true if it is the last result
                                batch in a sequence</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="iteratorReferenceURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Mandatory for all SIT (iterators) MEP to
                                allow description of the data retrieval iterator.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="fileLocationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used for file retrieval. Specify the base
                                name of the file(s) to be generated and
                                the remote destination.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="compressionType" type="tns:CompressionTypeType"/>
        <xsd:element minOccurs="0" name="packingType" type="tns:PackingTypeType"/>
        <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>Message originating timestamp</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Location for all vendor extensions to the
                                MTOSI standard header.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common event information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=9"/>
  <!--================-->
  <xsd:element name="commonEventInformation" type="tns:CommonEventInformationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of the common set of
                    attributes used for all events.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonEventInformationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the common set of attributes
                    used for all events.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="notificationId" type="gen:NotificationIdentifierType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The uniqueness and the sequence of the
                            notificationId are not guaranteed.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="sourceTime" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>
            <p>The time at which the event was reported by
                            the source system (NE, EMS or OS).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Containment for all vendor extensions</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=6</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hbt/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:ei="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hbt/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Heartbeat Event XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the heartbeat event.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=7"/>
  <!--================-->
  <xsd:element name="heartbeat" substitutionGroup="cei:commonEventInformation" type="tns:HeartbeatType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of the heartbeat event.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="HeartbeatType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the heartbeat event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ei:EventInformationType">
        <xsd:sequence/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=7</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common event information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=13"/>
  <!--================-->
  <xsd:complexType abstract="true" name="EventInformationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the event information set of attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cei:CommonEventInformationType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="objectType" type="gen:ObjectTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies the type of the object
                                    associated with the event. This
                                    attribute is needed to allow simple
                                    notification filtering based on the
                                    object type.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="objectName" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies the name of the object
                                    associated with the event.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="osTime" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:documentation>
                <p>The time at which the event was
                                    reported by the OS (EMS).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=13</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML naming structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=9"/>
  <!--=================-->
  <xsd:complexType name="RelativeDistinguishNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of relative distinguish
                    name (RDN) data structure used in all object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="type" type="gen:ObjectTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN object type acronym.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of the MTOSI object name
                    data structure as a sequence of RDNs, which
                    represents a unique identifier for the MTOSI object
                    on the CCV. Once set by the naming OS, the name is
                    invariant for the life of the object and should be
                    used when referring to the object over the CCV. Name
                    attribute of an object instance shall always be
                    assigned a value, unless the object instance is
                    first discovered by an OS that is not the naming OS
                    for the object instance. In such a case, the
                    discovering OS shall provide a value for the
                    Discovered Name attribute of the object. The naming
                    OS shall provide a value for the Name attribute of
                    the object once it becomes aware of the new object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="rdn" type="tns:RelativeDistinguishNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition for the list of MTOSI object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="name" nillable="true" type="tns:NamingAttributeType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=4</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/alm/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:com="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:cornot="http://www.tmforum.org/mtop/fmw/xsd/cornot/v1" xmlns:ei="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:prc="http://www.tmforum.org/mtop/nra/xsd/prc/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/alm/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the Alarm event.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cornot/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/prc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=17"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=2"/>
  <!--================-->
  <xsd:element name="alarm" substitutionGroup="cei:commonEventInformation" type="tns:AlarmType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of the alarm event.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AlarmType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the alarm event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ei:EventInformationType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="isEdgePointRelated" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>TRUE if this event relates to a PTP
                                    that is an edge point or to a PGP
                                    that contains a PTP that is an edge
                                    point. FALSE otherwise; this field
                                    is optional in this case.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isClearable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the event is clearable
                                    (or is itself a clear).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="aliasNameList" type="gen:AliasNameListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies all the object list of
                                    aliases to describe the network
                                    entity as portrayed on the OS user interface.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="layerRate" type="lay:LayerRateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The layer which this alarm is
                                    relevant to.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="probableCause" type="prc:ProbableCauseType">
            <xsd:annotation>
              <xsd:documentation>
                <p>No other string than the ones defined
                                    by the TM Forum should be used for
                                    this field.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="nativeProbableCause" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies the probableCause as
                                    portrayed on the OS user interface.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="additionalText" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>More information about the alarm.
                                    such as, "Unit is mismounted".</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="perceivedSeverity" type="com:PerceivedSeverityType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the severity of the alarm.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="affectedPtpRefList" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of affected TPs. Contained
                                    CTPs are not listed. This field is
                                    optional for all alarms except for
                                    alarms on equipment. This is used to
                                    indicate a list of TPs affected by
                                    an equipment failure for example. If
                                    the alarm is an alarm on an
                                    equipment that supports PTPs, then
                                    the ports (PTPs) supported by this
                                    equipment will be listed in this
                                    field (irrespective of whether the
                                    alarm is Service Affecting or not).
                                    The list should be ordered by PTP
                                    names (ASCII order).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="serviceAffecting" type="com:ServiceAffectingType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the alarm has
                                    affected service</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="rootCauseAlarmIndication" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The RCAI indicator has two values,
                                    i.e., TRUE (meaning that the alarm
                                    is a Root Cause Alarm Indication) or
                                    FALSE (meaning the alarm is a raw alarm).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="acknowledgeIndication" type="com:AcknowledgeIndicationType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The acknowledge indication state.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_EventType" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Classifies the alarm into one of the
                                    five basic categories specified in
                                    ITU-T X.733. Value is one of the
                                    following:
                                    "communicationsAlarm",
                                    "environmentalAlarm",
                                    "equipmentAlarm",
                                    "processingErrorAlarm",
                                    "qualityofServiceAlarm"
                                    This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_SpecificProblems" type="com:SpecificProblemListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies further refinements to the
                                    Probable cause of the alarm.
                                    (Similar to ProbableCauseQualifier,
                                    but this parameter is designed to be
                                    human readable and compatible with
                                    ITU usage.) This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_BackedUpStatus" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Specifies whether or not the object
                                    emitting the alarm has been
                                    backed-up, and services provided to
                                    the user have, therefore, not been
                                    disrupted. Value is one of the
                                    following: "BACKED_UP",
                                    "NOT_BACKED_UP" This field
                                    is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_BackUpObjectRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Specifies the object that is
                                    providing back-up services for the
                                    object about which the notification
                                    pertains. This parameter shall be
                                    present when the
                                    X733::BackedupStatus parameter is
                                    present and has the value
                                    "BACKED_UP".  This field
                                    is optional otherwise.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_TrendIndication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Specifies the current severity trend
                                    of the object. If present it
                                    indicates that there are one or more
                                    alarms ("outstanding
                                    alarms") which have not been
                                    cleared, and pertain to the same
                                    object as that to which this alarm
                                    ("current alarm")
                                    pertains. Value is one of the
                                    following: "MORE_SEVERE",
                                    "NO_CHANGE",
                                    "LESS_SEVERE" This field
                                    is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_CorrelatedNotificationList" type="cornot:CorrelatedNotificationListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains a set of Notification
                                    identifiers and, if necessary, their
                                    associated object names. This set is
                                    defined to be the set of all
                                    notifications to which this
                                    notification is considered to be
                                    correlated. This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_MonitoredAttributeList" type="gen:NameAndValueStringListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Defines one or more attributes of the
                                    managed object and their
                                    corresponding values at the time of
                                    the alarm. This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_ProposedRepairActionList" type="com:ProposedRepairActionListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Used if the cause is known and the
                                    system being managed can suggest one
                                    or more solutions (such as switch in
                                    standby equipment, retry, replace
                                    media). This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_AdditionalInformation" type="gen:NameAndAnyValueListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Allows the inclusion of a set of
                                    additional information.  (For
                                    consistency with X.733) This field
                                    is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="AlarmListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of alarms.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alarm" type="tns:AlarmType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=3</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/cornot/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/cornot/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP CorrelatedNotifications XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=9"/>
  <!--=================-->
  <xsd:complexType name="CorrelatedNotificationsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Correlated notifications are identified by the object
                    that emitted the notification and the notification
                    IDs. Both are included in case the Notification IDs
                    are not unique across objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="nam:NamingAttributeType"/>
      <xsd:element name="notifIds" type="gen:NotificationIdentifierListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="CorrelatedNotificationListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of CorrelatedNotificationsType elements.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="correlatedNotifications" type="tns:CorrelatedNotificationsType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=11</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP layer rates.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:element name="layerRateListType" type="tns:LayerRateListType"/>
  <!--================-->
  <xsd:complexType name="LayerRateListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of LayerRates</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="layerRate" nillable="true" type="tns:LayerRateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="LayerRateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          The LayerRateType value is used to identify:
          <li>the Layer of a PTP/CTP,</li>
          <li>the characteristic information of a PTP/FTP,</li>
          <li>the Layer/Rate of a connection.</li>
        </p>
        <p>Each LayerRateType may be used in conjunction with a
                    CTP/PTP/FTP of that layer. In the SDH definitions,
                    the G.805 CP and G.805 Termination Function layer
                    names differ, for example TU12 is used for the G.805
                    CP and VC12 for the corresponding G.805 Termination
                    Function. In this interface definition the TU and VC
                    definitions have been combined into a single
                    composite layer and this has been named to include
                    the equivalent SONET layer, e.g. LR_VT2_andTypeU12_VC12.</p>
        <p>
          For more details refer to the following supporting
                    document:
          <li>layering documentfor
                        all layering concepts</li>
          <li>LayerRates document for information about
                        recognized values in MTOSI</li>
        </p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:LayerRateEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="LayerRateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="LR_DS0_64K"/>
      <xsd:enumeration value="LR_DSL"/>
      <xsd:enumeration value="LR_Not_Applicable"/>
      <xsd:enumeration value="LR_Async_FOTS_150M"/>
      <xsd:enumeration value="LR_Async_FOTS_417M"/>
      <xsd:enumeration value="LR_Async_FOTS_560M"/>
      <xsd:enumeration value="LR_Async_FOTS_565M"/>
      <xsd:enumeration value="LR_Async_FOTS_1130M"/>
      <xsd:enumeration value="LR_Async_FOTS_1G7"/>
      <xsd:enumeration value="LR_Async_FOTS_1G8"/>
      <xsd:enumeration value="LR_ATM_NI"/>
      <xsd:enumeration value="LR_ATM_VC"/>
      <xsd:enumeration value="LR_ATM_VP"/>
      <xsd:enumeration value="LR_D1_Video"/>
      <xsd:enumeration value="LR_DIGITAL_SIGNAL_RATE"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_DSR_1_5M"/>
      <xsd:enumeration value="LR_DSR_2M"/>
      <xsd:enumeration value="LR_DSR_4M"/>
      <xsd:enumeration value="LR_DSR_6M"/>
      <xsd:enumeration value="LR_DSR_8M"/>
      <xsd:enumeration value="LR_DSR_16M"/>
      <xsd:enumeration value="LR_DSR_34M"/>
      <xsd:enumeration value="LR_E2_8M"/>
      <xsd:enumeration value="LR_E5_565M"/>
      <xsd:enumeration value="LR_Encapsulation"/>
      <xsd:enumeration value="LR_Fragment"/>
      <xsd:enumeration value="LR_DSR_45M"/>
      <xsd:enumeration value="LR_DSR_140M"/>
      <xsd:enumeration value="LR_DSR_565M"/>
      <xsd:enumeration value="LR_DSR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_DSR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OC1_STM0"/>
      <xsd:enumeration value="LR_DSR_OC3_STM1"/>
      <xsd:enumeration value="LR_DSR_2xSTM1"/>
      <xsd:enumeration value="LR_DSR_OC12_STM4"/>
      <xsd:enumeration value="LR_DSR_OC24_STM8"/>
      <xsd:enumeration value="LR_DSR_OC48_and_STM16"/>
      <xsd:enumeration value="LR_DSR_OC192_and_STM64"/>
      <xsd:enumeration value="LR_DSR_OC768_and_STM256"/>
      <xsd:enumeration value="LR_DSR_OTU1"/>
      <xsd:enumeration value="LR_DSR_OTU2"/>
      <xsd:enumeration value="LR_DSR_OTU3"/>
      <xsd:enumeration value="LR_E1_2M"/>
      <xsd:enumeration value="LR_E20_2x2M"/>
      <xsd:enumeration value="LR_E30_8x2M"/>
      <xsd:enumeration value="LR_E3_34M"/>
      <xsd:enumeration value="LR_E4_140M"/>
      <xsd:enumeration value="LR_ESCON"/>
      <xsd:enumeration value="LR_Ethernet"/>
      <xsd:enumeration value="LR_ETR"/>
      <xsd:enumeration value="LR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_FC_12_133M"/>
      <xsd:enumeration value="LR_FC_25_266M"/>
      <xsd:enumeration value="LR_FC_50_531M"/>
      <xsd:enumeration value="LR_FC_100_1063M"/>
      <xsd:enumeration value="LR_FDDI"/>
      <xsd:enumeration value="LR_FICON"/>
      <xsd:enumeration value="LR_FR_IF"/>
      <xsd:enumeration value="LR_FR_PVC"/>
      <xsd:enumeration value="LR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_ISDN_BRI"/>
      <xsd:enumeration value="LR_Line_OC1_STS1_and_MS_STM0"/>
      <xsd:enumeration value="LR_Line_OC3_STS3_and_MS_STM1"/>
      <xsd:enumeration value="LR_Line_OC12_STS12_and_MS_STM4"/>
      <xsd:enumeration value="LR_Line_OC24_STS24_and_MS_STM8"/>
      <xsd:enumeration value="LR_Line_OC48_STS48_and_MS_STM16"/>
      <xsd:enumeration value="LR_Line_OC192_STS192_and_MS_STM64"/>
      <xsd:enumeration value="LR_Line_OC768_STS768_and_MS_STM256"/>
      <xsd:enumeration value="LR_Low_Order_TU3_VC3"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3"/>
      <xsd:enumeration value="LR_STS3c_and_AU4_VC4"/>
      <xsd:enumeration value="LR_STS4c_and_VC3_4c"/>
      <xsd:enumeration value="LR_STS5c_and_VC3_5c"/>
      <xsd:enumeration value="LR_STS6c_and_VC4_2c"/>
      <xsd:enumeration value="LR_STS7c_and_VC3_7c"/>
      <xsd:enumeration value="LR_STS8c_and_VC3_8c"/>
      <xsd:enumeration value="LR_STS9c_and_VC4_3c"/>
      <xsd:enumeration value="LR_Optical_Channel"/>
      <xsd:enumeration value="LR_Optical_Multiplex_Section"/>
      <xsd:enumeration value="LR_OPTICAL_SECTION"/>
      <xsd:enumeration value="LR_Optical_Transmission_Section"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_PHYSICAL_MEDIALESS"/>
      <xsd:enumeration value="LR_PHYSICAL_OPTICAL"/>
      <xsd:enumeration value="LR_POTS"/>
      <xsd:enumeration value="LR_Section_OC1_STS1_and_RS_STM0"/>
      <xsd:enumeration value="LR_Section_OC3_STS3_and_RS_STM1"/>
      <xsd:enumeration value="LR_Section_OC12_STS12_and_RS_STM4"/>
      <xsd:enumeration value="LR_Section_OC24_STS24_and_RS_STM8"/>
      <xsd:enumeration value="LR_Section_OC48_STS48_and_RS_STM16"/>
      <xsd:enumeration value="LR_Section_OC192_STS192_and_RS_STM64"/>
      <xsd:enumeration value="LR_Section_OC768_STS768_and_RS_STM256"/>
      <xsd:enumeration value="LR_STS1_and_AU3_High_Order_VC3"/>
      <xsd:enumeration value="LR_STS2c_and_VC3_2c"/>
      <xsd:enumeration value="LR_STS10c_and_VC3_10c"/>
      <xsd:enumeration value="LR_STS11c_and_VC3_11c"/>
      <xsd:enumeration value="LR_STS12c_and_VC4_4c"/>
      <xsd:enumeration value="LR_STS13c_and_VC3_13c"/>
      <xsd:enumeration value="LR_STS14c_and_VC3_14c"/>
      <xsd:enumeration value="LR_STS15c_and_VC4_5c"/>
      <xsd:enumeration value="LR_STS16c_and_VC3_16c"/>
      <xsd:enumeration value="LR_STS17c_and_VC3_17c"/>
      <xsd:enumeration value="LR_STS18c_and_VC4_6c"/>
      <xsd:enumeration value="LR_STS19c_and_VC3_19c"/>
      <xsd:enumeration value="LR_STS20c_and_VC3_20c"/>
      <xsd:enumeration value="LR_STS21c_and_VC4_7c"/>
      <xsd:enumeration value="LR_STS22c_and_VC3_22c"/>
      <xsd:enumeration value="LR_STS23c_and_VC3_23c"/>
      <xsd:enumeration value="LR_STS24c_and_VC4_8c"/>
      <xsd:enumeration value="LR_STS25c_and_VC3_25c"/>
      <xsd:enumeration value="LR_STS26c_and_VC3_26c"/>
      <xsd:enumeration value="LR_STS27c_and_VC4_9c"/>
      <xsd:enumeration value="LR_STS28c_and_VC3_28c"/>
      <xsd:enumeration value="LR_STS29c_and_VC3_29c"/>
      <xsd:enumeration value="LR_STS30c_and_VC4_10c"/>
      <xsd:enumeration value="LR_STS31c_and_VC3_31c"/>
      <xsd:enumeration value="LR_STS32c_and_VC3_32c"/>
      <xsd:enumeration value="LR_STS33c_and_VC4_11c"/>
      <xsd:enumeration value="LR_STS34c_and_VC3_34c"/>
      <xsd:enumeration value="LR_STS35c_and_VC3_35c"/>
      <xsd:enumeration value="LR_STS36c_and_VC4_12c"/>
      <xsd:enumeration value="LR_STS37c_and_VC3_37c"/>
      <xsd:enumeration value="LR_STS38c_and_VC3_38c"/>
      <xsd:enumeration value="LR_STS39c_and_VC4_13c"/>
      <xsd:enumeration value="LR_STS40c_and_VC3_40c"/>
      <xsd:enumeration value="LR_STS41c_and_VC3_41c"/>
      <xsd:enumeration value="LR_STS42c_and_VC4_14c"/>
      <xsd:enumeration value="LR_STS43c_and_VC3_43c"/>
      <xsd:enumeration value="LR_STS44c_and_VC3_44c"/>
      <xsd:enumeration value="LR_STS45c_and_VC4_15c"/>
      <xsd:enumeration value="LR_STS46c_and_VC3_46c"/>
      <xsd:enumeration value="LR_STS47c_and_VC3_47c"/>
      <xsd:enumeration value="LR_STS48c_and_VC4_16c"/>
      <xsd:enumeration value="LR_STS49c_and_VC3_49c"/>
      <xsd:enumeration value="LR_STS50c_and_VC3_50c"/>
      <xsd:enumeration value="LR_STS51c_and_VC4_17c"/>
      <xsd:enumeration value="LR_STS52c_and_VC3_52c"/>
      <xsd:enumeration value="LR_STS53c_and_VC3_53c"/>
      <xsd:enumeration value="LR_STS54c_and_VC4_18c"/>
      <xsd:enumeration value="LR_STS55c_and_VC3_55c"/>
      <xsd:enumeration value="LR_STS56c_and_VC3_56c"/>
      <xsd:enumeration value="LR_STS57c_and_VC4_19c"/>
      <xsd:enumeration value="LR_STS58c_and_VC3_58c"/>
      <xsd:enumeration value="LR_STS59c_and_VC3_59c"/>
      <xsd:enumeration value="LR_STS60c_and_VC4_20c"/>
      <xsd:enumeration value="LR_STS61c_and_VC3_61c"/>
      <xsd:enumeration value="LR_STS62c_and_VC3_62c"/>
      <xsd:enumeration value="LR_STS63c_and_VC4_21c"/>
      <xsd:enumeration value="LR_STS64c_and_VC3_64c"/>
      <xsd:enumeration value="LR_STS65c_and_VC3_65c"/>
      <xsd:enumeration value="LR_STS66c_and_VC4_22c"/>
      <xsd:enumeration value="LR_STS67c_and_VC3_67c"/>
      <xsd:enumeration value="LR_STS68c_and_VC3_68c"/>
      <xsd:enumeration value="LR_STS69c_and_VC4_23c"/>
      <xsd:enumeration value="LR_STS70c_and_VC3_70c"/>
      <xsd:enumeration value="LR_STS71c_and_VC3_71c"/>
      <xsd:enumeration value="LR_STS72c_and_VC4_24c"/>
      <xsd:enumeration value="LR_STS73c_and_VC3_73c"/>
      <xsd:enumeration value="LR_STS74c_and_VC3_74c"/>
      <xsd:enumeration value="LR_STS75c_and_VC4_25c"/>
      <xsd:enumeration value="LR_STS76c_and_VC3_76c"/>
      <xsd:enumeration value="LR_STS77c_and_VC3_77c"/>
      <xsd:enumeration value="LR_STS78c_and_VC4_26c"/>
      <xsd:enumeration value="LR_STS79c_and_VC3_79c"/>
      <xsd:enumeration value="LR_STS80c_and_VC3_80c"/>
      <xsd:enumeration value="LR_STS81c_and_VC4_27c"/>
      <xsd:enumeration value="LR_STS82c_and_VC3_82c"/>
      <xsd:enumeration value="LR_STS83c_and_VC3_83c"/>
      <xsd:enumeration value="LR_STS84c_and_VC4_28c"/>
      <xsd:enumeration value="LR_STS85c_and_VC3_85c"/>
      <xsd:enumeration value="LR_STS86c_and_VC3_86c"/>
      <xsd:enumeration value="LR_STS87c_and_VC4_29c"/>
      <xsd:enumeration value="LR_STS88c_and_VC3_88c"/>
      <xsd:enumeration value="LR_STS89c_and_VC3_89c"/>
      <xsd:enumeration value="LR_STS90c_and_VC4_30c"/>
      <xsd:enumeration value="LR_STS91c_and_VC3_91c"/>
      <xsd:enumeration value="LR_STS92c_and_VC3_92c"/>
      <xsd:enumeration value="LR_STS93c_and_VC4_31c"/>
      <xsd:enumeration value="LR_STS94c_and_VC3_94c"/>
      <xsd:enumeration value="LR_STS95c_and_VC3_95c"/>
      <xsd:enumeration value="LR_STS96c_and_VC4_32c"/>
      <xsd:enumeration value="LR_STS97c_and_VC3_97c"/>
      <xsd:enumeration value="LR_STS98c_and_VC3_98c"/>
      <xsd:enumeration value="LR_STS99c_and_VC4_33c"/>
      <xsd:enumeration value="LR_STS100c_and_VC3_100c"/>
      <xsd:enumeration value="LR_STS101c_and_VC3_101c"/>
      <xsd:enumeration value="LR_STS102c_and_VC4_34c"/>
      <xsd:enumeration value="LR_STS103c_and_VC3_103c"/>
      <xsd:enumeration value="LR_STS104c_and_VC3_104c"/>
      <xsd:enumeration value="LR_STS105c_and_VC4_35c"/>
      <xsd:enumeration value="LR_STS106c_and_VC3_106c"/>
      <xsd:enumeration value="LR_STS107c_and_VC3_107c"/>
      <xsd:enumeration value="LR_STS108c_and_VC4_36c"/>
      <xsd:enumeration value="LR_STS109c_and_VC3_109c"/>
      <xsd:enumeration value="LR_STS110c_and_VC3_110c"/>
      <xsd:enumeration value="LR_STS111c_and_VC4_37c"/>
      <xsd:enumeration value="LR_STS112c_and_VC3_112c"/>
      <xsd:enumeration value="LR_STS113c_and_VC3_113c"/>
      <xsd:enumeration value="LR_STS114c_and_VC4_38c"/>
      <xsd:enumeration value="LR_STS115c_and_VC3_115c"/>
      <xsd:enumeration value="LR_STS116c_and_VC3_116c"/>
      <xsd:enumeration value="LR_STS117c_and_VC4_39c"/>
      <xsd:enumeration value="LR_STS118c_and_VC3_118c"/>
      <xsd:enumeration value="LR_STS119c_and_VC3_119c"/>
      <xsd:enumeration value="LR_STS120c_and_VC4_40c"/>
      <xsd:enumeration value="LR_STS121c_and_VC3_121c"/>
      <xsd:enumeration value="LR_STS122c_and_VC3_122c"/>
      <xsd:enumeration value="LR_STS123c_and_VC4_41c"/>
      <xsd:enumeration value="LR_STS124c_and_VC3_124c"/>
      <xsd:enumeration value="LR_STS125c_and_VC3_125c"/>
      <xsd:enumeration value="LR_STS126c_and_VC4_42c"/>
      <xsd:enumeration value="LR_STS127c_and_VC3_127c"/>
      <xsd:enumeration value="LR_STS128c_and_VC3_128c"/>
      <xsd:enumeration value="LR_STS129c_and_VC4_43c"/>
      <xsd:enumeration value="LR_STS130c_and_VC3_130c"/>
      <xsd:enumeration value="LR_STS131c_and_VC3_131c"/>
      <xsd:enumeration value="LR_STS132c_and_VC4_44c"/>
      <xsd:enumeration value="LR_STS133c_and_VC3_133c"/>
      <xsd:enumeration value="LR_STS134c_and_VC3_134c"/>
      <xsd:enumeration value="LR_STS135c_and_VC4_45c"/>
      <xsd:enumeration value="LR_STS136c_and_VC3_136c"/>
      <xsd:enumeration value="LR_STS137c_and_VC3_137c"/>
      <xsd:enumeration value="LR_STS138c_and_VC4_46c"/>
      <xsd:enumeration value="LR_STS139c_and_VC3_139c"/>
      <xsd:enumeration value="LR_STS140c_and_VC3_140c"/>
      <xsd:enumeration value="LR_STS141c_and_VC4_47c"/>
      <xsd:enumeration value="LR_STS142c_and_VC3_142c"/>
      <xsd:enumeration value="LR_STS143c_and_VC3_143c"/>
      <xsd:enumeration value="LR_STS144c_and_VC4_48c"/>
      <xsd:enumeration value="LR_STS145c_and_VC3_145c"/>
      <xsd:enumeration value="LR_STS146c_and_VC3_146c"/>
      <xsd:enumeration value="LR_STS147c_and_VC4_49c"/>
      <xsd:enumeration value="LR_STS148c_and_VC3_148c"/>
      <xsd:enumeration value="LR_STS149c_and_VC3_149c"/>
      <xsd:enumeration value="LR_STS150c_and_VC4_50c"/>
      <xsd:enumeration value="LR_STS151c_and_VC3_151c"/>
      <xsd:enumeration value="LR_STS152c_and_VC3_152c"/>
      <xsd:enumeration value="LR_STS153c_and_VC4_51c"/>
      <xsd:enumeration value="LR_STS154c_and_VC3_154c"/>
      <xsd:enumeration value="LR_STS155c_and_VC3_155c"/>
      <xsd:enumeration value="LR_STS156c_and_VC4_52c"/>
      <xsd:enumeration value="LR_STS157c_and_VC3_157c"/>
      <xsd:enumeration value="LR_STS158c_and_VC3_158c"/>
      <xsd:enumeration value="LR_STS159c_and_VC4_53c"/>
      <xsd:enumeration value="LR_STS160c_and_VC3_160c"/>
      <xsd:enumeration value="LR_STS161c_and_VC3_161c"/>
      <xsd:enumeration value="LR_STS162c_and_VC4_54c"/>
      <xsd:enumeration value="LR_STS163c_and_VC3_163c"/>
      <xsd:enumeration value="LR_STS164c_and_VC3_164c"/>
      <xsd:enumeration value="LR_STS165c_and_VC4_55c"/>
      <xsd:enumeration value="LR_STS166c_and_VC3_166c"/>
      <xsd:enumeration value="LR_STS167c_and_VC3_167c"/>
      <xsd:enumeration value="LR_STS168c_and_VC4_56c"/>
      <xsd:enumeration value="LR_STS169c_and_VC3_169c"/>
      <xsd:enumeration value="LR_STS170c_and_VC3_170c"/>
      <xsd:enumeration value="LR_STS171c_and_VC4_57c"/>
      <xsd:enumeration value="LR_STS172c_and_VC3_172c"/>
      <xsd:enumeration value="LR_STS173c_and_VC3_173c"/>
      <xsd:enumeration value="LR_STS174c_and_VC4_58c"/>
      <xsd:enumeration value="LR_STS175c_and_VC3_175c"/>
      <xsd:enumeration value="LR_STS176c_and_VC3_176c"/>
      <xsd:enumeration value="LR_STS177c_and_VC4_59c"/>
      <xsd:enumeration value="LR_STS178c_and_VC3_178c"/>
      <xsd:enumeration value="LR_STS179c_and_VC3_179c"/>
      <xsd:enumeration value="LR_STS180c_and_VC4_60c"/>
      <xsd:enumeration value="LR_STS181c_and_VC3_181c"/>
      <xsd:enumeration value="LR_STS182c_and_VC3_182c"/>
      <xsd:enumeration value="LR_STS183c_and_VC4_61c"/>
      <xsd:enumeration value="LR_STS184c_and_VC3_184c"/>
      <xsd:enumeration value="LR_STS185c_and_VC3_185c"/>
      <xsd:enumeration value="LR_STS186c_and_VC4_62c"/>
      <xsd:enumeration value="LR_STS187c_and_VC3_187c"/>
      <xsd:enumeration value="LR_STS188c_and_VC3_188c"/>
      <xsd:enumeration value="LR_STS189c_and_VC4_63c"/>
      <xsd:enumeration value="LR_STS190c_and_VC3_190c"/>
      <xsd:enumeration value="LR_STS191c_and_VC3_191c"/>
      <xsd:enumeration value="LR_STS192c_and_VC4_64c"/>
      <xsd:enumeration value="LR_STS768c_and_VC4_256c"/>
      <xsd:enumeration value="LR_T1_and_DS1_1_5M"/>
      <xsd:enumeration value="LR_T2_and_DS2_6M"/>
      <xsd:enumeration value="LR_T3_and_DS3_45M"/>
      <xsd:enumeration value="LR_VT1_5_and_TU11_VC11"/>
      <xsd:enumeration value="LR_VT2_and_TU12_VC12"/>
      <xsd:enumeration value="LR_VT6_and_TU2_VC2"/>
      <!--The ones below were added in the MTOSI 2.1 release-->
      <xsd:enumeration value="LR_LAG_Fragment"/>
      <xsd:enumeration value="LR_DSR_10Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2.5Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10.7Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_11.1Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_LAN"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_WAN"/>
      <xsd:enumeration value="LR_DSR_40Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OTU2e"/>
      <xsd:enumeration value="LR_DSR_OTU3e1"/>
      <xsd:enumeration value="LR_DSR_OTU3e2"/>
      <xsd:enumeration value="LR_DSR_OTU4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_0"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_Flexible"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_4"/>
      <xsd:enumeration value="LR_Optical_Physical_Section"/>
      <xsd:enumeration value="LR_Optical_Physical_Section_Multilane"/>
      <xsd:enumeration value="LR_Section_OC3072_STS3072_and_RS_STM1024"/>
      <xsd:enumeration value="LR_Line_OC3072_STS3072_and_MS_STM1024"/>
      <xsd:enumeration value="LR_DSR_OC3072_and_STM1024"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=17</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/prc/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/prc/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP probable causes.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=====================-->
  <xsd:complexType name="ProbableCauseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The MTOSI alarm probable causes. For details refer to
                    the supporting document: ProbableCauses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element default="false" minOccurs="0" name="ru" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>This boolean parameter stands
                        for Remote Unit (RU). It indicates the location
                        of the network resource the alarm probable cause
                        is associated with. The default setting (false)
                        is for an alarm detected with a local network
                        resource. And, the value is "true"
                        when the alarm is associated with a remote
                        network resource.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element default="false" minOccurs="0" name="contra" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>This is a boolean parameter used
                        to distinguish the direction of the signal
                        related alarm. The default setting (false) is
                        for an alarm detected on the signal that is
                        related to the sink atomic function. And, the
                        value is "true" for an alarm detected
                        on the signal that is related to the source
                        atomic function.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="1" name="probableCause" type="tns:ProbableCauseEnumType"/>
    </xsd:sequence>
    <xsd:attribute name="extension" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          <p>This is used to capture the extended value</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="qualifier" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          <p>This is used with other attributes; objectName,
                        layerRate, and probableCause to uniquely
                        identify an alarm</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="ProbableCauseEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="UNIDENTIFIED"/>
      <xsd:enumeration value="AIS"/>
      <xsd:enumeration value="AMS"/>
      <xsd:enumeration value="ATPC_FAIL"/>
      <xsd:enumeration value="AU-AIS"/>
      <xsd:enumeration value="BER_SD"/>
      <xsd:enumeration value="BER_SF"/>
      <xsd:enumeration value="BLOCKED_FE"/>
      <xsd:enumeration value="CFG_ABORT"/>
      <xsd:enumeration value="CFG_ABORT_FE"/>
      <xsd:enumeration value="DCC_FAILURE"/>
      <xsd:enumeration value="DEMODULATION_FAIL"/>
      <xsd:enumeration value="EMS"/>
      <xsd:enumeration value="EMS_ALM_LOSS"/>
      <xsd:enumeration value="EMS_LIFECYCLE_LOSS"/>
      <xsd:enumeration value="EMS_ALM_AND_LIFECYCLE_LOSS"/>
      <xsd:enumeration value="EQPT"/>
      <xsd:enumeration value="ENV"/>
      <xsd:enumeration value="FF"/>
      <xsd:enumeration value="FOP_APS"/>
      <xsd:enumeration value="INSUFF_LINKS"/>
      <xsd:enumeration value="INSUFF_LINKS_FE"/>
      <xsd:enumeration value="LCD"/>
      <xsd:enumeration value="LIF"/>
      <xsd:enumeration value="LOA"/>
      <xsd:enumeration value="LOC"/>
      <xsd:enumeration value="LODS"/>
      <xsd:enumeration value="LOF"/>
      <xsd:enumeration value="LOM"/>
      <xsd:enumeration value="LOP"/>
      <xsd:enumeration value="LOPC"/>
      <xsd:enumeration value="LOS"/>
      <xsd:enumeration value="LOTC"/>
      <xsd:enumeration value="MODULATION_FAIL"/>
      <xsd:enumeration value="MS-AIS"/>
      <xsd:enumeration value="OS"/>
      <xsd:enumeration value="OS_ALM_LOSS"/>
      <xsd:enumeration value="OS_LIFECYCLE_LOSS"/>
      <xsd:enumeration value="OS_ALM_AND_LIFECYCLE_LOSS"/>
      <xsd:enumeration value="OSC-AIS"/>
      <xsd:enumeration value="OSC_BER_SF"/>
      <xsd:enumeration value="OSC_FERF"/>
      <xsd:enumeration value="OSC_LOF"/>
      <xsd:enumeration value="OSC_LOS"/>
      <xsd:enumeration value="OSC_SD"/>
      <xsd:enumeration value="PLM"/>
      <xsd:enumeration value="RAI"/>
      <xsd:enumeration value="RX_FAIL"/>
      <xsd:enumeration value="RX_MIS_CONNECT"/>
      <xsd:enumeration value="RX_UNUSABLE_FE"/>
      <xsd:enumeration value="SECURITY_VIOLATION"/>
      <xsd:enumeration value="SQL"/>
      <xsd:enumeration value="SSF"/>
      <xsd:enumeration value="STARTUP_FE"/>
      <xsd:enumeration value="TCF"/>
      <xsd:enumeration value="TCFE"/>
      <xsd:enumeration value="TCFI"/>
      <xsd:enumeration value="TIM"/>
      <xsd:enumeration value="TIMING_SYNCH"/>
      <xsd:enumeration value="TSD"/>
      <xsd:enumeration value="TSF"/>
      <xsd:enumeration value="TU-AIS"/>
      <xsd:enumeration value="TX_DEGRADE"/>
      <xsd:enumeration value="TX_FAIL"/>
      <xsd:enumeration value="TX_MIS_CONNECT"/>
      <xsd:enumeration value="TX_UNUSABLE_FE"/>
      <xsd:enumeration value="UAT"/>
      <xsd:enumeration value="UNEQ"/>
      <xsd:enumeration value="VC-AIS"/>
      <xsd:enumeration value="VC-RDI"/>
      <xsd:enumeration value="VP-AIS"/>
      <xsd:enumeration value="VP-RDI"/>
      <xsd:enumeration value="XPIC_FAIL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=====================-->
  <xsd:complexType name="ProbableCauseListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of MTOSI alarm probable causes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="prc" type="tns:ProbableCauseType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common
                type definitions used in some the mTOP XML Network
                Resource Assurance objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:simpleType name="AcknowledgeIndicationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>AcknowledgeIndicationType describes the event
                    acknowledge state.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ACKNOWLEDGED">
        <xsd:annotation>
          <xsd:documentation>provided in case of manual or
                        auto acknowledgement</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNACKNOWLEDGED">
        <xsd:annotation>
          <xsd:documentation>provided if the event has not
                        been acknowledged but the OS supports
                        acknowledgement for this event or in the case
                        that the alarm has been previously acknowledged
                        and then unacknowledged</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NOT_APPLICABLE">
        <xsd:annotation>
          <xsd:documentation>provided in case the OS does not
                        support acknowledgement for this event or does
                        not support acknowledgement at all</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=====================-->
  <xsd:complexType name="AssignedSeverityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The assigned severity is allocated to a probable
                    cause using the alarm severity assignment profile.</p>
        <p>The identified probable cause should be raised with
                    the assigned severity.</p>
        <p>The assignment of severities is extended beyond
                    PerceivedSeverity to cover the case where:</p>
        <p>- no alarm should be raised: "NOT_ALARMED"</p>
        <p>- the EMS/NE is free to make a choice based upon its
                    local criteria: "FREE_CHOICE"</p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:AssignedSeverityEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="AssignedSeverityEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enum values of a probable cause.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="CRITICAL"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="NOT_ALARMED"/>
      <xsd:enumeration value="FREE_CHOICE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentProtectionGroupTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The EquipmentProtectionGroupType with MTOSI minor
                    version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentProtectionGroupTypeEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentProtectionGroupTypeEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The equipment protection group type is a string that
                    identifies the type of equipment protection. The
                    string can take on the following value:
                    "M_FOR_N." M:N equipment protection means
                    that M pieces of equipment protect N pieces of equipment.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="M_FOR_N"/>
      <xsd:enumeration value="M:N"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentSwitchReasonType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The equipment switch reason reflects the reason why a
                    switch occurred.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentSwitchReasonEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentSwitchReasonEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>EswitchReason is a string that can take           the
                    following values:</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="NOT_APPLICABLE">
        <xsd:annotation>
          <xsd:documentation>
            <p>is used if a more precise value is not available</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FAILURE">
        <xsd:annotation>
          <xsd:documentation>
            <p>is used when an instance of equipment has failed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MANUAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>indicates a switch that was requested by the
                            operator          and includes forced switches</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NativeProbableCauseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Represents the native probable cause.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PerceivedSeverityListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of PerceivedSeverityType elements.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="perceivedSeverity" type="tns:PerceivedSeverityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PerceivedSeverityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The PerceivedSeverity values are consistent with
                    ITU-T X.733 definitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="CRITICAL"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="CLEARED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProbableCauseQualifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Represents the probable cause qualifier and shall be
                    present if the probable cause</p>
        <p>attribute is not sufficient to uniquely identify an alarm.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProposedRepairActionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Element of ProposedRepairActionListType.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProposedRepairActionListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of ProposedRepairActionType elements.</p>
        The
                optional "X.733::ProposedRepairActions"
                parameter uses this type. When present in an alarm
                notification, it indicates if the cause is known and the
                system being managed can suggest one or more solutions
                (such as switch in standby equipment, retry, replace
                media). This is consistent with the ITU-T X.733
                definition.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="proposedRepairAction" type="tns:ProposedRepairActionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionCommandType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This type identifies the possible protection switch
                    commands. See ITU-T Recommendation G.841 for definitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CLEAR"/>
      <xsd:enumeration value="LOCKOUT"/>
      <xsd:enumeration value="FORCED_SWITCH"/>
      <xsd:enumeration value="MANUAL_SWITCH"/>
      <xsd:enumeration value="EXERCISER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionGroupTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionGroupType with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionGroupTypeEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionGroupTypeEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection group type identifies the type of the
                    protection Group.</p>
        <p>It should be noted that although the term MSP was
                    chosen as the original specific protection scheme to
                    which the related behaviour applied was Multiplex
                    Section Protection, the label is now more generally
                    applied to any 1+1 or 1:N Trail protection scheme</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="MSP_1_PLUS_1"/>
      <xsd:enumeration value="MSP_1_FOR_N"/>
      <xsd:enumeration value="2_FIBER_BLSR"/>
      <xsd:enumeration value="4_FIBER_BLSR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionType with MTOSI minor version and
                    vendor extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionTypeEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionTypeEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection type identifies whether a protection
                    switch is an MS protection switch or an SNCP
                    protection switch.  It should be noted that although
                    the term MSP was chosen as the original specific
                    protection scheme to which the related behaviour
                    applied was Multiplex Section Protection, the label
                    is now more generally applied to any 1+1 or 1:N
                    Trail protection scheme.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MSP_APS"/>
      <xsd:enumeration value="SNCP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ReversionModeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reversion mode is used to indicate whether, after
                    repair of a failed resource, an additional switch
                    should be made to revert to the preferred resource.
                    Revertive modes may require a wait to restore (WTR)
                    time setting.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="NON_REVERTIVE"/>
      <xsd:enumeration value="REVERTIVE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ServiceAffectingType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the impact of a fault on monitored entities</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>The OS cannot determine if the
                        condition affects service or not</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SERVICE_AFFECTING">
        <xsd:annotation>
          <xsd:documentation>The OS determines that the
                        condition affects service</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NON_SERVICE_AFFECTING">
        <xsd:annotation>
          <xsd:documentation>TheOS determines that the
                        condition does not affect service</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="SpecificProblemListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of SpecificProblemType elements. The optional
                    "X.733::SpecificProblems" parameter uses
                    that type. When present in an alarm notification, it
                    identifies further refinements to the probable cause
                    of the alarm. This is consistent with the ITU-T
                    X.733 definition.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="specificProblem" type="tns:SpecificProblemType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SpecificProblemType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Element of SpecificProblemListType.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SwitchReasonType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The switch reason reflects the reason why a switch occurred.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_APPLICABLE">
        <xsd:annotation>
          <xsd:documentation>Value used upon retrieval of
                        switch data for non-revertive groups, if a more
                        precise value is not available</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="RESTORED">
        <xsd:annotation>
          <xsd:documentation>used for revertive groups to
                        indicate a return to the normal state</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIGNAL_FAIL">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIGNAL_MISMATCH">
        <xsd:annotation>
          <xsd:documentation>Value used in the case the signal
                        is ok, but is identified as coming from an
                        incorrect source:
                        TRAIL_TRACE_IDENTIFIER_MISMATCH, Signal Label
                        Mismatch, etc</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIGNAL_DEGRADE">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="AUTOMATIC_SWITCH">
        <xsd:annotation>
          <xsd:documentation>Value used when the exact switch
                        reason is unknown, in retrievals of switch data
                        if a protection switch is currently active or in
                        protection switch notifications</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MANUAL">
        <xsd:annotation>
          <xsd:documentation>Value indicates a switch that was
                        requested by the operator and includes forced switches</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="G_774_3_APSfunctionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The G_774_3_APSfunction with MTOSI minor version and
                    vendor extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:G_774_3_APSfunctionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="G_774_3_APSfunctionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Indicates if the switching function is based on APS
                    standardized protocol or on a proprietary protocol.
                    "G.783" is set in case of K1/K2 based APS,
                    and "Legacy" is set in case of proprietary
                    protocol, as for radio equipment for example.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="G.783"/>
      <xsd:enumeration value="Legacy"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=8</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/tca/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:com="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:ei="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:pm="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:pmth="http://www.tmforum.org/mtop/nra/xsd/pmth/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/tca/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the ThresholdCrossingAlert event.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pmth/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=16"/>
  <!--================-->
  <xsd:element name="thresholdCrossingAlert" substitutionGroup="cei:commonEventInformation" type="tns:ThresholdCrossingAlertType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of the ThresholdCrossingAlert event.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="ThresholdCrossingAlertType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the ThresholdCrossingAlert event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ei:EventInformationType">
        <xsd:sequence>
          <xsd:element name="aliasNameList" type="gen:AliasNameListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the list of aliases for the
                                    object associated with the event.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isClearable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the event is clearable
                                    (or is itself a clear).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="perceivedSeverity" type="com:PerceivedSeverityType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the severity of the TCA.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="layerRate" type="lay:LayerRateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The layer which this alarm is
                                    relevant to.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="granularity" type="pm:PerformanceMonitoringGranularityType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The layer for which this alarm is relevant.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="pmParameterName" type="pm:PerformanceMonitoringParameterNameType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Carries the details of the threshold
                                    that has been crossed.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="pmLocation" type="pm:PerformanceMonitoringLocationType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Carries the details of the threshold
                                    that has been crossed.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="thresholdType" type="pmth:PerformanceMonitoringThresholdType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Carries the details of the threshold
                                    that has been crossed.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="thresholdValue" nillable="true" type="xsd:float">
            <xsd:annotation>
              <xsd:documentation>
                <p>Carries the details of the threshold
                                    that has been crossed, if known.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="thresholdUnit" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Carries the unit of measurement of
                                    the threshold that has been crossed.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="acknowledgeIndication" type="tns:AcknowledgeIndicationType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Carries the details of the threshold
                                    that has been crossed, if known.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isEdgePointRelated" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>TRUE if this event relates to a PTP
                                    that is an edge point or to a PGP
                                    that contains a PTP that is an edge
                                    point. FALSE otherwise; this field
                                    is optional in this case.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="AcknowledgeIndicationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the acknowledgement state of a notification.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EVENT_ACKNOWLEDGED"/>
      <xsd:enumeration value="EVENT_UNACKNOWLEDGED"/>
      <xsd:enumeration value="NA"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=15</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PM ParameterName XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:element name="pmParameterName" type="tns:PerformanceMonitoringParameterNameType"/>
  <!--=================-->
  <!--TODO Should this be changed to a structure like in layers, where all possibilites are listed?-->
  <xsd:simpleType name="PerformanceMonitoringParameterNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Holds the name of Performance Measurements. It has
                    been defined as a string to accommodate backward
                    compatibility and proprietary extension.</p>
        <p>For currently standardized values see Performance
                    Parameters.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringParameterNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PerformanceMonitoringParameterName</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmParameterName" type="tns:PerformanceMonitoringParameterNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="PerformanceMonitoringThresholdTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes threshold types (watermark levels) for TCA
                    parameters. The TWM_HIGH and TWM_HIGHEST types are
                    used for TCAs</p>
        <p>that are raised when the measured value goes above
                    the threshold. The TWM_LOW and TWM_LOWEST types are
                    used for TCAs that</p>
        <p>are raised when the measured value goes below the
                    threshold (only apply to gauges).</p>
        <p/>
        <p>When there is only one level of TCA trigger, only
                    TWM_HIGH and/or TWM_LOW are used. When there are two
                    levels of TCA triggers,</p>
        <p>TWM_HIGHEST and/or TWM_LOWEST are used in addition.</p>
        <p>See SD1-37 PM Threshold Types for information on how
                    water mark levels are used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TWM_HIGHEST"/>
      <xsd:enumeration value="TWM_HIGH"/>
      <xsd:enumeration value="TWM_LOW"/>
      <xsd:enumeration value="TWM_LOWEST"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringGranularityListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PMGranularity</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmGranularity" type="tns:PerformanceMonitoringGranularityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="PerformanceMonitoringGranularityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Count period (interval) for which PM data may be
                    collected (and subsequently retrieved).</p>
        <p>
          <br>The value is one of:</br>
          <br>"15min" (15 minute interval collection)</br>
          <br>"24h" (24 hour interval collection)</br>
          <br>"NA" (for current instantaneous measurements)</br>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="15min"/>
      <xsd:enumeration value="24h"/>
      <xsd:enumeration value="NA"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="PerformanceMonitoringIntervalStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The following string values, to indicate the
                    relationship of measurement value and measurement interval</p>
        <p>
          <br>The value is one of:</br>
          <br>PMIS_Valid - Valid data.</br>
          <br>PMIS_Incomplete - Data not available for the
                        complete interval.</br>
          <br>PMIS_Invalid - Data available but marked as
                        invalid for the interval (can not distinguish
                        incomplete measurements from invalid measurements.</br>
          <br>PMIS_Unavailable - No data available at all for
                        this interval.</br>
          <br>PMIS_ZeroSuppressed - Zero-suppressed intervals.</br>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PMIS_Valid"/>
      <xsd:enumeration value="PMIS_Incomplete"/>
      <xsd:enumeration value="PMIS_Invalid"/>
      <xsd:enumeration value="PMIS_Unavailable"/>
      <xsd:enumeration value="PMIS_ZeroSuppressed"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringLocationListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PMLocation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmLocation" type="tns:PerformanceMonitoringLocationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="PerformanceMonitoringLocationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specification of PM location. For further details,
                    see supporting documentation: Location Identification).</p>
        <p>PM parameters may relate to measurements taken on
                    receive or transmit traffic either at the named TP
                    (PML_NEAR_END_Rx/Tx) or at the TP at the far end of
                    the trail (circuit/path) connected to the named TP
                    (PML_FAR_END_Rx/Tx). Alternatively, the PM
                    parameters may be bidirectional (PML_BIDIRECTIONAL)
                    e.g. resulting from a second by second summation and
                    evaluation of both far and near TPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PML_NEAR_END_Rx"/>
      <xsd:enumeration value="PML_FAR_END_Rx"/>
      <xsd:enumeration value="PML_FAR_ENDTypex"/>
      <xsd:enumeration value="PML_BIDIRECTIONAL"/>
      <xsd:enumeration value="PML_CONTRA_NEAR_END_Rx"/>
      <xsd:enumeration value="PML_CONTRA_FAR_END_Rx"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="HoldingTimeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type contains the minimum time the 24h PM
                    data records and 15min PM data records can hold the
                    data. This minimum time refers to the time after the
                    particular collection bins are closed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="storeTime24hr"/>
      <xsd:enumeration value="storeTime15min"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="TriggerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This type is used to indicate whether a threshold
                    type shall trigger a “raise” or a “clear” TCA</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="raise"/>
      <xsd:enumeration value="clear"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=16</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/pmth/v1" version="1.0" xmlns:pm="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/pmth/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PM Thrhold XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=15"/>
  <!--=================-->
  <xsd:element name="pmThreshold" type="tns:PerformanceMonitoringThresholdType"/>
  <!--=================-->
  <xsd:complexType name="PerformanceMonitoringThresholdType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This structure represents a Performance Monitoring
                    Threshold.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="thresholdType" nillable="true" type="pm:PerformanceMonitoringThresholdTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the type of threshold value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="trigger" nillable="true" type="pm:TriggerType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Indicates if the threshold triggers an raise
                            or clear alert</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="thresholdValue" nillable="true" type="xsd:float">
        <xsd:annotation>
          <xsd:documentation>
            <p>Threshold value (float used to incorporate
                            gauge PM parameters).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="thresholdUnit" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>Free format string describing the units for
                            the threshold value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringThresholdListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PM Thresholds</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmThreshold" type="tns:PerformanceMonitoringThresholdType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=5</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/eps/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:com="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/eps/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the Equipment Protection Switch event.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer/NotificationConsumerHttp?xsd=2"/>
  <!--================-->
  <xsd:element name="equipmentProtectionSwitch" substitutionGroup="cei:commonEventInformation" type="tns:EquipmentProtectionSwitchType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of the Equipment Protection
                    Switch event.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="EquipmentProtectionSwitchType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the EquipmentProtectionSwitch event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cei:CommonEventInformationType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="osTime" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:documentation>
                <p>The time at which the event was
                                    reported by the OS (EMS).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="protectionType" type="com:EquipmentProtectionGroupTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The type of the equipment protection.
                                    If omitted, M:N is assumed.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="switchReason" type="com:EquipmentSwitchReasonType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The reason the switch occurred.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="epgRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute represents the name of
                                    the Equipment Protection Group (EPG)
                                    emitting the switch.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="protectedEquipmentRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute represents the name of
                                    the Equipment being protected when
                                    the switch occurred.
                                    For an M:N group, this attribute
                                    always identifies the worker
                                    equipment instance for which the
                                    switch occurred.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="switchAwayFromEquipmentRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute represents the name of
                                    the Equipment being switched away from.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="switchToEquipmentRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute represents the name of
                                    the Equipment that is switched to.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="EquipmentProtectionSwitchListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of EquipmentProtectionSwitch events.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="equipmentProtectionSwitch" type="tns:EquipmentProtectionSwitchType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer</con:endpoint></con:endpoints><con:operation isOneWay="false" action="notify" name="notify" bindingOperationName="notify" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9009/NotificationConsumer</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/cei/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:notify>
         <v11:topic>?</v11:topic>
         <v11:message>
            <!--1 or more repetitions:-->
            <v12:commonEventInformation>
               <!--Optional:-->
               <v12:notificationId>?</v12:notificationId>
               <!--Optional:-->
               <v12:sourceTime>?</v12:sourceTime>
               <!--Optional:-->
               <v12:vendorExtensions>
                  <!--You may enter ANY elements at this point-->
               </v12:vendorExtensions>
            </v12:commonEventInformation>
         </v11:message>
      </v11:notify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="notify"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="NotificationProducerSoapHttpBinding" type="wsdl" bindingName="{http://www.tmforum.org/mtop/fmw/wsdl/notp/v1-0}NotificationProducerSoapHttpBinding" soapVersion="1_1" anonymous="optional" definition="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp.wsdl?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp.wsdl?WSDL"><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp.wsdl?WSDL</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-NotificationProducerV1-0" targetNamespace="http://www.tmforum.org/mtop/fmw/wsdl/notp/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/wsdl/notp/v1-0" xmlns:WL5G3N2="http://schemas.xmlsoap.org/wsdl/soap/">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?wsdl=2" namespace="http://www.tmforum.org/mtop/fmw/wsdl/notp/v1-0"/>
  <WL5G3N0:documentation>DDP: Framework
    Module: NotificationProducer Service Interface WSDL HTTP Module
    Description: This module contains all the mTOP NotificationProducer Service Interface WSDL SOAP/HTTP binding definitions based on an RPC style port type (interface).
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:binding name="NotificationProducerSoapHttpBinding" type="WL5G3N1:NotificationProducer">
    <WL5G3N0:documentation>SOAP HTTP binding definitions of the operations of the NotificationProducer_RPC portType (interface)</WL5G3N0:documentation>
    <WL5G3N2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <WL5G3N0:operation name="subscribe">
      <WL5G3N2:operation soapAction="subscribe" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:subscribeRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:subscribeResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="subscribeException">
        <WL5G3N2:fault name="subscribeException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="unsubscribe">
      <WL5G3N2:operation soapAction="unsubscribe" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:unsubscribeRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:unsubscribeResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="unsubscribeException">
        <WL5G3N2:fault name="unsubscribeException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
  </WL5G3N0:binding>
  <WL5G3N0:service name="NotificationProducerHttp">
    <WL5G3N0:port binding="WL5G3N1:NotificationProducerSoapHttpBinding" name="NotificationProducerSoapHttp">
      <WL5G3N0:documentation>Example of the NotificationProducer WSDL Service definition as a deployment example of this mTOP Service Interface. It is expected to be modified to match the specific deployment configuration in a service provider's CCV.</WL5G3N0:documentation>
      <WL5G3N2:address location="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp"/>
    </WL5G3N0:port>
  </WL5G3N0:service>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?wsdl=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-NotificationProducerV1-0" targetNamespace="http://www.tmforum.org/mtop/fmw/wsdl/notp/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/wsdl/notp/v1-0">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?wsdl=1" namespace="http://www.tmforum.org/mtop/fmw/wsdl/notp/v1-0"/>
  <WL5G3N0:documentation>DDP: Framework
    Module: NotificationProducer Service Interface WSDL JMS Module
    Description: This module contains all the mTOP NotificationProducer Service Interface WSDL portType definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:portType name="NotificationProducer">
    <WL5G3N0:documentation>The NotificationProducer porttype (interface)</WL5G3N0:documentation>
    <WL5G3N0:operation name="subscribe">
      <WL5G3N0:documentation>This is the subscribe operation used to receive subscriptions from consumers.</WL5G3N0:documentation>
      <WL5G3N0:input message="WL5G3N1:subscribeRequest"/>
      <WL5G3N0:output message="WL5G3N1:subscribeResponse"/>
      <WL5G3N0:fault message="WL5G3N1:subscribeException" name="subscribeException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="unsubscribe">
      <WL5G3N0:documentation>This is the unsubscribe operation used to receive subscription cancellations from consumers.</WL5G3N0:documentation>
      <WL5G3N0:input message="WL5G3N1:unsubscribeRequest"/>
      <WL5G3N0:output message="WL5G3N1:unsubscribeResponse"/>
      <WL5G3N0:fault message="WL5G3N1:unsubscribeException" name="unsubscribeException"/>
    </WL5G3N0:operation>
  </WL5G3N0:portType>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?wsdl=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-NotificationProducerV1-0" targetNamespace="http://www.tmforum.org/mtop/fmw/wsdl/notp/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:WL5G3N2="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1">
  <WL5G3N0:documentation>DDP: Framework
    Module: NotificationProducer Service Interface WSDL Messages Module
    Description: This module contains all the mTOP NotificationProducer Service Interface WSDL message definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:types>
    <xsd:schema xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:not="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/wsdl/notp/v1-0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=14"/>
    </xsd:schema>
  </WL5G3N0:types>
  <WL5G3N0:message name="subscribeRequest">
    <WL5G3N0:documentation>The Subscribe request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:subscribeRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="subscribeResponse">
    <WL5G3N0:documentation>The Subscribe response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:subscribeResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="subscribeException">
    <WL5G3N0:documentation>The Subscribe exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:subscribeException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="unsubscribeRequest">
    <WL5G3N0:documentation>The Unsubscribe request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:unsubscribeRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="unsubscribeResponse">
    <WL5G3N0:documentation>The Unsubscribe response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:unsubscribeResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="unsubscribeException">
    <WL5G3N0:documentation>The Unsubscribe exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:unsubscribeException" name="mtopBody"/>
  </WL5G3N0:message>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=14</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Messages Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the mTOP notification service
                interfaces messages.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=12"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=1"/>
  <!--************* OneControl MTOSI: Begin xsl insertions *************-->
  <!--Import substitution group elements of CommonEventInformation so that-->
  <!--later the wsdl compiler will recognize them as needed java classes.-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hbt/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/alm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/tca/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=8"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/eps/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=5"/>
  <!--************* OneControl MTOSI: End xsl insertions   *************-->
  <!--==============-->
  <xsd:element name="subscribeRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the subscribe operation</p>
        <p>This operation allows the Client OS to subscribe for notifications.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="consumerEpr" type="tns:EndPointReferenceType">
          <xsd:annotation>
            <xsd:documentation>
              <p>the notification consumer endpoint
                                (callback handler) that the broker will
                                call to send the notification</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="topic" type="tns:TopicExpressionType">
          <xsd:annotation>
            <xsd:documentation>
              <p>the unique name of the topic object of
                                the subscription</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="selector" type="gen:QueryExpressionType">
          <xsd:annotation>
            <xsd:documentation>
              <p>It is the optional "filter"
                                expression to restrict the flow of
                                messages sent to the notification
                                consumer. By default, an empty selector
                                defines the desire to be notified of all
                                events for the given topic.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:element name="subscribeResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the subscribe operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="subscriptionID" type="tns:SubscriptionIdentifierType">
          <xsd:annotation>
            <xsd:documentation>
              <p>A unique subscription identifier is
                                returned to the Client OS to be used
                                when invoking the unsubscribe() for the
                                given topic. Note that it must uniquely
                                identify the request signature by its
                                three elements; consumerEPR , topic, and selector.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:element name="subscribeException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the subscribe operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidFilterDefinition"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:invalidTopic"/>
            <xsd:element ref="msg:notificationServiceProblem"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:element name="unsubscribeRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the unsubscribe operation</p>
        <p>This operation allows the Client OS to unsubscribe
                    from a previously subscribed notification channel.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="subscriptionID" type="tns:SubscriptionIdentifierType">
          <xsd:annotation>
            <xsd:documentation>
              <p>It is the same subscription identifier
                                that was returned on successful
                                subscription of the Client OS.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="topic" type="tns:TopicExpressionType">
          <xsd:annotation>
            <xsd:documentation>
              <p>it is the unique name of the topic object
                                of the unsubscription.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:element name="unsubscribeResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the unsubscribe operation</p>
        <p>Note that it is an empty payload. Failure should be
                    handled as an exception</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence/>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:element name="unsubscribeException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the unsubscribe operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notificationServiceProblem"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:element name="notify">
    <xsd:annotation>
      <xsd:documentation>
        <p>One way (notification) message structure of the
                    notify operation</p>
        <p>This operation allows event notification to a client OS.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="topic" type="tns:TopicExpressionType">
          <xsd:annotation>
            <xsd:documentation>
              <p>it is the unique name of the topic on
                                which the notification
                                "message" was published. The
                                topic is based on a TopicExpression,
                                which is associated as a unique JNDI
                                entry. In MTOSI Release 1, it represents
                                the address of a JMS topic instance
                                created at deployment.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="message">
          <xsd:annotation>
            <xsd:documentation>
              <p>the notification payload which can be one
                                of the supported mTOP XML events, which
                                are all based on the commonEventInfo</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" ref="cei:commonEventInformation"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
  <xsd:simpleType name="EndPointReferenceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>the unique service end point address on the CCV.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="SubscriptionIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>the identifier to uniquely identify a valid subscription.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="TopicExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>the unique name of topic instance published on the CCV.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=9</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of generic mTOP simple data types.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="NameAndStringValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvsList" type="tns:NameAndValueStringListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndValueStringListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndStringValue</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nvs" type="tns:NameAndStringValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:any minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvList" type="tns:NameAndAnyValueListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndAnyValueType</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nv" type="tns:NameAndAnyValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AliasNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    contains the list of aliases for the network entity.
                    The attribute is a name-value list. The name refers
                    to the type of alias (e.g., nativeEMSname) and the
                    value component holds the alias itself</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alias">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="aliasName" type="xsd:string"/>
            <xsd:element name="aliasValue" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AnyListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A generic list of any type of elements. Used for
                    vendor Extensions or loose element encapsulation
                    from other namespaces.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="DiscoveredNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the name of the object when
                    its existence is first published on the CCV but only
                    in the case where the OS that publishes the object
                    on the CCV is not the naming OS. If the naming OS
                    first publishes the object on the CCV, this
                    attribute may be left empty.</p>
        <p>The discovered name is assumed to be unique from the
                    perspective of the publishing OS.</p>
        <p>The discovered name published on the CCV does not
                    necessarily need to be the name of the object as
                    discovered by the OS from the subtending network.</p>
        <p>There are no specific rules concerning the
                    relationship between the "name" and
                    "discovered name" of the object. They
                    could be set to the same value or they could be different.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ManufactureDateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type identifies the production date of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="MultiEventInventoryAttributesType">
    <xsd:annotation>
      <xsd:documentation>This attribute is used when a object
                instance is embedded in the inventory    layout payload
                of a Multi-Event Inventory (MEI) notification.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="neTime" nillable="true" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the time at which the NE detected the
                            inventory change (if available)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventIndication" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is an indication of the type of
                            inventory update.</p>
            <p>Possible values are Object Creation (OC),
                            Object Discovery (ODsc), Object Deletion
                            (OD),        Attribute Value Change (AVC),
                            State Change (SC) and AVC_SC_and_Childern.
                            Only the acronym (e.g., OC)        is used
                            in the actual attribute value. The following
                            conventions apply:</p>
            <p>If an object creation or object discovery
                            indicator is applied to a parent object,
                            it implicitly applies to all the children,
                            i.e., the OS sending the notification only
                            needs       to set the indicator attribute
                            in the parent object.</p>
            <p>If an object deletion is applied to a parent
                            object, it is assumed that all the children
                            are also deleted. The childern should not be listed.</p>
            <p>The AVC_SC_and_Childern indication may be
                            applied to a parent object to imply that
                            there       may be AVC or SC changes to the
                            parent and some or all of the children.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="NetworkAccessDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A free-format string used to associate a resource to
                    a Network Access Domain.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="NotificationIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the notification ID.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="NotificationIdentifierListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of notification IDs  (free string). Also,  the
                    value found in notificationId field of the event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="notificationId" type="tns:NotificationIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of all the object types. It is
                    left as a string for maximum compatibility with
                    future supported object types.</p>
        <p>Refer to the SD2-7 ObjectNaming for the list of all
                    supported values.</p>
        <p>Otherwise, one can also refer to the
                    ObjectEnumTypedefined in CommonResourceInfo (see NRB
                    DDP), which is provided as XML Schema enumerations
                    solely as a helper (not used in any messaging validation).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enumeration of all the supported query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI">
      <xsd:enumeration value="ANSI-92"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath20/"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The loose definition of all the supported query
                    dialect types.</p>
        <p>Refer to QueryDialectEnumType definition to the
                    enumeration of recommended query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The generic schema datatype definition for the query
                    expression used in most filters.</p>
        <p>This definition is borrowed from WS-Notification v1.3.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="tns:QueryDialectTypeType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          <p>The dialect of the given query expression</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=12</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=10"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=9"/>
  <!--==============-->
  <xsd:complexType abstract="false" name="BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The (abstract) base type definition of all exception messages.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="hdr:header">
        <xsd:annotation>
          <xsd:documentation>The mTOP header as it cannot be
                        part of the SOAP Header in a SOAP v1.1 Fault message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="reason" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>A string indicating further details about the
                            exception. It is a free format string filled
                            by the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The extension for specific vendor exception information.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:element name="notImplemented" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised by OS for an optional operation that is not implemented</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="internalError" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised in case of non-specific OS internal failure</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidInput" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters are invalid</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tooManyOpenIterators" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when data retrieval iterator capacity is full</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="entityNotFound" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters do not refer to an existing object</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="commLoss" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when communication to an entity (needed to
                    help fulfill the request) is lost</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedCompressionFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given data compression format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedPackingFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given file packing format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidFilterDefinition" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the filter is invalid.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="objectInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tpInvalidEndPoint" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="timeslotInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="protectionEffortNotMet" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notInValidState" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unableToComply" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="capacityExceeded" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="accessDenied" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedRoutingConstraints" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="userlabelInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidTopic" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the topic is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notificationServiceProblem" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when there is a failure with the Broker.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AllExceptionsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reference to all supported exception types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="tns:accessDenied"/>
      <xsd:element ref="tns:capacityExceeded"/>
      <xsd:element ref="tns:commLoss"/>
      <xsd:element ref="tns:entityNotFound"/>
      <xsd:element ref="tns:internalError"/>
      <xsd:element ref="tns:invalidFilterDefinition"/>
      <xsd:element ref="tns:invalidInput"/>
      <xsd:element ref="tns:invalidTopic"/>
      <xsd:element ref="tns:notificationServiceProblem"/>
      <xsd:element ref="tns:notImplemented"/>
      <xsd:element ref="tns:notInValidState"/>
      <xsd:element ref="tns:objectInUse"/>
      <xsd:element ref="tns:protectionEffortNotMet"/>
      <xsd:element ref="tns:timeslotInUse"/>
      <xsd:element ref="tns:tooManyOpenIterators"/>
      <xsd:element ref="tns:tpInvalidEndPoint"/>
      <xsd:element ref="tns:unableToComply"/>
      <xsd:element ref="tns:unsupportedCompressionFormat"/>
      <xsd:element ref="tns:unsupportedPackingFormat"/>
      <xsd:element ref="tns:unsupportedRoutingConstraints"/>
      <xsd:element ref="tns:userlabelInUse"/>
    </xsd:choice>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Profile of exception types supported by all mTOP
                    iterator operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="tns:AllExceptionsType">
        <xsd:choice>
          <xsd:element ref="tns:commLoss"/>
          <xsd:element ref="tns:internalError"/>
          <xsd:element ref="tns:invalidInput"/>
          <xsd:element ref="tns:notImplemented"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Generic request message structure for all data
                    iterator operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=10</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML header.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=9"/>
  <!--==============-->
  <xsd:simpleType name="ActivityStatusEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies the high-level response status for an
                    activity.  Required for response messages, including
                    error responses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="WARNING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="ActivityStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Add to the initial enumerations the Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ActivityStatusEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="MessageTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type of the message that is being exchanged as
                    part of an activity.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REQUEST"/>
      <xsd:enumeration value="RESPONSE"/>
      <xsd:enumeration value="NOTIFICATION"/>
      <xsd:enumeration value="ERROR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationPatternType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Styles supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SimpleResponse"/>
      <xsd:enumeration value="MultipleBatchResponse"/>
      <xsd:enumeration value="BulkResponse"/>
      <xsd:enumeration value="Notification"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationStyleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Style supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MSG"/>
      <xsd:enumeration value="RPC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="CompressionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if compression is to be performed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:CompressionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CompressionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported compressions. All extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_COMPRESSION"/>
      <xsd:enumeration value="GZIP"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PackingTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if the output file(s) are to be packed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:PackingEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PackingEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported packing/packaging. All
                    extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PACKING"/>
      <xsd:enumeration value="ZIP"/>
      <xsd:enumeration value="TAR"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="header">
    <xsd:annotation>
      <xsd:documentation>
        <p>MTOSI Standard Header.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="activityName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the business
                                transaction activity for the message
                                being exchanged.       The value is
                                usually the name of the mTOP operation,
                                e.g. getInventory.       This value
                                corresponds to the “operation” in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the message (or
                                contract) that is being exchanged as
                                part of an activity. E.g.
                                getInventoryResponse. This field
                                corresponds to the message name in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgType" type="tns:MessageTypeType"/>
        <xsd:element minOccurs="0" name="senderURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application sending this message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="destinationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the final destination of the
                                message (the OS that will process the
                                content of the message). This field may
                                point to a logical end point or abstract
                                topic name to be resolved by the
                                communication transport middleware in
                                order to deliver the message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="replyToURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used by request messages to specify
                                destination for response message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="originatorURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the originating application of
                                the message that resulted in this
                                response or notification message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="failureReplytoURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application receiving the
                                potential error notification message.
                                Required for all response messages and
                                notifications which are triggered by
                                request/response. If not specified the
                                replyToURI is used. If the replyToURI is
                                also not specified, senderURI endpoint
                                is used to send back the failure response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="activityStatus" type="tns:ActivityStatusType"/>
        <xsd:element minOccurs="0" name="correlationId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>An identifier that could be set by the
                                originator of an asynchronous request
                                that will allow it to correlate the
                                response to the request.  If this field
                                is set, it should be reflected in the
                                header of the response message.  Not
                                required for notification headers.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="security" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Provides credential nformation for use by
                                a security service for identification,
                                authentication, or authorization.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="securityType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the type of credential
                                contained in the security element.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="priority">
          <xsd:annotation>
            <xsd:documentation>
              <p>Indicates message-handling priority for
                                asynchronous messages.  It must be in
                                the range 0-9 (lowest-highest). Default: 4</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string"/>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgSpecificProperties">
          <xsd:annotation>
            <xsd:documentation>
              <p>Conditionally required for request,
                                response, and notification messages as
                                identified by the documentation for a
                                specific interface message.  The
                                communications infrastructure or the
                                receiving application can use this value
                                for routing or filtering messages.</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" minOccurs="0" name="property">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="propName" type="xsd:string"/>
                    <xsd:element name="propValue" type="xsd:string"/>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="communicationPattern" type="tns:CommunicationPatternType"/>
        <xsd:element minOccurs="0" name="communicationStyle" type="tns:CommunicationStyleType"/>
        <xsd:element minOccurs="0" name="requestedBatchSize" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>The RequestedBatchSize parameter provides
                                the control for the batch segmentation
                                of the full set of output data generated
                                by a coarse-grained operation such as
                                getInventory or getActiveAlarms. The
                                unit is any of the MTOSI objects. And,
                                it defines the maximum number of MTOSI
                                objects that can be included in all the
                                batches of data sent as part of a
                                multiple responses MEP.</p>
              <p>However, they are cases where a batch may
                                exceed the number of objects defined in
                                the RequestedBatchSize parameter. This
                                is true if the granularity of a response
                                atomic data representation is greater
                                than just one object. This is true for
                                the getInventory response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceNumber" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm. Pattern
                                to identify the batch seq number in a sequence.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceEndOfReply" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm.
                                Pattern, true if it is the last result
                                batch in a sequence</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="iteratorReferenceURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Mandatory for all SIT (iterators) MEP to
                                allow description of the data retrieval iterator.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="fileLocationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used for file retrieval. Specify the base
                                name of the file(s) to be generated and
                                the remote destination.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="compressionType" type="tns:CompressionTypeType"/>
        <xsd:element minOccurs="0" name="packingType" type="tns:PackingTypeType"/>
        <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>Message originating timestamp</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Location for all vendor extensions to the
                                MTOSI standard header.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common event information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=9"/>
  <!--================-->
  <xsd:element name="commonEventInformation" type="tns:CommonEventInformationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of the common set of
                    attributes used for all events.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonEventInformationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the common set of attributes
                    used for all events.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="notificationId" type="gen:NotificationIdentifierType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The uniqueness and the sequence of the
                            notificationId are not guaranteed.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="sourceTime" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>
            <p>The time at which the event was reported by
                            the source system (NE, EMS or OS).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Containment for all vendor extensions</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=6</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hbt/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:ei="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hbt/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Heartbeat Event XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the heartbeat event.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=7"/>
  <!--================-->
  <xsd:element name="heartbeat" substitutionGroup="cei:commonEventInformation" type="tns:HeartbeatType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of the heartbeat event.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="HeartbeatType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the heartbeat event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ei:EventInformationType">
        <xsd:sequence/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=7</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common event information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=13"/>
  <!--================-->
  <xsd:complexType abstract="true" name="EventInformationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the event information set of attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cei:CommonEventInformationType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="objectType" type="gen:ObjectTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies the type of the object
                                    associated with the event. This
                                    attribute is needed to allow simple
                                    notification filtering based on the
                                    object type.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="objectName" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies the name of the object
                                    associated with the event.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="osTime" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:documentation>
                <p>The time at which the event was
                                    reported by the OS (EMS).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=13</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML naming structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=9"/>
  <!--=================-->
  <xsd:complexType name="RelativeDistinguishNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of relative distinguish
                    name (RDN) data structure used in all object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="type" type="gen:ObjectTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN object type acronym.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of the MTOSI object name
                    data structure as a sequence of RDNs, which
                    represents a unique identifier for the MTOSI object
                    on the CCV. Once set by the naming OS, the name is
                    invariant for the life of the object and should be
                    used when referring to the object over the CCV. Name
                    attribute of an object instance shall always be
                    assigned a value, unless the object instance is
                    first discovered by an OS that is not the naming OS
                    for the object instance. In such a case, the
                    discovering OS shall provide a value for the
                    Discovered Name attribute of the object. The naming
                    OS shall provide a value for the Name attribute of
                    the object once it becomes aware of the new object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="rdn" type="tns:RelativeDistinguishNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition for the list of MTOSI object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="name" nillable="true" type="tns:NamingAttributeType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=4</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/alm/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:com="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:cornot="http://www.tmforum.org/mtop/fmw/xsd/cornot/v1" xmlns:ei="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:prc="http://www.tmforum.org/mtop/nra/xsd/prc/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/alm/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the Alarm event.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cornot/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/prc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=17"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=2"/>
  <!--================-->
  <xsd:element name="alarm" substitutionGroup="cei:commonEventInformation" type="tns:AlarmType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of the alarm event.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AlarmType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the alarm event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ei:EventInformationType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="isEdgePointRelated" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>TRUE if this event relates to a PTP
                                    that is an edge point or to a PGP
                                    that contains a PTP that is an edge
                                    point. FALSE otherwise; this field
                                    is optional in this case.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isClearable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the event is clearable
                                    (or is itself a clear).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="aliasNameList" type="gen:AliasNameListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies all the object list of
                                    aliases to describe the network
                                    entity as portrayed on the OS user interface.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="layerRate" type="lay:LayerRateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The layer which this alarm is
                                    relevant to.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="probableCause" type="prc:ProbableCauseType">
            <xsd:annotation>
              <xsd:documentation>
                <p>No other string than the ones defined
                                    by the TM Forum should be used for
                                    this field.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="nativeProbableCause" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies the probableCause as
                                    portrayed on the OS user interface.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="additionalText" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>More information about the alarm.
                                    such as, "Unit is mismounted".</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="perceivedSeverity" type="com:PerceivedSeverityType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the severity of the alarm.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="affectedPtpRefList" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of affected TPs. Contained
                                    CTPs are not listed. This field is
                                    optional for all alarms except for
                                    alarms on equipment. This is used to
                                    indicate a list of TPs affected by
                                    an equipment failure for example. If
                                    the alarm is an alarm on an
                                    equipment that supports PTPs, then
                                    the ports (PTPs) supported by this
                                    equipment will be listed in this
                                    field (irrespective of whether the
                                    alarm is Service Affecting or not).
                                    The list should be ordered by PTP
                                    names (ASCII order).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="serviceAffecting" type="com:ServiceAffectingType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the alarm has
                                    affected service</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="rootCauseAlarmIndication" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The RCAI indicator has two values,
                                    i.e., TRUE (meaning that the alarm
                                    is a Root Cause Alarm Indication) or
                                    FALSE (meaning the alarm is a raw alarm).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="acknowledgeIndication" type="com:AcknowledgeIndicationType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The acknowledge indication state.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_EventType" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Classifies the alarm into one of the
                                    five basic categories specified in
                                    ITU-T X.733. Value is one of the
                                    following:
                                    "communicationsAlarm",
                                    "environmentalAlarm",
                                    "equipmentAlarm",
                                    "processingErrorAlarm",
                                    "qualityofServiceAlarm"
                                    This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_SpecificProblems" type="com:SpecificProblemListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Identifies further refinements to the
                                    Probable cause of the alarm.
                                    (Similar to ProbableCauseQualifier,
                                    but this parameter is designed to be
                                    human readable and compatible with
                                    ITU usage.) This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_BackedUpStatus" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Specifies whether or not the object
                                    emitting the alarm has been
                                    backed-up, and services provided to
                                    the user have, therefore, not been
                                    disrupted. Value is one of the
                                    following: "BACKED_UP",
                                    "NOT_BACKED_UP" This field
                                    is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_BackUpObjectRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Specifies the object that is
                                    providing back-up services for the
                                    object about which the notification
                                    pertains. This parameter shall be
                                    present when the
                                    X733::BackedupStatus parameter is
                                    present and has the value
                                    "BACKED_UP".  This field
                                    is optional otherwise.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_TrendIndication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Specifies the current severity trend
                                    of the object. If present it
                                    indicates that there are one or more
                                    alarms ("outstanding
                                    alarms") which have not been
                                    cleared, and pertain to the same
                                    object as that to which this alarm
                                    ("current alarm")
                                    pertains. Value is one of the
                                    following: "MORE_SEVERE",
                                    "NO_CHANGE",
                                    "LESS_SEVERE" This field
                                    is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_CorrelatedNotificationList" type="cornot:CorrelatedNotificationListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains a set of Notification
                                    identifiers and, if necessary, their
                                    associated object names. This set is
                                    defined to be the set of all
                                    notifications to which this
                                    notification is considered to be
                                    correlated. This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_MonitoredAttributeList" type="gen:NameAndValueStringListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Defines one or more attributes of the
                                    managed object and their
                                    corresponding values at the time of
                                    the alarm. This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_ProposedRepairActionList" type="com:ProposedRepairActionListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Used if the cause is known and the
                                    system being managed can suggest one
                                    or more solutions (such as switch in
                                    standby equipment, retry, replace
                                    media). This field is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="X733_AdditionalInformation" type="gen:NameAndAnyValueListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Allows the inclusion of a set of
                                    additional information.  (For
                                    consistency with X.733) This field
                                    is optional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="AlarmListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of alarms.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alarm" type="tns:AlarmType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=3</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/cornot/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/cornot/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP CorrelatedNotifications XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=9"/>
  <!--=================-->
  <xsd:complexType name="CorrelatedNotificationsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Correlated notifications are identified by the object
                    that emitted the notification and the notification
                    IDs. Both are included in case the Notification IDs
                    are not unique across objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="nam:NamingAttributeType"/>
      <xsd:element name="notifIds" type="gen:NotificationIdentifierListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="CorrelatedNotificationListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of CorrelatedNotificationsType elements.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="correlatedNotifications" type="tns:CorrelatedNotificationsType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=11</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP layer rates.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:element name="layerRateListType" type="tns:LayerRateListType"/>
  <!--================-->
  <xsd:complexType name="LayerRateListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of LayerRates</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="layerRate" nillable="true" type="tns:LayerRateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="LayerRateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          The LayerRateType value is used to identify:
          <li>the Layer of a PTP/CTP,</li>
          <li>the characteristic information of a PTP/FTP,</li>
          <li>the Layer/Rate of a connection.</li>
        </p>
        <p>Each LayerRateType may be used in conjunction with a
                    CTP/PTP/FTP of that layer. In the SDH definitions,
                    the G.805 CP and G.805 Termination Function layer
                    names differ, for example TU12 is used for the G.805
                    CP and VC12 for the corresponding G.805 Termination
                    Function. In this interface definition the TU and VC
                    definitions have been combined into a single
                    composite layer and this has been named to include
                    the equivalent SONET layer, e.g. LR_VT2_andTypeU12_VC12.</p>
        <p>
          For more details refer to the following supporting
                    document:
          <li>layering documentfor
                        all layering concepts</li>
          <li>LayerRates document for information about
                        recognized values in MTOSI</li>
        </p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:LayerRateEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="LayerRateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="LR_DS0_64K"/>
      <xsd:enumeration value="LR_DSL"/>
      <xsd:enumeration value="LR_Not_Applicable"/>
      <xsd:enumeration value="LR_Async_FOTS_150M"/>
      <xsd:enumeration value="LR_Async_FOTS_417M"/>
      <xsd:enumeration value="LR_Async_FOTS_560M"/>
      <xsd:enumeration value="LR_Async_FOTS_565M"/>
      <xsd:enumeration value="LR_Async_FOTS_1130M"/>
      <xsd:enumeration value="LR_Async_FOTS_1G7"/>
      <xsd:enumeration value="LR_Async_FOTS_1G8"/>
      <xsd:enumeration value="LR_ATM_NI"/>
      <xsd:enumeration value="LR_ATM_VC"/>
      <xsd:enumeration value="LR_ATM_VP"/>
      <xsd:enumeration value="LR_D1_Video"/>
      <xsd:enumeration value="LR_DIGITAL_SIGNAL_RATE"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_DSR_1_5M"/>
      <xsd:enumeration value="LR_DSR_2M"/>
      <xsd:enumeration value="LR_DSR_4M"/>
      <xsd:enumeration value="LR_DSR_6M"/>
      <xsd:enumeration value="LR_DSR_8M"/>
      <xsd:enumeration value="LR_DSR_16M"/>
      <xsd:enumeration value="LR_DSR_34M"/>
      <xsd:enumeration value="LR_E2_8M"/>
      <xsd:enumeration value="LR_E5_565M"/>
      <xsd:enumeration value="LR_Encapsulation"/>
      <xsd:enumeration value="LR_Fragment"/>
      <xsd:enumeration value="LR_DSR_45M"/>
      <xsd:enumeration value="LR_DSR_140M"/>
      <xsd:enumeration value="LR_DSR_565M"/>
      <xsd:enumeration value="LR_DSR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_DSR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OC1_STM0"/>
      <xsd:enumeration value="LR_DSR_OC3_STM1"/>
      <xsd:enumeration value="LR_DSR_2xSTM1"/>
      <xsd:enumeration value="LR_DSR_OC12_STM4"/>
      <xsd:enumeration value="LR_DSR_OC24_STM8"/>
      <xsd:enumeration value="LR_DSR_OC48_and_STM16"/>
      <xsd:enumeration value="LR_DSR_OC192_and_STM64"/>
      <xsd:enumeration value="LR_DSR_OC768_and_STM256"/>
      <xsd:enumeration value="LR_DSR_OTU1"/>
      <xsd:enumeration value="LR_DSR_OTU2"/>
      <xsd:enumeration value="LR_DSR_OTU3"/>
      <xsd:enumeration value="LR_E1_2M"/>
      <xsd:enumeration value="LR_E20_2x2M"/>
      <xsd:enumeration value="LR_E30_8x2M"/>
      <xsd:enumeration value="LR_E3_34M"/>
      <xsd:enumeration value="LR_E4_140M"/>
      <xsd:enumeration value="LR_ESCON"/>
      <xsd:enumeration value="LR_Ethernet"/>
      <xsd:enumeration value="LR_ETR"/>
      <xsd:enumeration value="LR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_FC_12_133M"/>
      <xsd:enumeration value="LR_FC_25_266M"/>
      <xsd:enumeration value="LR_FC_50_531M"/>
      <xsd:enumeration value="LR_FC_100_1063M"/>
      <xsd:enumeration value="LR_FDDI"/>
      <xsd:enumeration value="LR_FICON"/>
      <xsd:enumeration value="LR_FR_IF"/>
      <xsd:enumeration value="LR_FR_PVC"/>
      <xsd:enumeration value="LR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_ISDN_BRI"/>
      <xsd:enumeration value="LR_Line_OC1_STS1_and_MS_STM0"/>
      <xsd:enumeration value="LR_Line_OC3_STS3_and_MS_STM1"/>
      <xsd:enumeration value="LR_Line_OC12_STS12_and_MS_STM4"/>
      <xsd:enumeration value="LR_Line_OC24_STS24_and_MS_STM8"/>
      <xsd:enumeration value="LR_Line_OC48_STS48_and_MS_STM16"/>
      <xsd:enumeration value="LR_Line_OC192_STS192_and_MS_STM64"/>
      <xsd:enumeration value="LR_Line_OC768_STS768_and_MS_STM256"/>
      <xsd:enumeration value="LR_Low_Order_TU3_VC3"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3"/>
      <xsd:enumeration value="LR_STS3c_and_AU4_VC4"/>
      <xsd:enumeration value="LR_STS4c_and_VC3_4c"/>
      <xsd:enumeration value="LR_STS5c_and_VC3_5c"/>
      <xsd:enumeration value="LR_STS6c_and_VC4_2c"/>
      <xsd:enumeration value="LR_STS7c_and_VC3_7c"/>
      <xsd:enumeration value="LR_STS8c_and_VC3_8c"/>
      <xsd:enumeration value="LR_STS9c_and_VC4_3c"/>
      <xsd:enumeration value="LR_Optical_Channel"/>
      <xsd:enumeration value="LR_Optical_Multiplex_Section"/>
      <xsd:enumeration value="LR_OPTICAL_SECTION"/>
      <xsd:enumeration value="LR_Optical_Transmission_Section"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_PHYSICAL_MEDIALESS"/>
      <xsd:enumeration value="LR_PHYSICAL_OPTICAL"/>
      <xsd:enumeration value="LR_POTS"/>
      <xsd:enumeration value="LR_Section_OC1_STS1_and_RS_STM0"/>
      <xsd:enumeration value="LR_Section_OC3_STS3_and_RS_STM1"/>
      <xsd:enumeration value="LR_Section_OC12_STS12_and_RS_STM4"/>
      <xsd:enumeration value="LR_Section_OC24_STS24_and_RS_STM8"/>
      <xsd:enumeration value="LR_Section_OC48_STS48_and_RS_STM16"/>
      <xsd:enumeration value="LR_Section_OC192_STS192_and_RS_STM64"/>
      <xsd:enumeration value="LR_Section_OC768_STS768_and_RS_STM256"/>
      <xsd:enumeration value="LR_STS1_and_AU3_High_Order_VC3"/>
      <xsd:enumeration value="LR_STS2c_and_VC3_2c"/>
      <xsd:enumeration value="LR_STS10c_and_VC3_10c"/>
      <xsd:enumeration value="LR_STS11c_and_VC3_11c"/>
      <xsd:enumeration value="LR_STS12c_and_VC4_4c"/>
      <xsd:enumeration value="LR_STS13c_and_VC3_13c"/>
      <xsd:enumeration value="LR_STS14c_and_VC3_14c"/>
      <xsd:enumeration value="LR_STS15c_and_VC4_5c"/>
      <xsd:enumeration value="LR_STS16c_and_VC3_16c"/>
      <xsd:enumeration value="LR_STS17c_and_VC3_17c"/>
      <xsd:enumeration value="LR_STS18c_and_VC4_6c"/>
      <xsd:enumeration value="LR_STS19c_and_VC3_19c"/>
      <xsd:enumeration value="LR_STS20c_and_VC3_20c"/>
      <xsd:enumeration value="LR_STS21c_and_VC4_7c"/>
      <xsd:enumeration value="LR_STS22c_and_VC3_22c"/>
      <xsd:enumeration value="LR_STS23c_and_VC3_23c"/>
      <xsd:enumeration value="LR_STS24c_and_VC4_8c"/>
      <xsd:enumeration value="LR_STS25c_and_VC3_25c"/>
      <xsd:enumeration value="LR_STS26c_and_VC3_26c"/>
      <xsd:enumeration value="LR_STS27c_and_VC4_9c"/>
      <xsd:enumeration value="LR_STS28c_and_VC3_28c"/>
      <xsd:enumeration value="LR_STS29c_and_VC3_29c"/>
      <xsd:enumeration value="LR_STS30c_and_VC4_10c"/>
      <xsd:enumeration value="LR_STS31c_and_VC3_31c"/>
      <xsd:enumeration value="LR_STS32c_and_VC3_32c"/>
      <xsd:enumeration value="LR_STS33c_and_VC4_11c"/>
      <xsd:enumeration value="LR_STS34c_and_VC3_34c"/>
      <xsd:enumeration value="LR_STS35c_and_VC3_35c"/>
      <xsd:enumeration value="LR_STS36c_and_VC4_12c"/>
      <xsd:enumeration value="LR_STS37c_and_VC3_37c"/>
      <xsd:enumeration value="LR_STS38c_and_VC3_38c"/>
      <xsd:enumeration value="LR_STS39c_and_VC4_13c"/>
      <xsd:enumeration value="LR_STS40c_and_VC3_40c"/>
      <xsd:enumeration value="LR_STS41c_and_VC3_41c"/>
      <xsd:enumeration value="LR_STS42c_and_VC4_14c"/>
      <xsd:enumeration value="LR_STS43c_and_VC3_43c"/>
      <xsd:enumeration value="LR_STS44c_and_VC3_44c"/>
      <xsd:enumeration value="LR_STS45c_and_VC4_15c"/>
      <xsd:enumeration value="LR_STS46c_and_VC3_46c"/>
      <xsd:enumeration value="LR_STS47c_and_VC3_47c"/>
      <xsd:enumeration value="LR_STS48c_and_VC4_16c"/>
      <xsd:enumeration value="LR_STS49c_and_VC3_49c"/>
      <xsd:enumeration value="LR_STS50c_and_VC3_50c"/>
      <xsd:enumeration value="LR_STS51c_and_VC4_17c"/>
      <xsd:enumeration value="LR_STS52c_and_VC3_52c"/>
      <xsd:enumeration value="LR_STS53c_and_VC3_53c"/>
      <xsd:enumeration value="LR_STS54c_and_VC4_18c"/>
      <xsd:enumeration value="LR_STS55c_and_VC3_55c"/>
      <xsd:enumeration value="LR_STS56c_and_VC3_56c"/>
      <xsd:enumeration value="LR_STS57c_and_VC4_19c"/>
      <xsd:enumeration value="LR_STS58c_and_VC3_58c"/>
      <xsd:enumeration value="LR_STS59c_and_VC3_59c"/>
      <xsd:enumeration value="LR_STS60c_and_VC4_20c"/>
      <xsd:enumeration value="LR_STS61c_and_VC3_61c"/>
      <xsd:enumeration value="LR_STS62c_and_VC3_62c"/>
      <xsd:enumeration value="LR_STS63c_and_VC4_21c"/>
      <xsd:enumeration value="LR_STS64c_and_VC3_64c"/>
      <xsd:enumeration value="LR_STS65c_and_VC3_65c"/>
      <xsd:enumeration value="LR_STS66c_and_VC4_22c"/>
      <xsd:enumeration value="LR_STS67c_and_VC3_67c"/>
      <xsd:enumeration value="LR_STS68c_and_VC3_68c"/>
      <xsd:enumeration value="LR_STS69c_and_VC4_23c"/>
      <xsd:enumeration value="LR_STS70c_and_VC3_70c"/>
      <xsd:enumeration value="LR_STS71c_and_VC3_71c"/>
      <xsd:enumeration value="LR_STS72c_and_VC4_24c"/>
      <xsd:enumeration value="LR_STS73c_and_VC3_73c"/>
      <xsd:enumeration value="LR_STS74c_and_VC3_74c"/>
      <xsd:enumeration value="LR_STS75c_and_VC4_25c"/>
      <xsd:enumeration value="LR_STS76c_and_VC3_76c"/>
      <xsd:enumeration value="LR_STS77c_and_VC3_77c"/>
      <xsd:enumeration value="LR_STS78c_and_VC4_26c"/>
      <xsd:enumeration value="LR_STS79c_and_VC3_79c"/>
      <xsd:enumeration value="LR_STS80c_and_VC3_80c"/>
      <xsd:enumeration value="LR_STS81c_and_VC4_27c"/>
      <xsd:enumeration value="LR_STS82c_and_VC3_82c"/>
      <xsd:enumeration value="LR_STS83c_and_VC3_83c"/>
      <xsd:enumeration value="LR_STS84c_and_VC4_28c"/>
      <xsd:enumeration value="LR_STS85c_and_VC3_85c"/>
      <xsd:enumeration value="LR_STS86c_and_VC3_86c"/>
      <xsd:enumeration value="LR_STS87c_and_VC4_29c"/>
      <xsd:enumeration value="LR_STS88c_and_VC3_88c"/>
      <xsd:enumeration value="LR_STS89c_and_VC3_89c"/>
      <xsd:enumeration value="LR_STS90c_and_VC4_30c"/>
      <xsd:enumeration value="LR_STS91c_and_VC3_91c"/>
      <xsd:enumeration value="LR_STS92c_and_VC3_92c"/>
      <xsd:enumeration value="LR_STS93c_and_VC4_31c"/>
      <xsd:enumeration value="LR_STS94c_and_VC3_94c"/>
      <xsd:enumeration value="LR_STS95c_and_VC3_95c"/>
      <xsd:enumeration value="LR_STS96c_and_VC4_32c"/>
      <xsd:enumeration value="LR_STS97c_and_VC3_97c"/>
      <xsd:enumeration value="LR_STS98c_and_VC3_98c"/>
      <xsd:enumeration value="LR_STS99c_and_VC4_33c"/>
      <xsd:enumeration value="LR_STS100c_and_VC3_100c"/>
      <xsd:enumeration value="LR_STS101c_and_VC3_101c"/>
      <xsd:enumeration value="LR_STS102c_and_VC4_34c"/>
      <xsd:enumeration value="LR_STS103c_and_VC3_103c"/>
      <xsd:enumeration value="LR_STS104c_and_VC3_104c"/>
      <xsd:enumeration value="LR_STS105c_and_VC4_35c"/>
      <xsd:enumeration value="LR_STS106c_and_VC3_106c"/>
      <xsd:enumeration value="LR_STS107c_and_VC3_107c"/>
      <xsd:enumeration value="LR_STS108c_and_VC4_36c"/>
      <xsd:enumeration value="LR_STS109c_and_VC3_109c"/>
      <xsd:enumeration value="LR_STS110c_and_VC3_110c"/>
      <xsd:enumeration value="LR_STS111c_and_VC4_37c"/>
      <xsd:enumeration value="LR_STS112c_and_VC3_112c"/>
      <xsd:enumeration value="LR_STS113c_and_VC3_113c"/>
      <xsd:enumeration value="LR_STS114c_and_VC4_38c"/>
      <xsd:enumeration value="LR_STS115c_and_VC3_115c"/>
      <xsd:enumeration value="LR_STS116c_and_VC3_116c"/>
      <xsd:enumeration value="LR_STS117c_and_VC4_39c"/>
      <xsd:enumeration value="LR_STS118c_and_VC3_118c"/>
      <xsd:enumeration value="LR_STS119c_and_VC3_119c"/>
      <xsd:enumeration value="LR_STS120c_and_VC4_40c"/>
      <xsd:enumeration value="LR_STS121c_and_VC3_121c"/>
      <xsd:enumeration value="LR_STS122c_and_VC3_122c"/>
      <xsd:enumeration value="LR_STS123c_and_VC4_41c"/>
      <xsd:enumeration value="LR_STS124c_and_VC3_124c"/>
      <xsd:enumeration value="LR_STS125c_and_VC3_125c"/>
      <xsd:enumeration value="LR_STS126c_and_VC4_42c"/>
      <xsd:enumeration value="LR_STS127c_and_VC3_127c"/>
      <xsd:enumeration value="LR_STS128c_and_VC3_128c"/>
      <xsd:enumeration value="LR_STS129c_and_VC4_43c"/>
      <xsd:enumeration value="LR_STS130c_and_VC3_130c"/>
      <xsd:enumeration value="LR_STS131c_and_VC3_131c"/>
      <xsd:enumeration value="LR_STS132c_and_VC4_44c"/>
      <xsd:enumeration value="LR_STS133c_and_VC3_133c"/>
      <xsd:enumeration value="LR_STS134c_and_VC3_134c"/>
      <xsd:enumeration value="LR_STS135c_and_VC4_45c"/>
      <xsd:enumeration value="LR_STS136c_and_VC3_136c"/>
      <xsd:enumeration value="LR_STS137c_and_VC3_137c"/>
      <xsd:enumeration value="LR_STS138c_and_VC4_46c"/>
      <xsd:enumeration value="LR_STS139c_and_VC3_139c"/>
      <xsd:enumeration value="LR_STS140c_and_VC3_140c"/>
      <xsd:enumeration value="LR_STS141c_and_VC4_47c"/>
      <xsd:enumeration value="LR_STS142c_and_VC3_142c"/>
      <xsd:enumeration value="LR_STS143c_and_VC3_143c"/>
      <xsd:enumeration value="LR_STS144c_and_VC4_48c"/>
      <xsd:enumeration value="LR_STS145c_and_VC3_145c"/>
      <xsd:enumeration value="LR_STS146c_and_VC3_146c"/>
      <xsd:enumeration value="LR_STS147c_and_VC4_49c"/>
      <xsd:enumeration value="LR_STS148c_and_VC3_148c"/>
      <xsd:enumeration value="LR_STS149c_and_VC3_149c"/>
      <xsd:enumeration value="LR_STS150c_and_VC4_50c"/>
      <xsd:enumeration value="LR_STS151c_and_VC3_151c"/>
      <xsd:enumeration value="LR_STS152c_and_VC3_152c"/>
      <xsd:enumeration value="LR_STS153c_and_VC4_51c"/>
      <xsd:enumeration value="LR_STS154c_and_VC3_154c"/>
      <xsd:enumeration value="LR_STS155c_and_VC3_155c"/>
      <xsd:enumeration value="LR_STS156c_and_VC4_52c"/>
      <xsd:enumeration value="LR_STS157c_and_VC3_157c"/>
      <xsd:enumeration value="LR_STS158c_and_VC3_158c"/>
      <xsd:enumeration value="LR_STS159c_and_VC4_53c"/>
      <xsd:enumeration value="LR_STS160c_and_VC3_160c"/>
      <xsd:enumeration value="LR_STS161c_and_VC3_161c"/>
      <xsd:enumeration value="LR_STS162c_and_VC4_54c"/>
      <xsd:enumeration value="LR_STS163c_and_VC3_163c"/>
      <xsd:enumeration value="LR_STS164c_and_VC3_164c"/>
      <xsd:enumeration value="LR_STS165c_and_VC4_55c"/>
      <xsd:enumeration value="LR_STS166c_and_VC3_166c"/>
      <xsd:enumeration value="LR_STS167c_and_VC3_167c"/>
      <xsd:enumeration value="LR_STS168c_and_VC4_56c"/>
      <xsd:enumeration value="LR_STS169c_and_VC3_169c"/>
      <xsd:enumeration value="LR_STS170c_and_VC3_170c"/>
      <xsd:enumeration value="LR_STS171c_and_VC4_57c"/>
      <xsd:enumeration value="LR_STS172c_and_VC3_172c"/>
      <xsd:enumeration value="LR_STS173c_and_VC3_173c"/>
      <xsd:enumeration value="LR_STS174c_and_VC4_58c"/>
      <xsd:enumeration value="LR_STS175c_and_VC3_175c"/>
      <xsd:enumeration value="LR_STS176c_and_VC3_176c"/>
      <xsd:enumeration value="LR_STS177c_and_VC4_59c"/>
      <xsd:enumeration value="LR_STS178c_and_VC3_178c"/>
      <xsd:enumeration value="LR_STS179c_and_VC3_179c"/>
      <xsd:enumeration value="LR_STS180c_and_VC4_60c"/>
      <xsd:enumeration value="LR_STS181c_and_VC3_181c"/>
      <xsd:enumeration value="LR_STS182c_and_VC3_182c"/>
      <xsd:enumeration value="LR_STS183c_and_VC4_61c"/>
      <xsd:enumeration value="LR_STS184c_and_VC3_184c"/>
      <xsd:enumeration value="LR_STS185c_and_VC3_185c"/>
      <xsd:enumeration value="LR_STS186c_and_VC4_62c"/>
      <xsd:enumeration value="LR_STS187c_and_VC3_187c"/>
      <xsd:enumeration value="LR_STS188c_and_VC3_188c"/>
      <xsd:enumeration value="LR_STS189c_and_VC4_63c"/>
      <xsd:enumeration value="LR_STS190c_and_VC3_190c"/>
      <xsd:enumeration value="LR_STS191c_and_VC3_191c"/>
      <xsd:enumeration value="LR_STS192c_and_VC4_64c"/>
      <xsd:enumeration value="LR_STS768c_and_VC4_256c"/>
      <xsd:enumeration value="LR_T1_and_DS1_1_5M"/>
      <xsd:enumeration value="LR_T2_and_DS2_6M"/>
      <xsd:enumeration value="LR_T3_and_DS3_45M"/>
      <xsd:enumeration value="LR_VT1_5_and_TU11_VC11"/>
      <xsd:enumeration value="LR_VT2_and_TU12_VC12"/>
      <xsd:enumeration value="LR_VT6_and_TU2_VC2"/>
      <!--The ones below were added in the MTOSI 2.1 release-->
      <xsd:enumeration value="LR_LAG_Fragment"/>
      <xsd:enumeration value="LR_DSR_10Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2.5Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10.7Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_11.1Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_LAN"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_WAN"/>
      <xsd:enumeration value="LR_DSR_40Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OTU2e"/>
      <xsd:enumeration value="LR_DSR_OTU3e1"/>
      <xsd:enumeration value="LR_DSR_OTU3e2"/>
      <xsd:enumeration value="LR_DSR_OTU4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_0"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_Flexible"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_4"/>
      <xsd:enumeration value="LR_Optical_Physical_Section"/>
      <xsd:enumeration value="LR_Optical_Physical_Section_Multilane"/>
      <xsd:enumeration value="LR_Section_OC3072_STS3072_and_RS_STM1024"/>
      <xsd:enumeration value="LR_Line_OC3072_STS3072_and_MS_STM1024"/>
      <xsd:enumeration value="LR_DSR_OC3072_and_STM1024"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=17</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/prc/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/prc/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP probable causes.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=====================-->
  <xsd:complexType name="ProbableCauseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The MTOSI alarm probable causes. For details refer to
                    the supporting document: ProbableCauses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element default="false" minOccurs="0" name="ru" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>This boolean parameter stands
                        for Remote Unit (RU). It indicates the location
                        of the network resource the alarm probable cause
                        is associated with. The default setting (false)
                        is for an alarm detected with a local network
                        resource. And, the value is "true"
                        when the alarm is associated with a remote
                        network resource.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element default="false" minOccurs="0" name="contra" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>This is a boolean parameter used
                        to distinguish the direction of the signal
                        related alarm. The default setting (false) is
                        for an alarm detected on the signal that is
                        related to the sink atomic function. And, the
                        value is "true" for an alarm detected
                        on the signal that is related to the source
                        atomic function.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="1" name="probableCause" type="tns:ProbableCauseEnumType"/>
    </xsd:sequence>
    <xsd:attribute name="extension" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          <p>This is used to capture the extended value</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="qualifier" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          <p>This is used with other attributes; objectName,
                        layerRate, and probableCause to uniquely
                        identify an alarm</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="ProbableCauseEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="UNIDENTIFIED"/>
      <xsd:enumeration value="AIS"/>
      <xsd:enumeration value="AMS"/>
      <xsd:enumeration value="ATPC_FAIL"/>
      <xsd:enumeration value="AU-AIS"/>
      <xsd:enumeration value="BER_SD"/>
      <xsd:enumeration value="BER_SF"/>
      <xsd:enumeration value="BLOCKED_FE"/>
      <xsd:enumeration value="CFG_ABORT"/>
      <xsd:enumeration value="CFG_ABORT_FE"/>
      <xsd:enumeration value="DCC_FAILURE"/>
      <xsd:enumeration value="DEMODULATION_FAIL"/>
      <xsd:enumeration value="EMS"/>
      <xsd:enumeration value="EMS_ALM_LOSS"/>
      <xsd:enumeration value="EMS_LIFECYCLE_LOSS"/>
      <xsd:enumeration value="EMS_ALM_AND_LIFECYCLE_LOSS"/>
      <xsd:enumeration value="EQPT"/>
      <xsd:enumeration value="ENV"/>
      <xsd:enumeration value="FF"/>
      <xsd:enumeration value="FOP_APS"/>
      <xsd:enumeration value="INSUFF_LINKS"/>
      <xsd:enumeration value="INSUFF_LINKS_FE"/>
      <xsd:enumeration value="LCD"/>
      <xsd:enumeration value="LIF"/>
      <xsd:enumeration value="LOA"/>
      <xsd:enumeration value="LOC"/>
      <xsd:enumeration value="LODS"/>
      <xsd:enumeration value="LOF"/>
      <xsd:enumeration value="LOM"/>
      <xsd:enumeration value="LOP"/>
      <xsd:enumeration value="LOPC"/>
      <xsd:enumeration value="LOS"/>
      <xsd:enumeration value="LOTC"/>
      <xsd:enumeration value="MODULATION_FAIL"/>
      <xsd:enumeration value="MS-AIS"/>
      <xsd:enumeration value="OS"/>
      <xsd:enumeration value="OS_ALM_LOSS"/>
      <xsd:enumeration value="OS_LIFECYCLE_LOSS"/>
      <xsd:enumeration value="OS_ALM_AND_LIFECYCLE_LOSS"/>
      <xsd:enumeration value="OSC-AIS"/>
      <xsd:enumeration value="OSC_BER_SF"/>
      <xsd:enumeration value="OSC_FERF"/>
      <xsd:enumeration value="OSC_LOF"/>
      <xsd:enumeration value="OSC_LOS"/>
      <xsd:enumeration value="OSC_SD"/>
      <xsd:enumeration value="PLM"/>
      <xsd:enumeration value="RAI"/>
      <xsd:enumeration value="RX_FAIL"/>
      <xsd:enumeration value="RX_MIS_CONNECT"/>
      <xsd:enumeration value="RX_UNUSABLE_FE"/>
      <xsd:enumeration value="SECURITY_VIOLATION"/>
      <xsd:enumeration value="SQL"/>
      <xsd:enumeration value="SSF"/>
      <xsd:enumeration value="STARTUP_FE"/>
      <xsd:enumeration value="TCF"/>
      <xsd:enumeration value="TCFE"/>
      <xsd:enumeration value="TCFI"/>
      <xsd:enumeration value="TIM"/>
      <xsd:enumeration value="TIMING_SYNCH"/>
      <xsd:enumeration value="TSD"/>
      <xsd:enumeration value="TSF"/>
      <xsd:enumeration value="TU-AIS"/>
      <xsd:enumeration value="TX_DEGRADE"/>
      <xsd:enumeration value="TX_FAIL"/>
      <xsd:enumeration value="TX_MIS_CONNECT"/>
      <xsd:enumeration value="TX_UNUSABLE_FE"/>
      <xsd:enumeration value="UAT"/>
      <xsd:enumeration value="UNEQ"/>
      <xsd:enumeration value="VC-AIS"/>
      <xsd:enumeration value="VC-RDI"/>
      <xsd:enumeration value="VP-AIS"/>
      <xsd:enumeration value="VP-RDI"/>
      <xsd:enumeration value="XPIC_FAIL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=====================-->
  <xsd:complexType name="ProbableCauseListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of MTOSI alarm probable causes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="prc" type="tns:ProbableCauseType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common
                type definitions used in some the mTOP XML Network
                Resource Assurance objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:simpleType name="AcknowledgeIndicationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>AcknowledgeIndicationType describes the event
                    acknowledge state.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ACKNOWLEDGED">
        <xsd:annotation>
          <xsd:documentation>provided in case of manual or
                        auto acknowledgement</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNACKNOWLEDGED">
        <xsd:annotation>
          <xsd:documentation>provided if the event has not
                        been acknowledged but the OS supports
                        acknowledgement for this event or in the case
                        that the alarm has been previously acknowledged
                        and then unacknowledged</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NOT_APPLICABLE">
        <xsd:annotation>
          <xsd:documentation>provided in case the OS does not
                        support acknowledgement for this event or does
                        not support acknowledgement at all</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=====================-->
  <xsd:complexType name="AssignedSeverityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The assigned severity is allocated to a probable
                    cause using the alarm severity assignment profile.</p>
        <p>The identified probable cause should be raised with
                    the assigned severity.</p>
        <p>The assignment of severities is extended beyond
                    PerceivedSeverity to cover the case where:</p>
        <p>- no alarm should be raised: "NOT_ALARMED"</p>
        <p>- the EMS/NE is free to make a choice based upon its
                    local criteria: "FREE_CHOICE"</p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:AssignedSeverityEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="AssignedSeverityEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enum values of a probable cause.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="CRITICAL"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="NOT_ALARMED"/>
      <xsd:enumeration value="FREE_CHOICE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentProtectionGroupTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The EquipmentProtectionGroupType with MTOSI minor
                    version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentProtectionGroupTypeEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentProtectionGroupTypeEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The equipment protection group type is a string that
                    identifies the type of equipment protection. The
                    string can take on the following value:
                    "M_FOR_N." M:N equipment protection means
                    that M pieces of equipment protect N pieces of equipment.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="M_FOR_N"/>
      <xsd:enumeration value="M:N"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentSwitchReasonType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The equipment switch reason reflects the reason why a
                    switch occurred.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentSwitchReasonEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentSwitchReasonEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>EswitchReason is a string that can take           the
                    following values:</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="NOT_APPLICABLE">
        <xsd:annotation>
          <xsd:documentation>
            <p>is used if a more precise value is not available</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FAILURE">
        <xsd:annotation>
          <xsd:documentation>
            <p>is used when an instance of equipment has failed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MANUAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>indicates a switch that was requested by the
                            operator          and includes forced switches</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NativeProbableCauseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Represents the native probable cause.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PerceivedSeverityListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of PerceivedSeverityType elements.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="perceivedSeverity" type="tns:PerceivedSeverityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PerceivedSeverityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The PerceivedSeverity values are consistent with
                    ITU-T X.733 definitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="CRITICAL"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="CLEARED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProbableCauseQualifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Represents the probable cause qualifier and shall be
                    present if the probable cause</p>
        <p>attribute is not sufficient to uniquely identify an alarm.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProposedRepairActionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Element of ProposedRepairActionListType.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProposedRepairActionListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of ProposedRepairActionType elements.</p>
        The
                optional "X.733::ProposedRepairActions"
                parameter uses this type. When present in an alarm
                notification, it indicates if the cause is known and the
                system being managed can suggest one or more solutions
                (such as switch in standby equipment, retry, replace
                media). This is consistent with the ITU-T X.733
                definition.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="proposedRepairAction" type="tns:ProposedRepairActionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionCommandType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This type identifies the possible protection switch
                    commands. See ITU-T Recommendation G.841 for definitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CLEAR"/>
      <xsd:enumeration value="LOCKOUT"/>
      <xsd:enumeration value="FORCED_SWITCH"/>
      <xsd:enumeration value="MANUAL_SWITCH"/>
      <xsd:enumeration value="EXERCISER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionGroupTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionGroupType with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionGroupTypeEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionGroupTypeEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection group type identifies the type of the
                    protection Group.</p>
        <p>It should be noted that although the term MSP was
                    chosen as the original specific protection scheme to
                    which the related behaviour applied was Multiplex
                    Section Protection, the label is now more generally
                    applied to any 1+1 or 1:N Trail protection scheme</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="MSP_1_PLUS_1"/>
      <xsd:enumeration value="MSP_1_FOR_N"/>
      <xsd:enumeration value="2_FIBER_BLSR"/>
      <xsd:enumeration value="4_FIBER_BLSR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionType with MTOSI minor version and
                    vendor extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionTypeEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionTypeEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection type identifies whether a protection
                    switch is an MS protection switch or an SNCP
                    protection switch.  It should be noted that although
                    the term MSP was chosen as the original specific
                    protection scheme to which the related behaviour
                    applied was Multiplex Section Protection, the label
                    is now more generally applied to any 1+1 or 1:N
                    Trail protection scheme.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MSP_APS"/>
      <xsd:enumeration value="SNCP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ReversionModeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reversion mode is used to indicate whether, after
                    repair of a failed resource, an additional switch
                    should be made to revert to the preferred resource.
                    Revertive modes may require a wait to restore (WTR)
                    time setting.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="NON_REVERTIVE"/>
      <xsd:enumeration value="REVERTIVE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ServiceAffectingType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the impact of a fault on monitored entities</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>The OS cannot determine if the
                        condition affects service or not</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SERVICE_AFFECTING">
        <xsd:annotation>
          <xsd:documentation>The OS determines that the
                        condition affects service</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NON_SERVICE_AFFECTING">
        <xsd:annotation>
          <xsd:documentation>TheOS determines that the
                        condition does not affect service</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="SpecificProblemListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of SpecificProblemType elements. The optional
                    "X.733::SpecificProblems" parameter uses
                    that type. When present in an alarm notification, it
                    identifies further refinements to the probable cause
                    of the alarm. This is consistent with the ITU-T
                    X.733 definition.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="specificProblem" type="tns:SpecificProblemType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SpecificProblemType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Element of SpecificProblemListType.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SwitchReasonType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The switch reason reflects the reason why a switch occurred.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_APPLICABLE">
        <xsd:annotation>
          <xsd:documentation>Value used upon retrieval of
                        switch data for non-revertive groups, if a more
                        precise value is not available</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="RESTORED">
        <xsd:annotation>
          <xsd:documentation>used for revertive groups to
                        indicate a return to the normal state</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIGNAL_FAIL">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIGNAL_MISMATCH">
        <xsd:annotation>
          <xsd:documentation>Value used in the case the signal
                        is ok, but is identified as coming from an
                        incorrect source:
                        TRAIL_TRACE_IDENTIFIER_MISMATCH, Signal Label
                        Mismatch, etc</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIGNAL_DEGRADE">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="AUTOMATIC_SWITCH">
        <xsd:annotation>
          <xsd:documentation>Value used when the exact switch
                        reason is unknown, in retrievals of switch data
                        if a protection switch is currently active or in
                        protection switch notifications</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MANUAL">
        <xsd:annotation>
          <xsd:documentation>Value indicates a switch that was
                        requested by the operator and includes forced switches</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="G_774_3_APSfunctionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The G_774_3_APSfunction with MTOSI minor version and
                    vendor extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:G_774_3_APSfunctionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="G_774_3_APSfunctionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Indicates if the switching function is based on APS
                    standardized protocol or on a proprietary protocol.
                    "G.783" is set in case of K1/K2 based APS,
                    and "Legacy" is set in case of proprietary
                    protocol, as for radio equipment for example.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="G.783"/>
      <xsd:enumeration value="Legacy"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=8</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/tca/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:com="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:ei="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:pm="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:pmth="http://www.tmforum.org/mtop/nra/xsd/pmth/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/tca/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the ThresholdCrossingAlert event.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/ei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pmth/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=16"/>
  <!--================-->
  <xsd:element name="thresholdCrossingAlert" substitutionGroup="cei:commonEventInformation" type="tns:ThresholdCrossingAlertType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of the ThresholdCrossingAlert event.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="ThresholdCrossingAlertType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the ThresholdCrossingAlert event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ei:EventInformationType">
        <xsd:sequence>
          <xsd:element name="aliasNameList" type="gen:AliasNameListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the list of aliases for the
                                    object associated with the event.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isClearable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the event is clearable
                                    (or is itself a clear).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="perceivedSeverity" type="com:PerceivedSeverityType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the severity of the TCA.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="layerRate" type="lay:LayerRateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The layer which this alarm is
                                    relevant to.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="granularity" type="pm:PerformanceMonitoringGranularityType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The layer for which this alarm is relevant.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="pmParameterName" type="pm:PerformanceMonitoringParameterNameType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Carries the details of the threshold
                                    that has been crossed.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="pmLocation" type="pm:PerformanceMonitoringLocationType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Carries the details of the threshold
                                    that has been crossed.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="thresholdType" type="pmth:PerformanceMonitoringThresholdType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Carries the details of the threshold
                                    that has been crossed.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="thresholdValue" nillable="true" type="xsd:float">
            <xsd:annotation>
              <xsd:documentation>
                <p>Carries the details of the threshold
                                    that has been crossed, if known.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="thresholdUnit" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Carries the unit of measurement of
                                    the threshold that has been crossed.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="acknowledgeIndication" type="tns:AcknowledgeIndicationType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Carries the details of the threshold
                                    that has been crossed, if known.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isEdgePointRelated" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>TRUE if this event relates to a PTP
                                    that is an edge point or to a PGP
                                    that contains a PTP that is an edge
                                    point. FALSE otherwise; this field
                                    is optional in this case.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="AcknowledgeIndicationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the acknowledgement state of a notification.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EVENT_ACKNOWLEDGED"/>
      <xsd:enumeration value="EVENT_UNACKNOWLEDGED"/>
      <xsd:enumeration value="NA"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=15</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PM ParameterName XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:element name="pmParameterName" type="tns:PerformanceMonitoringParameterNameType"/>
  <!--=================-->
  <!--TODO Should this be changed to a structure like in layers, where all possibilites are listed?-->
  <xsd:simpleType name="PerformanceMonitoringParameterNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Holds the name of Performance Measurements. It has
                    been defined as a string to accommodate backward
                    compatibility and proprietary extension.</p>
        <p>For currently standardized values see Performance
                    Parameters.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringParameterNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PerformanceMonitoringParameterName</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmParameterName" type="tns:PerformanceMonitoringParameterNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="PerformanceMonitoringThresholdTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes threshold types (watermark levels) for TCA
                    parameters. The TWM_HIGH and TWM_HIGHEST types are
                    used for TCAs</p>
        <p>that are raised when the measured value goes above
                    the threshold. The TWM_LOW and TWM_LOWEST types are
                    used for TCAs that</p>
        <p>are raised when the measured value goes below the
                    threshold (only apply to gauges).</p>
        <p/>
        <p>When there is only one level of TCA trigger, only
                    TWM_HIGH and/or TWM_LOW are used. When there are two
                    levels of TCA triggers,</p>
        <p>TWM_HIGHEST and/or TWM_LOWEST are used in addition.</p>
        <p>See SD1-37 PM Threshold Types for information on how
                    water mark levels are used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TWM_HIGHEST"/>
      <xsd:enumeration value="TWM_HIGH"/>
      <xsd:enumeration value="TWM_LOW"/>
      <xsd:enumeration value="TWM_LOWEST"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringGranularityListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PMGranularity</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmGranularity" type="tns:PerformanceMonitoringGranularityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="PerformanceMonitoringGranularityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Count period (interval) for which PM data may be
                    collected (and subsequently retrieved).</p>
        <p>
          <br>The value is one of:</br>
          <br>"15min" (15 minute interval collection)</br>
          <br>"24h" (24 hour interval collection)</br>
          <br>"NA" (for current instantaneous measurements)</br>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="15min"/>
      <xsd:enumeration value="24h"/>
      <xsd:enumeration value="NA"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="PerformanceMonitoringIntervalStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The following string values, to indicate the
                    relationship of measurement value and measurement interval</p>
        <p>
          <br>The value is one of:</br>
          <br>PMIS_Valid - Valid data.</br>
          <br>PMIS_Incomplete - Data not available for the
                        complete interval.</br>
          <br>PMIS_Invalid - Data available but marked as
                        invalid for the interval (can not distinguish
                        incomplete measurements from invalid measurements.</br>
          <br>PMIS_Unavailable - No data available at all for
                        this interval.</br>
          <br>PMIS_ZeroSuppressed - Zero-suppressed intervals.</br>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PMIS_Valid"/>
      <xsd:enumeration value="PMIS_Incomplete"/>
      <xsd:enumeration value="PMIS_Invalid"/>
      <xsd:enumeration value="PMIS_Unavailable"/>
      <xsd:enumeration value="PMIS_ZeroSuppressed"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringLocationListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PMLocation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmLocation" type="tns:PerformanceMonitoringLocationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="PerformanceMonitoringLocationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specification of PM location. For further details,
                    see supporting documentation: Location Identification).</p>
        <p>PM parameters may relate to measurements taken on
                    receive or transmit traffic either at the named TP
                    (PML_NEAR_END_Rx/Tx) or at the TP at the far end of
                    the trail (circuit/path) connected to the named TP
                    (PML_FAR_END_Rx/Tx). Alternatively, the PM
                    parameters may be bidirectional (PML_BIDIRECTIONAL)
                    e.g. resulting from a second by second summation and
                    evaluation of both far and near TPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PML_NEAR_END_Rx"/>
      <xsd:enumeration value="PML_FAR_END_Rx"/>
      <xsd:enumeration value="PML_FAR_ENDTypex"/>
      <xsd:enumeration value="PML_BIDIRECTIONAL"/>
      <xsd:enumeration value="PML_CONTRA_NEAR_END_Rx"/>
      <xsd:enumeration value="PML_CONTRA_FAR_END_Rx"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="HoldingTimeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type contains the minimum time the 24h PM
                    data records and 15min PM data records can hold the
                    data. This minimum time refers to the time after the
                    particular collection bins are closed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="storeTime24hr"/>
      <xsd:enumeration value="storeTime15min"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="TriggerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This type is used to indicate whether a threshold
                    type shall trigger a “raise” or a “clear” TCA</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="raise"/>
      <xsd:enumeration value="clear"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=16</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/pmth/v1" version="1.0" xmlns:pm="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/pmth/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PM Thrhold XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=15"/>
  <!--=================-->
  <xsd:element name="pmThreshold" type="tns:PerformanceMonitoringThresholdType"/>
  <!--=================-->
  <xsd:complexType name="PerformanceMonitoringThresholdType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This structure represents a Performance Monitoring
                    Threshold.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="thresholdType" nillable="true" type="pm:PerformanceMonitoringThresholdTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the type of threshold value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="trigger" nillable="true" type="pm:TriggerType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Indicates if the threshold triggers an raise
                            or clear alert</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="thresholdValue" nillable="true" type="xsd:float">
        <xsd:annotation>
          <xsd:documentation>
            <p>Threshold value (float used to incorporate
                            gauge PM parameters).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="thresholdUnit" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>Free format string describing the units for
                            the threshold value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringThresholdListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PM Thresholds</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmThreshold" type="tns:PerformanceMonitoringThresholdType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=5</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/eps/v1" version="1.0" xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" xmlns:com="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/eps/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the Equipment Protection Switch event.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/fmw/NotificationProducer/NotificationProducerHttp?xsd=2"/>
  <!--================-->
  <xsd:element name="equipmentProtectionSwitch" substitutionGroup="cei:commonEventInformation" type="tns:EquipmentProtectionSwitchType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of the Equipment Protection
                    Switch event.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="EquipmentProtectionSwitchType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the EquipmentProtectionSwitch event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cei:CommonEventInformationType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="osTime" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:documentation>
                <p>The time at which the event was
                                    reported by the OS (EMS).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="protectionType" type="com:EquipmentProtectionGroupTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The type of the equipment protection.
                                    If omitted, M:N is assumed.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="switchReason" type="com:EquipmentSwitchReasonType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The reason the switch occurred.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="epgRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute represents the name of
                                    the Equipment Protection Group (EPG)
                                    emitting the switch.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="protectedEquipmentRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute represents the name of
                                    the Equipment being protected when
                                    the switch occurred.
                                    For an M:N group, this attribute
                                    always identifies the worker
                                    equipment instance for which the
                                    switch occurred.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="switchAwayFromEquipmentRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute represents the name of
                                    the Equipment being switched away from.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="switchToEquipmentRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute represents the name of
                                    the Equipment that is switched to.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="EquipmentProtectionSwitchListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of EquipmentProtectionSwitch events.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="equipmentProtectionSwitch" type="tns:EquipmentProtectionSwitchType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer</con:endpoint></con:endpoints><con:operation isOneWay="false" action="subscribe" name="subscribe" bindingOperationName="subscribe" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:subscribeRequest>
         <v11:consumerEpr>?</v11:consumerEpr>
         <!--Optional:-->
         <v11:topic>?</v11:topic>
         <!--Optional:-->
         <v11:selector Dialect="?">
            e
            <!--You may enter ANY elements at this point-->
            gero
         </v11:selector>
      </v11:subscribeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="subscribe"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="unsubscribe" name="unsubscribe" bindingOperationName="unsubscribe" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:unsubscribeRequest>
         <v11:subscriptionID>?</v11:subscriptionID>
         <!--Optional:-->
         <v11:topic>?</v11:topic>
      </v11:unsubscribeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="unsubscribe"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="TerminationPointRetrievalSoapHttpBinding" type="wsdl" bindingName="{http://www.tmforum.org/mtop/mri/wsdl/tpr/v1-0}TerminationPointRetrievalSoapHttpBinding" soapVersion="1_1" anonymous="optional" definition="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp.wsdl?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp.wsdl?WSDL"><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp.wsdl?WSDL</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-TerminationPointRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/mri/wsdl/tpr/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/mri/wsdl/tpr/v1-0" xmlns:WL5G3N2="http://schemas.xmlsoap.org/wsdl/soap/">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?wsdl=1" namespace="http://www.tmforum.org/mtop/mri/wsdl/tpr/v1-0"/>
  <WL5G3N0:documentation>DDP: ManageResourceInventory
    Module: TerminationPointRetrieval Service Interface WSDL HTTP Module
    Description: This module contains all the mTOP TerminationPointRetrieval Service Interface WSDL definitions for the Web Service deployment profile with SOAP/HTTP binding.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:portType name="TerminationPointRetrieval_RPC">
    <WL5G3N0:documentation>The TerminationPointRetrieval porttype (interface) for RPC (synchronous) based client/server communication patterns. All SIT operations use the specific get"ObjectType"Iterator operation to handle multiple responses.</WL5G3N0:documentation>
    <WL5G3N0:operation name="getAllAssignableConnectionlessPortTerminationPoints">
      <WL5G3N0:input message="WL5G3N1:getAllAssignableConnectionlessPortTerminationPointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllAssignableConnectionlessPortTerminationPointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllAssignableConnectionlessPortTerminationPointsException" name="getAllAssignableConnectionlessPortTerminationPointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllAssignedConnectionlessPortTerminationPoints">
      <WL5G3N0:input message="WL5G3N1:getAllAssignedConnectionlessPortTerminationPointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllAssignedConnectionlessPortTerminationPointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllAssignedConnectionlessPortTerminationPointsException" name="getAllAssignedConnectionlessPortTerminationPointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllConnectionlessPortTerminationPoints">
      <WL5G3N0:input message="WL5G3N1:getAllConnectionlessPortTerminationPointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllConnectionlessPortTerminationPointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllConnectionlessPortTerminationPointsException" name="getAllConnectionlessPortTerminationPointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllEdgePoints">
      <WL5G3N0:input message="WL5G3N1:getAllEdgePointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllEdgePointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllEdgePointsException" name="getAllEdgePointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllFloatingTerminationPoints">
      <WL5G3N0:input message="WL5G3N1:getAllFloatingTerminationPointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllFloatingTerminationPointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllFloatingTerminationPointsException" name="getAllFloatingTerminationPointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllGroupTerminationPoints">
      <WL5G3N0:input message="WL5G3N1:getAllGroupTerminationPointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllGroupTerminationPointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllGroupTerminationPointsException" name="getAllGroupTerminationPointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllPhysicalTerminationPoints">
      <WL5G3N0:input message="WL5G3N1:getAllPhysicalTerminationPointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllPhysicalTerminationPointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllPhysicalTerminationPointsException" name="getAllPhysicalTerminationPointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllPhysicalTerminationPointsWithoutFtps">
      <WL5G3N0:input message="WL5G3N1:getAllPhysicalTerminationPointsWithoutFtpsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllPhysicalTerminationPointsWithoutFtpsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllPhysicalTerminationPointsWithoutFtpsException" name="getAllPhysicalTerminationPointsWithoutFtpsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllSupportedPhysicalTerminationPoints">
      <WL5G3N0:input message="WL5G3N1:getAllSupportedPhysicalTerminationPointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllSupportedPhysicalTerminationPointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllSupportedPhysicalTerminationPointsException" name="getAllSupportedPhysicalTerminationPointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllTerminationPointPools">
      <WL5G3N0:input message="WL5G3N1:getAllTerminationPointPoolsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllTerminationPointPoolsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllTerminationPointPoolsException" name="getAllTerminationPointPoolsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAssociatedTerminationPoint">
      <WL5G3N0:input message="WL5G3N1:getAssociatedTerminationPointRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAssociatedTerminationPointResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAssociatedTerminationPointException" name="getAssociatedTerminationPointException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAssociatedGroupTerminationPoint">
      <WL5G3N0:input message="WL5G3N1:getAssociatedGroupTerminationPointRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAssociatedGroupTerminationPointResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAssociatedGroupTerminationPointException" name="getAssociatedGroupTerminationPointException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAssociatedTerminationPointsWrtTmd">
      <WL5G3N0:input message="WL5G3N1:getAssociatedTerminationPointsWrtTmdRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAssociatedTerminationPointsWrtTmdResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAssociatedTerminationPointsWrtTmdException" name="getAssociatedTerminationPointsWrtTmdException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getContainedCurrentConnectionTerminationPoints">
      <WL5G3N0:input message="WL5G3N1:getContainedCurrentConnectionTerminationPointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getContainedCurrentConnectionTerminationPointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getContainedCurrentConnectionTerminationPointsException" name="getContainedCurrentConnectionTerminationPointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getContainedInUseConnectionTerminationPoints">
      <WL5G3N0:input message="WL5G3N1:getContainedInUseConnectionTerminationPointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getContainedInUseConnectionTerminationPointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getContainedInUseConnectionTerminationPointsException" name="getContainedInUseConnectionTerminationPointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getContainedPotentialConnectionTerminationPoints">
      <WL5G3N0:input message="WL5G3N1:getContainedPotentialConnectionTerminationPointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getContainedPotentialConnectionTerminationPointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getContainedPotentialConnectionTerminationPointsException" name="getContainedPotentialConnectionTerminationPointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getContainingGroupTerminationPoint">
      <WL5G3N0:input message="WL5G3N1:getContainingGroupTerminationPointRequest"/>
      <WL5G3N0:output message="WL5G3N1:getContainingGroupTerminationPointResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getContainingGroupTerminationPointException" name="getContainingGroupTerminationPointException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getContainingTerminationPoints">
      <WL5G3N0:input message="WL5G3N1:getContainingTerminationPointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getContainingTerminationPointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getContainingTerminationPointsException" name="getContainingTerminationPointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getGroupTerminationPoint">
      <WL5G3N0:input message="WL5G3N1:getGroupTerminationPointRequest"/>
      <WL5G3N0:output message="WL5G3N1:getGroupTerminationPointResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getGroupTerminationPointException" name="getGroupTerminationPointException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getTerminationPoint">
      <WL5G3N0:input message="WL5G3N1:getTerminationPointRequest"/>
      <WL5G3N0:output message="WL5G3N1:getTerminationPointResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getTerminationPointException" name="getTerminationPointException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getTerminationPointGroupingRelationships">
      <WL5G3N0:input message="WL5G3N1:getTerminationPointGroupingRelationshipsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getTerminationPointGroupingRelationshipsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getTerminationPointGroupingRelationshipsException" name="getTerminationPointGroupingRelationshipsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getTerminationPointPool">
      <WL5G3N0:input message="WL5G3N1:getTerminationPointPoolRequest"/>
      <WL5G3N0:output message="WL5G3N1:getTerminationPointPoolResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getTerminationPointPoolException" name="getTerminationPointPoolException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getTrafficConditioningProfileAssociatedTps">
      <WL5G3N0:input message="WL5G3N1:getTrafficConditioningProfileAssociatedTpsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getTrafficConditioningProfileAssociatedTpsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getTrafficConditioningProfileAssociatedTpsException" name="getTrafficConditioningProfileAssociatedTpsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getTerminationPointsIterator">
      <WL5G3N0:input message="WL5G3N1:getTerminationPointsIteratorRequest"/>
      <WL5G3N0:output message="WL5G3N1:getTerminationPointsIteratorResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getTerminationPointsIteratorException" name="getTerminationPointsIteratorException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getGroupTerminationPointsIterator">
      <WL5G3N0:input message="WL5G3N1:getGroupTerminationPointsIteratorRequest"/>
      <WL5G3N0:output message="WL5G3N1:getGroupTerminationPointsIteratorResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getGroupTerminationPointsIteratorException" name="getGroupTerminationPointsIteratorException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getTerminationPointPoolsIterator">
      <WL5G3N0:input message="WL5G3N1:getTerminationPointPoolsIteratorRequest"/>
      <WL5G3N0:output message="WL5G3N1:getTerminationPointPoolsIteratorResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getTerminationPointPoolsIteratorException" name="getTerminationPointPoolsIteratorException"/>
    </WL5G3N0:operation>
  </WL5G3N0:portType>
  <WL5G3N0:binding name="TerminationPointRetrievalSoapHttpBinding" type="WL5G3N1:TerminationPointRetrieval_RPC">
    <WL5G3N0:documentation>SOAP HTTP binding definitions of the operations of the TerminationPointRetrieval RPC portType (interface)</WL5G3N0:documentation>
    <WL5G3N2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <WL5G3N0:operation name="getAllAssignableConnectionlessPortTerminationPoints">
      <WL5G3N2:operation soapAction="getAllAssignableConnectionlessPortTerminationPoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllAssignableConnectionlessPortTerminationPointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllAssignableConnectionlessPortTerminationPointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllAssignableConnectionlessPortTerminationPointsException">
        <WL5G3N2:fault name="getAllAssignableConnectionlessPortTerminationPointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllAssignedConnectionlessPortTerminationPoints">
      <WL5G3N2:operation soapAction="getAllAssignedConnectionlessPortTerminationPoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllAssignedConnectionlessPortTerminationPointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllAssignedConnectionlessPortTerminationPointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllAssignedConnectionlessPortTerminationPointsException">
        <WL5G3N2:fault name="getAllAssignedConnectionlessPortTerminationPointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllConnectionlessPortTerminationPoints">
      <WL5G3N2:operation soapAction="getAllConnectionlessPortTerminationPoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllConnectionlessPortTerminationPointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllConnectionlessPortTerminationPointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllConnectionlessPortTerminationPointsException">
        <WL5G3N2:fault name="getAllConnectionlessPortTerminationPointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllEdgePoints">
      <WL5G3N2:operation soapAction="getAllEdgePoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllEdgePointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllEdgePointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllEdgePointsException">
        <WL5G3N2:fault name="getAllEdgePointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllFloatingTerminationPoints">
      <WL5G3N2:operation soapAction="getAllFloatingTerminationPoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllFloatingTerminationPointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllFloatingTerminationPointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllFloatingTerminationPointsException">
        <WL5G3N2:fault name="getAllFloatingTerminationPointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllGroupTerminationPoints">
      <WL5G3N2:operation soapAction="getAllGroupTerminationPoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllGroupTerminationPointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllGroupTerminationPointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllGroupTerminationPointsException">
        <WL5G3N2:fault name="getAllGroupTerminationPointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllPhysicalTerminationPoints">
      <WL5G3N2:operation soapAction="getAllPhysicalTerminationPoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllPhysicalTerminationPointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllPhysicalTerminationPointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllPhysicalTerminationPointsException">
        <WL5G3N2:fault name="getAllPhysicalTerminationPointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllPhysicalTerminationPointsWithoutFtps">
      <WL5G3N2:operation soapAction="getAllPhysicalTerminationPointsWithoutFtps" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllPhysicalTerminationPointsWithoutFtpsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllPhysicalTerminationPointsWithoutFtpsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllPhysicalTerminationPointsWithoutFtpsException">
        <WL5G3N2:fault name="getAllPhysicalTerminationPointsWithoutFtpsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllSupportedPhysicalTerminationPoints">
      <WL5G3N2:operation soapAction="getAllSupportedPhysicalTerminationPoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllSupportedPhysicalTerminationPointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllSupportedPhysicalTerminationPointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllSupportedPhysicalTerminationPointsException">
        <WL5G3N2:fault name="getAllSupportedPhysicalTerminationPointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllTerminationPointPools">
      <WL5G3N2:operation soapAction="getAllTerminationPointPools" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllTerminationPointPoolsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllTerminationPointPoolsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllTerminationPointPoolsException">
        <WL5G3N2:fault name="getAllTerminationPointPoolsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAssociatedGroupTerminationPoint">
      <WL5G3N2:operation soapAction="getAssociatedGroupTerminationPoint" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAssociatedGroupTerminationPointRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAssociatedGroupTerminationPointResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAssociatedGroupTerminationPointException">
        <WL5G3N2:fault name="getAssociatedGroupTerminationPointException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAssociatedTerminationPoint">
      <WL5G3N2:operation soapAction="getAssociatedTerminationPoint" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAssociatedTerminationPointRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAssociatedTerminationPointResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAssociatedTerminationPointException">
        <WL5G3N2:fault name="getAssociatedTerminationPointException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAssociatedTerminationPointsWrtTmd">
      <WL5G3N2:operation soapAction="getAssociatedTerminationPointsWrtTmd" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAssociatedTerminationPointsWrtTmdRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAssociatedTerminationPointsWrtTmdResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAssociatedTerminationPointsWrtTmdException">
        <WL5G3N2:fault name="getAssociatedTerminationPointsWrtTmdException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getContainedCurrentConnectionTerminationPoints">
      <WL5G3N2:operation soapAction="getContainedCurrentConnectionTerminationPoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getContainedCurrentConnectionTerminationPointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getContainedCurrentConnectionTerminationPointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getContainedCurrentConnectionTerminationPointsException">
        <WL5G3N2:fault name="getContainedCurrentConnectionTerminationPointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getContainedInUseConnectionTerminationPoints">
      <WL5G3N2:operation soapAction="getContainedInUseConnectionTerminationPoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getContainedInUseConnectionTerminationPointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getContainedInUseConnectionTerminationPointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getContainedInUseConnectionTerminationPointsException">
        <WL5G3N2:fault name="getContainedInUseConnectionTerminationPointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getContainedPotentialConnectionTerminationPoints">
      <WL5G3N2:operation soapAction="getContainedPotentialConnectionTerminationPoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getContainedPotentialConnectionTerminationPointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getContainedPotentialConnectionTerminationPointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getContainedPotentialConnectionTerminationPointsException">
        <WL5G3N2:fault name="getContainedPotentialConnectionTerminationPointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getContainingGroupTerminationPoint">
      <WL5G3N2:operation soapAction="getContainingGroupTerminationPoint" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getContainingGroupTerminationPointRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getContainingGroupTerminationPointResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getContainingGroupTerminationPointException">
        <WL5G3N2:fault name="getContainingGroupTerminationPointException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getContainingTerminationPoints">
      <WL5G3N2:operation soapAction="getContainingTerminationPoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getContainingTerminationPointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getContainingTerminationPointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getContainingTerminationPointsException">
        <WL5G3N2:fault name="getContainingTerminationPointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getGroupTerminationPoint">
      <WL5G3N2:operation soapAction="getGroupTerminationPoint" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getGroupTerminationPointRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getGroupTerminationPointResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getGroupTerminationPointException">
        <WL5G3N2:fault name="getGroupTerminationPointException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getTerminationPoint">
      <WL5G3N2:operation soapAction="getTerminationPoint" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getTerminationPointRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getTerminationPointResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getTerminationPointException">
        <WL5G3N2:fault name="getTerminationPointException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getTerminationPointGroupingRelationships">
      <WL5G3N2:operation soapAction="getTerminationPointGroupingRelationships" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getTerminationPointGroupingRelationshipsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getTerminationPointGroupingRelationshipsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getTerminationPointGroupingRelationshipsException">
        <WL5G3N2:fault name="getTerminationPointGroupingRelationshipsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getTerminationPointPool">
      <WL5G3N2:operation soapAction="getTerminationPointPool" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getTerminationPointPoolRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getTerminationPointPoolResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getTerminationPointPoolException">
        <WL5G3N2:fault name="getTerminationPointPoolException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getTrafficConditioningProfileAssociatedTps">
      <WL5G3N2:operation soapAction="getTrafficConditioningProfileAssociatedTps" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getTrafficConditioningProfileAssociatedTpsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getTrafficConditioningProfileAssociatedTpsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getTrafficConditioningProfileAssociatedTpsException">
        <WL5G3N2:fault name="getTrafficConditioningProfileAssociatedTpsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getTerminationPointsIterator">
      <WL5G3N2:operation soapAction="getTerminationPointsIterator" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getTerminationPointsIteratorRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getTerminationPointsIteratorResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getTerminationPointsIteratorException">
        <WL5G3N2:fault name="getTerminationPointsIteratorException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getGroupTerminationPointsIterator">
      <WL5G3N2:operation soapAction="getGroupTerminationPointsIterator" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getGroupTerminationPointsIteratorRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getGroupTerminationPointsIteratorResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getGroupTerminationPointsIteratorException">
        <WL5G3N2:fault name="getGroupTerminationPointsIteratorException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getTerminationPointPoolsIterator">
      <WL5G3N2:operation soapAction="getTerminationPointPoolsIterator" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getTerminationPointPoolsIteratorRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getTerminationPointPoolsIteratorResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getTerminationPointPoolsIteratorException">
        <WL5G3N2:fault name="getTerminationPointPoolsIteratorException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
  </WL5G3N0:binding>
  <WL5G3N0:service name="TerminationPointRetrievalHttp">
    <WL5G3N0:documentation>Example of the TerminationPointRetrieval WSDL Service definition as a deployment example of this mTOP Service Interface. It is expected to be modified to match the specific deployment configuration in a service provider's CCV.</WL5G3N0:documentation>
    <WL5G3N0:port binding="WL5G3N1:TerminationPointRetrievalSoapHttpBinding" name="TerminationPointRetrievalSoapHttp">
      <WL5G3N2:address location="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp"/>
    </WL5G3N0:port>
  </WL5G3N0:service>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?wsdl=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-TerminationPointRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/mri/wsdl/tpr/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:WL5G3N2="http://www.tmforum.org/mtop/mri/xsd/tpr/v1">
  <WL5G3N0:documentation>DDP: ManageResourceInventory
    Module: TerminationPointRetrieval Service Interface WSDL Message Module
    Description: This module contains all the mTOP TerminationPointRetrieval Service Interface WSDL message definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:types>
    <xsd:schema xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/mri/wsdl/tpr/v1-0" xmlns:tpr="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=17"/>
    </xsd:schema>
  </WL5G3N0:types>
  <WL5G3N0:message name="getAllAssignableConnectionlessPortTerminationPointsRequest">
    <WL5G3N0:documentation>The getAllAssignableConnectionlessPortTerminationPoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllAssignableConnectionlessPortTerminationPointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllAssignableConnectionlessPortTerminationPointsResponse">
    <WL5G3N0:documentation>The getAllAssignableConnectionlessPortTerminationPoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllAssignableConnectionlessPortTerminationPointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllAssignableConnectionlessPortTerminationPointsException">
    <WL5G3N0:documentation>The getAllAssignableConnectionlessPortTerminationPoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllAssignableConnectionlessPortTerminationPointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllAssignedConnectionlessPortTerminationPointsRequest">
    <WL5G3N0:documentation>The getAllAssignedConnectionlessPortTerminationPoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllAssignedConnectionlessPortTerminationPointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllAssignedConnectionlessPortTerminationPointsResponse">
    <WL5G3N0:documentation>The getAllAssignedConnectionlessPortTerminationPoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllAssignedConnectionlessPortTerminationPointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllAssignedConnectionlessPortTerminationPointsException">
    <WL5G3N0:documentation>The getAllAssignedConnectionlessPortTerminationPoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllAssignedConnectionlessPortTerminationPointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllConnectionlessPortTerminationPointsRequest">
    <WL5G3N0:documentation>The getAllConnectionlessPortTerminationPoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllConnectionlessPortTerminationPointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllConnectionlessPortTerminationPointsResponse">
    <WL5G3N0:documentation>The getAllConnectionlessPortTerminationPoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllConnectionlessPortTerminationPointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllConnectionlessPortTerminationPointsException">
    <WL5G3N0:documentation>The getAllConnectionlessPortTerminationPoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllConnectionlessPortTerminationPointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllEdgePointsRequest">
    <WL5G3N0:documentation>The getAllEdgePoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllEdgePointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllEdgePointsResponse">
    <WL5G3N0:documentation>The getAllEdgePoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllEdgePointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllEdgePointsException">
    <WL5G3N0:documentation>The getAllEdgePoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllEdgePointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllFloatingTerminationPointsRequest">
    <WL5G3N0:documentation>The getAllFloatingTerminationPoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllFloatingTerminationPointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllFloatingTerminationPointsResponse">
    <WL5G3N0:documentation>The getAllFloatingTerminationPoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllFloatingTerminationPointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllFloatingTerminationPointsException">
    <WL5G3N0:documentation>The getAllFloatingTerminationPoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllFloatingTerminationPointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllGroupTerminationPointsRequest">
    <WL5G3N0:documentation>The getAllGroupTerminationPoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllGroupTerminationPointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllGroupTerminationPointsResponse">
    <WL5G3N0:documentation>The getAllGroupTerminationPoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllGroupTerminationPointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllGroupTerminationPointsException">
    <WL5G3N0:documentation>The getAllGroupTerminationPoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllGroupTerminationPointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllPhysicalTerminationPointsRequest">
    <WL5G3N0:documentation>The getAllPhysicalTerminationPoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllPhysicalTerminationPointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllPhysicalTerminationPointsResponse">
    <WL5G3N0:documentation>The getAllPhysicalTerminationPoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllPhysicalTerminationPointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllPhysicalTerminationPointsException">
    <WL5G3N0:documentation>The getAllPhysicalTerminationPoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllPhysicalTerminationPointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllPhysicalTerminationPointsWithoutFtpsRequest">
    <WL5G3N0:documentation>The getAllPhysicalTerminationPointsWithoutFtps request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllPhysicalTerminationPointsWithoutFtpsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllPhysicalTerminationPointsWithoutFtpsResponse">
    <WL5G3N0:documentation>The getAllPhysicalTerminationPointsWithoutFtps response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllPhysicalTerminationPointsWithoutFtpsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllPhysicalTerminationPointsWithoutFtpsException">
    <WL5G3N0:documentation>The getAllPhysicalTerminationPointsWithoutFtps exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllPhysicalTerminationPointsWithoutFtpsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllSupportedPhysicalTerminationPointsRequest">
    <WL5G3N0:documentation>The getAllSupportedPhysicalTerminationPoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllSupportedPhysicalTerminationPointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllSupportedPhysicalTerminationPointsResponse">
    <WL5G3N0:documentation>The getAllSupportedPhysicalTerminationPoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllSupportedPhysicalTerminationPointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllSupportedPhysicalTerminationPointsException">
    <WL5G3N0:documentation>The getAllSupportedPhysicalTerminationPoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllSupportedPhysicalTerminationPointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllTerminationPointPoolsRequest">
    <WL5G3N0:documentation>The getAllTerminationPointPools request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllTerminationPointPoolsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllTerminationPointPoolsResponse">
    <WL5G3N0:documentation>The getAllTerminationPointPools response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllTerminationPointPoolsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllTerminationPointPoolsException">
    <WL5G3N0:documentation>The getAllTerminationPointPools exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllTerminationPointPoolsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAssociatedTerminationPointRequest">
    <WL5G3N0:documentation>The getAssociatedTerminationPoint request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAssociatedTerminationPointRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAssociatedTerminationPointResponse">
    <WL5G3N0:documentation>The getAssociatedTerminationPoint response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAssociatedTerminationPointResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAssociatedTerminationPointException">
    <WL5G3N0:documentation>The getAssociatedTerminationPoint exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAssociatedTerminationPointException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAssociatedGroupTerminationPointRequest">
    <WL5G3N0:documentation>The getAssociatedGroupTerminationPoint request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAssociatedGroupTerminationPointRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAssociatedGroupTerminationPointResponse">
    <WL5G3N0:documentation>The getAssociatedGroupTerminationPoint response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAssociatedGroupTerminationPointResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAssociatedGroupTerminationPointException">
    <WL5G3N0:documentation>The getAssociatedGroupTerminationPoint exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAssociatedGroupTerminationPointException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAssociatedTerminationPointsWrtTmdRequest">
    <WL5G3N0:documentation>The getAssociatedTerminationPointsWrtTmd request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAssociatedTerminationPointsWrtTmdRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAssociatedTerminationPointsWrtTmdResponse">
    <WL5G3N0:documentation>The getAssociatedTerminationPointsWrtTmd response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAssociatedTerminationPointsWrtTmdResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAssociatedTerminationPointsWrtTmdException">
    <WL5G3N0:documentation>The getAssociatedTerminationPointsWrtTmd exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAssociatedTerminationPointsWrtTmdException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainedCurrentConnectionTerminationPointsRequest">
    <WL5G3N0:documentation>The getContainedCurrentConnectionTerminationPoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getContainedCurrentConnectionTerminationPointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainedCurrentConnectionTerminationPointsResponse">
    <WL5G3N0:documentation>The getContainedCurrentConnectionTerminationPoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getContainedCurrentConnectionTerminationPointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainedCurrentConnectionTerminationPointsException">
    <WL5G3N0:documentation>The getContainedCurrentConnectionTerminationPoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getContainedCurrentConnectionTerminationPointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainedInUseConnectionTerminationPointsRequest">
    <WL5G3N0:documentation>The getContainedInUseConnectionTerminationPoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getContainedInUseConnectionTerminationPointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainedInUseConnectionTerminationPointsResponse">
    <WL5G3N0:documentation>The getContainedInUseConnectionTerminationPoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getContainedInUseConnectionTerminationPointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainedInUseConnectionTerminationPointsException">
    <WL5G3N0:documentation>The getContainedInUseConnectionTerminationPoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getContainedInUseConnectionTerminationPointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainedPotentialConnectionTerminationPointsRequest">
    <WL5G3N0:documentation>The getContainedPotentialConnectionTerminationPoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getContainedPotentialConnectionTerminationPointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainedPotentialConnectionTerminationPointsResponse">
    <WL5G3N0:documentation>The getContainedPotentialConnectionTerminationPoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getContainedPotentialConnectionTerminationPointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainedPotentialConnectionTerminationPointsException">
    <WL5G3N0:documentation>The getContainedPotentialConnectionTerminationPoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getContainedPotentialConnectionTerminationPointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainingGroupTerminationPointRequest">
    <WL5G3N0:documentation>The getContainingGroupTerminationPoint request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getContainingGroupTerminationPointRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainingGroupTerminationPointResponse">
    <WL5G3N0:documentation>The getContainingGroupTerminationPoint response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getContainingGroupTerminationPointResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainingGroupTerminationPointException">
    <WL5G3N0:documentation>The getContainingGroupTerminationPoint exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getContainingGroupTerminationPointException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainingTerminationPointsRequest">
    <WL5G3N0:documentation>The getContainingTerminationPoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getContainingTerminationPointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainingTerminationPointsResponse">
    <WL5G3N0:documentation>The getContainingTerminationPoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getContainingTerminationPointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainingTerminationPointsException">
    <WL5G3N0:documentation>The getContainingTerminationPoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getContainingTerminationPointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getGroupTerminationPointRequest">
    <WL5G3N0:documentation>The getGroupTerminationPoint request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getGroupTerminationPointRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getGroupTerminationPointResponse">
    <WL5G3N0:documentation>The getGroupTerminationPoint response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getGroupTerminationPointResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getGroupTerminationPointException">
    <WL5G3N0:documentation>The getGroupTerminationPoint exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getGroupTerminationPointException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointRequest">
    <WL5G3N0:documentation>The getTerminationPoint request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointResponse">
    <WL5G3N0:documentation>The getTerminationPoint response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointException">
    <WL5G3N0:documentation>The getTerminationPoint exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointGroupingRelationshipsRequest">
    <WL5G3N0:documentation>The getTerminationPointGroupingRelationships request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointGroupingRelationshipsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointGroupingRelationshipsResponse">
    <WL5G3N0:documentation>The getTerminationPointGroupingRelationships response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointGroupingRelationshipsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointGroupingRelationshipsException">
    <WL5G3N0:documentation>The getTerminationPointGroupingRelationships exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointGroupingRelationshipsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointPoolRequest">
    <WL5G3N0:documentation>The getTerminationPointPool request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointPoolRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointPoolResponse">
    <WL5G3N0:documentation>The getTerminationPointPool response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointPoolResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointPoolException">
    <WL5G3N0:documentation>The getTerminationPointPool exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointPoolException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTrafficConditioningProfileAssociatedTpsRequest">
    <WL5G3N0:documentation>The getTrafficConditioningProfileAssociatedTps request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getTrafficConditioningProfileAssociatedTpsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTrafficConditioningProfileAssociatedTpsResponse">
    <WL5G3N0:documentation>The getTrafficConditioningProfileAssociatedTps response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getTrafficConditioningProfileAssociatedTpsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTrafficConditioningProfileAssociatedTpsException">
    <WL5G3N0:documentation>The getTrafficConditioningProfileAssociatedTps exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getTrafficConditioningProfileAssociatedTpsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointsIteratorRequest">
    <WL5G3N0:documentation>The getTerminationPointsIterator request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointsIteratorRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointsIteratorResponse">
    <WL5G3N0:documentation>The getTerminationPointsIterator response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointsIteratorResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointsIteratorException">
    <WL5G3N0:documentation>The getTerminationPointsIterator exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointsIteratorException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getGroupTerminationPointsIteratorRequest">
    <WL5G3N0:documentation>The getGroupTerminationPointsIterator request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getGroupTerminationPointsIteratorRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getGroupTerminationPointsIteratorResponse">
    <WL5G3N0:documentation>The getGroupTerminationPointsIterator response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getGroupTerminationPointsIteratorResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getGroupTerminationPointsIteratorException">
    <WL5G3N0:documentation>The getGroupTerminationPointsIterator exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getGroupTerminationPointsIteratorException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointPoolsIteratorRequest">
    <WL5G3N0:documentation>The getTerminationPointPoolsIterator request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointPoolsIteratorRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointPoolsIteratorResponse">
    <WL5G3N0:documentation>The getTerminationPointPoolsIterator response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointPoolsIteratorResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getTerminationPointPoolsIteratorException">
    <WL5G3N0:documentation>The getTerminationPointPoolsIterator exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getTerminationPointPoolsIteratorException" name="mtopBody"/>
  </WL5G3N0:message>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=17</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:fd="http://www.tmforum.org/mtop/nrf/xsd/fd/v1" xmlns:gtp="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" xmlns:lr="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:tp="http://www.tmforum.org/mtop/nrf/xsd/tp/v1" xmlns:tpp="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Manage Resource Inventory</p>
      <p>Module:  Message XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP TP Retrieval SI XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=14"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=12"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/fd/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=5"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=18"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=19"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=8"/>
  <!--================-->
  <xsd:element name="getAllAssignableConnectionlessPortTerminationPointsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllAssignableConnectionlessPortTerminationPoints operation</p>
        <p>This operation retrieves the details of all
                    Connectionless Port Termination Points (CPTPs) which
                    are potentially able to be assigned to the provided
                    Matrix Flow Domain (MFD).</p>
        <p>Potentially means: The CPTPs are on the same
                    Equipment or same Rack with backplane connectivity
                    as the MFD. It is irrelevant whether the CPTPs are
                    already assigned to an MFD or not.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="mfdRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter provides name of the
                                Matrix Flow Domain whose potential CPTPs
                                shall be returned.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllAssignableConnectionlessPortTerminationPointsResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllAssignableConnectionlessPortTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="cptpList" type="tp:TerminationPointListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter returns the list of
                                Connectionless Port Termination Point
                                objects (i.e., Physical Termination
                                Points and Floating Termination Points)
                                assignable to the provided Matrix Flow Domain.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllAssignableConnectionlessPortTerminationPointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllAssignableConnectionlessPortTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllAssignedConnectionlessPortTerminationPointsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllAssignedConnectionlessPortTerminationPoints operation</p>
        <p>This operation retrieves the details of all
                    Connectionless Port Termination Points assigned to
                    the provided Matrix Flow Domain.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="mfdRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter provides name of the
                                Matrix Flow Domain whose assigned CPTPs
                                shall be returned.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllAssignedConnectionlessPortTerminationPointsResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllAssignedConnectionlessPortTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="cptpList" type="tp:TerminationPointListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter returns the list of
                                Connectionless Port Termination Point
                                objects (i.e., Physical Termination
                                Points and Floating Termination Points)
                                assigned to the provided Matrix Flow Domain.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllAssignedConnectionlessPortTerminationPointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllAssignedConnectionlessPortTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllConnectionlessPortTerminationPointsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllConnectionlessPortTerminationPoints operation</p>
        <p>This operation retrieves the details of all
                    Connectionless Port Termination Points (CPTPs)
                    associated to the provided Flow Domain. It is
                    possible to filter the request to retrieve only
                    fdEdge (UNI and E-NNI sides), only fdInternal or all CPTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="fdRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter provides name of the Flow
                                Domain whose associated CPTPs are in scope.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="cptpRole" type="com:ConnectionlessPortTerminationPointRoleType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter provides the kind of CPTPs
                                to be returned (only fdEdge, only
                                fdInternal, or all).</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllConnectionlessPortTerminationPointsResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllConnectionlessPortTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="cptpList" type="tp:TerminationPointListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter returns the filtered list
                                of Connectionless Port Termination Point
                                objects (i.e., Physical Termination
                                Points and Floating Termination Points)
                                associated to the provided Flow Domain.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllConnectionlessPortTerminationPointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllConnectionlessPortTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllEdgePointsRequest" type="tns:GetAllEdgePointsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getAllEdgePoints operation</p>
        <p>
          This operation retrieves a filtered list of all
                    Termination Points (TPs) that are at the edge of the
                    provided Multi Layer Subnetwork (MLSN) which
          <ul>
            <li>contain one or more of the provided TP Layer
                            Rates and</li>
            <li>are capable of containing CTPs that can be
                            connected at one or more of the also
                            provided connection Layer Rates. The
                            operation considers the
                            capability/flexibility of the PTPs, not
                            their current states.</li>
          </ul>
        </p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllEdgePointsResponse" type="tns:MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getAllEdgePoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllEdgePointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getAllEdgePoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllFloatingTerminationPointsRequest" type="tns:GetAllTerminationPointsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllFloatingTerminationPoints operation</p>
        <p>This operation has exactly the same behaviour as
                    getAllPhysicalTerminationPoints(), but instead of
                    returning both PTPs and FTPs it returns solely FTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllFloatingTerminationPointsResponse" type="tns:MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllFloatingTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllFloatingTerminationPointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllFloatingTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllGroupTerminationPointsRequest" type="tns:GetAllGroupTerminationPointsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllGroupTerminationPoints operation</p>
        <p>This operation allows an OS to request all of the
                    GTPs (on the given Managed Element) that contain one
                    or more TPs at the specified layer rates. If there
                    are no GTPs that match the layer constraints, an
                    empty list is returned (see SD1-3 Bundled SNC
                    overview for further information on GTP usage).</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllGroupTerminationPointsResponse" type="tns:MultipleGroupTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllGroupTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllGroupTerminationPointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllGroupTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllPhysicalTerminationPointsRequest" type="tns:GetAllTerminationPointsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllPhysicalTerminationPoints operation</p>
        <p>This operation allows an OS to request all of the
                    PTPs and FTPs on the specified Managed Element, that
                    contain one or more of the OS-specified PTP/FTP
                    layer rates, and that are capable of supporting one
                    or more of the OS-specified connection layer rates.
                    If there are no PTPs/FTPs that match the layer
                    constraints, an empty list is returned. A PTP/FTP
                    will be returned regardless of connectivity to other
                    managed elements and regardless of position in the
                    subnetwork (both edgepoints of the subnetwork and
                    the PTPs/FTPs that are internal to the subnetwork
                    are reported).</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllPhysicalTerminationPointsResponse" type="tns:MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllPhysicalTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllPhysicalTerminationPointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllPhysicalTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllPhysicalTerminationPointsWithoutFtpsRequest" type="tns:GetAllTerminationPointsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllPhysicalTerminationPointsWithoutFtps operation</p>
        <p>
          This operation retrieves a filtered list of all
                    Physical Termination Points (PTPs) (no Floating
                    Termination Point (FTP) subclasses) within a
                    provided Managed Element (ME) which
          <ul>
            <li>contain one or more of the provided TP Layer
                            Rates and</li>
            <li>are capable of containing CTPs that can be
                            connected at one or more of the provided
                            connection Layer Rates.</li>
          </ul>
          This operation considers the
                    capability/flexibility of the PTPs, not their
                    current states.
        </p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllPhysicalTerminationPointsWithoutFtpsResponse" type="tns:MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllPhysicalTerminationPointsWithoutFtps operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllPhysicalTerminationPointsWithoutFtpsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllPhysicalTerminationPointsWithoutFtps operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllSupportedPhysicalTerminationPointsRequest" type="tns:RequestProfile3Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllSupportedPhysicalTerminationPoints operation</p>
        <p>This operation allows an OS to request the PTPs/FTPs
                    that are directly supported by a given equipment.
                    The PTPs that are returned are those that share
                    their physical layer with the primary equipment
                    (i.e. that represent a port on the equipment or are
                    connected by a fibre, wire, etc.). The FTPs that are
                    returned are those which are implemented by the
                    physical circuitry supported by the equipment and
                    will include FTPs that are named from the specified
                    equipment (the FTPs will depend upon the presence of
                    that equipment for their most basic operation).</p>
        <p>When there is equipment protection, this operation
                    reports PTPs/FTPs for the primary equipment only.
                    That is, when called on a protecting equipment (as
                    opposed to the primary equipment), this operation
                    returns an empty list, irrespective of the current
                    switch status.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllSupportedPhysicalTerminationPointsResponse" type="tns:MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllSupportedPhysicalTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllSupportedPhysicalTerminationPointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllSupportedPhysicalTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllTerminationPointPoolsRequest" type="tns:RequestProfile1Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllTerminationPointPools operation</p>
        <p>This operation retrieves all Termination Point Pools
                    (TP Pools) contained by a provided Multi Layer
                    Subnetwork (MLSN).</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllTerminationPointPoolsResponse" type="tns:MultipleTerminationPointPoolObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllTerminationPointPools operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllTerminationPointPoolsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllTerminationPointPools operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAssociatedTerminationPointRequest" type="tns:RequestProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAssociatedTerminationPoint operation</p>
        <p>This operation returns a list of PSR (UPSR or SNCP)
                    associated termination points for the TP whose name
                    is passed as a parameter. Note: The termination
                    point name must be explicit (a generic endpoint
                    specification may not be used in this case). See
                    Object Naming for further detail on FTP naming. When
                    this service is invoked with a TP that is not an
                    edge point, the returned TPs will be on the same
                    Managed Element</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAssociatedTerminationPointResponse" type="tns:MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAssociatedTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAssociatedTerminationPointException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAssociatedTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAssociatedGroupTerminationPointRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAssociatedGroupTerminationPoint operation</p>
        <p>This operation retrieves the details of the Group
                    Termination Point (GTP) containing the provided
                    Connection Termination Point (CTP).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="ctpRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter provides the name of the
                                Connection Termination Point whose
                                containing GTP is to be returned.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAssociatedGroupTerminationPointResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAssociatedGroupTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="gtp" type="gtp:GroupTerminationPointType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter returns the GTP object
                                containing the provided CTP.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAssociatedGroupTerminationPointException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAssociatedGroupTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAssociatedTerminationPointsWrtTmdRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAssociatedTerminationPointsWrtTmd operation</p>
        <p>This operation allows an OS to request all of the TPs
                    associated with the specified Transmission
                    Descriptor.       If there are no TPs which are
                    associated with the specified Transmission
                    Descriptor, then an empty list is returned.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="tmdRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the TMD.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAssociatedTerminationPointsWrtTmdResponse" type="tns:MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAssociatedTerminationPointsWrtTmd operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAssociatedTerminationPointsWrtTmdException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAssociatedTerminationPointsWrtTmd operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getContainedCurrentConnectionTerminationPointsRequest" type="tns:GetAllConnectionTerminationPointsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getContainedCurrentConnectionTerminationPoints operation</p>
        <p>This operation is used to retrieve the
                    "current" CTPs that are contained within a
                    specific PTP, FTP or CTP, at specific layer rates. A
                    "current" CTP is defined as a CTP that is
                    either cross-connectable or cross-connected,in the
                    current mapping configuration.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getContainedCurrentConnectionTerminationPointsResponse" type="tns:MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getContainedCurrentConnectionTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getContainedCurrentConnectionTerminationPointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getContainedCurrentConnectionTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getContainedInUseConnectionTerminationPointsRequest" type="tns:GetAllConnectionTerminationPointsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getContainedInUseConnectionTerminationPoints operation</p>
        <p>This operation is used to retrieve the "in
                    use" CTPs that are contained within a specific
                    PTP, FTP or CTP, at specific layer rates. An
                    "in use" CTP is defined as a CTP that is
                    used by an SNC in any state (including pending),
                    either as a CM end point or as an intermediate
                    connection point, or a CTP that is terminated and
                    mapped. This operation will be used when there are a
                    large number of potential CTPs (e.g., in ATM).</p>
        <p>Example of usage with respect to ATM: To retrieve all
                    actual ATM Network Interfaces associated with a PTP,
                    this operation will be invoked using the PTP name as
                    the tpName and LR_ATM_NI as the only layer rate in
                    the layerRateList. The VPI and VCI ranges that are
                    specified in the returned ATM Network Interface
                    transmissionParams (i.e., Max_VPI_Bits and
                    Max_VCI_Bits) can then be used to determine the
                    potential VPI/VCI range. A subsequent invocation of
                    this operation using an ATM Network Interface CTP as
                    input can be used to determine which VPIs/VCIs are
                    actually in use (with LR_ATM_VP and LR_ATM_VC
                    included in the connectionRateList).</p>
        <p>
          Example of usage with respect to SONET/SDH: Consider
                    an STM4 PTP with layerRate:
                    LR_Optical_OC12_and_STM4. Assume that the set of
                    CTPs returned by operation
                    getContainedPotentialTPs() contains one CTP with
                    layerRate LR_STS3c_and_AU4_VC4 that is terminating
                    an SNC (layerRate LR_STS3c_and_AU4_VC4), and another
                    CTP with layerRate LR_STS3c_and_AU4_VC4 that is
                    terminated and mapped (attribute tpMappingMode is
                    set to TMTypeERMINATED_AND_AVAILABLE_FOR_MAPPING).
                    The CTP with layerRate LR_STS3c_and_AU4_VC4 that is
                    terminated and mapped contains one CTP with
                    layerRate LR_VT2_andTypeU12_VC12 that is involved in
                    an SNC. None of the other contained CTPs have
                    attribute tpMappingMode set to
                    TMTypeERMINATED_AND_AVAILABLE_FOR_MAPPING, or are
                    involved in an SNC. Operation getContainedInUseTPs
                    then returns three CTPs:
          <ul>
            <li>The CTP with layerRate LR_STS3c_and_AU4_VC4
                            that is terminating an SNC.</li>
            <li>The CTP with layerRate LR_STS3c_and_AU4_VC4
                            that has attribute tpMappingMode set to TMTypeERMINATED_AND_AVAILABLE_FOR_MAPPING.</li>
            <li>The CTP with layerRate
                            LR_VT2_andTypeU12_VC12 that is terminating
                            an SNC.</li>
          </ul>
        </p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getContainedInUseConnectionTerminationPointsResponse" type="tns:MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getContainedInUseConnectionTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getContainedInUseConnectionTerminationPointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getContainedInUseConnectionTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getContainedPotentialConnectionTerminationPointsRequest" type="tns:GetAllConnectionTerminationPointsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getContainedPotentialConnectionTerminationPoints operation</p>
        <p>This operation an OS to request all of the CTPs that
                    it is potentially capable of supporting in all
                    possible mapping configurations, at the specified
                    rates and that are contained by the specified
                    termination point.</p>
        <p>This operation returns all potential contained CTPs
                    for a given TP. The TP may be a PTP, an FTP or a
                    CTP. If the layerRateList is empty then contained
                    CTPs at all flexible and/or static LayerRates are returned.</p>
        <p>For an OC3 PTP that has the potential of mapping to
                    VT1.5 the response would contain 3 STS1 CTPs and 84
                    VT1.5 CTPs; on a T1 PTP, the contained TPs would be
                    one T1 CTP; for an STS1 CTP the response would
                    contain 28 VT1.5 CTPs. In the case where an OC3 PTP
                    supports mapping to T1s and VT1.5, then the
                    contained list for the OC3 PTP could be 1 STS3c, 3
                    STS1, 84 VT1.5 and 84 T1 CTPs; if a VT1.5 CTP is
                    provided, 1 T1 CTP is returned; if a T1 CTP is
                    provided, the result is an empty list.</p>
        <p>Whenever a protection group is involved, the
                    behaviour of this service is described below:</p>
        <p>
          Scenario 1: Before the Protection Group is created
          <ul>
            <li>Query On Worker TPs returns list of all CTPs</li>
            <li>Query On Protection TPs returns list of all
                            CTPs</li>
          </ul>
        </p>
        <p>
          Scenario 2: After ProtectionGroup is created, if
                    extra (preemptible/non-pre-emptible) traffic is
                    allowed.
          <ul>
            <li>Query On Worker TPs returns list of all CTPs</li>
            <li>Query On Protection TPs returns list of all CTPs</li>
          </ul>
        </p>
        <p>
          Scenario 3: After ProtectionGroup is created, if
                    extra (preemptible/non-pre-emptible) traffic is not
                    allowed
          <ul>
            <li>Query On Worker TPs returns list of CTPs
                            that allow protected traffic</li>
            <li>Query On Protection TPs returns an empty
                            list (regardless of the switch status)</li>
          </ul>
        </p>
        <p>In case the protection group is created after a query
                    is made, no object delete notification is made, the
                    NMS is expected to query the ports in the protection
                    group to find the list of contained CTPs.</p>
        <p>When ATM, this operation needs to be used with
                    caution. The reason for this is that, in ATM, there
                    can be a prohibitively large number of potential VP
                    and VC CTPs returned by this operation. For
                    retrieving ATM CTPs, the getContainedInUseTPs()
                    operation should be considered.</p>
        <p>If DWDM, SONET and/or SDH is combined with ATM, it is
                    advisable that this operation be used with the
                    appropriate DWDM, SONET and/or SDH layer rates
                    entered into the layerRateList. Otherwise, ATM CTPs
                    will be returned and the resulting list of contained
                    TPs could get prohibitive.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getContainedPotentialConnectionTerminationPointsResponse" type="tns:MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getContainedPotentialConnectionTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getContainedPotentialConnectionTerminationPointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getContainedPotentialConnectionTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getContainingGroupTerminationPointRequest" type="tns:RequestProfile4Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getContainingGroupTerminationPoint operation</p>
        <p>This operation returns the GTP object containing a
                    given CTP (see SD1-3 Bundled SNC overview for
                    further information on GTP usage). If the CTP is not
                    contained in a GTP, the gtp output parameter is left empty.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getContainingGroupTerminationPointResponse" type="tns:SingleGroupTerminationPointObjectResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getContainingGroupTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getContainingGroupTerminationPointException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getContainingGroupTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getContainingTerminationPointsRequest" type="tns:RequestProfile4Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getContainingTerminationPoints operation</p>
        <p>This operation returns a list of the containing TPs
                    given a CTP. This will return an PTP or FTP where
                    there is only one level of containment. In a case of
                    deeper containment this will return a list of CTPs
                    and a PTP or FTP. Using the UPSR OC3 example used in
                    getContainedPotentialTPs, getContainingTPs on the
                    working T1 CTP will return a working STS1 CTP and a
                    working OC3PTP. If the OC3 was in APS, then
                    getContainingTPs on the T1 CTP would return an STS1
                    CTP, an OC3 working PTP and an OC3 protect PTP.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getContainingTerminationPointsResponse" type="tns:MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getContainingTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getContainingTerminationPointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getContainingTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getGroupTerminationPointRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getGroupTerminationPoint operation</p>
        <p>This operation returns the GTP structure for the
                    given GTP name.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="gtpRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Name of the GTP.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getGroupTerminationPointResponse" type="tns:SingleGroupTerminationPointObjectResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getGroupTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getGroupTerminationPointException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getGroupTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getTrafficConditioningProfileAssociatedTpsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getTrafficConditioningProfileAssociatedTps operation</p>
        <p>The operation retrieves the details of all
                    Termination Points (TPs) that are associated with
                    the provided Traffic Conditioning Profile (TC Profile).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="tcProfileRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the TC Profile.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getTrafficConditioningProfileAssociatedTpsResponse" type="tns:MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getTrafficConditioningProfileAssociatedTps operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getTrafficConditioningProfileAssociatedTpsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getTrafficConditioningProfileAssociatedTps operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getTerminationPointRequest" type="tns:RequestProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getTerminationPoint operation</p>
        <p>This operation returns the termination point
                    structure for the given TP name (CTP, FTP or PTP).
                    The termination point name must be explicit (a
                    generic endpoint specification may not be used in
                    this case). See Framework DDP SD2-7_ObjectNaming for
                    further detail on FTP naming. The termination point
                    structure contains SD1-16_LayeredParameters.pdf. The
                    transmission parameters returned will be the
                    parameters in place on the actual termination point
                    on the NE.  If there are no transmission parameters
                    or the TP does not actually exist on the NE, then
                    transmissionParams will be empty. The field
                    transmissionParams will also be empty for
                    "potential" ATM VP/VC CTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getTerminationPointResponse" type="tns:SingleTerminationPointObjectResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getTerminationPointException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getTerminationPointGroupingRelationshipsRequest" type="tns:RequestProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getTerminationPointGroupingRelationships operation</p>
        <p>This operation allows the NMS to query the
                    associations between TPPool and TP.</p>
        <p>
          f a TPPool name is supplied, the method will return
                    the names of all the TPs that have been grouped to
                    the supplied TPPool. If a TP name is supplied, the
                    method will return the names of any associated
                    TPPools. An empty list is returned if no associated
                    TP pools exist for the input TP, or if no TPs have
                    been grouped to the input TP pool.
          <uL>
            <li>Note 1. Any termination point name must be
                            explicit (a generic endpoint specification
                            must not be used in this case). See Object
                            Naming for further detail on FTP naming and
                            for details on general TP and TP pool naming.</li>
            <li>Note 2. A TP can be a member of at most one
                            TPPool. A TP is associated to a TPPool (TP
                            -- TPPool) by admission as a member (TP is a
                            member of TPPool).</li>
          </uL>
        </p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getTerminationPointGroupingRelationshipsResponse" type="tns:MultipleObjectNamesResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getTerminationPointGroupingRelationships operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getTerminationPointGroupingRelationshipsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getTerminationPointGroupingRelationships operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getTerminationPointPoolRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getTerminationPointPool operation</p>
        <p>This operation retrieves the details of a Termination
                    Point Pool (TP Pool) given its name.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="tpPoolRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter provides the name of the
                                Termination Point Pool to be retrieved.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getTerminationPointPoolResponse" type="tns:SingleTerminationPointPoolObjectResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getTerminationPointPool operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getTerminationPointPoolException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getTerminationPointPool operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getTerminationPointsIteratorRequest" type="msg:GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getTerminationPointsIterator operation</p>
        <p>This operation is the iterator request to return the
                    next batch of TPs from the OS to which a TP
                    retrieval request was initially sent.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getTerminationPointsIteratorResponse" type="tns:MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getTerminationPointsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getTerminationPointsIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getTerminationPointsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="getTerminationPointPoolsIteratorRequest" type="msg:GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getTerminationPointPoolsIterator operation</p>
        <p>This operation is the iterator request to return the
                    next batch of TPPools from the OS to which a TPPool
                    retrieval request was initially sent..</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getTerminationPointPoolsIteratorResponse" type="tns:MultipleTerminationPointPoolObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getTerminationPointPoolsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getTerminationPointPoolsIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getTerminationPointPoolsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="getGroupTerminationPointsIteratorRequest" type="msg:GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getGroupTerminationPointsIterator operation</p>
        <p>This operation is the iterator request to return the
                    next batch of GTPs from the OS to which a GTP
                    retrieval request was initially sent..</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getGroupTerminationPointsIteratorResponse" type="tns:MultipleGroupTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getGroupTerminationPointsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getGroupTerminationPointsIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getGroupTerminationPointsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <!--== Local Data Types ==-->
  <!--================-->
  <xsd:complexType name="GetAllEdgePointsType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="mlsnRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Name of the subnetwork.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tpLayerRateList" type="lr:LayerRateListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of TP layer rates for which the edge
                            points are to be fetched. An edge point must
                            contain at least one of the layer rates
                            specified to be reported. If the list is
                            empty then edge points of all rates are returned.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="connectionLayerRateList" type="lr:LayerRateListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of connection layer rates for which the
                            edge points are to be fetched. An edge point
                            must support connections for at least one of
                            the layer rates specified to be reported. If
                            the list is empty then edge points for all
                            connection rates are returned.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetAllTerminationPointsType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="meRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The name of the Managed Element.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tpLayerRateList" type="lr:LayerRateListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of TP layer rates for which the TPs are
                            to be fetched. A TP must contain at least
                            one of the layer rates specified to be
                            reported. If the list is empty then all TPs
                            (of all rates) are returned.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="connectionLayerRateList" type="lr:LayerRateListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of connection layer rates for which the
                            TPs are to be fetched. A TP must support
                            connections for at least one of the layer
                            rates specified to be reported. If the list
                            is empty then all TPs (for all connection
                            rates) are returned.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetAllConnectionTerminationPointsType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="tpRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The name of the PTP, FTP or CTP for which to
                            get CTPs. The termination point name must be
                            explicit (a generic endpoint specification
                            may not be used in this case). See Object
                            Naming for further detail on FTP naming.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="layerRateList" type="lr:LayerRateListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of TP layer rates for which the TPs are
                            to be fetched. A TP must contain at least
                            one of the layer rates specified to be
                            reported. If the list is empty then all TPs
                            (of all rates) are returned.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetAllGroupTerminationPointsType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="meRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The name of the Managed Element for which to
                            retrieve the GTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tpLayerRateList" type="lr:LayerRateListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The GTPs to be returned must contain CTPs
                            that have at least one of the Layer Rates
                            identified by this parameter. If the list is
                            empty then all GTPs supported by the ME are returned.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RequestProfile1Type">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="mlsnRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Name of the subnetwork</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RequestProfile2Type">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="tpRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Name of the TP</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RequestProfile3Type">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="equipmentRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Name of the equipment for which to retrieve
                            supported PTPs/FTPs</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RequestProfile4Type">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ctpRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Name of the contained CTP</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MultipleTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for a set of objects</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="tpList" type="tp:TerminationPointListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of TP objects</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SingleTerminationPointObjectResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for one TP object</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="tp" type="tp:TerminationPointType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The TP object</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SingleGroupTerminationPointObjectResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure with a single GTP</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="gtp" type="gtp:GroupTerminationPointType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The GTP object</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MultipleGroupTerminationPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure with a list of GTP</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="gtpList" type="gtp:GroupTerminationPointListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This parameter returns the list of GTP objects.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MultipleTerminationPointPoolObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for a set of objects</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="tpPoolList" type="tpp:TerminationPointPoolListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of TerminationPointPool objects.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SingleTerminationPointPoolObjectResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for one TPPool object</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="tpPool" type="tpp:TerminationPointPoolType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The TerminationPointPool.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="MultipleObjectNamesResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for a set of object names</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="nameList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of object names.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=14</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=7"/>
  <!--==============-->
  <xsd:complexType abstract="false" name="BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The (abstract) base type definition of all exception messages.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="hdr:header">
        <xsd:annotation>
          <xsd:documentation>The mTOP header as it cannot be
                        part of the SOAP Header in a SOAP v1.1 Fault message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="reason" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>A string indicating further details about the
                            exception. It is a free format string filled
                            by the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The extension for specific vendor exception information.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:element name="notImplemented" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised by OS for an optional operation that is not implemented</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="internalError" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised in case of non-specific OS internal failure</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidInput" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters are invalid</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tooManyOpenIterators" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when data retrieval iterator capacity is full</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="entityNotFound" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters do not refer to an existing object</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="commLoss" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when communication to an entity (needed to
                    help fulfill the request) is lost</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedCompressionFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given data compression format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedPackingFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given file packing format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidFilterDefinition" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the filter is invalid.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="objectInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tpInvalidEndPoint" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="timeslotInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="protectionEffortNotMet" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notInValidState" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unableToComply" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="capacityExceeded" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="accessDenied" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedRoutingConstraints" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="userlabelInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidTopic" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the topic is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notificationServiceProblem" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when there is a failure with the Broker.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AllExceptionsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reference to all supported exception types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="tns:accessDenied"/>
      <xsd:element ref="tns:capacityExceeded"/>
      <xsd:element ref="tns:commLoss"/>
      <xsd:element ref="tns:entityNotFound"/>
      <xsd:element ref="tns:internalError"/>
      <xsd:element ref="tns:invalidFilterDefinition"/>
      <xsd:element ref="tns:invalidInput"/>
      <xsd:element ref="tns:invalidTopic"/>
      <xsd:element ref="tns:notificationServiceProblem"/>
      <xsd:element ref="tns:notImplemented"/>
      <xsd:element ref="tns:notInValidState"/>
      <xsd:element ref="tns:objectInUse"/>
      <xsd:element ref="tns:protectionEffortNotMet"/>
      <xsd:element ref="tns:timeslotInUse"/>
      <xsd:element ref="tns:tooManyOpenIterators"/>
      <xsd:element ref="tns:tpInvalidEndPoint"/>
      <xsd:element ref="tns:unableToComply"/>
      <xsd:element ref="tns:unsupportedCompressionFormat"/>
      <xsd:element ref="tns:unsupportedPackingFormat"/>
      <xsd:element ref="tns:unsupportedRoutingConstraints"/>
      <xsd:element ref="tns:userlabelInUse"/>
    </xsd:choice>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Profile of exception types supported by all mTOP
                    iterator operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="tns:AllExceptionsType">
        <xsd:choice>
          <xsd:element ref="tns:commLoss"/>
          <xsd:element ref="tns:internalError"/>
          <xsd:element ref="tns:invalidInput"/>
          <xsd:element ref="tns:notImplemented"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Generic request message structure for all data
                    iterator operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=9</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML header.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=7"/>
  <!--==============-->
  <xsd:simpleType name="ActivityStatusEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies the high-level response status for an
                    activity.  Required for response messages, including
                    error responses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="WARNING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="ActivityStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Add to the initial enumerations the Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ActivityStatusEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="MessageTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type of the message that is being exchanged as
                    part of an activity.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REQUEST"/>
      <xsd:enumeration value="RESPONSE"/>
      <xsd:enumeration value="NOTIFICATION"/>
      <xsd:enumeration value="ERROR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationPatternType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Styles supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SimpleResponse"/>
      <xsd:enumeration value="MultipleBatchResponse"/>
      <xsd:enumeration value="BulkResponse"/>
      <xsd:enumeration value="Notification"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationStyleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Style supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MSG"/>
      <xsd:enumeration value="RPC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="CompressionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if compression is to be performed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:CompressionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CompressionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported compressions. All extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_COMPRESSION"/>
      <xsd:enumeration value="GZIP"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PackingTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if the output file(s) are to be packed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:PackingEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PackingEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported packing/packaging. All
                    extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PACKING"/>
      <xsd:enumeration value="ZIP"/>
      <xsd:enumeration value="TAR"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="header">
    <xsd:annotation>
      <xsd:documentation>
        <p>MTOSI Standard Header.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="activityName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the business
                                transaction activity for the message
                                being exchanged.       The value is
                                usually the name of the mTOP operation,
                                e.g. getInventory.       This value
                                corresponds to the “operation” in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the message (or
                                contract) that is being exchanged as
                                part of an activity. E.g.
                                getInventoryResponse. This field
                                corresponds to the message name in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgType" type="tns:MessageTypeType"/>
        <xsd:element minOccurs="0" name="senderURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application sending this message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="destinationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the final destination of the
                                message (the OS that will process the
                                content of the message). This field may
                                point to a logical end point or abstract
                                topic name to be resolved by the
                                communication transport middleware in
                                order to deliver the message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="replyToURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used by request messages to specify
                                destination for response message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="originatorURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the originating application of
                                the message that resulted in this
                                response or notification message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="failureReplytoURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application receiving the
                                potential error notification message.
                                Required for all response messages and
                                notifications which are triggered by
                                request/response. If not specified the
                                replyToURI is used. If the replyToURI is
                                also not specified, senderURI endpoint
                                is used to send back the failure response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="activityStatus" type="tns:ActivityStatusType"/>
        <xsd:element minOccurs="0" name="correlationId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>An identifier that could be set by the
                                originator of an asynchronous request
                                that will allow it to correlate the
                                response to the request.  If this field
                                is set, it should be reflected in the
                                header of the response message.  Not
                                required for notification headers.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="security" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Provides credential nformation for use by
                                a security service for identification,
                                authentication, or authorization.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="securityType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the type of credential
                                contained in the security element.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="priority">
          <xsd:annotation>
            <xsd:documentation>
              <p>Indicates message-handling priority for
                                asynchronous messages.  It must be in
                                the range 0-9 (lowest-highest). Default: 4</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string"/>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgSpecificProperties">
          <xsd:annotation>
            <xsd:documentation>
              <p>Conditionally required for request,
                                response, and notification messages as
                                identified by the documentation for a
                                specific interface message.  The
                                communications infrastructure or the
                                receiving application can use this value
                                for routing or filtering messages.</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" minOccurs="0" name="property">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="propName" type="xsd:string"/>
                    <xsd:element name="propValue" type="xsd:string"/>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="communicationPattern" type="tns:CommunicationPatternType"/>
        <xsd:element minOccurs="0" name="communicationStyle" type="tns:CommunicationStyleType"/>
        <xsd:element minOccurs="0" name="requestedBatchSize" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>The RequestedBatchSize parameter provides
                                the control for the batch segmentation
                                of the full set of output data generated
                                by a coarse-grained operation such as
                                getInventory or getActiveAlarms. The
                                unit is any of the MTOSI objects. And,
                                it defines the maximum number of MTOSI
                                objects that can be included in all the
                                batches of data sent as part of a
                                multiple responses MEP.</p>
              <p>However, they are cases where a batch may
                                exceed the number of objects defined in
                                the RequestedBatchSize parameter. This
                                is true if the granularity of a response
                                atomic data representation is greater
                                than just one object. This is true for
                                the getInventory response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceNumber" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm. Pattern
                                to identify the batch seq number in a sequence.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceEndOfReply" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm.
                                Pattern, true if it is the last result
                                batch in a sequence</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="iteratorReferenceURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Mandatory for all SIT (iterators) MEP to
                                allow description of the data retrieval iterator.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="fileLocationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used for file retrieval. Specify the base
                                name of the file(s) to be generated and
                                the remote destination.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="compressionType" type="tns:CompressionTypeType"/>
        <xsd:element minOccurs="0" name="packingType" type="tns:PackingTypeType"/>
        <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>Message originating timestamp</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Location for all vendor extensions to the
                                MTOSI standard header.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=7</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of generic mTOP simple data types.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="NameAndStringValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvsList" type="tns:NameAndValueStringListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndValueStringListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndStringValue</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nvs" type="tns:NameAndStringValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:any minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvList" type="tns:NameAndAnyValueListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndAnyValueType</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nv" type="tns:NameAndAnyValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AliasNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    contains the list of aliases for the network entity.
                    The attribute is a name-value list. The name refers
                    to the type of alias (e.g., nativeEMSname) and the
                    value component holds the alias itself</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alias">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="aliasName" type="xsd:string"/>
            <xsd:element name="aliasValue" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AnyListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A generic list of any type of elements. Used for
                    vendor Extensions or loose element encapsulation
                    from other namespaces.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="DiscoveredNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the name of the object when
                    its existence is first published on the CCV but only
                    in the case where the OS that publishes the object
                    on the CCV is not the naming OS. If the naming OS
                    first publishes the object on the CCV, this
                    attribute may be left empty.</p>
        <p>The discovered name is assumed to be unique from the
                    perspective of the publishing OS.</p>
        <p>The discovered name published on the CCV does not
                    necessarily need to be the name of the object as
                    discovered by the OS from the subtending network.</p>
        <p>There are no specific rules concerning the
                    relationship between the "name" and
                    "discovered name" of the object. They
                    could be set to the same value or they could be different.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ManufactureDateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type identifies the production date of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="MultiEventInventoryAttributesType">
    <xsd:annotation>
      <xsd:documentation>This attribute is used when a object
                instance is embedded in the inventory    layout payload
                of a Multi-Event Inventory (MEI) notification.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="neTime" nillable="true" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the time at which the NE detected the
                            inventory change (if available)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventIndication" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is an indication of the type of
                            inventory update.</p>
            <p>Possible values are Object Creation (OC),
                            Object Discovery (ODsc), Object Deletion
                            (OD),        Attribute Value Change (AVC),
                            State Change (SC) and AVC_SC_and_Childern.
                            Only the acronym (e.g., OC)        is used
                            in the actual attribute value. The following
                            conventions apply:</p>
            <p>If an object creation or object discovery
                            indicator is applied to a parent object,
                            it implicitly applies to all the children,
                            i.e., the OS sending the notification only
                            needs       to set the indicator attribute
                            in the parent object.</p>
            <p>If an object deletion is applied to a parent
                            object, it is assumed that all the children
                            are also deleted. The childern should not be listed.</p>
            <p>The AVC_SC_and_Childern indication may be
                            applied to a parent object to imply that
                            there       may be AVC or SC changes to the
                            parent and some or all of the children.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="NetworkAccessDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A free-format string used to associate a resource to
                    a Network Access Domain.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="NotificationIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the notification ID.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="NotificationIdentifierListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of notification IDs  (free string). Also,  the
                    value found in notificationId field of the event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="notificationId" type="tns:NotificationIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of all the object types. It is
                    left as a string for maximum compatibility with
                    future supported object types.</p>
        <p>Refer to the SD2-7 ObjectNaming for the list of all
                    supported values.</p>
        <p>Otherwise, one can also refer to the
                    ObjectEnumTypedefined in CommonResourceInfo (see NRB
                    DDP), which is provided as XML Schema enumerations
                    solely as a helper (not used in any messaging validation).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enumeration of all the supported query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI">
      <xsd:enumeration value="ANSI-92"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath20/"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The loose definition of all the supported query
                    dialect types.</p>
        <p>Refer to QueryDialectEnumType definition to the
                    enumeration of recommended query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The generic schema datatype definition for the query
                    expression used in most filters.</p>
        <p>This definition is borrowed from WS-Notification v1.3.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="tns:QueryDialectTypeType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          <p>The dialect of the given query expression</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=15</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML naming structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=7"/>
  <!--=================-->
  <xsd:complexType name="RelativeDistinguishNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of relative distinguish
                    name (RDN) data structure used in all object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="type" type="gen:ObjectTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN object type acronym.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of the MTOSI object name
                    data structure as a sequence of RDNs, which
                    represents a unique identifier for the MTOSI object
                    on the CCV. Once set by the naming OS, the name is
                    invariant for the life of the object and should be
                    used when referring to the object over the CCV. Name
                    attribute of an object instance shall always be
                    assigned a value, unless the object instance is
                    first discovered by an OS that is not the naming OS
                    for the object instance. In such a case, the
                    discovering OS shall provide a value for the
                    Discovered Name attribute of the object. The naming
                    OS shall provide a value for the Name attribute of
                    the object once it becomes aware of the new object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="rdn" type="tns:RelativeDistinguishNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition for the list of MTOSI object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="name" nillable="true" type="tns:NamingAttributeType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=12</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP layer rates.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:element name="layerRateListType" type="tns:LayerRateListType"/>
  <!--================-->
  <xsd:complexType name="LayerRateListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of LayerRates</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="layerRate" nillable="true" type="tns:LayerRateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="LayerRateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          The LayerRateType value is used to identify:
          <li>the Layer of a PTP/CTP,</li>
          <li>the characteristic information of a PTP/FTP,</li>
          <li>the Layer/Rate of a connection.</li>
        </p>
        <p>Each LayerRateType may be used in conjunction with a
                    CTP/PTP/FTP of that layer. In the SDH definitions,
                    the G.805 CP and G.805 Termination Function layer
                    names differ, for example TU12 is used for the G.805
                    CP and VC12 for the corresponding G.805 Termination
                    Function. In this interface definition the TU and VC
                    definitions have been combined into a single
                    composite layer and this has been named to include
                    the equivalent SONET layer, e.g. LR_VT2_andTypeU12_VC12.</p>
        <p>
          For more details refer to the following supporting
                    document:
          <li>layering documentfor
                        all layering concepts</li>
          <li>LayerRates document for information about
                        recognized values in MTOSI</li>
        </p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:LayerRateEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="LayerRateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="LR_DS0_64K"/>
      <xsd:enumeration value="LR_DSL"/>
      <xsd:enumeration value="LR_Not_Applicable"/>
      <xsd:enumeration value="LR_Async_FOTS_150M"/>
      <xsd:enumeration value="LR_Async_FOTS_417M"/>
      <xsd:enumeration value="LR_Async_FOTS_560M"/>
      <xsd:enumeration value="LR_Async_FOTS_565M"/>
      <xsd:enumeration value="LR_Async_FOTS_1130M"/>
      <xsd:enumeration value="LR_Async_FOTS_1G7"/>
      <xsd:enumeration value="LR_Async_FOTS_1G8"/>
      <xsd:enumeration value="LR_ATM_NI"/>
      <xsd:enumeration value="LR_ATM_VC"/>
      <xsd:enumeration value="LR_ATM_VP"/>
      <xsd:enumeration value="LR_D1_Video"/>
      <xsd:enumeration value="LR_DIGITAL_SIGNAL_RATE"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_DSR_1_5M"/>
      <xsd:enumeration value="LR_DSR_2M"/>
      <xsd:enumeration value="LR_DSR_4M"/>
      <xsd:enumeration value="LR_DSR_6M"/>
      <xsd:enumeration value="LR_DSR_8M"/>
      <xsd:enumeration value="LR_DSR_16M"/>
      <xsd:enumeration value="LR_DSR_34M"/>
      <xsd:enumeration value="LR_E2_8M"/>
      <xsd:enumeration value="LR_E5_565M"/>
      <xsd:enumeration value="LR_Encapsulation"/>
      <xsd:enumeration value="LR_Fragment"/>
      <xsd:enumeration value="LR_DSR_45M"/>
      <xsd:enumeration value="LR_DSR_140M"/>
      <xsd:enumeration value="LR_DSR_565M"/>
      <xsd:enumeration value="LR_DSR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_DSR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OC1_STM0"/>
      <xsd:enumeration value="LR_DSR_OC3_STM1"/>
      <xsd:enumeration value="LR_DSR_2xSTM1"/>
      <xsd:enumeration value="LR_DSR_OC12_STM4"/>
      <xsd:enumeration value="LR_DSR_OC24_STM8"/>
      <xsd:enumeration value="LR_DSR_OC48_and_STM16"/>
      <xsd:enumeration value="LR_DSR_OC192_and_STM64"/>
      <xsd:enumeration value="LR_DSR_OC768_and_STM256"/>
      <xsd:enumeration value="LR_DSR_OTU1"/>
      <xsd:enumeration value="LR_DSR_OTU2"/>
      <xsd:enumeration value="LR_DSR_OTU3"/>
      <xsd:enumeration value="LR_E1_2M"/>
      <xsd:enumeration value="LR_E20_2x2M"/>
      <xsd:enumeration value="LR_E30_8x2M"/>
      <xsd:enumeration value="LR_E3_34M"/>
      <xsd:enumeration value="LR_E4_140M"/>
      <xsd:enumeration value="LR_ESCON"/>
      <xsd:enumeration value="LR_Ethernet"/>
      <xsd:enumeration value="LR_ETR"/>
      <xsd:enumeration value="LR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_FC_12_133M"/>
      <xsd:enumeration value="LR_FC_25_266M"/>
      <xsd:enumeration value="LR_FC_50_531M"/>
      <xsd:enumeration value="LR_FC_100_1063M"/>
      <xsd:enumeration value="LR_FDDI"/>
      <xsd:enumeration value="LR_FICON"/>
      <xsd:enumeration value="LR_FR_IF"/>
      <xsd:enumeration value="LR_FR_PVC"/>
      <xsd:enumeration value="LR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_ISDN_BRI"/>
      <xsd:enumeration value="LR_Line_OC1_STS1_and_MS_STM0"/>
      <xsd:enumeration value="LR_Line_OC3_STS3_and_MS_STM1"/>
      <xsd:enumeration value="LR_Line_OC12_STS12_and_MS_STM4"/>
      <xsd:enumeration value="LR_Line_OC24_STS24_and_MS_STM8"/>
      <xsd:enumeration value="LR_Line_OC48_STS48_and_MS_STM16"/>
      <xsd:enumeration value="LR_Line_OC192_STS192_and_MS_STM64"/>
      <xsd:enumeration value="LR_Line_OC768_STS768_and_MS_STM256"/>
      <xsd:enumeration value="LR_Low_Order_TU3_VC3"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3"/>
      <xsd:enumeration value="LR_STS3c_and_AU4_VC4"/>
      <xsd:enumeration value="LR_STS4c_and_VC3_4c"/>
      <xsd:enumeration value="LR_STS5c_and_VC3_5c"/>
      <xsd:enumeration value="LR_STS6c_and_VC4_2c"/>
      <xsd:enumeration value="LR_STS7c_and_VC3_7c"/>
      <xsd:enumeration value="LR_STS8c_and_VC3_8c"/>
      <xsd:enumeration value="LR_STS9c_and_VC4_3c"/>
      <xsd:enumeration value="LR_Optical_Channel"/>
      <xsd:enumeration value="LR_Optical_Multiplex_Section"/>
      <xsd:enumeration value="LR_OPTICAL_SECTION"/>
      <xsd:enumeration value="LR_Optical_Transmission_Section"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_PHYSICAL_MEDIALESS"/>
      <xsd:enumeration value="LR_PHYSICAL_OPTICAL"/>
      <xsd:enumeration value="LR_POTS"/>
      <xsd:enumeration value="LR_Section_OC1_STS1_and_RS_STM0"/>
      <xsd:enumeration value="LR_Section_OC3_STS3_and_RS_STM1"/>
      <xsd:enumeration value="LR_Section_OC12_STS12_and_RS_STM4"/>
      <xsd:enumeration value="LR_Section_OC24_STS24_and_RS_STM8"/>
      <xsd:enumeration value="LR_Section_OC48_STS48_and_RS_STM16"/>
      <xsd:enumeration value="LR_Section_OC192_STS192_and_RS_STM64"/>
      <xsd:enumeration value="LR_Section_OC768_STS768_and_RS_STM256"/>
      <xsd:enumeration value="LR_STS1_and_AU3_High_Order_VC3"/>
      <xsd:enumeration value="LR_STS2c_and_VC3_2c"/>
      <xsd:enumeration value="LR_STS10c_and_VC3_10c"/>
      <xsd:enumeration value="LR_STS11c_and_VC3_11c"/>
      <xsd:enumeration value="LR_STS12c_and_VC4_4c"/>
      <xsd:enumeration value="LR_STS13c_and_VC3_13c"/>
      <xsd:enumeration value="LR_STS14c_and_VC3_14c"/>
      <xsd:enumeration value="LR_STS15c_and_VC4_5c"/>
      <xsd:enumeration value="LR_STS16c_and_VC3_16c"/>
      <xsd:enumeration value="LR_STS17c_and_VC3_17c"/>
      <xsd:enumeration value="LR_STS18c_and_VC4_6c"/>
      <xsd:enumeration value="LR_STS19c_and_VC3_19c"/>
      <xsd:enumeration value="LR_STS20c_and_VC3_20c"/>
      <xsd:enumeration value="LR_STS21c_and_VC4_7c"/>
      <xsd:enumeration value="LR_STS22c_and_VC3_22c"/>
      <xsd:enumeration value="LR_STS23c_and_VC3_23c"/>
      <xsd:enumeration value="LR_STS24c_and_VC4_8c"/>
      <xsd:enumeration value="LR_STS25c_and_VC3_25c"/>
      <xsd:enumeration value="LR_STS26c_and_VC3_26c"/>
      <xsd:enumeration value="LR_STS27c_and_VC4_9c"/>
      <xsd:enumeration value="LR_STS28c_and_VC3_28c"/>
      <xsd:enumeration value="LR_STS29c_and_VC3_29c"/>
      <xsd:enumeration value="LR_STS30c_and_VC4_10c"/>
      <xsd:enumeration value="LR_STS31c_and_VC3_31c"/>
      <xsd:enumeration value="LR_STS32c_and_VC3_32c"/>
      <xsd:enumeration value="LR_STS33c_and_VC4_11c"/>
      <xsd:enumeration value="LR_STS34c_and_VC3_34c"/>
      <xsd:enumeration value="LR_STS35c_and_VC3_35c"/>
      <xsd:enumeration value="LR_STS36c_and_VC4_12c"/>
      <xsd:enumeration value="LR_STS37c_and_VC3_37c"/>
      <xsd:enumeration value="LR_STS38c_and_VC3_38c"/>
      <xsd:enumeration value="LR_STS39c_and_VC4_13c"/>
      <xsd:enumeration value="LR_STS40c_and_VC3_40c"/>
      <xsd:enumeration value="LR_STS41c_and_VC3_41c"/>
      <xsd:enumeration value="LR_STS42c_and_VC4_14c"/>
      <xsd:enumeration value="LR_STS43c_and_VC3_43c"/>
      <xsd:enumeration value="LR_STS44c_and_VC3_44c"/>
      <xsd:enumeration value="LR_STS45c_and_VC4_15c"/>
      <xsd:enumeration value="LR_STS46c_and_VC3_46c"/>
      <xsd:enumeration value="LR_STS47c_and_VC3_47c"/>
      <xsd:enumeration value="LR_STS48c_and_VC4_16c"/>
      <xsd:enumeration value="LR_STS49c_and_VC3_49c"/>
      <xsd:enumeration value="LR_STS50c_and_VC3_50c"/>
      <xsd:enumeration value="LR_STS51c_and_VC4_17c"/>
      <xsd:enumeration value="LR_STS52c_and_VC3_52c"/>
      <xsd:enumeration value="LR_STS53c_and_VC3_53c"/>
      <xsd:enumeration value="LR_STS54c_and_VC4_18c"/>
      <xsd:enumeration value="LR_STS55c_and_VC3_55c"/>
      <xsd:enumeration value="LR_STS56c_and_VC3_56c"/>
      <xsd:enumeration value="LR_STS57c_and_VC4_19c"/>
      <xsd:enumeration value="LR_STS58c_and_VC3_58c"/>
      <xsd:enumeration value="LR_STS59c_and_VC3_59c"/>
      <xsd:enumeration value="LR_STS60c_and_VC4_20c"/>
      <xsd:enumeration value="LR_STS61c_and_VC3_61c"/>
      <xsd:enumeration value="LR_STS62c_and_VC3_62c"/>
      <xsd:enumeration value="LR_STS63c_and_VC4_21c"/>
      <xsd:enumeration value="LR_STS64c_and_VC3_64c"/>
      <xsd:enumeration value="LR_STS65c_and_VC3_65c"/>
      <xsd:enumeration value="LR_STS66c_and_VC4_22c"/>
      <xsd:enumeration value="LR_STS67c_and_VC3_67c"/>
      <xsd:enumeration value="LR_STS68c_and_VC3_68c"/>
      <xsd:enumeration value="LR_STS69c_and_VC4_23c"/>
      <xsd:enumeration value="LR_STS70c_and_VC3_70c"/>
      <xsd:enumeration value="LR_STS71c_and_VC3_71c"/>
      <xsd:enumeration value="LR_STS72c_and_VC4_24c"/>
      <xsd:enumeration value="LR_STS73c_and_VC3_73c"/>
      <xsd:enumeration value="LR_STS74c_and_VC3_74c"/>
      <xsd:enumeration value="LR_STS75c_and_VC4_25c"/>
      <xsd:enumeration value="LR_STS76c_and_VC3_76c"/>
      <xsd:enumeration value="LR_STS77c_and_VC3_77c"/>
      <xsd:enumeration value="LR_STS78c_and_VC4_26c"/>
      <xsd:enumeration value="LR_STS79c_and_VC3_79c"/>
      <xsd:enumeration value="LR_STS80c_and_VC3_80c"/>
      <xsd:enumeration value="LR_STS81c_and_VC4_27c"/>
      <xsd:enumeration value="LR_STS82c_and_VC3_82c"/>
      <xsd:enumeration value="LR_STS83c_and_VC3_83c"/>
      <xsd:enumeration value="LR_STS84c_and_VC4_28c"/>
      <xsd:enumeration value="LR_STS85c_and_VC3_85c"/>
      <xsd:enumeration value="LR_STS86c_and_VC3_86c"/>
      <xsd:enumeration value="LR_STS87c_and_VC4_29c"/>
      <xsd:enumeration value="LR_STS88c_and_VC3_88c"/>
      <xsd:enumeration value="LR_STS89c_and_VC3_89c"/>
      <xsd:enumeration value="LR_STS90c_and_VC4_30c"/>
      <xsd:enumeration value="LR_STS91c_and_VC3_91c"/>
      <xsd:enumeration value="LR_STS92c_and_VC3_92c"/>
      <xsd:enumeration value="LR_STS93c_and_VC4_31c"/>
      <xsd:enumeration value="LR_STS94c_and_VC3_94c"/>
      <xsd:enumeration value="LR_STS95c_and_VC3_95c"/>
      <xsd:enumeration value="LR_STS96c_and_VC4_32c"/>
      <xsd:enumeration value="LR_STS97c_and_VC3_97c"/>
      <xsd:enumeration value="LR_STS98c_and_VC3_98c"/>
      <xsd:enumeration value="LR_STS99c_and_VC4_33c"/>
      <xsd:enumeration value="LR_STS100c_and_VC3_100c"/>
      <xsd:enumeration value="LR_STS101c_and_VC3_101c"/>
      <xsd:enumeration value="LR_STS102c_and_VC4_34c"/>
      <xsd:enumeration value="LR_STS103c_and_VC3_103c"/>
      <xsd:enumeration value="LR_STS104c_and_VC3_104c"/>
      <xsd:enumeration value="LR_STS105c_and_VC4_35c"/>
      <xsd:enumeration value="LR_STS106c_and_VC3_106c"/>
      <xsd:enumeration value="LR_STS107c_and_VC3_107c"/>
      <xsd:enumeration value="LR_STS108c_and_VC4_36c"/>
      <xsd:enumeration value="LR_STS109c_and_VC3_109c"/>
      <xsd:enumeration value="LR_STS110c_and_VC3_110c"/>
      <xsd:enumeration value="LR_STS111c_and_VC4_37c"/>
      <xsd:enumeration value="LR_STS112c_and_VC3_112c"/>
      <xsd:enumeration value="LR_STS113c_and_VC3_113c"/>
      <xsd:enumeration value="LR_STS114c_and_VC4_38c"/>
      <xsd:enumeration value="LR_STS115c_and_VC3_115c"/>
      <xsd:enumeration value="LR_STS116c_and_VC3_116c"/>
      <xsd:enumeration value="LR_STS117c_and_VC4_39c"/>
      <xsd:enumeration value="LR_STS118c_and_VC3_118c"/>
      <xsd:enumeration value="LR_STS119c_and_VC3_119c"/>
      <xsd:enumeration value="LR_STS120c_and_VC4_40c"/>
      <xsd:enumeration value="LR_STS121c_and_VC3_121c"/>
      <xsd:enumeration value="LR_STS122c_and_VC3_122c"/>
      <xsd:enumeration value="LR_STS123c_and_VC4_41c"/>
      <xsd:enumeration value="LR_STS124c_and_VC3_124c"/>
      <xsd:enumeration value="LR_STS125c_and_VC3_125c"/>
      <xsd:enumeration value="LR_STS126c_and_VC4_42c"/>
      <xsd:enumeration value="LR_STS127c_and_VC3_127c"/>
      <xsd:enumeration value="LR_STS128c_and_VC3_128c"/>
      <xsd:enumeration value="LR_STS129c_and_VC4_43c"/>
      <xsd:enumeration value="LR_STS130c_and_VC3_130c"/>
      <xsd:enumeration value="LR_STS131c_and_VC3_131c"/>
      <xsd:enumeration value="LR_STS132c_and_VC4_44c"/>
      <xsd:enumeration value="LR_STS133c_and_VC3_133c"/>
      <xsd:enumeration value="LR_STS134c_and_VC3_134c"/>
      <xsd:enumeration value="LR_STS135c_and_VC4_45c"/>
      <xsd:enumeration value="LR_STS136c_and_VC3_136c"/>
      <xsd:enumeration value="LR_STS137c_and_VC3_137c"/>
      <xsd:enumeration value="LR_STS138c_and_VC4_46c"/>
      <xsd:enumeration value="LR_STS139c_and_VC3_139c"/>
      <xsd:enumeration value="LR_STS140c_and_VC3_140c"/>
      <xsd:enumeration value="LR_STS141c_and_VC4_47c"/>
      <xsd:enumeration value="LR_STS142c_and_VC3_142c"/>
      <xsd:enumeration value="LR_STS143c_and_VC3_143c"/>
      <xsd:enumeration value="LR_STS144c_and_VC4_48c"/>
      <xsd:enumeration value="LR_STS145c_and_VC3_145c"/>
      <xsd:enumeration value="LR_STS146c_and_VC3_146c"/>
      <xsd:enumeration value="LR_STS147c_and_VC4_49c"/>
      <xsd:enumeration value="LR_STS148c_and_VC3_148c"/>
      <xsd:enumeration value="LR_STS149c_and_VC3_149c"/>
      <xsd:enumeration value="LR_STS150c_and_VC4_50c"/>
      <xsd:enumeration value="LR_STS151c_and_VC3_151c"/>
      <xsd:enumeration value="LR_STS152c_and_VC3_152c"/>
      <xsd:enumeration value="LR_STS153c_and_VC4_51c"/>
      <xsd:enumeration value="LR_STS154c_and_VC3_154c"/>
      <xsd:enumeration value="LR_STS155c_and_VC3_155c"/>
      <xsd:enumeration value="LR_STS156c_and_VC4_52c"/>
      <xsd:enumeration value="LR_STS157c_and_VC3_157c"/>
      <xsd:enumeration value="LR_STS158c_and_VC3_158c"/>
      <xsd:enumeration value="LR_STS159c_and_VC4_53c"/>
      <xsd:enumeration value="LR_STS160c_and_VC3_160c"/>
      <xsd:enumeration value="LR_STS161c_and_VC3_161c"/>
      <xsd:enumeration value="LR_STS162c_and_VC4_54c"/>
      <xsd:enumeration value="LR_STS163c_and_VC3_163c"/>
      <xsd:enumeration value="LR_STS164c_and_VC3_164c"/>
      <xsd:enumeration value="LR_STS165c_and_VC4_55c"/>
      <xsd:enumeration value="LR_STS166c_and_VC3_166c"/>
      <xsd:enumeration value="LR_STS167c_and_VC3_167c"/>
      <xsd:enumeration value="LR_STS168c_and_VC4_56c"/>
      <xsd:enumeration value="LR_STS169c_and_VC3_169c"/>
      <xsd:enumeration value="LR_STS170c_and_VC3_170c"/>
      <xsd:enumeration value="LR_STS171c_and_VC4_57c"/>
      <xsd:enumeration value="LR_STS172c_and_VC3_172c"/>
      <xsd:enumeration value="LR_STS173c_and_VC3_173c"/>
      <xsd:enumeration value="LR_STS174c_and_VC4_58c"/>
      <xsd:enumeration value="LR_STS175c_and_VC3_175c"/>
      <xsd:enumeration value="LR_STS176c_and_VC3_176c"/>
      <xsd:enumeration value="LR_STS177c_and_VC4_59c"/>
      <xsd:enumeration value="LR_STS178c_and_VC3_178c"/>
      <xsd:enumeration value="LR_STS179c_and_VC3_179c"/>
      <xsd:enumeration value="LR_STS180c_and_VC4_60c"/>
      <xsd:enumeration value="LR_STS181c_and_VC3_181c"/>
      <xsd:enumeration value="LR_STS182c_and_VC3_182c"/>
      <xsd:enumeration value="LR_STS183c_and_VC4_61c"/>
      <xsd:enumeration value="LR_STS184c_and_VC3_184c"/>
      <xsd:enumeration value="LR_STS185c_and_VC3_185c"/>
      <xsd:enumeration value="LR_STS186c_and_VC4_62c"/>
      <xsd:enumeration value="LR_STS187c_and_VC3_187c"/>
      <xsd:enumeration value="LR_STS188c_and_VC3_188c"/>
      <xsd:enumeration value="LR_STS189c_and_VC4_63c"/>
      <xsd:enumeration value="LR_STS190c_and_VC3_190c"/>
      <xsd:enumeration value="LR_STS191c_and_VC3_191c"/>
      <xsd:enumeration value="LR_STS192c_and_VC4_64c"/>
      <xsd:enumeration value="LR_STS768c_and_VC4_256c"/>
      <xsd:enumeration value="LR_T1_and_DS1_1_5M"/>
      <xsd:enumeration value="LR_T2_and_DS2_6M"/>
      <xsd:enumeration value="LR_T3_and_DS3_45M"/>
      <xsd:enumeration value="LR_VT1_5_and_TU11_VC11"/>
      <xsd:enumeration value="LR_VT2_and_TU12_VC12"/>
      <xsd:enumeration value="LR_VT6_and_TU2_VC2"/>
      <!--The ones below were added in the MTOSI 2.1 release-->
      <xsd:enumeration value="LR_LAG_Fragment"/>
      <xsd:enumeration value="LR_DSR_10Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2.5Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10.7Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_11.1Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_LAN"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_WAN"/>
      <xsd:enumeration value="LR_DSR_40Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OTU2e"/>
      <xsd:enumeration value="LR_DSR_OTU3e1"/>
      <xsd:enumeration value="LR_DSR_OTU3e2"/>
      <xsd:enumeration value="LR_DSR_OTU4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_0"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_Flexible"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_4"/>
      <xsd:enumeration value="LR_Optical_Physical_Section"/>
      <xsd:enumeration value="LR_Optical_Physical_Section_Multilane"/>
      <xsd:enumeration value="LR_Section_OC3072_STS3072_and_RS_STM1024"/>
      <xsd:enumeration value="LR_Line_OC3072_STS3072_and_MS_STM1024"/>
      <xsd:enumeration value="LR_DSR_OC3072_and_STM1024"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=3</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common
                type definitions used in some the mTOP XML Resource objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:simpleType name="CommunicationStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This state reflects a communication state between the
                    EMS and its ManagedElement.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CS_AVAILABLE"/>
      <xsd:enumeration value="CS_UNAVAILABLE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="ConnectionDirectionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction of a subnetwork connection, cross-connects,
                    or topological link. For a detailed description of
                    the use of this attribute see SNC Types supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CD_UNI">
        <xsd:annotation>
          <xsd:documentation>
            <p>UNIdirectional, i.e. source TP to sink TP.
                            Note: creation of unidirectional connections
                            is supported even when CTPs/FTPs are
                            modelled as bidirectional.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CD_BI">
        <xsd:annotation>
          <xsd:documentation>
            <p>BIdirectional, i.e. bidirectional TP to
                            bidirectional TP, a.k.a. two-way.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ConnectionlessPortTerminationPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This parameter shall identify the role in the flow
                    domain of         the requested CPTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CPTPR_FD_EDGE">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Edge CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_FD_INTERNAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Internal CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_ALL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return all CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="DirectionalityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction for a TerminationPoint:</p>
        <p>The directionality of PTPs is defined from an
                    external point of view, while the directionality of
                    CTPs is defined from an internal point of view.
                    Consequently, sink PTPs generate source CTPs, and
                    sink CTPs form source PTPs. Refer to SNC Types and
                    to layers for further information on termination
                    point and connection directionality.</p>
        <p>Note that ATM termination points (LR_ATM_NI,
                    LR_ATM_VP and LR_ATM_VC) are always bi-directional
                    even though the traffic may be asymmetric (and
                    eventually null in one of the two directions).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="D_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>Used when the directionality specification is
                            not necessary.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_BIDIRECTIONAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>source and sink (transmit and receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SOURCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>source (transmit).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SINK">
        <xsd:annotation>
          <xsd:documentation>
            <p>sink (receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="FlowDomainFragmentTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          This (read-only) attribute provides an indication of
                    the type of the matrix flow domain fragment. It may
                    have one of the following values:
          <ul>
            <li>"FDFRT_POINT_TO_POINT": the FDFr
                            is between exactly two points</li>
            <li>"FDFRT_POINT_TO_MULTIPOINT": (E-tree)</li>
            <li>"FDFRT_MULTIPOINT": the FDFr is
                            between at least two points</li>
          </ul>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="GradesOfImpactType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Grades of maximum tolerable disruption to traffic as
                    a result of the operation that this parameter is describing.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="GOI_HITLESS"/>
      <xsd:enumeration value="GOI_MINOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Less or equal to 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GOI_MAJOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Greater than 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="HolderStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Holder State Type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMPTY">
        <xsd:annotation>
          <xsd:documentation>
            <p>no equipment is installed and no expected
                            equipment has been identified</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected and currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EXPECTED_AND_NOT_INSTALLED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected but not currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_NOT_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>physically inserted in the ME but not expected</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MISMATCH_OF_INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>there is an inconsistency between the
                            expected equipment and the installed equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNAVAILABLE">
        <xsd:annotation>
          <xsd:documentation>
            <p>this holder cannot accept the installation or
                            provisioning of equipment (this is typically
                            caused by a double width card installed next
                            to this slot)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>
            <p>the OS does not know the state of the equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentHolderTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The EquipmentHolder with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentHolderEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentHolderEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Equipment holder type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="rack"/>
      <xsd:enumeration value="shelf"/>
      <xsd:enumeration value="sub_shelf"/>
      <xsd:enumeration value="slot"/>
      <xsd:enumeration value="sub_slot"/>
      <xsd:enumeration value="remote_unit"/>
      <xsd:enumeration value="remote_slots"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="EquipmentObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Type of equipment object in equipment holder. Values
                    are vendor-specific.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledPartNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the resource part number (PN) of the
                    installed equipment. If not available (or there is
                    no installed equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledSerialNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the serial number of the installed equipment.
                    If not available (or there is no installed
                    equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Firmware version of the installed equipment. If not
                    available (or there is no installed equipment), an
                    empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRoutedType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Network routed, indicates if the route must be or is
                    computed and implemented at the network level.
                    NR_YES indicates that the route must be / is
                    computed at the network. NR_NO indicates that the
                    route must not be / is not computed at the network.
                    NR_NA indicates that the route can be computed anywhere.</p>
        <p>If rerouting is allowed, this attribute will indicate
                    who last rerouted the SNC, the network (NR_YES) or
                    the EMS (NR_NO).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NR_NA"/>
      <xsd:enumeration value="NR_NO"/>
      <xsd:enumeration value="NR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Indicates if the reroute of an SNC (if allowed)
                    should be computed by the network, by the EMS, or if
                    it does not matter.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_SET"/>
      <xsd:enumeration value="NO"/>
      <xsd:enumeration value="YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="FreedomLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the NMS-specified EMS level of freedom when
                    performing SNC operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMSFL_CC_AT_SNC_LAYER"/>
      <xsd:enumeration value="EMSFL_TERMINATE_AND_MAP"/>
      <xsd:enumeration value="EMSFL_HIGHER_ORDER_SNCS"/>
      <xsd:enumeration value="EMSFL_RECONFIGURATION"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ModifyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute specifies the class of SNC
                    modification; i.e. rerouting or add/remove protection.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ADD_REMOVE_PROTECTION"/>
      <xsd:enumeration value="REROUTING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="PotentialFutureSetupIndicatorType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Refers to the aEnd and is used to convey the likely
                    future (or current) configuration of the SNC (see SD1-16_layeredParameters.pdf).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RSU_POINT_TO_POINT"/>
      <xsd:enumeration value="RSU_BROADCAST"/>
      <xsd:enumeration value="RSU_ANY_CONFIG"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProtectionEffortType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection effort is a statement of the
                    requirement of the static protection level. For
                    example if EFFORT_SAME_OR_WORSE is specified for a
                    3-ended FULLY_PROTECTED connection, a 3-ended
                    PARTIALLY_PROTECTED connection is acceptable, but a
                    2-ended connection (ST_SIMPLE) is not acceptable
                    i.e. ProtectionEffort does not have any bearing on
                    the externaly visible shape of the SNC.
                    EFFORT_WHATEVER indicates that the specified static
                    protection level is preferred, but that any other
                    level is acceptable.</p>
        <p>For a detailed description of the use of this
                    attribute see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EFFORT_WHATEVER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_BETTER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_WORSE"/>
      <xsd:enumeration value="EFFORT_SAME "/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionRole with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionRoleEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionRoleEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Protection role type.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="NA"/>
      <xsd:enumeration value="PRIMARY"/>
      <xsd:enumeration value="BACKUP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="RerouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The RerouteType type indicates if the EMS/MEs are
                    allowed and/or required to reroute this SNC if there
                    is a failure on this SNC, periodically to optimize
                    the routes, of for any other reason.It is an EMS/ME
                    implementation whether this is done using network
                    routing protocols or if the EMS/MEs detect the
                    failure and take appropriate action to attempt to
                    fix the SNC.</p>
        T
        <p>he RR_NO value means
                    that the EMS/MEs are not allowed to reroute the SNC.
                    The RR_YES value means that the EMS/MEs are allowed
                    to reroute the SNC and required to attempt to
                    reroute it upon failure. The RR_NA value is used
                    when the NMS does not want to specify the exact EMS
                    behaviour. In this case it is left up to the EMS to
                    decide whether rerouting will be provided. It is
                    also used if the EMS/MEs are allowed to reroute the
                    SNC but not required to attempt to reroute it upon failure.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RR_NA"/>
      <xsd:enumeration value="RR_NO"/>
      <xsd:enumeration value="RR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ResourceFulfillmentStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IN_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been put into operation and is
                            operating as provisioned (completely or partially).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity is entirely not capable of
                            performing its provisioned functions and is
                            not restricted by administrative actions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE_BY_MAINTENANCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been taken intentionally out
                            of service by a management action.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SERV_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>The service state is not applicable.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceFulfillmentStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This object attribute indicates basic administration
                    state of equipment and OS objects.       Also, this
                    object attribute accepts Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceFulfillmentStateEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNCState enum is used to represent the various
                    states that an SNC may take.</p>
        <p>The following states may be supported by the EMS,
                    depending on the SNC management mode of operation
                    used by the EMS. See SNC Management Modes Of
                    Operation for details.</p>
        <p>SNCS_PENDING: the SNC has been created by an NMS and
                    has not been activated by any NMS; or the SNC has
                    been successfully deactivated by an NMS. That state
                    has no relationship with the network state of the
                    cross- connects of the SNC. It is allowable for an
                    EMS to not support the SNCS_PENDING state and to
                    reject any operation that attempts to put an SNC
                    into SNCS_PENDING state.</p>
        <p>SNCS_ACTIVE: the SNC is not in pending state, a route
                    has been assigned to the SNC and all cross-connects
                    for the SNC are active in the network.</p>
        <p>SNCS_PARTIAL: the SNC is not in pending state, and
                    either a route has not been assigned to the SNC, or
                    not all of the cross-connects of the SNC are active
                    in the network. This may or may not include
                    activated SNCs for which there are currently no
                    active cross- connects in the network, depending on
                    the SNC management mode of operation.It is possible
                    that, in some EMSes, this state be unreachable.</p>
        <p>SNCS_NONEXISTENT: this is not an SNC state per se, as
                    it applies to "non-existent SNCs". It is
                    used in the interface to report SNCs that have been
                    deleted.</p>
        <p>See SNCState state diagram for details on valid transitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SNCS_NONEXISTENT"/>
      <xsd:enumeration value="SNCS_PENDING"/>
      <xsd:enumeration value="SNCS_ACTIVE"/>
      <xsd:enumeration value="SNCS_PARTIAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNC Type describes the connection based on the
                    signal flows.  For a detailed description of the use
                    of this attribute see SNC Types. In case of an ATM
                    SNC (VP or VC), ST_SIMPLE is used to specify a
                    'plain' (hard or regular) PVC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ST_SIMPLE"/>
      <xsd:enumeration value="ST_ADD_DROP_A"/>
      <xsd:enumeration value="ST_ADD_DROP_Z"/>
      <xsd:enumeration value="ST_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_ADD_DROP"/>
      <xsd:enumeration value="ST_OPEN_ADD_DROP"/>
      <xsd:enumeration value="ST_EXPLICIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SoftwareVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The OS product software version</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="StaticProtectionLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The StaticProtectionLevel with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:StaticProtectionLevelEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="StaticProtectionLevelEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The static protection level is a statement of the
                    internal resiliency of the SNC (internal to the
                    subnetwork). The more resilient an SNC is, the more
                    bandwidth it will consume.</p>
        <p>The protection level does not have any bearing on the
                    externally visible shape and traffic flows of the
                    SNC (in non-failure cases). For a detailed
                    description of the use of this attribute, see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="PREEMPTIBLE"/>
      <xsd:enumeration value="UNPROTECTED"/>
      <xsd:enumeration value="PARTIALLY_PROTECTED"/>
      <xsd:enumeration value="FULLY_PROTECTED"/>
      <xsd:enumeration value="HIGHLY_PROTECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationModeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Within the facade definition, the CTP/FTP can act as
                    an aggregate of associated G.805 TCPs, G.805
                    Termination Functions and G.805 CPs at one or more
                    LayerRates. The CTP is contained within a PTP or FTP.</p>
        <p>The TerminationMode attribute indicates and controls
                    the connection of the named CP at a specified
                    LayerRate to the dedicated G.805 TCP and associated
                    G.805 Termination Function at the same LayerRate
                    within the CTP/FTP.</p>
        <p>The TerminationMode is used, for example, to control
                    the Termination and mapping to VT1.5 of an STS1
                    Trail within an OC3 port. This capability could
                    potentially be used to terminate an STS1 backbone
                    Trail within a lower order mux that has the
                    capability to alternatively cross-connect the STS1
                    unterminated. The same capability is used in SDH and
                    is potentially applicable to any LayerRate.</p>
        <p>TerminationMode has the following values</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TM_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can not be mapped (i.e., it has
                            no contained potential CTPs). This indicates
                            that an SNC/crossconnect can be used to
                            connect the G.805 TCP of the CTP to the
                            connection point of another CTP/FTP. This
                            only applies to CTPs that connect on their
                            server side and are related to the
                            containing PTP/FTP on their client side.</p>
            <p>FTP: The FTP can not be mapped on the server
                            side (i.e., it has no contained potential
                            CTPs on the server side). This indicates
                            that an SNC/crossconnect can be used to
                            connect the G.805 TCP of the FTP to the
                            connection point of another CTP/FTP. This
                            only applies to FTPs that connect on their
                            server side and do not support IM (Inverse
                            Multiplexing).</p>
            <p>PTP: This is the only legal value for a PTP</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_NEITHER_TERMINATED_NOR_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped and currently is
                            (i.e., it has contained actual CTPs). This
                            indicates that the G.805 CPs adapted from
                            the corresponding G.805 Termination Function
                            within the CTP aggregate are available to
                            provide client layer capacity (e.g. STS1
                            terminated and mapped to VT1.5 i.e.
                            channelized). In this state the TCP will be
                            sourcing and sinking traffic. This is only a
                            valid value for CTPs that support client
                            adaptation.</p>
            <p>FTP: The FTP can be mapped on the server side
                            and currently is (i.e., it has contained
                            actual CTPs on the server side). This
                            indicates that the FTP supports IM (Inverse
                            Multiplexing) and the server side contained
                            CTPs (if any) are available for connection
                            as the FTP is actively assembling the
                            fragments of the IM. This value is not valid
                            for an FTP that does not support IM. (see
                            layering for more details).</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped but currently is
                            not (i.e., it does have contained potential
                            CTPs, but currently has no contained actual
                            CTPs). This indicates that the G.805 CP
                            aggregated in the CTP is not connected to a
                            TCP (that would be aggregated in the same
                            CTP) and therefore the CTP is available for
                            SNC/crossconnect connectivity (e.g. STS1 not
                            terminated and not mapped to VT1.5i.e. not
                            channelized).</p>
            <p>FTP: The FTP can be mapped on the server side
                            but currently is not (i.e., it does have
                            contained potential CTPs on the server side,
                            but currently has no contained actual CTPs
                            on the server side). This indicates that the
                            FTP supports IM (Inverse Multiplexing) but
                            the IM function is not active and the TCP
                            within the FTP is available for external
                            SNC/crossconnect connectivity.</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TransmissionDescriptorStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Contains the state of consistency between a TP and
                    its associated TransmissionDescriptor.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TMD_MISSING"/>
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="APPLIED"/>
      <xsd:enumeration value="MISMATCH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="TopologyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The Topology with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:TopologyEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="TopologyEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>TopologyType is used to describe the subnetwork
                    configuration. The EMS shall be capable of providing
                    a SubNetwork Connection through any physical
                    termination point of any managed element that
                    belongs to the Subnetwork.</p>
        <p>Composite subnetworks (i.e. containing other
                    Subnetworks) are not supported in this release of
                    the interface</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="TOPO_SINGLETON">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SINGLETON, which is used for a single NE
                            (of any type) that is managed independently
                            of its Topological Link connectivity to
                            other NEs. It may for example be a member of
                            a ring that is managed by a number of EMSes.
                            It is acceptable for an EMS to represent all
                            NEs as being in Singleton subnetworks
                            regardless of the actual network
                            configuration. A singleton subnetwork does
                            not contain internal topological links.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_CHAIN">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_CHAIN, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a chain.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_PSR, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a ring that is capable of
                            supporting subnetwork connection protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_PSR, which is used to cover the
                            case where two or more NEs of a PS ring (but
                            not the entire ring) are managed by the same EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SPRING, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a complete ring that supports
                            Shared Line Protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_SPRING, which is used to cover
                            cases where two or more NEs of an SP ring
                            (but not the entire ring) are managed by one EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_MESH">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_MESH, which is used to cover an
                            arbitrary set of two or more NEs not covered
                            by any other type.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A CTP/FTP may be involved in zero, one, or many
                    connections. The value TPConnectionState indicates
                    the degree to which a CTP/FTP is used. The values
                    TPCS_SOURCE_CONNECTED and TPCS_SINK_CONNECTED
                    reflect the presence of a one way connection. The
                    value TPCS_BI_CONNECTED means that the TP is both
                    sink and source connected.</p>
        <p>If an EMS cannot report whether the source of the TP
                    is connected or the sink is connected,
                    TPCS_BI_CONNECTED may be reported by that EMS.</p>
        <p>The value TPCS_NA is used for PTPs and TPPools.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPCS_NA"/>
      <xsd:enumeration value="TPCS_SOURCE_CONNECTED"/>
      <xsd:enumeration value="TPCS_SINK_CONNECTED"/>
      <xsd:enumeration value="TPCS_BI_CONNECTED"/>
      <xsd:enumeration value="TPCS_NOT_CONNECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointProtectionAssociationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>tpProtectionAssociation expresses constraints on
                    PTPs/CTPs/FTPs for PSR connection management.</p>
        <p>In a multi-layer subnetwork, say 'a', 'b', 'c' are
                    edge points. Suppose, for example, a three-ended
                    connection is sought from 'a' to 'b', where 'b' is
                    one of the endpoints. If 'c' is the constrained
                    choice for 'b' as the other end of the three- ended
                    connection,then 'b' and 'c' are said to be
                    associated by a ] protectionAssociation. The
                    tpProtectionAssociation is set to TPPA_PSR_RELATED
                    in 'b' and 'c', and getAssociatedTP(b) returns c and
                    getAssociatedTP(c) returns b.</p>
        <p>In all other cases, tpProtectionAssociation is set to TPPA_NA.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPPA_NA"/>
      <xsd:enumeration value="TPPA_PSR_RELATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:simpleType name="TerminationPointRole">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the enumeration of all possible end point
                    roles of a TP of an SNC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CM_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a connection matrix (CM) end point the
                            span of the SNC starts at a G.805 CP with a
                            fixed or flexible connection through the ME
                            at the SNC layer, i.e. the connectable layer
                            of the end point.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="LC_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a link connection (LC) end point
                            connectivity is adapted from a server layer
                            and the span of the SNC starts with a G.805
                            TCP with mapping mode set to TM_TERMINATED_ AND_AVAILABLE_FOR_MAPPING.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of EndPointRoles.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="role" type="tns:EndPointRoleType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type indicates the end point role of an end
                    TP. See R_TMF518_NRF_I_0026.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="role" type="tns:TerminationPointRole">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the role of the end
                            TP specified by the tpIndex.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tpIndex" type="xsd:unsignedInt">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the index of the end
                            TP within the end list.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="VersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The active software version of the ManagedElement</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=5</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/fd/v1" version="1.0" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/fd/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP FD XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=10"/>
  <!--==============-->
  <xsd:simpleType name="ConnectivityStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute provides an indication to the NMS
                    about the server layer connectivity between the MFDs
                    associated to an FD.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CS_UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>all FD Edge CPTPs are reachable
                        to each other</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CS_FULLY_CONNECTED">
        <xsd:annotation>
          <xsd:documentation>at least one FD Edge CPTP is not
                        reachable by another FD Edge CPTP</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CS_NOT_FULLY_CONNECTED">
        <xsd:annotation>
          <xsd:documentation>the Connectivity state of the FD
                        is not known by the EMS</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="FdTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This (read-only) attribute provides an indication of
                    the type of the FD.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FDT_SINGLETON">
        <xsd:annotation>
          <xsd:documentation>The FD contains at most one MFD</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FDT_NETWORK">
        <xsd:annotation>
          <xsd:documentation>The FD may contain more than one MFD</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="fd" type="tns:FlowDomainType"/>
  <!--==============-->
  <xsd:complexType name="FlowDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A flow domain is associated with a set of flow domain
                    edge CPTPs and matrix flow domains. Connectivity can
                    be created between flow points contained by flow
                    domain edge CPTPs through flow domain fragments.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of layer rates on which
                                    connectivity can be established in
                                    the flow domain together with a set
                                    of connectionless technology
                                    parameters for each layer rate.
                                    Refer to chapter
                                    "Connectionless Technology
                                    Parameters" of the supporting
                                    document LayeredParameters.pdf for
                                    details of the currently defined
                                    connectionless parameters.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectivityState" nillable="true" type="tns:ConnectivityStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indication about the server layer
                                    connectivity between matrix flow
                                    domains associated to the flow domain.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="type" nillable="true" type="tns:FdTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This (read-only) attribute provides
                                    an indication of the type of the FD.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:complexType name="FlowDomainListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of FlowDomains</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:fd"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="ConnectivityRequirementType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute shall identify (for a
                    "connectivity-aware" EMS) the requested
                    operation mode in case not all FPs have potential
                    connectivity to one another. If the EMS is not
                    connectivity-aware, this parameter is ignored.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CR_IGNORE">
        <xsd:annotation>
          <xsd:documentation>
            <p>in case not all FPs have potential
                            connectivity to one another, add all Flow
                            Points regardless of potential connectivity
                            (default value).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CR_REJECT">
        <xsd:annotation>
          <xsd:documentation>
            <p>in case not all FPs have potential
                            connectivity to one another, reject the request.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="ConnectivityAwarenessType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CONNECTIVITY_AWARE">
        <xsd:annotation>
          <xsd:documentation>
            <p>i“connectivity aware” indicates that the
                            target OS has some capability to detect the
                            connectivity between the MFDs within an FD</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CONNECTIVITY_UNAWARE">
        <xsd:annotation>
          <xsd:documentation>
            <p>“connectivity-unaware” indicates that the
                            target OS has no capability at all to detect
                            connectivity between the MFDs within an FD</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" version="1.0" xmlns:coi="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:itu="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP XML CommonResourceInfo structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=11"/>
  <!--=================-->
  <xsd:element name="commonResourceInfo" substitutionGroup="coi:commonObjectInfo" type="tns:CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition for common resource info</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines attributes common to all mTOP
                    resource objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="coi:CommonObjectInfoType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="source" nillable="true" type="tns:SourceType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the object was
                                    discovered or entered in OS inventory.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="networkAccessDomain" nillable="true" type="gen:NetworkAccessDomainType"/>
          <xsd:element minOccurs="0" name="meiAttributes" nillable="true" type="gen:MultiEventInventoryAttributesType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is used when a object
                                    instance is embedded in the
                                    inventory      layout payload of a
                                    Multi-Event Inventory (MEI)
                                    notification. It provides the
                                    time at which the NE detected the
                                    inventory change (if available) and
                                    an indication      of the type of
                                    inventory update, e.g., Object Creation.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="resourceState" nillable="true" type="tns:ResourceStateType"/>
          <xsd:element name="ituStateAndStatusList" type="itu:ItuStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates whether the object was discovered from the
                    network, or was entered into the OS's inventory.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:SourceEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SourceEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NETWORK_ME">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered directly from the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was entered into an OS on the CCV,
                            e.g., OS GUI or file transfer to the OS from
                            some other system.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NETWORK_EMS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered from an EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates the state of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceStateEnumType">
        <xsd:attribute name="overlap" type="xsd:string" use="optional"/>
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ResourceStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="INSTALLING"/>
      <xsd:enumeration value="INSTALLING_ACCEPTED"/>
      <xsd:enumeration value="INSTALLING_COMMISSIONED"/>
      <xsd:enumeration value="INSTALLING_DELIVERED"/>
      <xsd:enumeration value="INSTALLING_INSTALLED"/>
      <xsd:enumeration value="INSTALLING_INTEGRATED"/>
      <xsd:enumeration value="INSTALLING_REJECTED"/>
      <xsd:enumeration value="NON_WORKING"/>
      <xsd:enumeration value="PLANNING"/>
      <xsd:enumeration value="PLANNING_INITIAL_PLAN"/>
      <xsd:enumeration value="PLANNING_ORDERED"/>
      <xsd:enumeration value="PLANNING_PLANNED"/>
      <xsd:enumeration value="RETIRING"/>
      <xsd:enumeration value="RETIRING_DECOMMISSIONED"/>
      <xsd:enumeration value="RETIRING_DEINSTALLED"/>
      <xsd:enumeration value="RETIRING_DEINTEGRATED"/>
      <xsd:enumeration value="RETIRING_RECOVERED"/>
      <xsd:enumeration value="RETIRING_STORED"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_ACTIVE"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_UNAVAILABLE"/>
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="WORKING"/>
      <xsd:enumeration value="WORKING_ACTIVATED"/>
      <xsd:enumeration value="WORKING_DEACTIVATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ObjectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the enumeration of all the known object type
                    short names related to resources (at the time of
                    this module definition). It is only provided as an
                    implementation helper. For details of all object
                    types and their naming refer to SD2-7 ObjectNaming
                    (FMW DDP).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AID">
        <xsd:annotation>
          <xsd:documentation>Alarm IDentifier (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASA">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASAP">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment Profile (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CTP">
        <xsd:annotation>
          <xsd:documentation>Connection Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EH">
        <xsd:annotation>
          <xsd:documentation>Equipment Holder (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EPG">
        <xsd:annotation>
          <xsd:documentation>Equipment Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EQ">
        <xsd:annotation>
          <xsd:documentation>Equipment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FD">
        <xsd:annotation>
          <xsd:documentation>Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FDFR">
        <xsd:annotation>
          <xsd:documentation>Flow Domain Fragment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FTP">
        <xsd:annotation>
          <xsd:documentation>Flow Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GTP">
        <xsd:annotation>
          <xsd:documentation>Group Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MD">
        <xsd:annotation>
          <xsd:documentation>Management Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ME">
        <xsd:annotation>
          <xsd:documentation>Managed Element (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MFD">
        <xsd:annotation>
          <xsd:documentation>Matrix Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MLSN">
        <xsd:annotation>
          <xsd:documentation>Multi Layer Subnetwork (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>Operations System (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PG">
        <xsd:annotation>
          <xsd:documentation>Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PMP">
        <xsd:annotation>
          <xsd:documentation>Performance Monitoring Point (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PTP">
        <xsd:annotation>
          <xsd:documentation>Physical Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SNC">
        <xsd:annotation>
          <xsd:documentation>Subnetwork Connection (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCPROFILE">
        <xsd:annotation>
          <xsd:documentation>Traffic Condifitioning Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCAPP">
        <xsd:annotation>
          <xsd:documentation>Threshold Crossing Alert
                        Parameter Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TL">
        <xsd:annotation>
          <xsd:documentation>Topological Link (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TMD">
        <xsd:annotation>
          <xsd:documentation>Transmission Descriptor (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TPPOOL">
        <xsd:annotation>
          <xsd:documentation>Termination Point Pool (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common object information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=7"/>
  <!--==============-->
  <xsd:element name="commonObjectInfo" type="tns:CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute represents a unique
                            name/identifier for the object on the CCV.
                            Consult the SD2-7 about object naming for
                            additional normative references.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="userLabel" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="discoveredName" type="gen:DiscoveredNameType"/>
      <xsd:element minOccurs="0" name="namingOs" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the object attribute definition to
                            identify the name of the OS that provided
                            the unique MTOSI name for the object. It is
                            assumed that each object (that is published
                            on the CCV) has a unique naming OS. This
                            attribute is optional in a point to point
                            NMS-EMS paradigm.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="owner" nillable="true" type="gen:OwnerType"/>
      <xsd:element minOccurs="0" name="aliasNameList" nillable="true" type="gen:AliasNameListType"/>
      <xsd:element minOccurs="0" name="vendorExtensions" nillable="true" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=11</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T state or status
                parameters supported in mTOP</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="x721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="x721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="x721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="x721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="x721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="m3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="m3100.CircuitPackType" type="tns:M3100.CircuitPackTypeType"/>
      <xsd:element minOccurs="0" name="x721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:element minOccurs="0" name="x721.State" type="tns:X721.StateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="X721.OperationalStateType">
    <xsd:annotation>
      <xsd:documentation>Oper[ational] State parameter from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DISABLED"/>
      <xsd:enumeration value="UNABLED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AdministrativeStateType">
    <xsd:annotation>
      <xsd:documentation>Admin[istrative] State parameter from
                ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="LOCKED"/>
      <xsd:enumeration value="UNLOCKED"/>
      <xsd:enumeration value="SHUTTING_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UsageStateType">
    <xsd:annotation>
      <xsd:documentation>Usage State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IDLE"/>
      <xsd:enumeration value="ACTIVE"/>
      <xsd:enumeration value="BUSY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AvailabilityStatusType">
    <xsd:annotation>
      <xsd:documentation>Avail[ability] Status based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="INTypeEST"/>
      <xsd:enumeration value="FAILED"/>
      <xsd:enumeration value="POWER_OFF"/>
      <xsd:enumeration value="OFF_LINE"/>
      <xsd:enumeration value="OFF_DUTY"/>
      <xsd:enumeration value="DEPENDENCY"/>
      <xsd:enumeration value="DEGRADED"/>
      <xsd:enumeration value="NOT_INSTALLED"/>
      <xsd:enumeration value="LOG_FULL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.ControlStatusType">
    <xsd:annotation>
      <xsd:documentation>Control Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="SUBJECTTypeOTypeEST"/>
      <xsd:enumeration value="PART_OF_SERVICES_LOCKED"/>
      <xsd:enumeration value="RESERVED_FORTypeEST"/>
      <xsd:enumeration value="SUSPENDED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.HolderStatusType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HOLDER_EMPTY"/>
      <xsd:enumeration value="INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="NOT_INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="UNKNOWNTypeYPE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.CircuitPackTypeType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UnkownstatusType">
    <xsd:annotation>
      <xsd:documentation>Unknown Status parameter based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="X721.StateType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="X721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="X721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="X721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="X721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="X721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="M3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="X721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=13</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:lr="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--==============-->
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP XML LayeredParameters structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=12"/>
  <!--==============-->
  <xsd:element name="transmissionParametersList" nillable="true" type="tns:LayeredParametersListType"/>
  <!--==============-->
  <xsd:complexType name="LayeredParametersListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is used in the TP definition and as a
                    consequence is available for use in a connection
                    specification where a TP is specified.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:transmissionParameters"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--==============-->
  <xsd:element name="transmissionParameters" nillable="true" type="tns:LayeredParametersType"/>
  <!--==============-->
  <xsd:complexType name="LayeredParametersType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is a structure that includes the layer rate with
                    the applicable list of transmissions parameters</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="layerRate" type="lr:LayerRateType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the layer to which the parameters apply.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="parameterList" type="gen:NameAndValueStringListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of tranmission parameters as a
                            generic pair of name and value strings.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific containment for vendor
                            extensions of the list of tranmission parameters.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=10</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported Alarm ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuArcStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T Alarm Reporting
                Control (ARC) state or status parameters supported in
                mTOP;    Each element of the list identifies a state or
                status and provides its relevant value.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="m3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="m3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="m3100.NALMTIInterval" type="tns:M3100.NALMTIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.NALMQIInterval" type="tns:M3100.NALMQIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
      <xsd:element minOccurs="0" name="m3100.State" type="tns:M3100.ArcStateListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="M3100.AlarmStatusType">
    <xsd:annotation>
      <xsd:documentation>Alarm Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CLEARED"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="CRITICAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcStateType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ALM"/>
      <xsd:enumeration value="NALM"/>
      <xsd:enumeration value="NALMTypeIMED_INHIBIT"/>
      <xsd:enumeration value="NALM_QUALIFIED_INHIBIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMTIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMQIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcQIStatusType">
    <xsd:annotation>
      <xsd:documentation>ARC QI Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="NALM_NOT_READY"/>
      <xsd:enumeration value="NALM_COUNT_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="M3100.ArcStateListType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="M3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="M3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="M3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=18</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/tp/v1" version="1.0" xmlns:ctp="http://www.tmforum.org/mtop/nrf/xsd/ctp/v1" xmlns:ftp="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" xmlns:ptp="http://www.tmforum.org/mtop/nrf/xsd/ptp/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/tp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP TP XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/ptp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=16"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/ctp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=4"/>
  <!--=================-->
  <xsd:complexType name="TerminationPointType">
    <xsd:sequence>
      <xsd:choice>
        <xsd:annotation>
          <xsd:documentation>
            <p>A union containment of all forms of
                            TerminationPoints (PTP, FTP, and CTP).</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:element ref="ptp:ptp"/>
        <xsd:element ref="ftp:ftp"/>
        <xsd:element ref="ctp:ctp"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A heterogeneous list of TerminationPoints (PTPs,
                    FTPs, and CTPs) with no particular order.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="tp" type="tns:TerminationPointType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=16</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/ptp/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/ptp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PTP XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=10"/>
  <!--=================-->
  <xsd:element name="ptp" type="tns:PhysicalTerminationPointType"/>
  <!--=================-->
  <xsd:complexType name="PhysicalTerminationPointType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the PhysicalTerminationPoint
                    mTOP network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="direction" nillable="true" type="com:DirectionalityType"/>
          <xsd:element minOccurs="0" name="tpProtectionAssociation" nillable="true" type="com:TerminationPointProtectionAssociationType"/>
          <xsd:element minOccurs="0" name="isEdgePoint" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the TP is an edge point
                                    of at least one subnetwork, i.e. if
                                    it is an end point of a potential
                                    inter-subnetwork topological link.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isEquipmentProtected" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The attribute indicates whether or
                                    not the TP is supported by a
                                    protected equipment.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    egress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ingressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    eingress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ingressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Physical Termination
                                    Point may have an optional reference
                                    to an ingress (incoming)
                                    Transmission Descriptor. The
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Ingress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Egress Descriptor name should either
                                    be that of a Transmission Descriptor
                                    or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Physical Termination
                                    Point may have an optional reference
                                    to an egress (outgoing) Transmission
                                    Descriptor. The Transmission
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Egress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Ingress Descriptor name should
                                    either be that of a Transmission
                                    Descriptor or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of transmission parameters
                                    which can be set and/or retrieved on
                                    the TP at a specified layer. This
                                    attribute must contain the complete
                                    set of layer rates represented by a
                                    PTP - even if they have no
                                    parameters associated with them. The
                                    layerRates are listed in the order
                                    of their client-server relationship
                                    (see layering for more details).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this TP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="PhysicalTerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PhysicalTerminationPoints.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:ptp"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=6</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP FTP XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=10"/>
  <!--=================-->
  <xsd:element name="ftp" type="tns:FloatingTerminationPointType"/>
  <!--=================-->
  <xsd:complexType name="FloatingTerminationPointType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the FloatingTerminationPoint
                    mTOP network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="direction" nillable="true" type="com:DirectionalityType"/>
          <xsd:element minOccurs="0" name="tpProtectionAssociation" nillable="true" type="com:TerminationPointProtectionAssociationType"/>
          <xsd:element minOccurs="0" name="isEdgePoint" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the TP is an edge point
                                    of at least one subnetwork, i.e. if
                                    it is an end point of a potential
                                    inter-subnetwork topological link.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isEquipmentProtected" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The attribute indicates whether or
                                    not the TP is supported by a
                                    protected equipment.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    egress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ingressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    eingress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionState" nillable="true" type="com:TerminationPointConnectionStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is only applicable to
                                    CTPs and FTPs. If the source is
                                    connected to one entity and the sink
                                    is connected to another entity then
                                    the value of this attribute is TPCS_BI_CONNECTED.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="tpMappingMode" nillable="true" type="com:TerminationModeType"/>
          <xsd:element minOccurs="0" name="ingressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Floating Termination
                                    Point may have an optional reference
                                    to an ingress (incoming)
                                    Transmission Descriptor. The
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Ingress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Egress Descriptor name should either
                                    be that of a Transmission Descriptor
                                    or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Floating Termination
                                    Point may have an optional reference
                                    to an egress (outgoing) Transmission
                                    Descriptor. The Transmission
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Egress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Ingress Descriptor name should
                                    either be that of a Transmission
                                    Descriptor or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of transmission parameters
                                    which can be set and/or retrieved on
                                    the TP at a specified layer. This
                                    attribute must contain the complete
                                    set of layer rates represented by a
                                    FTP - even if they have no
                                    parameters associated with them. The
                                    layerRates are listed in the order
                                    of their client-server relationship
                                    (see layering for more details).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this TP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="FloatingTerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of FloatinglTerminationPoints.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:ftp"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=4</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/ctp/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/ctp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP CTP XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=10"/>
  <!--=================-->
  <xsd:element name="ctp" type="tns:ConnectionTerminationPointType"/>
  <!--=================-->
  <xsd:complexType name="ConnectionTerminationPointType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the ConnectionTerminationPoint
                    mTOP network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="direction" nillable="true" type="com:DirectionalityType"/>
          <xsd:element minOccurs="0" name="tpProtectionAssociation" nillable="true" type="com:TerminationPointProtectionAssociationType"/>
          <xsd:element minOccurs="0" name="isEdgePoint" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the TP is an edge point
                                    of at least one subnetwork, i.e. if
                                    it is an end point of a potential
                                    inter-subnetwork topological link.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isEquipmentProtected" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The attribute indicates whether or
                                    not the TP is supported by a
                                    protected equipment.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    egress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ingressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    eingress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionState" nillable="true" type="com:TerminationPointConnectionStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is only applicable to
                                    CTPs and FTPs. If the source is
                                    connected to one entity and the sink
                                    is connected to another entity then
                                    the value of this attribute is TPCS_BI_CONNECTED.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="tpMappingMode" nillable="true" type="com:TerminationModeType"/>
          <xsd:element minOccurs="0" name="ingressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Connection Termination
                                    Point may have an optional reference
                                    to an ingress (incoming)
                                    Transmission Descriptor. The
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Ingress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Egress Descriptor name should either
                                    be that of a Transmission Descriptor
                                    or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Connection Termination
                                    Point may have an optional reference
                                    to an egress (outgoing) Transmission
                                    Descriptor. The Transmission
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Egress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Ingress Descriptor name should
                                    either be that of a Transmission
                                    Descriptor or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of transmission parameters
                                    which can be set and/or retrieved on
                                    the TP at a specified layer. This
                                    attribute must contain the complete
                                    set of layer rates represented by a
                                    CTP - even if they have no
                                    parameters associated with them. The
                                    layerRates are listed in the order
                                    of their client-server relationship
                                    (see layering for more details).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this TP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="ConnectionTerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of ConnectionTerminationPoints.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:ctp"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=19</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" version="1.0" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Fulfillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML TpPool structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=13"/>
  <!--=================-->
  <xsd:element name="tpPool" type="tns:TerminationPointPoolType"/>
  <!--=================-->
  <xsd:complexType name="TerminationPointPoolType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the TP Pool mTOP network
                    resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="numberOfMembers" nillable="true" type="tns:NumberOfMembersType"/>
          <xsd:element minOccurs="0" name="numberOfIdleMembers" nillable="true" type="tns:NumberOfIdleMembersType"/>
          <xsd:element minOccurs="0" name="descriptionOfUse" nillable="true" type="tns:DescriptionOfUseType"/>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of transmission parameters
                                    which can be set and/or retrieved on
                                    the TP at a specified layer. This
                                    attribute must contain the complete
                                    set of layer rates represented by a
                                    TPPool - even if they have no
                                    parameters associated with them. The
                                    layerRates are listed in the order
                                    of their client-server relationship
                                    (see layering for more details).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="containedMemberList" nillable="true">
            <xsd:annotation>
              <xsd:documentation>
                <p>Refers to the indexed members list of
                                    the TPPool.  It is only used within
                                    AVC notifications.  Use
                                    getTerminationPointGroupingRelationships()
                                    with tpName = TPPool to read the
                                    names of the TPPool members.  Use
                                    getTerminationPointGroupingRelationships()
                                    with tpName = PTP/CTP/FTP/GTP to
                                    read the TPPool the TP or GTP is a
                                    member of.  For full name
                                    qualification consider use of the
                                    two attributes;
                                    MemberContainingMeList and MemberContainingTpList.</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" name="containedMember" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>
                      <p>value of TP or GTP (RDN)
                                    name component of TP or
                                    GTP name.</p>
                    </xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="memberContainingMeList" nillable="true">
            <xsd:annotation>
              <xsd:documentation>
                <p>Refers to the indexed list of members
                                    of the TPPool (i.e., a TP or a GTP).
                                    It is only used within AVC
                                    notifications.  Use
                                    getTerminationPointGroupingRelationships()
                                    with tpName = TPPool to read the
                                    names of the TPPool members.</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" name="memberContainingMe" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>
                      <p>value of ME (RDN) name
                                    component of ME name.</p>
                    </xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="memberContainingTpList" nillable="true">
            <xsd:annotation>
              <xsd:documentation>
                <p>Refers to the indexed list member of
                                    the TPPool when this is a CTP.  It
                                    is only used within AVC
                                    notifications.  Use
                                    getTerminationPointGroupingRelationships()
                                    with tpName = TPPool to read the
                                    names of the TPPool members.</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" name="memberContainingTp" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>
                      <p>value of PTP/FTP (RDN)
                                    name component of
                                    PTP/FTP name.</p>
                    </xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TerminationPointPoolListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of TPPools</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:tpPool"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="DescriptionOfUseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A description of the specific use of the TP pool, in
                    particular how its members are collected and
                    administered. It could include, for example, the
                    name of a TP (e.g., an ATM NI CTP) such that all TP
                    pool members have to be collected from the set of
                    potential client CTPs of this TP. The description of
                    use of an ATM VP TP pool would be
                    "VirtualUNI", if all its VP CTPs are
                    contained in the same real user network interface
                    (UNI) (i.e., a tributary ATM NI CTP) that is
                    partitioned into virtual UNIs (i.e., VP TP pools).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NumberOfIdleMembersType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Identifies the number of currently contained idle TPs
                    that are free to be used for the intended management purpose.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedInt"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NumberOfMembersType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Identifies the total number of TPs currently
                    contained in the TPPool.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedInt"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=8</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP GTP XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval/TerminationPointRetrievalHttp?xsd=10"/>
  <!--=================-->
  <xsd:element name="gtp" type="tns:GroupTerminationPointType"/>
  <!--=================-->
  <xsd:complexType name="GroupTerminationPointType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Group TerminationPoint
                    mTOP network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="isReportingAlarms" nillable="true" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="containedTpRefList" nillable="true" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute represents an ordered
                                    list of contained CTP names.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionState" nillable="true" type="com:TerminationPointConnectionStateType"/>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this GTP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="GroupTerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of GTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:gtp"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint></con:endpoints><con:operation isOneWay="false" action="getAllAssignableConnectionlessPortTerminationPoints" name="getAllAssignableConnectionlessPortTerminationPoints" bindingOperationName="getAllAssignableConnectionlessPortTerminationPoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllAssignableConnectionlessPortTerminationPointsRequest>
         <!--Optional:-->
         <v11:mfdRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mfdRef>
      </v11:getAllAssignableConnectionlessPortTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllAssignableConnectionlessPortTerminationPoints"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="getAllAssignedConnectionlessPortTerminationPoints" name="getAllAssignedConnectionlessPortTerminationPoints" bindingOperationName="getAllAssignedConnectionlessPortTerminationPoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllAssignedConnectionlessPortTerminationPointsRequest>
         <!--Optional:-->
         <v11:mfdRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mfdRef>
      </v11:getAllAssignedConnectionlessPortTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllAssignedConnectionlessPortTerminationPoints"/></con:call></con:operation><con:operation isOneWay="false" action="getAllConnectionlessPortTerminationPoints" name="getAllConnectionlessPortTerminationPoints" bindingOperationName="getAllConnectionlessPortTerminationPoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllConnectionlessPortTerminationPointsRequest>
         <!--Optional:-->
         <v11:fdRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:fdRef>
         <!--Optional:-->
         <v11:cptpRole>?</v11:cptpRole>
      </v11:getAllConnectionlessPortTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllConnectionlessPortTerminationPoints"/></con:call></con:operation><con:operation isOneWay="false" action="getAllEdgePoints" name="getAllEdgePoints" bindingOperationName="getAllEdgePoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllEdgePointsRequest>
         <!--Optional:-->
         <v11:mlsnRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mlsnRef>
         <!--Optional:-->
         <v11:tpLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:tpLayerRateList>
         <!--Optional:-->
         <v11:connectionLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionLayerRateList>
      </v11:getAllEdgePointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllEdgePoints"/></con:call></con:operation><con:operation isOneWay="false" action="getAllFloatingTerminationPoints" name="getAllFloatingTerminationPoints" bindingOperationName="getAllFloatingTerminationPoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllFloatingTerminationPointsRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:tpLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:tpLayerRateList>
         <!--Optional:-->
         <v11:connectionLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionLayerRateList>
      </v11:getAllFloatingTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllFloatingTerminationPoints"/></con:call></con:operation><con:operation isOneWay="false" action="getAllGroupTerminationPoints" name="getAllGroupTerminationPoints" bindingOperationName="getAllGroupTerminationPoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllGroupTerminationPointsRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:tpLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:tpLayerRateList>
      </v11:getAllGroupTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllGroupTerminationPoints"/></con:call></con:operation><con:operation isOneWay="false" action="getAllPhysicalTerminationPoints" name="getAllPhysicalTerminationPoints" bindingOperationName="getAllPhysicalTerminationPoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllPhysicalTerminationPointsRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:tpLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:tpLayerRateList>
         <!--Optional:-->
         <v11:connectionLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionLayerRateList>
      </v11:getAllPhysicalTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllPhysicalTerminationPoints"/></con:call></con:operation><con:operation isOneWay="false" action="getAllPhysicalTerminationPointsWithoutFtps" name="getAllPhysicalTerminationPointsWithoutFtps" bindingOperationName="getAllPhysicalTerminationPointsWithoutFtps" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllPhysicalTerminationPointsWithoutFtpsRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:tpLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:tpLayerRateList>
         <!--Optional:-->
         <v11:connectionLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionLayerRateList>
      </v11:getAllPhysicalTerminationPointsWithoutFtpsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllPhysicalTerminationPointsWithoutFtps"/></con:call></con:operation><con:operation isOneWay="false" action="getAllSupportedPhysicalTerminationPoints" name="getAllSupportedPhysicalTerminationPoints" bindingOperationName="getAllSupportedPhysicalTerminationPoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllSupportedPhysicalTerminationPointsRequest>
         <!--Optional:-->
         <v11:equipmentRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:equipmentRef>
      </v11:getAllSupportedPhysicalTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllSupportedPhysicalTerminationPoints"/></con:call></con:operation><con:operation isOneWay="false" action="getAllTerminationPointPools" name="getAllTerminationPointPools" bindingOperationName="getAllTerminationPointPools" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllTerminationPointPoolsRequest>
         <!--Optional:-->
         <v11:mlsnRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mlsnRef>
      </v11:getAllTerminationPointPoolsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllTerminationPointPools"/></con:call></con:operation><con:operation isOneWay="false" action="getAssociatedGroupTerminationPoint" name="getAssociatedGroupTerminationPoint" bindingOperationName="getAssociatedGroupTerminationPoint" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAssociatedGroupTerminationPointRequest>
         <!--Optional:-->
         <v11:ctpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:ctpRef>
      </v11:getAssociatedGroupTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAssociatedGroupTerminationPoint"/></con:call></con:operation><con:operation isOneWay="false" action="getAssociatedTerminationPoint" name="getAssociatedTerminationPoint" bindingOperationName="getAssociatedTerminationPoint" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAssociatedTerminationPointRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
      </v11:getAssociatedTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAssociatedTerminationPoint"/></con:call></con:operation><con:operation isOneWay="false" action="getAssociatedTerminationPointsWrtTmd" name="getAssociatedTerminationPointsWrtTmd" bindingOperationName="getAssociatedTerminationPointsWrtTmd" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAssociatedTerminationPointsWrtTmdRequest>
         <!--Optional:-->
         <v11:tmdRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tmdRef>
      </v11:getAssociatedTerminationPointsWrtTmdRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAssociatedTerminationPointsWrtTmd"/></con:call></con:operation><con:operation isOneWay="false" action="getContainedCurrentConnectionTerminationPoints" name="getContainedCurrentConnectionTerminationPoints" bindingOperationName="getContainedCurrentConnectionTerminationPoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getContainedCurrentConnectionTerminationPointsRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
         <!--Optional:-->
         <v11:layerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:layerRateList>
      </v11:getContainedCurrentConnectionTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getContainedCurrentConnectionTerminationPoints"/></con:call></con:operation><con:operation isOneWay="false" action="getContainedInUseConnectionTerminationPoints" name="getContainedInUseConnectionTerminationPoints" bindingOperationName="getContainedInUseConnectionTerminationPoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getContainedInUseConnectionTerminationPointsRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
         <!--Optional:-->
         <v11:layerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:layerRateList>
      </v11:getContainedInUseConnectionTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getContainedInUseConnectionTerminationPoints"/></con:call></con:operation><con:operation isOneWay="false" action="getContainedPotentialConnectionTerminationPoints" name="getContainedPotentialConnectionTerminationPoints" bindingOperationName="getContainedPotentialConnectionTerminationPoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getContainedPotentialConnectionTerminationPointsRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
         <!--Optional:-->
         <v11:layerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:layerRateList>
      </v11:getContainedPotentialConnectionTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getContainedPotentialConnectionTerminationPoints"/></con:call></con:operation><con:operation isOneWay="false" action="getContainingGroupTerminationPoint" name="getContainingGroupTerminationPoint" bindingOperationName="getContainingGroupTerminationPoint" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getContainingGroupTerminationPointRequest>
         <!--Optional:-->
         <v11:ctpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:ctpRef>
      </v11:getContainingGroupTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getContainingGroupTerminationPoint"/></con:call></con:operation><con:operation isOneWay="false" action="getContainingTerminationPoints" name="getContainingTerminationPoints" bindingOperationName="getContainingTerminationPoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getContainingTerminationPointsRequest>
         <!--Optional:-->
         <v11:ctpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:ctpRef>
      </v11:getContainingTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getContainingTerminationPoints"/></con:call></con:operation><con:operation isOneWay="false" action="getGroupTerminationPoint" name="getGroupTerminationPoint" bindingOperationName="getGroupTerminationPoint" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getGroupTerminationPointRequest>
         <!--Optional:-->
         <v11:gtpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:gtpRef>
      </v11:getGroupTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getGroupTerminationPoint"/></con:call></con:operation><con:operation isOneWay="false" action="getGroupTerminationPointsIterator" name="getGroupTerminationPointsIterator" bindingOperationName="getGroupTerminationPointsIterator" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getGroupTerminationPointsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getGroupTerminationPointsIterator"/></con:call></con:operation><con:operation isOneWay="false" action="getTerminationPoint" name="getTerminationPoint" bindingOperationName="getTerminationPoint" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
      </v11:getTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getTerminationPoint"/></con:call></con:operation><con:operation isOneWay="false" action="getTerminationPointGroupingRelationships" name="getTerminationPointGroupingRelationships" bindingOperationName="getTerminationPointGroupingRelationships" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointGroupingRelationshipsRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
      </v11:getTerminationPointGroupingRelationshipsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getTerminationPointGroupingRelationships"/></con:call></con:operation><con:operation isOneWay="false" action="getTerminationPointPool" name="getTerminationPointPool" bindingOperationName="getTerminationPointPool" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointPoolRequest>
         <!--Optional:-->
         <v11:tpPoolRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpPoolRef>
      </v11:getTerminationPointPoolRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getTerminationPointPool"/></con:call></con:operation><con:operation isOneWay="false" action="getTerminationPointPoolsIterator" name="getTerminationPointPoolsIterator" bindingOperationName="getTerminationPointPoolsIterator" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointPoolsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getTerminationPointPoolsIterator"/></con:call></con:operation><con:operation isOneWay="false" action="getTerminationPointsIterator" name="getTerminationPointsIterator" bindingOperationName="getTerminationPointsIterator" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getTerminationPointsIterator"/></con:call></con:operation><con:operation isOneWay="false" action="getTrafficConditioningProfileAssociatedTps" name="getTrafficConditioningProfileAssociatedTps" bindingOperationName="getTrafficConditioningProfileAssociatedTps" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTrafficConditioningProfileAssociatedTpsRequest>
         <!--Optional:-->
         <v11:tcProfileRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tcProfileRef>
      </v11:getTrafficConditioningProfileAssociatedTpsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getTrafficConditioningProfileAssociatedTps"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ConnectionRetrievalSoapHttpBinding" type="wsdl" bindingName="{http://www.tmforum.org/mtop/mri/wsdl/conr/v1-0}ConnectionRetrievalSoapHttpBinding" soapVersion="1_1" anonymous="optional" definition="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp.wsdl?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp.wsdl?WSDL"><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp.wsdl?WSDL</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-ConnectionRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/mri/wsdl/conr/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/mri/wsdl/conr/v1-0" xmlns:WL5G3N2="http://schemas.xmlsoap.org/wsdl/soap/">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?wsdl=1" namespace="http://www.tmforum.org/mtop/mri/wsdl/conr/v1-0"/>
  <WL5G3N0:documentation>DDP: ManageResourceInventory
    Module: ConnectionRetrieval Service Interface WSDL HTTP Module
    Description: This module contains all the mTOP ConnectionRetrieval Service Interface WSDL definitions for the Web Service deployment profile with SOAP/HTTP binding.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:portType name="ConnectionRetrieval_RPC">
    <WL5G3N0:documentation>The ConnectionRetrieval porttype (interface) for RPC (synchronous) based client/server communication patterns. All SIT operations use the specific get"ObjectType"Iterator operation to handle multiple responses.</WL5G3N0:documentation>
    <WL5G3N0:operation name="getAllCrossConnections">
      <WL5G3N0:input message="WL5G3N1:getAllCrossConnectionsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllCrossConnectionsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllCrossConnectionsException" name="getAllCrossConnectionsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllFixedCrossConnections">
      <WL5G3N0:input message="WL5G3N1:getAllFixedCrossConnectionsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllFixedCrossConnectionsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllFixedCrossConnectionsException" name="getAllFixedCrossConnectionsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllFixedSubnetworkConnections">
      <WL5G3N0:input message="WL5G3N1:getAllFixedSubnetworkConnectionsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllFixedSubnetworkConnectionsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllFixedSubnetworkConnectionsException" name="getAllFixedSubnetworkConnectionsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllFixedSubnetworkConnectionsWithTp">
      <WL5G3N0:input message="WL5G3N1:getAllFixedSubnetworkConnectionsWithTpRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllFixedSubnetworkConnectionsWithTpResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllFixedSubnetworkConnectionsWithTpException" name="getAllFixedSubnetworkConnectionsWithTpException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllSubnetworkConnections">
      <WL5G3N0:input message="WL5G3N1:getAllSubnetworkConnectionsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllSubnetworkConnectionsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllSubnetworkConnectionsException" name="getAllSubnetworkConnectionsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllSubnetworkConnectionsWithTp">
      <WL5G3N0:input message="WL5G3N1:getAllSubnetworkConnectionsWithTpRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllSubnetworkConnectionsWithTpResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllSubnetworkConnectionsWithTpException" name="getAllSubnetworkConnectionsWithTpException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getBackupRoutes">
      <WL5G3N0:input message="WL5G3N1:getBackupRoutesRequest"/>
      <WL5G3N0:output message="WL5G3N1:getBackupRoutesResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getBackupRoutesException" name="getBackupRoutesException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getIntendedRoute">
      <WL5G3N0:input message="WL5G3N1:getIntendedRouteRequest"/>
      <WL5G3N0:output message="WL5G3N1:getIntendedRouteResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getIntendedRouteException" name="getIntendedRouteException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getPotentialFixedCrossConnections">
      <WL5G3N0:input message="WL5G3N1:getPotentialFixedCrossConnectionsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getPotentialFixedCrossConnectionsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getPotentialFixedCrossConnectionsException" name="getPotentialFixedCrossConnectionsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getRoute">
      <WL5G3N0:input message="WL5G3N1:getRouteRequest"/>
      <WL5G3N0:output message="WL5G3N1:getRouteResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getRouteException" name="getRouteException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSubnetworkConnection">
      <WL5G3N0:input message="WL5G3N1:getSubnetworkConnectionRequest"/>
      <WL5G3N0:output message="WL5G3N1:getSubnetworkConnectionResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getSubnetworkConnectionException" name="getSubnetworkConnectionException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSubnetworkConnectionModeOfOperation">
      <WL5G3N0:input message="WL5G3N1:getSubnetworkConnectionModeOfOperationRequest"/>
      <WL5G3N0:output message="WL5G3N1:getSubnetworkConnectionModeOfOperationResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getSubnetworkConnectionModeOfOperationException" name="getSubnetworkConnectionModeOfOperationException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSubnetworkConnectionsByUserLabel">
      <WL5G3N0:input message="WL5G3N1:getSubnetworkConnectionsByUserLabelRequest"/>
      <WL5G3N0:output message="WL5G3N1:getSubnetworkConnectionsByUserLabelResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getSubnetworkConnectionsByUserLabelException" name="getSubnetworkConnectionsByUserLabelException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSubnetworkConnectionsIterator">
      <WL5G3N0:input message="WL5G3N1:getSubnetworkConnectionsIteratorRequest"/>
      <WL5G3N0:output message="WL5G3N1:getSubnetworkConnectionsIteratorResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getSubnetworkConnectionsIteratorException" name="getSubnetworkConnectionsIteratorException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getCrossConnectionsIterator">
      <WL5G3N0:input message="WL5G3N1:getCrossConnectionsIteratorRequest"/>
      <WL5G3N0:output message="WL5G3N1:getCrossConnectionsIteratorResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getCrossConnectionsIteratorException" name="getCrossConnectionsIteratorException"/>
    </WL5G3N0:operation>
  </WL5G3N0:portType>
  <WL5G3N0:binding name="ConnectionRetrievalSoapHttpBinding" type="WL5G3N1:ConnectionRetrieval_RPC">
    <WL5G3N0:documentation>SOAP HTTP binding definitions of the operations of the ConnectionRetrieval RPC portType (interface)</WL5G3N0:documentation>
    <WL5G3N2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <WL5G3N0:operation name="getAllCrossConnections">
      <WL5G3N2:operation soapAction="getAllCrossConnections" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllCrossConnectionsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllCrossConnectionsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllCrossConnectionsException">
        <WL5G3N2:fault name="getAllCrossConnectionsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllFixedCrossConnections">
      <WL5G3N2:operation soapAction="getAllFixedCrossConnections" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllFixedCrossConnectionsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllFixedCrossConnectionsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllFixedCrossConnectionsException">
        <WL5G3N2:fault name="getAllFixedCrossConnectionsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllFixedSubnetworkConnections">
      <WL5G3N2:operation soapAction="getAllFixedSubnetworkConnections" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllFixedSubnetworkConnectionsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllFixedSubnetworkConnectionsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllFixedSubnetworkConnectionsException">
        <WL5G3N2:fault name="getAllFixedSubnetworkConnectionsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllFixedSubnetworkConnectionsWithTp">
      <WL5G3N2:operation soapAction="getAllFixedSubnetworkConnectionsWithTp" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllFixedSubnetworkConnectionsWithTpRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllFixedSubnetworkConnectionsWithTpResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllFixedSubnetworkConnectionsWithTpException">
        <WL5G3N2:fault name="getAllFixedSubnetworkConnectionsWithTpException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllSubnetworkConnections">
      <WL5G3N2:operation soapAction="getAllSubnetworkConnections" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllSubnetworkConnectionsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllSubnetworkConnectionsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllSubnetworkConnectionsException">
        <WL5G3N2:fault name="getAllSubnetworkConnectionsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllSubnetworkConnectionsWithTp">
      <WL5G3N2:operation soapAction="getAllSubnetworkConnectionsWithTp" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllSubnetworkConnectionsWithTpRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllSubnetworkConnectionsWithTpResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllSubnetworkConnectionsWithTpException">
        <WL5G3N2:fault name="getAllSubnetworkConnectionsWithTpException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getBackupRoutes">
      <WL5G3N2:operation soapAction="getBackupRoutes" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getBackupRoutesRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getBackupRoutesResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getBackupRoutesException">
        <WL5G3N2:fault name="getBackupRoutesException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getIntendedRoute">
      <WL5G3N2:operation soapAction="getIntendedRoute" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getIntendedRouteRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getIntendedRouteResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getIntendedRouteException">
        <WL5G3N2:fault name="getIntendedRouteException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getPotentialFixedCrossConnections">
      <WL5G3N2:operation soapAction="getPotentialFixedCrossConnections" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getPotentialFixedCrossConnectionsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getPotentialFixedCrossConnectionsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getPotentialFixedCrossConnectionsException">
        <WL5G3N2:fault name="getPotentialFixedCrossConnectionsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getRoute">
      <WL5G3N2:operation soapAction="getRoute" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getRouteRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getRouteResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getRouteException">
        <WL5G3N2:fault name="getRouteException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSubnetworkConnection">
      <WL5G3N2:operation soapAction="getSubnetworkConnection" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getSubnetworkConnectionRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getSubnetworkConnectionResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getSubnetworkConnectionException">
        <WL5G3N2:fault name="getSubnetworkConnectionException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSubnetworkConnectionModeOfOperation">
      <WL5G3N2:operation soapAction="getSubnetworkConnectionModeOfOperation" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getSubnetworkConnectionModeOfOperationRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getSubnetworkConnectionModeOfOperationResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getSubnetworkConnectionModeOfOperationException">
        <WL5G3N2:fault name="getSubnetworkConnectionModeOfOperationException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSubnetworkConnectionsByUserLabel">
      <WL5G3N2:operation soapAction="getSubnetworkConnectionsByUserLabel" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getSubnetworkConnectionsByUserLabelRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getSubnetworkConnectionsByUserLabelResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getSubnetworkConnectionsByUserLabelException">
        <WL5G3N2:fault name="getSubnetworkConnectionsByUserLabelException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSubnetworkConnectionsIterator">
      <WL5G3N2:operation soapAction="getSubnetworkConnectionsIterator" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getSubnetworkConnectionsIteratorRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getSubnetworkConnectionsIteratorResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getSubnetworkConnectionsIteratorException">
        <WL5G3N2:fault name="getSubnetworkConnectionsIteratorException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getCrossConnectionsIterator">
      <WL5G3N2:operation soapAction="getCrossConnectionsIterator" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getCrossConnectionsIteratorRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getCrossConnectionsIteratorResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getCrossConnectionsIteratorException">
        <WL5G3N2:fault name="getCrossConnectionsIteratorException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
  </WL5G3N0:binding>
  <WL5G3N0:service name="ConnectionRetrievalHttp">
    <WL5G3N0:documentation>Example of the ConnectionRetrieval WSDL Service definition as a deployment example of this mTOP Service Interface. It is expected to be modified to match the specific deployment configuration in a service provider's CCV.</WL5G3N0:documentation>
    <WL5G3N0:port binding="WL5G3N1:ConnectionRetrievalSoapHttpBinding" name="ConnectionRetrievalSoapHttp">
      <WL5G3N2:address location="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp"/>
    </WL5G3N0:port>
  </WL5G3N0:service>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?wsdl=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-ConnectionRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/mri/wsdl/conr/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:WL5G3N2="http://www.tmforum.org/mtop/mri/xsd/conr/v1">
  <WL5G3N0:documentation>DDP: ManageResourceInventory
    Module: ConnectionRetrieval Service Interface WSDL Message Module
    Description: This module contains all the mTOP ConnectionRetrieval Service Interface WSDL message definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:types>
    <xsd:schema xmlns:conr="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/mri/wsdl/conr/v1-0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.tmforum.org/mtop/mri/xsd/conr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=5"/>
    </xsd:schema>
  </WL5G3N0:types>
  <WL5G3N0:message name="getAllCrossConnectionsRequest">
    <WL5G3N0:documentation>The getAllCrossConnections request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllCrossConnectionsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllCrossConnectionsResponse">
    <WL5G3N0:documentation>The getAllCrossConnections response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllCrossConnectionsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllCrossConnectionsException">
    <WL5G3N0:documentation>The getAllCrossConnections exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllCrossConnectionsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllFixedCrossConnectionsRequest">
    <WL5G3N0:documentation>The getAllFixedCrossConnections request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllFixedCrossConnectionsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllFixedCrossConnectionsResponse">
    <WL5G3N0:documentation>The getAllFixedCrossConnections response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllFixedCrossConnectionsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllFixedCrossConnectionsException">
    <WL5G3N0:documentation>The getAllFixedCrossConnections exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllFixedCrossConnectionsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllFixedSubnetworkConnectionsRequest">
    <WL5G3N0:documentation>The getAllFixedSubnetworkConnections request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllFixedSubnetworkConnectionsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllFixedSubnetworkConnectionsResponse">
    <WL5G3N0:documentation>The getAllFixedSubnetworkConnections response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllFixedSubnetworkConnectionsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllFixedSubnetworkConnectionsException">
    <WL5G3N0:documentation>The getAllFixedSubnetworkConnections exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllFixedSubnetworkConnectionsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllFixedSubnetworkConnectionsWithTpRequest">
    <WL5G3N0:documentation>The getAllFixedSubnetworkConnectionsWithTp request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllFixedSubnetworkConnectionsWithTpRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllFixedSubnetworkConnectionsWithTpResponse">
    <WL5G3N0:documentation>The getAllFixedSubnetworkConnectionsWithTp response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllFixedSubnetworkConnectionsWithTpResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllFixedSubnetworkConnectionsWithTpException">
    <WL5G3N0:documentation>The getAllFixedSubnetworkConnectionsWithTp exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllFixedSubnetworkConnectionsWithTpException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllSubnetworkConnectionsRequest">
    <WL5G3N0:documentation>The getAllSubnetworkConnections request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllSubnetworkConnectionsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllSubnetworkConnectionsResponse">
    <WL5G3N0:documentation>The getAllSubnetworkConnections response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllSubnetworkConnectionsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllSubnetworkConnectionsException">
    <WL5G3N0:documentation>The getAllSubnetworkConnections exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllSubnetworkConnectionsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllSubnetworkConnectionsWithTpRequest">
    <WL5G3N0:documentation>The getAllSubnetworkConnectionsWithTp request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllSubnetworkConnectionsWithTpRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllSubnetworkConnectionsWithTpResponse">
    <WL5G3N0:documentation>The getAllSubnetworkConnectionsWithTp response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllSubnetworkConnectionsWithTpResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllSubnetworkConnectionsWithTpException">
    <WL5G3N0:documentation>The getAllSubnetworkConnectionsWithTp exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllSubnetworkConnectionsWithTpException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getBackupRoutesRequest">
    <WL5G3N0:documentation>The getBackupRoutes request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getBackupRoutesRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getBackupRoutesResponse">
    <WL5G3N0:documentation>The getBackupRoutes response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getBackupRoutesResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getBackupRoutesException">
    <WL5G3N0:documentation>The getBackupRoutes exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getBackupRoutesException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getIntendedRouteRequest">
    <WL5G3N0:documentation>The getIntendedRoute request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getIntendedRouteRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getIntendedRouteResponse">
    <WL5G3N0:documentation>The getIntendedRoute response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getIntendedRouteResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getIntendedRouteException">
    <WL5G3N0:documentation>The getIntendedRoute exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getIntendedRouteException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getPotentialFixedCrossConnectionsRequest">
    <WL5G3N0:documentation>The getPotentialFixedCrossConnections request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getPotentialFixedCrossConnectionsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getPotentialFixedCrossConnectionsResponse">
    <WL5G3N0:documentation>The getPotentialFixedCrossConnections response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getPotentialFixedCrossConnectionsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getPotentialFixedCrossConnectionsException">
    <WL5G3N0:documentation>The getPotentialFixedCrossConnections exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getPotentialFixedCrossConnectionsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getRouteRequest">
    <WL5G3N0:documentation>The getRoute request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getRouteRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getRouteResponse">
    <WL5G3N0:documentation>The getRoute response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getRouteResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getRouteException">
    <WL5G3N0:documentation>The getRoute exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getRouteException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubnetworkConnectionRequest">
    <WL5G3N0:documentation>The getSubnetworkConnection request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSubnetworkConnectionRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubnetworkConnectionResponse">
    <WL5G3N0:documentation>The getSubnetworkConnection response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSubnetworkConnectionResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubnetworkConnectionException">
    <WL5G3N0:documentation>The getSubnetworkConnection exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getSubnetworkConnectionException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubnetworkConnectionModeOfOperationRequest">
    <WL5G3N0:documentation>The getSubnetworkConnectionModeOfOperation request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSubnetworkConnectionModeOfOperationRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubnetworkConnectionModeOfOperationResponse">
    <WL5G3N0:documentation>The getSubnetworkConnectionModeOfOperation response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSubnetworkConnectionModeOfOperationResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubnetworkConnectionModeOfOperationException">
    <WL5G3N0:documentation>The getSubnetworkConnectionModeOfOperation exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getSubnetworkConnectionModeOfOperationException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubnetworkConnectionsByUserLabelRequest">
    <WL5G3N0:documentation>The getSubnetworkConnectionsByUserLabel request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSubnetworkConnectionsByUserLabelRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubnetworkConnectionsByUserLabelResponse">
    <WL5G3N0:documentation>The getSubnetworkConnectionsByUserLabel response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSubnetworkConnectionsByUserLabelResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubnetworkConnectionsByUserLabelException">
    <WL5G3N0:documentation>The getSubnetworkConnectionsByUserLabel exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getSubnetworkConnectionsByUserLabelException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubnetworkConnectionsIteratorRequest">
    <WL5G3N0:documentation>The getSubnetworkConnectionsIterator request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSubnetworkConnectionsIteratorRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubnetworkConnectionsIteratorResponse">
    <WL5G3N0:documentation>The getSubnetworkConnectionsIterator response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSubnetworkConnectionsIteratorResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubnetworkConnectionsIteratorException">
    <WL5G3N0:documentation>The getSubnetworkConnectionsIterator exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getSubnetworkConnectionsIteratorException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getCrossConnectionsIteratorRequest">
    <WL5G3N0:documentation>The getCrossConnectionsIterator request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getCrossConnectionsIteratorRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getCrossConnectionsIteratorResponse">
    <WL5G3N0:documentation>The getCrossConnectionsIterator response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getCrossConnectionsIteratorResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getCrossConnectionsIteratorException">
    <WL5G3N0:documentation>The getCrossConnectionsIterator exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getCrossConnectionsIteratorException" name="mtopBody"/>
  </WL5G3N0:message>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=5</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/mri/xsd/conr/v1" version="1.0" xmlns:cc="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:rt="http://www.tmforum.org/mtop/nrf/xsd/route/v1" xmlns:snc="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" xmlns:tns="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Manage Resource Inventory</p>
      <p>Module:  Message XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP ConnectionRetrieval SI XML
                message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=12"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=10"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/route/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=14"/>
  <!--================-->
  <xsd:element name="getAllCrossConnectionsRequest" type="tns:GetCrossConnectionsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllCrossConnections operation</p>
        <p>This operation retrieves the list of the
                    Cross-Connects for the specified Managed Element at
                    the specified Layer Rates.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllCrossConnectionsResponse" type="tns:MultipleCrossConnectionObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllManagedElementNames operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllCrossConnectionsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllCrossConnections operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllFixedCrossConnectionsRequest" type="tns:GetCrossConnectionsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllFixedCrossConnections operation</p>
        <p>This operation has exactly the same behaviour as
                    getAllCrossConnections(), but instead returns only
                    fixed Cross Connection object structures.
                    See Subnetwork Connection Types for an explanation
                    of fixed SNCs.</p>
        <p>A cross connection is identified as fixed using
                    additional information.         See Additional
                    Information Usage for detail on additional
                    information for SNCs, cross connections and TPs.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllFixedCrossConnectionsResponse" type="tns:MultipleCrossConnectionObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllFixedCrossConnections operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllFixedCrossConnectionsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllFixedCrossConnections operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllFixedSubnetworkConnectionsRequest" type="tns:GetSubnetworkConnectionsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllFixedSubnetworkConnections operation</p>
        <p>This operation has exactly the same behaviour as
                    getAllSubnetworkConnections(), but instead returns
                    only fixed SNCs object structures. See Subnetwork
                    Connection Types for an explanation of fixed SNCs.
                    The operation also returns bundled SNCs, if any.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllFixedSubnetworkConnectionsResponse" type="tns:MultipleSubnetworkConnectionObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllFixedSubnetworkConnections operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllFixedSubnetworkConnectionsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllFixedSubnetworkConnections operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllFixedSubnetworkConnectionsWithTpRequest" type="tns:GetSubnetworkConnectionsWithTpRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllFixedSubnetworkConnectionsWithTp operation</p>
        <p>This operation has exactly the same behaviour as
                    getAllSubnetworkConnectionsWithTP(), but instead
                    returns only fixed SNCs object structures. See
                    Subnetwork Connection Types for an explanation of
                    fixed SNCs.</p>
        <p>An SNC is identified as fixed using additional
                    information. See Additional Information Usage for
                    detail on additional information for SNCs, cross
                    connections and TPs..</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllFixedSubnetworkConnectionsWithTpResponse" type="tns:MultipleSubnetworkConnectionObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllFixedSubnetworkConnectionsWithTp operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllFixedSubnetworkConnectionsWithTpException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllFixedSubnetworkConnectionsWithTp operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllSubnetworkConnectionsRequest" type="tns:GetSubnetworkConnectionsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllSubnetworkConnections operation</p>
        <p>This operation retrieves the filtered list of
                    Subnetwork Connections (SNCs) contained within the
                    Multi Layer Subnetwork. This operation also returns
                    bundled SNCs, if any (see Bundled SNC overview for
                    further details).</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllSubnetworkConnectionsResponse" type="tns:MultipleSubnetworkConnectionObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllSubnetworkConnections operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllSubnetworkConnectionsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllSubnetworkConnections operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllSubnetworkConnectionsWithTpRequest" type="tns:GetSubnetworkConnectionsWithTpRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllSubnetworkConnectionsWithTp operation</p>
        <p>This operation retrieves the list of Subnetwork
                    Connections (SNCs) using the specified Termination
                    Point at the specified connection rates.</p>
        <p>An SNC is using the specified TP if any of its
                    routes, intended and/or backup, in any state, use
                    this TP. A TP may be a PTP in which case a full list
                    of SNCs using any of its contained CTPs is required.
                    A TP may be a CTP, in which case only SNCs using
                    that CTP or any of its contained CTPs are required.</p>
        <p>Both end CTPs and intermediate CTPs at the same
                    layer are considered. In all cases, only SNCs that
                    also match the specified connection rate filter are returned.</p>
        <p>All legs of a broadcast system can be retrieved
                    using this operation where the source TP of the
                    broadcast system is used as input to the operation.
                    The output will be the list of individual SNCs that
                    make up the broadcast system.</p>
        <p>This operation also works if a GTP is supplied
                    rather than a CTP. In this case, the layerRate is
                    set to LR_Not_Applicable. If the GTP is part of a
                    Cross-Connection, the target OS returns the set of
                    bundled SNCs that use the provided GTP or contained
                    GTP (if a CTP that is associated with a GTP is
                    provided) as either an end point or an interior point.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllSubnetworkConnectionsWithTpResponse" type="tns:MultipleSubnetworkConnectionObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllSubnetworkConnectionsWithTp operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllSubnetworkConnectionsWithTpException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllSubnetworkConnectionsWithTp operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getBackupRoutesRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getBackupRoutes operation</p>
        <p>The operation returns the requested route for the SNC
                    whose name is specified as a parameter. If the input
                    route is not specified (empty string), the operation
                    replies all the routes of the SNC, intended and
                    backup ones. The rest of the behavior is same as getRoute().</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="sncRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the subnetwork connection.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="routeId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>The id of the route.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="isHigherOrderCcListIncluded" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Specifies whether the higher order CCs of
                                other SNCs used to carry the queried SNC
                                route have to be included in addition to
                                the CCs of the queried SNC route.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="additionalInfo" type="gen:NameAndValueStringListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>to allow the communication of additional
                                information which is not explicitly modelled.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getBackupRoutesResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getBackupRoutes operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="additionalInfo" type="gen:NameAndValueStringListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>to allow the communication of additional
                                information which is not explicitly modelled.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="routeList" type="rt:RouteListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The route(s) of the SNC..</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getBackupRoutesException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getBackupRoutes operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getIntendedRouteRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getIntendedRoute operation</p>
        <p>The operation returns the intended route for the SNC
                    whose name is specified as a parameter. The behavior
                    is essentially the same as getRoute().</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="sncRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the subnetwork connection.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="routeId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>The id of the route.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="isHigherOrderCcListIncluded" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Specifies whether the higher order CCs of
                                other SNCs used to carry the queried SNC
                                route have to be included in addition to
                                the CCs of the queried SNC route.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="additionalInfo" type="gen:NameAndValueStringListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>to allow the communication of additional
                                information which is not explicitly modelled.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getIntendedRouteResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getIntendedRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="additionalInfo" type="gen:NameAndValueStringListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>to allow the communication of additional
                                information which is not explicitly modelled.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="route" type="rt:RouteType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The route of the SNC.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getIntendedRouteException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getIntendedRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getPotentialFixedCrossConnectionsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getPotentialFixedCcs operation</p>
        <p>The operation is used to retrieve fixed connection
                    schemes related to normal and inverse multiplexing.
                    See Subnetwork Connection Types for an explanation
                    of fixed SNCs.</p>
        <p>
          The operation takes as an input a TP and if this TP
                    may be or is involved in a multiplexing or inverse
                    multiplexing scheme, it will report:
          <ul>
            <li>The TP containing the fixed layer.</li>
            <li>The list of potential fixed cross connects
                            that will exist if the containing TP's
                            clientConnectivity or serverConnectivity is
                            set to "Connected" (i.e. If the
                            containing TP is set to multiplexing or
                            inverse multiplexing).</li>
          </ul>
        </p>
        <p>If the clientConnectivity (resp. serverConnectivity)
                    of the TP is currently set to "Connected",
                    the potentialCcList matches the list of active fixed
                    cross connects that involve its client TPs (resp.
                    server TPs).</p>
        <p>If the TP client layer (resp. server layer) is always
                    fixed cross connected (hard-wired), the
                    potentialCcList always matches the list of active
                    fixed cross connects that involve the client TPs
                    (resp. server TPs).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="inputTp" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Any TP name of the ME. The operation will
                                return the multiplexing or inverse
                                multiplexing scheme in which this TP is
                                involved.           The input TP may be
                                either the containing TP or one of the
                                end TPs of the portentialCcList.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getPotentialFixedCrossConnectionsResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getPotentialFixedCcs operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="containingTp" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The TP supporting the attribute
                                clientConnectivity or serverConnectivity.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="potentialCcList" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The list of fixed Cross Connect of that
                                multiplexing scheme, i.e. the list of
                                cross connects that will exist when the
                                containing TP clientConnectivity or
                                serverConnectiivty is set to
                                "Connected". The A_end TPs of
                                the cross connects should be the low
                                order TPs that can be flexibly cross
                                connected, and the Z_end TPs the TP
                                client of the high order TP. The list of
                                cross connect does not take any specific
                                order. If there are no potential fixed
                                cross connects and empty list is returned.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getPotentialFixedCrossConnectionsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getPotentialFixedCcs operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getRouteRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getRoute operation</p>
        <p>This operation retrieves the Route for a Subnetwork
                    Connection (SNC). The Route information, in the form
                    of Cross-Connections, should identify the resources
                    allocated to the SNC at the time of the request and
                    the way in which these resources are used.</p>
        <p>If the SNC has more alternative Routes, then it
                    retrieves the intended Route if the SNC is in
                    Pending or Partial state, otherwise it retrieves the
                    active Route. This because there can be more partial
                    Routes and no active Route, in such case the
                    intended Route is replied, as it is not known which
                    of the partial Routes is the candidate for becoming
                    the active Route.</p>
        <p>The requesting OS specifies if it wants to retrieve
                    only resources in the layer of the SNC (the
                    Cross-Connections that belong to the SNC), or higher
                    order Cross-Connections also (the Cross-Connections
                    of other SNCs that are used to carry the traffic of
                    the queried SNC).</p>
        <p>All Cross-Connections allocated to the SNC must be
                    returned, even if they are not active in the managed
                    elements. This allows the requesting OS to query the
                    Route that will be used before activating an SNC.</p>
        <p>The operation also works for bundled SNCs. In the
                    case of a bundled SNC, the target OS returns a set
                    of Cross-Connections betweens GTPs.</p>
        <p>In case of an SNC that represents a trail (to be
                    identified by the roles of its end points) the
                    operation getRouteAndTopologicalLinks() shall be
                    used to facilitate the delivery of the Topological
                    Links that support the trail termination inclusions
                    of the SNC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="sncRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the SNC.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="isHigherOrderCcListIncluded" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Specifies whether the higher order CCs of
                                other SNCs used to carry the queried SNC
                                have to be included in addition to the
                                CCs of the queried SNC.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getRouteResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="route" type="rt:RouteType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The route of the SNC.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getRouteException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getSubnetworkConnectionRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getSubnetworkConnection operation</p>
        <p>This operation will return the SubnetworkConnection
                    structure for the SNC whose name is supplied as a
                    parameter. This operations will provide a bundled
                    SNC structure if the name provided is that of a
                    bundled SNC (see Bundled SNC overview for further details).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="sncRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the SNC.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getSubnetworkConnectionResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="snc" type="snc:SubnetworkConnectionType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The SNC.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getSubnetworkConnectionException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getSubnetworkConnectionModeOfOperationRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getSubnetworkConnectionModeOfOperation operation</p>
        <p>This operation returns the supported subnetwork
                    connection management mode of operation. The defined
                    modes are contained in the Supporting Document
                    SD1-23_ModesOfOperation.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence/>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getSubnetworkConnectionModeOfOperationResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getSubnetworkConnectionModeOfOperation operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="sncModeOfOperation" type="snc:SubnetworkConnectionModeOfOperationType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The supported subnetwork connection
                                management mode of operation.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getSubnetworkConnectionModeOfOperationException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getSubnetworkConnectionModeOfOperation operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getSubnetworkConnectionsByUserLabelRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getSubnetworkConnectionsByUserLabel operation</p>
        <p>This operation will return the SubnetworkConnection
                    structures for the SNCs whose userLabel is supplied
                    as a parameter. This operation will provide a
                    bundled SNC structure if the name provided is that
                    of a bundled SNC (see Bundled SNC overview for
                    further details).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="userLabel" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>The userLabel of the SNCs to retrieve.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getSubnetworkConnectionsByUserLabelResponse" type="tns:MultipleSubnetworkConnectionObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getSubnetworkConnectionsByUserLabel operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getSubnetworkConnectionsByUserLabelException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getSubnetworkConnectionsByUserLabel operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--=================-->
  <!--Definitions of Iterator messages for Object and Object Name retrievals-->
  <!--=================-->
  <xsd:element name="getCrossConnectionsIteratorRequest" type="msg:GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getCrossConnectionsIterator operation</p>
        <p>This is the iterator request to return the next batch
                    of CC from the OS to which a CC retrieval request
                    was initially sent.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getCrossConnectionsIteratorResponse" type="tns:MultipleCrossConnectionObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getCrossConnectionsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getCrossConnectionsIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getCrossConnectionsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--=================-->
  <xsd:element name="getSubnetworkConnectionsIteratorRequest" type="msg:GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getCcIterator operation</p>
        <p>This is the iterator request to return the next batch
                    of CC from the OS to which a CC retrieval request
                    was initially sent.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getSubnetworkConnectionsIteratorResponse" type="tns:MultipleSubnetworkConnectionObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getSncIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getSubnetworkConnectionsIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getSncIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--=================-->
  <!--Local Data Type Definitions of various messages-->
  <!--==================-->
  <xsd:complexType name="GetCrossConnectionsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure for a set of CC object names</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="meRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Name of the Managed Element for which to
                            retrieve CCs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="connectionRateList" type="lay:LayerRateListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of rates for which to retrieve CCs. This
                            must not be an empty list. In this case an
                            INVALID_INPUT exception is thrown.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetSubnetworkConnectionsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure for a set of SNC object names</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="mlsnRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>Name of the
                        subnetwork.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="connectionRateList" type="lay:LayerRateListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of rates of the SNC names to be
                            reported. If an empty list is specified,
                            then all SNC names of all rates are to be reported.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetSubnetworkConnectionsWithTpRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure for a set of SNC object names</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="tpRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Termination point for which to report SNCs.
                            The termination point name must be explicit
                            (a generic endpoint specification may not be
                            used in this case). See Object Naming for
                            further detail on FTP naming.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="connectionRateList" type="lay:LayerRateListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of rates of the SNC names to be
                            reported. If an empty list is specified,
                            then all SNC names of all rates are to be reported.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="MultipleCrossConnectionObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for a set of CC objects</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ccList" type="cc:CrossConnectListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of CCs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="MultipleSubnetworkConnectionObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for a set of SNC objects</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="sncList" type="snc:SubnetworkConnectionListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of SNCs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=6</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of generic mTOP simple data types.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="NameAndStringValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvsList" type="tns:NameAndValueStringListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndValueStringListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndStringValue</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nvs" type="tns:NameAndStringValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:any minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvList" type="tns:NameAndAnyValueListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndAnyValueType</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nv" type="tns:NameAndAnyValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AliasNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    contains the list of aliases for the network entity.
                    The attribute is a name-value list. The name refers
                    to the type of alias (e.g., nativeEMSname) and the
                    value component holds the alias itself</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alias">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="aliasName" type="xsd:string"/>
            <xsd:element name="aliasValue" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AnyListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A generic list of any type of elements. Used for
                    vendor Extensions or loose element encapsulation
                    from other namespaces.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="DiscoveredNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the name of the object when
                    its existence is first published on the CCV but only
                    in the case where the OS that publishes the object
                    on the CCV is not the naming OS. If the naming OS
                    first publishes the object on the CCV, this
                    attribute may be left empty.</p>
        <p>The discovered name is assumed to be unique from the
                    perspective of the publishing OS.</p>
        <p>The discovered name published on the CCV does not
                    necessarily need to be the name of the object as
                    discovered by the OS from the subtending network.</p>
        <p>There are no specific rules concerning the
                    relationship between the "name" and
                    "discovered name" of the object. They
                    could be set to the same value or they could be different.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ManufactureDateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type identifies the production date of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="MultiEventInventoryAttributesType">
    <xsd:annotation>
      <xsd:documentation>This attribute is used when a object
                instance is embedded in the inventory    layout payload
                of a Multi-Event Inventory (MEI) notification.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="neTime" nillable="true" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the time at which the NE detected the
                            inventory change (if available)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventIndication" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is an indication of the type of
                            inventory update.</p>
            <p>Possible values are Object Creation (OC),
                            Object Discovery (ODsc), Object Deletion
                            (OD),        Attribute Value Change (AVC),
                            State Change (SC) and AVC_SC_and_Childern.
                            Only the acronym (e.g., OC)        is used
                            in the actual attribute value. The following
                            conventions apply:</p>
            <p>If an object creation or object discovery
                            indicator is applied to a parent object,
                            it implicitly applies to all the children,
                            i.e., the OS sending the notification only
                            needs       to set the indicator attribute
                            in the parent object.</p>
            <p>If an object deletion is applied to a parent
                            object, it is assumed that all the children
                            are also deleted. The childern should not be listed.</p>
            <p>The AVC_SC_and_Childern indication may be
                            applied to a parent object to imply that
                            there       may be AVC or SC changes to the
                            parent and some or all of the children.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="NetworkAccessDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A free-format string used to associate a resource to
                    a Network Access Domain.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="NotificationIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the notification ID.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="NotificationIdentifierListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of notification IDs  (free string). Also,  the
                    value found in notificationId field of the event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="notificationId" type="tns:NotificationIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of all the object types. It is
                    left as a string for maximum compatibility with
                    future supported object types.</p>
        <p>Refer to the SD2-7 ObjectNaming for the list of all
                    supported values.</p>
        <p>Otherwise, one can also refer to the
                    ObjectEnumTypedefined in CommonResourceInfo (see NRB
                    DDP), which is provided as XML Schema enumerations
                    solely as a helper (not used in any messaging validation).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enumeration of all the supported query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI">
      <xsd:enumeration value="ANSI-92"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath20/"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The loose definition of all the supported query
                    dialect types.</p>
        <p>Refer to QueryDialectEnumType definition to the
                    enumeration of recommended query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The generic schema datatype definition for the query
                    expression used in most filters.</p>
        <p>This definition is borrowed from WS-Notification v1.3.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="tns:QueryDialectTypeType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          <p>The dialect of the given query expression</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=12</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=6"/>
  <!--==============-->
  <xsd:complexType abstract="false" name="BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The (abstract) base type definition of all exception messages.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="hdr:header">
        <xsd:annotation>
          <xsd:documentation>The mTOP header as it cannot be
                        part of the SOAP Header in a SOAP v1.1 Fault message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="reason" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>A string indicating further details about the
                            exception. It is a free format string filled
                            by the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The extension for specific vendor exception information.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:element name="notImplemented" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised by OS for an optional operation that is not implemented</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="internalError" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised in case of non-specific OS internal failure</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidInput" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters are invalid</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tooManyOpenIterators" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when data retrieval iterator capacity is full</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="entityNotFound" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters do not refer to an existing object</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="commLoss" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when communication to an entity (needed to
                    help fulfill the request) is lost</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedCompressionFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given data compression format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedPackingFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given file packing format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidFilterDefinition" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the filter is invalid.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="objectInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tpInvalidEndPoint" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="timeslotInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="protectionEffortNotMet" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notInValidState" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unableToComply" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="capacityExceeded" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="accessDenied" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedRoutingConstraints" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="userlabelInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidTopic" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the topic is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notificationServiceProblem" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when there is a failure with the Broker.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AllExceptionsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reference to all supported exception types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="tns:accessDenied"/>
      <xsd:element ref="tns:capacityExceeded"/>
      <xsd:element ref="tns:commLoss"/>
      <xsd:element ref="tns:entityNotFound"/>
      <xsd:element ref="tns:internalError"/>
      <xsd:element ref="tns:invalidFilterDefinition"/>
      <xsd:element ref="tns:invalidInput"/>
      <xsd:element ref="tns:invalidTopic"/>
      <xsd:element ref="tns:notificationServiceProblem"/>
      <xsd:element ref="tns:notImplemented"/>
      <xsd:element ref="tns:notInValidState"/>
      <xsd:element ref="tns:objectInUse"/>
      <xsd:element ref="tns:protectionEffortNotMet"/>
      <xsd:element ref="tns:timeslotInUse"/>
      <xsd:element ref="tns:tooManyOpenIterators"/>
      <xsd:element ref="tns:tpInvalidEndPoint"/>
      <xsd:element ref="tns:unableToComply"/>
      <xsd:element ref="tns:unsupportedCompressionFormat"/>
      <xsd:element ref="tns:unsupportedPackingFormat"/>
      <xsd:element ref="tns:unsupportedRoutingConstraints"/>
      <xsd:element ref="tns:userlabelInUse"/>
    </xsd:choice>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Profile of exception types supported by all mTOP
                    iterator operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="tns:AllExceptionsType">
        <xsd:choice>
          <xsd:element ref="tns:commLoss"/>
          <xsd:element ref="tns:internalError"/>
          <xsd:element ref="tns:invalidInput"/>
          <xsd:element ref="tns:notImplemented"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Generic request message structure for all data
                    iterator operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=7</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML header.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=6"/>
  <!--==============-->
  <xsd:simpleType name="ActivityStatusEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies the high-level response status for an
                    activity.  Required for response messages, including
                    error responses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="WARNING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="ActivityStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Add to the initial enumerations the Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ActivityStatusEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="MessageTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type of the message that is being exchanged as
                    part of an activity.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REQUEST"/>
      <xsd:enumeration value="RESPONSE"/>
      <xsd:enumeration value="NOTIFICATION"/>
      <xsd:enumeration value="ERROR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationPatternType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Styles supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SimpleResponse"/>
      <xsd:enumeration value="MultipleBatchResponse"/>
      <xsd:enumeration value="BulkResponse"/>
      <xsd:enumeration value="Notification"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationStyleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Style supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MSG"/>
      <xsd:enumeration value="RPC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="CompressionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if compression is to be performed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:CompressionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CompressionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported compressions. All extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_COMPRESSION"/>
      <xsd:enumeration value="GZIP"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PackingTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if the output file(s) are to be packed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:PackingEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PackingEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported packing/packaging. All
                    extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PACKING"/>
      <xsd:enumeration value="ZIP"/>
      <xsd:enumeration value="TAR"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="header">
    <xsd:annotation>
      <xsd:documentation>
        <p>MTOSI Standard Header.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="activityName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the business
                                transaction activity for the message
                                being exchanged.       The value is
                                usually the name of the mTOP operation,
                                e.g. getInventory.       This value
                                corresponds to the “operation” in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the message (or
                                contract) that is being exchanged as
                                part of an activity. E.g.
                                getInventoryResponse. This field
                                corresponds to the message name in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgType" type="tns:MessageTypeType"/>
        <xsd:element minOccurs="0" name="senderURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application sending this message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="destinationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the final destination of the
                                message (the OS that will process the
                                content of the message). This field may
                                point to a logical end point or abstract
                                topic name to be resolved by the
                                communication transport middleware in
                                order to deliver the message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="replyToURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used by request messages to specify
                                destination for response message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="originatorURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the originating application of
                                the message that resulted in this
                                response or notification message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="failureReplytoURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application receiving the
                                potential error notification message.
                                Required for all response messages and
                                notifications which are triggered by
                                request/response. If not specified the
                                replyToURI is used. If the replyToURI is
                                also not specified, senderURI endpoint
                                is used to send back the failure response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="activityStatus" type="tns:ActivityStatusType"/>
        <xsd:element minOccurs="0" name="correlationId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>An identifier that could be set by the
                                originator of an asynchronous request
                                that will allow it to correlate the
                                response to the request.  If this field
                                is set, it should be reflected in the
                                header of the response message.  Not
                                required for notification headers.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="security" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Provides credential nformation for use by
                                a security service for identification,
                                authentication, or authorization.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="securityType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the type of credential
                                contained in the security element.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="priority">
          <xsd:annotation>
            <xsd:documentation>
              <p>Indicates message-handling priority for
                                asynchronous messages.  It must be in
                                the range 0-9 (lowest-highest). Default: 4</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string"/>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgSpecificProperties">
          <xsd:annotation>
            <xsd:documentation>
              <p>Conditionally required for request,
                                response, and notification messages as
                                identified by the documentation for a
                                specific interface message.  The
                                communications infrastructure or the
                                receiving application can use this value
                                for routing or filtering messages.</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" minOccurs="0" name="property">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="propName" type="xsd:string"/>
                    <xsd:element name="propValue" type="xsd:string"/>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="communicationPattern" type="tns:CommunicationPatternType"/>
        <xsd:element minOccurs="0" name="communicationStyle" type="tns:CommunicationStyleType"/>
        <xsd:element minOccurs="0" name="requestedBatchSize" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>The RequestedBatchSize parameter provides
                                the control for the batch segmentation
                                of the full set of output data generated
                                by a coarse-grained operation such as
                                getInventory or getActiveAlarms. The
                                unit is any of the MTOSI objects. And,
                                it defines the maximum number of MTOSI
                                objects that can be included in all the
                                batches of data sent as part of a
                                multiple responses MEP.</p>
              <p>However, they are cases where a batch may
                                exceed the number of objects defined in
                                the RequestedBatchSize parameter. This
                                is true if the granularity of a response
                                atomic data representation is greater
                                than just one object. This is true for
                                the getInventory response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceNumber" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm. Pattern
                                to identify the batch seq number in a sequence.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceEndOfReply" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm.
                                Pattern, true if it is the last result
                                batch in a sequence</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="iteratorReferenceURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Mandatory for all SIT (iterators) MEP to
                                allow description of the data retrieval iterator.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="fileLocationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used for file retrieval. Specify the base
                                name of the file(s) to be generated and
                                the remote destination.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="compressionType" type="tns:CompressionTypeType"/>
        <xsd:element minOccurs="0" name="packingType" type="tns:PackingTypeType"/>
        <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>Message originating timestamp</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Location for all vendor extensions to the
                                MTOSI standard header.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=13</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML naming structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=6"/>
  <!--=================-->
  <xsd:complexType name="RelativeDistinguishNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of relative distinguish
                    name (RDN) data structure used in all object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="type" type="gen:ObjectTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN object type acronym.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of the MTOSI object name
                    data structure as a sequence of RDNs, which
                    represents a unique identifier for the MTOSI object
                    on the CCV. Once set by the naming OS, the name is
                    invariant for the life of the object and should be
                    used when referring to the object over the CCV. Name
                    attribute of an object instance shall always be
                    assigned a value, unless the object instance is
                    first discovered by an OS that is not the naming OS
                    for the object instance. In such a case, the
                    discovering OS shall provide a value for the
                    Discovered Name attribute of the object. The naming
                    OS shall provide a value for the Name attribute of
                    the object once it becomes aware of the new object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="rdn" type="tns:RelativeDistinguishNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition for the list of MTOSI object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="name" nillable="true" type="tns:NamingAttributeType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=10</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP layer rates.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:element name="layerRateListType" type="tns:LayerRateListType"/>
  <!--================-->
  <xsd:complexType name="LayerRateListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of LayerRates</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="layerRate" nillable="true" type="tns:LayerRateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="LayerRateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          The LayerRateType value is used to identify:
          <li>the Layer of a PTP/CTP,</li>
          <li>the characteristic information of a PTP/FTP,</li>
          <li>the Layer/Rate of a connection.</li>
        </p>
        <p>Each LayerRateType may be used in conjunction with a
                    CTP/PTP/FTP of that layer. In the SDH definitions,
                    the G.805 CP and G.805 Termination Function layer
                    names differ, for example TU12 is used for the G.805
                    CP and VC12 for the corresponding G.805 Termination
                    Function. In this interface definition the TU and VC
                    definitions have been combined into a single
                    composite layer and this has been named to include
                    the equivalent SONET layer, e.g. LR_VT2_andTypeU12_VC12.</p>
        <p>
          For more details refer to the following supporting
                    document:
          <li>layering documentfor
                        all layering concepts</li>
          <li>LayerRates document for information about
                        recognized values in MTOSI</li>
        </p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:LayerRateEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="LayerRateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="LR_DS0_64K"/>
      <xsd:enumeration value="LR_DSL"/>
      <xsd:enumeration value="LR_Not_Applicable"/>
      <xsd:enumeration value="LR_Async_FOTS_150M"/>
      <xsd:enumeration value="LR_Async_FOTS_417M"/>
      <xsd:enumeration value="LR_Async_FOTS_560M"/>
      <xsd:enumeration value="LR_Async_FOTS_565M"/>
      <xsd:enumeration value="LR_Async_FOTS_1130M"/>
      <xsd:enumeration value="LR_Async_FOTS_1G7"/>
      <xsd:enumeration value="LR_Async_FOTS_1G8"/>
      <xsd:enumeration value="LR_ATM_NI"/>
      <xsd:enumeration value="LR_ATM_VC"/>
      <xsd:enumeration value="LR_ATM_VP"/>
      <xsd:enumeration value="LR_D1_Video"/>
      <xsd:enumeration value="LR_DIGITAL_SIGNAL_RATE"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_DSR_1_5M"/>
      <xsd:enumeration value="LR_DSR_2M"/>
      <xsd:enumeration value="LR_DSR_4M"/>
      <xsd:enumeration value="LR_DSR_6M"/>
      <xsd:enumeration value="LR_DSR_8M"/>
      <xsd:enumeration value="LR_DSR_16M"/>
      <xsd:enumeration value="LR_DSR_34M"/>
      <xsd:enumeration value="LR_E2_8M"/>
      <xsd:enumeration value="LR_E5_565M"/>
      <xsd:enumeration value="LR_Encapsulation"/>
      <xsd:enumeration value="LR_Fragment"/>
      <xsd:enumeration value="LR_DSR_45M"/>
      <xsd:enumeration value="LR_DSR_140M"/>
      <xsd:enumeration value="LR_DSR_565M"/>
      <xsd:enumeration value="LR_DSR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_DSR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OC1_STM0"/>
      <xsd:enumeration value="LR_DSR_OC3_STM1"/>
      <xsd:enumeration value="LR_DSR_2xSTM1"/>
      <xsd:enumeration value="LR_DSR_OC12_STM4"/>
      <xsd:enumeration value="LR_DSR_OC24_STM8"/>
      <xsd:enumeration value="LR_DSR_OC48_and_STM16"/>
      <xsd:enumeration value="LR_DSR_OC192_and_STM64"/>
      <xsd:enumeration value="LR_DSR_OC768_and_STM256"/>
      <xsd:enumeration value="LR_DSR_OTU1"/>
      <xsd:enumeration value="LR_DSR_OTU2"/>
      <xsd:enumeration value="LR_DSR_OTU3"/>
      <xsd:enumeration value="LR_E1_2M"/>
      <xsd:enumeration value="LR_E20_2x2M"/>
      <xsd:enumeration value="LR_E30_8x2M"/>
      <xsd:enumeration value="LR_E3_34M"/>
      <xsd:enumeration value="LR_E4_140M"/>
      <xsd:enumeration value="LR_ESCON"/>
      <xsd:enumeration value="LR_Ethernet"/>
      <xsd:enumeration value="LR_ETR"/>
      <xsd:enumeration value="LR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_FC_12_133M"/>
      <xsd:enumeration value="LR_FC_25_266M"/>
      <xsd:enumeration value="LR_FC_50_531M"/>
      <xsd:enumeration value="LR_FC_100_1063M"/>
      <xsd:enumeration value="LR_FDDI"/>
      <xsd:enumeration value="LR_FICON"/>
      <xsd:enumeration value="LR_FR_IF"/>
      <xsd:enumeration value="LR_FR_PVC"/>
      <xsd:enumeration value="LR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_ISDN_BRI"/>
      <xsd:enumeration value="LR_Line_OC1_STS1_and_MS_STM0"/>
      <xsd:enumeration value="LR_Line_OC3_STS3_and_MS_STM1"/>
      <xsd:enumeration value="LR_Line_OC12_STS12_and_MS_STM4"/>
      <xsd:enumeration value="LR_Line_OC24_STS24_and_MS_STM8"/>
      <xsd:enumeration value="LR_Line_OC48_STS48_and_MS_STM16"/>
      <xsd:enumeration value="LR_Line_OC192_STS192_and_MS_STM64"/>
      <xsd:enumeration value="LR_Line_OC768_STS768_and_MS_STM256"/>
      <xsd:enumeration value="LR_Low_Order_TU3_VC3"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3"/>
      <xsd:enumeration value="LR_STS3c_and_AU4_VC4"/>
      <xsd:enumeration value="LR_STS4c_and_VC3_4c"/>
      <xsd:enumeration value="LR_STS5c_and_VC3_5c"/>
      <xsd:enumeration value="LR_STS6c_and_VC4_2c"/>
      <xsd:enumeration value="LR_STS7c_and_VC3_7c"/>
      <xsd:enumeration value="LR_STS8c_and_VC3_8c"/>
      <xsd:enumeration value="LR_STS9c_and_VC4_3c"/>
      <xsd:enumeration value="LR_Optical_Channel"/>
      <xsd:enumeration value="LR_Optical_Multiplex_Section"/>
      <xsd:enumeration value="LR_OPTICAL_SECTION"/>
      <xsd:enumeration value="LR_Optical_Transmission_Section"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_PHYSICAL_MEDIALESS"/>
      <xsd:enumeration value="LR_PHYSICAL_OPTICAL"/>
      <xsd:enumeration value="LR_POTS"/>
      <xsd:enumeration value="LR_Section_OC1_STS1_and_RS_STM0"/>
      <xsd:enumeration value="LR_Section_OC3_STS3_and_RS_STM1"/>
      <xsd:enumeration value="LR_Section_OC12_STS12_and_RS_STM4"/>
      <xsd:enumeration value="LR_Section_OC24_STS24_and_RS_STM8"/>
      <xsd:enumeration value="LR_Section_OC48_STS48_and_RS_STM16"/>
      <xsd:enumeration value="LR_Section_OC192_STS192_and_RS_STM64"/>
      <xsd:enumeration value="LR_Section_OC768_STS768_and_RS_STM256"/>
      <xsd:enumeration value="LR_STS1_and_AU3_High_Order_VC3"/>
      <xsd:enumeration value="LR_STS2c_and_VC3_2c"/>
      <xsd:enumeration value="LR_STS10c_and_VC3_10c"/>
      <xsd:enumeration value="LR_STS11c_and_VC3_11c"/>
      <xsd:enumeration value="LR_STS12c_and_VC4_4c"/>
      <xsd:enumeration value="LR_STS13c_and_VC3_13c"/>
      <xsd:enumeration value="LR_STS14c_and_VC3_14c"/>
      <xsd:enumeration value="LR_STS15c_and_VC4_5c"/>
      <xsd:enumeration value="LR_STS16c_and_VC3_16c"/>
      <xsd:enumeration value="LR_STS17c_and_VC3_17c"/>
      <xsd:enumeration value="LR_STS18c_and_VC4_6c"/>
      <xsd:enumeration value="LR_STS19c_and_VC3_19c"/>
      <xsd:enumeration value="LR_STS20c_and_VC3_20c"/>
      <xsd:enumeration value="LR_STS21c_and_VC4_7c"/>
      <xsd:enumeration value="LR_STS22c_and_VC3_22c"/>
      <xsd:enumeration value="LR_STS23c_and_VC3_23c"/>
      <xsd:enumeration value="LR_STS24c_and_VC4_8c"/>
      <xsd:enumeration value="LR_STS25c_and_VC3_25c"/>
      <xsd:enumeration value="LR_STS26c_and_VC3_26c"/>
      <xsd:enumeration value="LR_STS27c_and_VC4_9c"/>
      <xsd:enumeration value="LR_STS28c_and_VC3_28c"/>
      <xsd:enumeration value="LR_STS29c_and_VC3_29c"/>
      <xsd:enumeration value="LR_STS30c_and_VC4_10c"/>
      <xsd:enumeration value="LR_STS31c_and_VC3_31c"/>
      <xsd:enumeration value="LR_STS32c_and_VC3_32c"/>
      <xsd:enumeration value="LR_STS33c_and_VC4_11c"/>
      <xsd:enumeration value="LR_STS34c_and_VC3_34c"/>
      <xsd:enumeration value="LR_STS35c_and_VC3_35c"/>
      <xsd:enumeration value="LR_STS36c_and_VC4_12c"/>
      <xsd:enumeration value="LR_STS37c_and_VC3_37c"/>
      <xsd:enumeration value="LR_STS38c_and_VC3_38c"/>
      <xsd:enumeration value="LR_STS39c_and_VC4_13c"/>
      <xsd:enumeration value="LR_STS40c_and_VC3_40c"/>
      <xsd:enumeration value="LR_STS41c_and_VC3_41c"/>
      <xsd:enumeration value="LR_STS42c_and_VC4_14c"/>
      <xsd:enumeration value="LR_STS43c_and_VC3_43c"/>
      <xsd:enumeration value="LR_STS44c_and_VC3_44c"/>
      <xsd:enumeration value="LR_STS45c_and_VC4_15c"/>
      <xsd:enumeration value="LR_STS46c_and_VC3_46c"/>
      <xsd:enumeration value="LR_STS47c_and_VC3_47c"/>
      <xsd:enumeration value="LR_STS48c_and_VC4_16c"/>
      <xsd:enumeration value="LR_STS49c_and_VC3_49c"/>
      <xsd:enumeration value="LR_STS50c_and_VC3_50c"/>
      <xsd:enumeration value="LR_STS51c_and_VC4_17c"/>
      <xsd:enumeration value="LR_STS52c_and_VC3_52c"/>
      <xsd:enumeration value="LR_STS53c_and_VC3_53c"/>
      <xsd:enumeration value="LR_STS54c_and_VC4_18c"/>
      <xsd:enumeration value="LR_STS55c_and_VC3_55c"/>
      <xsd:enumeration value="LR_STS56c_and_VC3_56c"/>
      <xsd:enumeration value="LR_STS57c_and_VC4_19c"/>
      <xsd:enumeration value="LR_STS58c_and_VC3_58c"/>
      <xsd:enumeration value="LR_STS59c_and_VC3_59c"/>
      <xsd:enumeration value="LR_STS60c_and_VC4_20c"/>
      <xsd:enumeration value="LR_STS61c_and_VC3_61c"/>
      <xsd:enumeration value="LR_STS62c_and_VC3_62c"/>
      <xsd:enumeration value="LR_STS63c_and_VC4_21c"/>
      <xsd:enumeration value="LR_STS64c_and_VC3_64c"/>
      <xsd:enumeration value="LR_STS65c_and_VC3_65c"/>
      <xsd:enumeration value="LR_STS66c_and_VC4_22c"/>
      <xsd:enumeration value="LR_STS67c_and_VC3_67c"/>
      <xsd:enumeration value="LR_STS68c_and_VC3_68c"/>
      <xsd:enumeration value="LR_STS69c_and_VC4_23c"/>
      <xsd:enumeration value="LR_STS70c_and_VC3_70c"/>
      <xsd:enumeration value="LR_STS71c_and_VC3_71c"/>
      <xsd:enumeration value="LR_STS72c_and_VC4_24c"/>
      <xsd:enumeration value="LR_STS73c_and_VC3_73c"/>
      <xsd:enumeration value="LR_STS74c_and_VC3_74c"/>
      <xsd:enumeration value="LR_STS75c_and_VC4_25c"/>
      <xsd:enumeration value="LR_STS76c_and_VC3_76c"/>
      <xsd:enumeration value="LR_STS77c_and_VC3_77c"/>
      <xsd:enumeration value="LR_STS78c_and_VC4_26c"/>
      <xsd:enumeration value="LR_STS79c_and_VC3_79c"/>
      <xsd:enumeration value="LR_STS80c_and_VC3_80c"/>
      <xsd:enumeration value="LR_STS81c_and_VC4_27c"/>
      <xsd:enumeration value="LR_STS82c_and_VC3_82c"/>
      <xsd:enumeration value="LR_STS83c_and_VC3_83c"/>
      <xsd:enumeration value="LR_STS84c_and_VC4_28c"/>
      <xsd:enumeration value="LR_STS85c_and_VC3_85c"/>
      <xsd:enumeration value="LR_STS86c_and_VC3_86c"/>
      <xsd:enumeration value="LR_STS87c_and_VC4_29c"/>
      <xsd:enumeration value="LR_STS88c_and_VC3_88c"/>
      <xsd:enumeration value="LR_STS89c_and_VC3_89c"/>
      <xsd:enumeration value="LR_STS90c_and_VC4_30c"/>
      <xsd:enumeration value="LR_STS91c_and_VC3_91c"/>
      <xsd:enumeration value="LR_STS92c_and_VC3_92c"/>
      <xsd:enumeration value="LR_STS93c_and_VC4_31c"/>
      <xsd:enumeration value="LR_STS94c_and_VC3_94c"/>
      <xsd:enumeration value="LR_STS95c_and_VC3_95c"/>
      <xsd:enumeration value="LR_STS96c_and_VC4_32c"/>
      <xsd:enumeration value="LR_STS97c_and_VC3_97c"/>
      <xsd:enumeration value="LR_STS98c_and_VC3_98c"/>
      <xsd:enumeration value="LR_STS99c_and_VC4_33c"/>
      <xsd:enumeration value="LR_STS100c_and_VC3_100c"/>
      <xsd:enumeration value="LR_STS101c_and_VC3_101c"/>
      <xsd:enumeration value="LR_STS102c_and_VC4_34c"/>
      <xsd:enumeration value="LR_STS103c_and_VC3_103c"/>
      <xsd:enumeration value="LR_STS104c_and_VC3_104c"/>
      <xsd:enumeration value="LR_STS105c_and_VC4_35c"/>
      <xsd:enumeration value="LR_STS106c_and_VC3_106c"/>
      <xsd:enumeration value="LR_STS107c_and_VC3_107c"/>
      <xsd:enumeration value="LR_STS108c_and_VC4_36c"/>
      <xsd:enumeration value="LR_STS109c_and_VC3_109c"/>
      <xsd:enumeration value="LR_STS110c_and_VC3_110c"/>
      <xsd:enumeration value="LR_STS111c_and_VC4_37c"/>
      <xsd:enumeration value="LR_STS112c_and_VC3_112c"/>
      <xsd:enumeration value="LR_STS113c_and_VC3_113c"/>
      <xsd:enumeration value="LR_STS114c_and_VC4_38c"/>
      <xsd:enumeration value="LR_STS115c_and_VC3_115c"/>
      <xsd:enumeration value="LR_STS116c_and_VC3_116c"/>
      <xsd:enumeration value="LR_STS117c_and_VC4_39c"/>
      <xsd:enumeration value="LR_STS118c_and_VC3_118c"/>
      <xsd:enumeration value="LR_STS119c_and_VC3_119c"/>
      <xsd:enumeration value="LR_STS120c_and_VC4_40c"/>
      <xsd:enumeration value="LR_STS121c_and_VC3_121c"/>
      <xsd:enumeration value="LR_STS122c_and_VC3_122c"/>
      <xsd:enumeration value="LR_STS123c_and_VC4_41c"/>
      <xsd:enumeration value="LR_STS124c_and_VC3_124c"/>
      <xsd:enumeration value="LR_STS125c_and_VC3_125c"/>
      <xsd:enumeration value="LR_STS126c_and_VC4_42c"/>
      <xsd:enumeration value="LR_STS127c_and_VC3_127c"/>
      <xsd:enumeration value="LR_STS128c_and_VC3_128c"/>
      <xsd:enumeration value="LR_STS129c_and_VC4_43c"/>
      <xsd:enumeration value="LR_STS130c_and_VC3_130c"/>
      <xsd:enumeration value="LR_STS131c_and_VC3_131c"/>
      <xsd:enumeration value="LR_STS132c_and_VC4_44c"/>
      <xsd:enumeration value="LR_STS133c_and_VC3_133c"/>
      <xsd:enumeration value="LR_STS134c_and_VC3_134c"/>
      <xsd:enumeration value="LR_STS135c_and_VC4_45c"/>
      <xsd:enumeration value="LR_STS136c_and_VC3_136c"/>
      <xsd:enumeration value="LR_STS137c_and_VC3_137c"/>
      <xsd:enumeration value="LR_STS138c_and_VC4_46c"/>
      <xsd:enumeration value="LR_STS139c_and_VC3_139c"/>
      <xsd:enumeration value="LR_STS140c_and_VC3_140c"/>
      <xsd:enumeration value="LR_STS141c_and_VC4_47c"/>
      <xsd:enumeration value="LR_STS142c_and_VC3_142c"/>
      <xsd:enumeration value="LR_STS143c_and_VC3_143c"/>
      <xsd:enumeration value="LR_STS144c_and_VC4_48c"/>
      <xsd:enumeration value="LR_STS145c_and_VC3_145c"/>
      <xsd:enumeration value="LR_STS146c_and_VC3_146c"/>
      <xsd:enumeration value="LR_STS147c_and_VC4_49c"/>
      <xsd:enumeration value="LR_STS148c_and_VC3_148c"/>
      <xsd:enumeration value="LR_STS149c_and_VC3_149c"/>
      <xsd:enumeration value="LR_STS150c_and_VC4_50c"/>
      <xsd:enumeration value="LR_STS151c_and_VC3_151c"/>
      <xsd:enumeration value="LR_STS152c_and_VC3_152c"/>
      <xsd:enumeration value="LR_STS153c_and_VC4_51c"/>
      <xsd:enumeration value="LR_STS154c_and_VC3_154c"/>
      <xsd:enumeration value="LR_STS155c_and_VC3_155c"/>
      <xsd:enumeration value="LR_STS156c_and_VC4_52c"/>
      <xsd:enumeration value="LR_STS157c_and_VC3_157c"/>
      <xsd:enumeration value="LR_STS158c_and_VC3_158c"/>
      <xsd:enumeration value="LR_STS159c_and_VC4_53c"/>
      <xsd:enumeration value="LR_STS160c_and_VC3_160c"/>
      <xsd:enumeration value="LR_STS161c_and_VC3_161c"/>
      <xsd:enumeration value="LR_STS162c_and_VC4_54c"/>
      <xsd:enumeration value="LR_STS163c_and_VC3_163c"/>
      <xsd:enumeration value="LR_STS164c_and_VC3_164c"/>
      <xsd:enumeration value="LR_STS165c_and_VC4_55c"/>
      <xsd:enumeration value="LR_STS166c_and_VC3_166c"/>
      <xsd:enumeration value="LR_STS167c_and_VC3_167c"/>
      <xsd:enumeration value="LR_STS168c_and_VC4_56c"/>
      <xsd:enumeration value="LR_STS169c_and_VC3_169c"/>
      <xsd:enumeration value="LR_STS170c_and_VC3_170c"/>
      <xsd:enumeration value="LR_STS171c_and_VC4_57c"/>
      <xsd:enumeration value="LR_STS172c_and_VC3_172c"/>
      <xsd:enumeration value="LR_STS173c_and_VC3_173c"/>
      <xsd:enumeration value="LR_STS174c_and_VC4_58c"/>
      <xsd:enumeration value="LR_STS175c_and_VC3_175c"/>
      <xsd:enumeration value="LR_STS176c_and_VC3_176c"/>
      <xsd:enumeration value="LR_STS177c_and_VC4_59c"/>
      <xsd:enumeration value="LR_STS178c_and_VC3_178c"/>
      <xsd:enumeration value="LR_STS179c_and_VC3_179c"/>
      <xsd:enumeration value="LR_STS180c_and_VC4_60c"/>
      <xsd:enumeration value="LR_STS181c_and_VC3_181c"/>
      <xsd:enumeration value="LR_STS182c_and_VC3_182c"/>
      <xsd:enumeration value="LR_STS183c_and_VC4_61c"/>
      <xsd:enumeration value="LR_STS184c_and_VC3_184c"/>
      <xsd:enumeration value="LR_STS185c_and_VC3_185c"/>
      <xsd:enumeration value="LR_STS186c_and_VC4_62c"/>
      <xsd:enumeration value="LR_STS187c_and_VC3_187c"/>
      <xsd:enumeration value="LR_STS188c_and_VC3_188c"/>
      <xsd:enumeration value="LR_STS189c_and_VC4_63c"/>
      <xsd:enumeration value="LR_STS190c_and_VC3_190c"/>
      <xsd:enumeration value="LR_STS191c_and_VC3_191c"/>
      <xsd:enumeration value="LR_STS192c_and_VC4_64c"/>
      <xsd:enumeration value="LR_STS768c_and_VC4_256c"/>
      <xsd:enumeration value="LR_T1_and_DS1_1_5M"/>
      <xsd:enumeration value="LR_T2_and_DS2_6M"/>
      <xsd:enumeration value="LR_T3_and_DS3_45M"/>
      <xsd:enumeration value="LR_VT1_5_and_TU11_VC11"/>
      <xsd:enumeration value="LR_VT2_and_TU12_VC12"/>
      <xsd:enumeration value="LR_VT6_and_TU2_VC2"/>
      <!--The ones below were added in the MTOSI 2.1 release-->
      <xsd:enumeration value="LR_LAG_Fragment"/>
      <xsd:enumeration value="LR_DSR_10Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2.5Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10.7Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_11.1Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_LAN"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_WAN"/>
      <xsd:enumeration value="LR_DSR_40Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OTU2e"/>
      <xsd:enumeration value="LR_DSR_OTU3e1"/>
      <xsd:enumeration value="LR_DSR_OTU3e2"/>
      <xsd:enumeration value="LR_DSR_OTU4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_0"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_Flexible"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_4"/>
      <xsd:enumeration value="LR_Optical_Physical_Section"/>
      <xsd:enumeration value="LR_Optical_Physical_Section_Multilane"/>
      <xsd:enumeration value="LR_Section_OC3072_STS3072_and_RS_STM1024"/>
      <xsd:enumeration value="LR_Line_OC3072_STS3072_and_MS_STM1024"/>
      <xsd:enumeration value="LR_DSR_OC3072_and_STM1024"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=15</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" xmlns:tpdata="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP SNC XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=10"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=16"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=8"/>
  <!--=================-->
  <xsd:element name="snc" type="tns:SubnetworkConnectionType"/>
  <!--=================-->
  <xsd:complexType name="SubnetworkConnectionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Subnetwor Connection mTOP
                    network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="sncState" nillable="true" type="com:SubnetworkConnectionStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The sncState is an attribute managed
                                    by the EMS. The EMS manages the
                                    state transition of this attribute.
                                    The EMS will assess the
                                    cross-connections in the network
                                    that support the SNC and will
                                    appropriately adjust the value of
                                    SNCState to reflect the actual state
                                    of the SNC in the network.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="direction" nillable="true" type="com:ConnectionDirectionType"/>
          <xsd:element minOccurs="0" name="layerRate" nillable="true" type="lay:LayerRateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The rate of the SubnetworkConnection
                                    is obtained by reading this attribute.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="staticProtectionLevel" nillable="true" type="com:StaticProtectionLevelType"/>
          <xsd:element minOccurs="0" name="sncType" nillable="true" type="com:SubnetworkConnectionTypeType"/>
          <xsd:element minOccurs="0" name="aEndTpDataList" nillable="true" type="tpdata:TerminationPointDataListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The list of Aend termination points
                                    TP where this SNC terminates. For a
                                    detailed description of the use of
                                    this attribute, see MTNM SNC Types
                                    supporting document.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="zEndTpDataList" nillable="true" type="tpdata:TerminationPointDataListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The list of Zend termination points
                                    TP where this SNC terminates. For a
                                    detailed description of the use of
                                    this attribute, see MTNM SNC Types
                                    supporting document.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="rerouteAllowed" nillable="true" type="com:RerouteType"/>
          <xsd:element minOccurs="0" name="networkRouted" nillable="true" type="com:NetworkRoutedType"/>
          <xsd:element minOccurs="0" name="isReportingAlarms" nillable="true" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="isFixed" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Takes value True  when all
                                    cross-connects of the SNC are fixed.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this SNC object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="correlationIdentifier" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Used to contain information about
                                    relationships that this SNC may have
                                    to other managed objects.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="networkReroute" nillable="true" type="com:RerouteType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the reroute of an SNC
                                    (if allowed) should be computed by
                                    the network, by the EMS, or if it
                                    does not matter.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="priority" nillable="true" type="xsd:unsignedInt">
            <xsd:annotation>
              <xsd:documentation>
                <p>The SNC creation priority</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="revertive" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Takes value “True”, i.e. the SNC or
                                    Connection is revertive, when the
                                    SNC or connection can be switched
                                    back to its original route.  In case
                                    of an SNC with multiple routes when
                                    the SNC is revertive, then the
                                    restoration or rerouting process
                                    will always switch to the intended
                                    route if possible, i.e. if there are
                                    no failures or if the intended route
                                    is not locked.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="aEndPointsRole" nillable="true">
            <xsd:annotation>
              <xsd:documentation>Defines the
                                element that defines the end point role
                                of all aEnd TPs of an SNC. This is an
                                ordered list indexed with the aEnd TP
                                list of the SNC.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" name="role" type="com:EndPointRoleType"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="isBundledSnc" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the SNC constitutes
                                    a Bundled SNC service (value “True”)
                                    or not..</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="callId" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This is the control plane identifier.
                                    This attribute is the Call Name
                                    attribute in G.7713.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="callName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute indicates the Call
                                    Name which the connection is
                                    supporting in a non control plane case.</p>
                <p>String containing the RDN of the Call
                                    Name.The value in the last
                                    name-value pair of name structure</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionId" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This is the control plane identifier.
                                    This attribute is the Connection
                                    Name attribute in G.7713. Note that
                                    also the Cross Connection points to
                                    its superior Connection.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionSetUpType" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute indicates whether the
                                    connection has been established by
                                    UNI signalling (SC) or NMS (SPC, PC).</p>
                <p>
                  Legal values are:
                  <ul>
                    <li>PC</li>
                    <li>SC</li>
                    <li>SPC</li>
                  </ul>
                </p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionState" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates that all (“Complete”) or
                                    not all (“Searching”) the resources
                                    necessary to support the connection
                                    have been successfully allocated yet.</p>
                <p>
                  Legal values are:
                  <ul>
                    <li>Complete</li>
                    <li>Searching</li>
                    <li>N/A</li>
                  </ul>
                </p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="maximumCost" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>The maximum link/node cost allowed
                                    for routing.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element default="true" minOccurs="0" name="mustRemoveGtpList" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The parameter is only used for
                                    bundled SNCs.   If set to “True” the
                                    EMS when removing the SNC must make
                                    a best-effort attempt to remove the
                                    interior GTPs that once belonged to
                                    the SNC, and if set to “False” the
                                    NMS does not care whether the EMS
                                    removes the interior GTPs or not.
                                    Any behavior other than best-effort
                                    is likely to involve a complicated
                                    rollback procedure for the EMS and
                                    NEs.  In the case that the parameter
                                    is set to “True” and the EMS cannot
                                    remove all the interior GTPs, the
                                    EMS should return a list of the GTPs
                                    that could not be removed in the
                                    errorReason field of the
                                    deactivateAndDeleteSNC() and
                                    deleteSNC() operations.  The
                                    errorReason would  be “not all
                                    interior GTPs could be deleted”;
                                    this would be followed by the names
                                    of the GTPs that could not be deleted.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element default="true" minOccurs="0" name="mustRetainOldSnc" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="protectionEffort" nillable="true" type="com:ProtectionEffortType"/>
          <xsd:element minOccurs="0" name="routeGroupLabel" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute shall represent the
                                    route group of the connection.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="routingConstraintEffort" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>The effort required for routing
                                    constraint application.</p>
                <p>
                  Legal Values are:
                  <ul>
                    <li>BEST_EFFORT</li>
                    <li>EXACT_MATCH</li>
                  </ul>
                </p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="supportedConnectionName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute indicates the
                                    Connection Name (i.e. its superior
                                    connection) which the connection is
                                    supporting in a non control plane
                                    case. Note that this superior
                                    connection must be defined in a top
                                    level MLSN – which allows
                                    identifying it with a simple string
                                    – RDN value.</p>
                <p>RDN of Connection Name, i.e., the
                                    value in the last name-value pair of
                                    name structure</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="supportingSncList" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute shall contain the
                                    names of the supporting Subnetwork
                                    Connections if any. Note: This
                                    attribute is only applicable for top
                                    level connections in a non-Control
                                    Plane environment if SNCs support
                                    indirectly the Call. Format:
                                    \name=OS\value=CompanyName/EMSname\name=MLSN\value=
                                    SubnetworkName\name= SNC\value=SubnetworkName</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="zEndPointsRole" nillable="true">
            <xsd:annotation>
              <xsd:documentation>
                <p>Defines the element that defines the
                                    end point role of all zEnd TPs of an
                                    SNC. This is an ordered list indexed
                                    with the zEnd TP list of the SNC</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" name="role" type="com:EndPointRoleType"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="SubnetworkConnectionListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of SubnetworkConnections</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:snc"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionModeOfOperationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The supported subnetwork connection management mode
                    of operation.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PENDING_NO_SHARING"/>
      <xsd:enumeration value="NO_PENDING_WITH_SHARING"/>
      <xsd:enumeration value="PENDING_NO_SHARING"/>
      <xsd:enumeration value="PENDING_WITH_SHARING"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=3</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" version="1.0" xmlns:coi="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:itu="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP XML CommonResourceInfo structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=9"/>
  <!--=================-->
  <xsd:element name="commonResourceInfo" substitutionGroup="coi:commonObjectInfo" type="tns:CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition for common resource info</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines attributes common to all mTOP
                    resource objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="coi:CommonObjectInfoType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="source" nillable="true" type="tns:SourceType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the object was
                                    discovered or entered in OS inventory.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="networkAccessDomain" nillable="true" type="gen:NetworkAccessDomainType"/>
          <xsd:element minOccurs="0" name="meiAttributes" nillable="true" type="gen:MultiEventInventoryAttributesType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is used when a object
                                    instance is embedded in the
                                    inventory      layout payload of a
                                    Multi-Event Inventory (MEI)
                                    notification. It provides the
                                    time at which the NE detected the
                                    inventory change (if available) and
                                    an indication      of the type of
                                    inventory update, e.g., Object Creation.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="resourceState" nillable="true" type="tns:ResourceStateType"/>
          <xsd:element name="ituStateAndStatusList" type="itu:ItuStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates whether the object was discovered from the
                    network, or was entered into the OS's inventory.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:SourceEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SourceEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NETWORK_ME">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered directly from the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was entered into an OS on the CCV,
                            e.g., OS GUI or file transfer to the OS from
                            some other system.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NETWORK_EMS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered from an EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates the state of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceStateEnumType">
        <xsd:attribute name="overlap" type="xsd:string" use="optional"/>
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ResourceStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="INSTALLING"/>
      <xsd:enumeration value="INSTALLING_ACCEPTED"/>
      <xsd:enumeration value="INSTALLING_COMMISSIONED"/>
      <xsd:enumeration value="INSTALLING_DELIVERED"/>
      <xsd:enumeration value="INSTALLING_INSTALLED"/>
      <xsd:enumeration value="INSTALLING_INTEGRATED"/>
      <xsd:enumeration value="INSTALLING_REJECTED"/>
      <xsd:enumeration value="NON_WORKING"/>
      <xsd:enumeration value="PLANNING"/>
      <xsd:enumeration value="PLANNING_INITIAL_PLAN"/>
      <xsd:enumeration value="PLANNING_ORDERED"/>
      <xsd:enumeration value="PLANNING_PLANNED"/>
      <xsd:enumeration value="RETIRING"/>
      <xsd:enumeration value="RETIRING_DECOMMISSIONED"/>
      <xsd:enumeration value="RETIRING_DEINSTALLED"/>
      <xsd:enumeration value="RETIRING_DEINTEGRATED"/>
      <xsd:enumeration value="RETIRING_RECOVERED"/>
      <xsd:enumeration value="RETIRING_STORED"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_ACTIVE"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_UNAVAILABLE"/>
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="WORKING"/>
      <xsd:enumeration value="WORKING_ACTIVATED"/>
      <xsd:enumeration value="WORKING_DEACTIVATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ObjectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the enumeration of all the known object type
                    short names related to resources (at the time of
                    this module definition). It is only provided as an
                    implementation helper. For details of all object
                    types and their naming refer to SD2-7 ObjectNaming
                    (FMW DDP).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AID">
        <xsd:annotation>
          <xsd:documentation>Alarm IDentifier (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASA">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASAP">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment Profile (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CTP">
        <xsd:annotation>
          <xsd:documentation>Connection Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EH">
        <xsd:annotation>
          <xsd:documentation>Equipment Holder (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EPG">
        <xsd:annotation>
          <xsd:documentation>Equipment Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EQ">
        <xsd:annotation>
          <xsd:documentation>Equipment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FD">
        <xsd:annotation>
          <xsd:documentation>Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FDFR">
        <xsd:annotation>
          <xsd:documentation>Flow Domain Fragment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FTP">
        <xsd:annotation>
          <xsd:documentation>Flow Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GTP">
        <xsd:annotation>
          <xsd:documentation>Group Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MD">
        <xsd:annotation>
          <xsd:documentation>Management Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ME">
        <xsd:annotation>
          <xsd:documentation>Managed Element (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MFD">
        <xsd:annotation>
          <xsd:documentation>Matrix Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MLSN">
        <xsd:annotation>
          <xsd:documentation>Multi Layer Subnetwork (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>Operations System (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PG">
        <xsd:annotation>
          <xsd:documentation>Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PMP">
        <xsd:annotation>
          <xsd:documentation>Performance Monitoring Point (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PTP">
        <xsd:annotation>
          <xsd:documentation>Physical Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SNC">
        <xsd:annotation>
          <xsd:documentation>Subnetwork Connection (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCPROFILE">
        <xsd:annotation>
          <xsd:documentation>Traffic Condifitioning Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCAPP">
        <xsd:annotation>
          <xsd:documentation>Threshold Crossing Alert
                        Parameter Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TL">
        <xsd:annotation>
          <xsd:documentation>Topological Link (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TMD">
        <xsd:annotation>
          <xsd:documentation>Transmission Descriptor (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TPPOOL">
        <xsd:annotation>
          <xsd:documentation>Termination Point Pool (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common object information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=6"/>
  <!--==============-->
  <xsd:element name="commonObjectInfo" type="tns:CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute represents a unique
                            name/identifier for the object on the CCV.
                            Consult the SD2-7 about object naming for
                            additional normative references.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="userLabel" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="discoveredName" type="gen:DiscoveredNameType"/>
      <xsd:element minOccurs="0" name="namingOs" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the object attribute definition to
                            identify the name of the OS that provided
                            the unique MTOSI name for the object. It is
                            assumed that each object (that is published
                            on the CCV) has a unique naming OS. This
                            attribute is optional in a point to point
                            NMS-EMS paradigm.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="owner" nillable="true" type="gen:OwnerType"/>
      <xsd:element minOccurs="0" name="aliasNameList" nillable="true" type="gen:AliasNameListType"/>
      <xsd:element minOccurs="0" name="vendorExtensions" nillable="true" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=9</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T state or status
                parameters supported in mTOP</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="x721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="x721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="x721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="x721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="x721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="m3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="m3100.CircuitPackType" type="tns:M3100.CircuitPackTypeType"/>
      <xsd:element minOccurs="0" name="x721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:element minOccurs="0" name="x721.State" type="tns:X721.StateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="X721.OperationalStateType">
    <xsd:annotation>
      <xsd:documentation>Oper[ational] State parameter from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DISABLED"/>
      <xsd:enumeration value="UNABLED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AdministrativeStateType">
    <xsd:annotation>
      <xsd:documentation>Admin[istrative] State parameter from
                ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="LOCKED"/>
      <xsd:enumeration value="UNLOCKED"/>
      <xsd:enumeration value="SHUTTING_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UsageStateType">
    <xsd:annotation>
      <xsd:documentation>Usage State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IDLE"/>
      <xsd:enumeration value="ACTIVE"/>
      <xsd:enumeration value="BUSY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AvailabilityStatusType">
    <xsd:annotation>
      <xsd:documentation>Avail[ability] Status based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="INTypeEST"/>
      <xsd:enumeration value="FAILED"/>
      <xsd:enumeration value="POWER_OFF"/>
      <xsd:enumeration value="OFF_LINE"/>
      <xsd:enumeration value="OFF_DUTY"/>
      <xsd:enumeration value="DEPENDENCY"/>
      <xsd:enumeration value="DEGRADED"/>
      <xsd:enumeration value="NOT_INSTALLED"/>
      <xsd:enumeration value="LOG_FULL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.ControlStatusType">
    <xsd:annotation>
      <xsd:documentation>Control Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="SUBJECTTypeOTypeEST"/>
      <xsd:enumeration value="PART_OF_SERVICES_LOCKED"/>
      <xsd:enumeration value="RESERVED_FORTypeEST"/>
      <xsd:enumeration value="SUSPENDED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.HolderStatusType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HOLDER_EMPTY"/>
      <xsd:enumeration value="INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="NOT_INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="UNKNOWNTypeYPE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.CircuitPackTypeType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UnkownstatusType">
    <xsd:annotation>
      <xsd:documentation>Unknown Status parameter based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="X721.StateType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="X721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="X721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="X721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="X721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="X721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="M3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="X721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=4</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common
                type definitions used in some the mTOP XML Resource objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:simpleType name="CommunicationStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This state reflects a communication state between the
                    EMS and its ManagedElement.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CS_AVAILABLE"/>
      <xsd:enumeration value="CS_UNAVAILABLE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="ConnectionDirectionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction of a subnetwork connection, cross-connects,
                    or topological link. For a detailed description of
                    the use of this attribute see SNC Types supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CD_UNI">
        <xsd:annotation>
          <xsd:documentation>
            <p>UNIdirectional, i.e. source TP to sink TP.
                            Note: creation of unidirectional connections
                            is supported even when CTPs/FTPs are
                            modelled as bidirectional.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CD_BI">
        <xsd:annotation>
          <xsd:documentation>
            <p>BIdirectional, i.e. bidirectional TP to
                            bidirectional TP, a.k.a. two-way.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ConnectionlessPortTerminationPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This parameter shall identify the role in the flow
                    domain of         the requested CPTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CPTPR_FD_EDGE">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Edge CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_FD_INTERNAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Internal CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_ALL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return all CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="DirectionalityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction for a TerminationPoint:</p>
        <p>The directionality of PTPs is defined from an
                    external point of view, while the directionality of
                    CTPs is defined from an internal point of view.
                    Consequently, sink PTPs generate source CTPs, and
                    sink CTPs form source PTPs. Refer to SNC Types and
                    to layers for further information on termination
                    point and connection directionality.</p>
        <p>Note that ATM termination points (LR_ATM_NI,
                    LR_ATM_VP and LR_ATM_VC) are always bi-directional
                    even though the traffic may be asymmetric (and
                    eventually null in one of the two directions).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="D_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>Used when the directionality specification is
                            not necessary.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_BIDIRECTIONAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>source and sink (transmit and receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SOURCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>source (transmit).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SINK">
        <xsd:annotation>
          <xsd:documentation>
            <p>sink (receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="FlowDomainFragmentTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          This (read-only) attribute provides an indication of
                    the type of the matrix flow domain fragment. It may
                    have one of the following values:
          <ul>
            <li>"FDFRT_POINT_TO_POINT": the FDFr
                            is between exactly two points</li>
            <li>"FDFRT_POINT_TO_MULTIPOINT": (E-tree)</li>
            <li>"FDFRT_MULTIPOINT": the FDFr is
                            between at least two points</li>
          </ul>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="GradesOfImpactType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Grades of maximum tolerable disruption to traffic as
                    a result of the operation that this parameter is describing.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="GOI_HITLESS"/>
      <xsd:enumeration value="GOI_MINOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Less or equal to 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GOI_MAJOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Greater than 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="HolderStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Holder State Type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMPTY">
        <xsd:annotation>
          <xsd:documentation>
            <p>no equipment is installed and no expected
                            equipment has been identified</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected and currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EXPECTED_AND_NOT_INSTALLED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected but not currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_NOT_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>physically inserted in the ME but not expected</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MISMATCH_OF_INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>there is an inconsistency between the
                            expected equipment and the installed equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNAVAILABLE">
        <xsd:annotation>
          <xsd:documentation>
            <p>this holder cannot accept the installation or
                            provisioning of equipment (this is typically
                            caused by a double width card installed next
                            to this slot)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>
            <p>the OS does not know the state of the equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentHolderTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The EquipmentHolder with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentHolderEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentHolderEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Equipment holder type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="rack"/>
      <xsd:enumeration value="shelf"/>
      <xsd:enumeration value="sub_shelf"/>
      <xsd:enumeration value="slot"/>
      <xsd:enumeration value="sub_slot"/>
      <xsd:enumeration value="remote_unit"/>
      <xsd:enumeration value="remote_slots"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="EquipmentObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Type of equipment object in equipment holder. Values
                    are vendor-specific.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledPartNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the resource part number (PN) of the
                    installed equipment. If not available (or there is
                    no installed equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledSerialNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the serial number of the installed equipment.
                    If not available (or there is no installed
                    equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Firmware version of the installed equipment. If not
                    available (or there is no installed equipment), an
                    empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRoutedType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Network routed, indicates if the route must be or is
                    computed and implemented at the network level.
                    NR_YES indicates that the route must be / is
                    computed at the network. NR_NO indicates that the
                    route must not be / is not computed at the network.
                    NR_NA indicates that the route can be computed anywhere.</p>
        <p>If rerouting is allowed, this attribute will indicate
                    who last rerouted the SNC, the network (NR_YES) or
                    the EMS (NR_NO).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NR_NA"/>
      <xsd:enumeration value="NR_NO"/>
      <xsd:enumeration value="NR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Indicates if the reroute of an SNC (if allowed)
                    should be computed by the network, by the EMS, or if
                    it does not matter.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_SET"/>
      <xsd:enumeration value="NO"/>
      <xsd:enumeration value="YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="FreedomLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the NMS-specified EMS level of freedom when
                    performing SNC operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMSFL_CC_AT_SNC_LAYER"/>
      <xsd:enumeration value="EMSFL_TERMINATE_AND_MAP"/>
      <xsd:enumeration value="EMSFL_HIGHER_ORDER_SNCS"/>
      <xsd:enumeration value="EMSFL_RECONFIGURATION"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ModifyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute specifies the class of SNC
                    modification; i.e. rerouting or add/remove protection.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ADD_REMOVE_PROTECTION"/>
      <xsd:enumeration value="REROUTING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="PotentialFutureSetupIndicatorType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Refers to the aEnd and is used to convey the likely
                    future (or current) configuration of the SNC (see SD1-16_layeredParameters.pdf).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RSU_POINT_TO_POINT"/>
      <xsd:enumeration value="RSU_BROADCAST"/>
      <xsd:enumeration value="RSU_ANY_CONFIG"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProtectionEffortType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection effort is a statement of the
                    requirement of the static protection level. For
                    example if EFFORT_SAME_OR_WORSE is specified for a
                    3-ended FULLY_PROTECTED connection, a 3-ended
                    PARTIALLY_PROTECTED connection is acceptable, but a
                    2-ended connection (ST_SIMPLE) is not acceptable
                    i.e. ProtectionEffort does not have any bearing on
                    the externaly visible shape of the SNC.
                    EFFORT_WHATEVER indicates that the specified static
                    protection level is preferred, but that any other
                    level is acceptable.</p>
        <p>For a detailed description of the use of this
                    attribute see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EFFORT_WHATEVER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_BETTER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_WORSE"/>
      <xsd:enumeration value="EFFORT_SAME "/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionRole with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionRoleEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionRoleEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Protection role type.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="NA"/>
      <xsd:enumeration value="PRIMARY"/>
      <xsd:enumeration value="BACKUP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="RerouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The RerouteType type indicates if the EMS/MEs are
                    allowed and/or required to reroute this SNC if there
                    is a failure on this SNC, periodically to optimize
                    the routes, of for any other reason.It is an EMS/ME
                    implementation whether this is done using network
                    routing protocols or if the EMS/MEs detect the
                    failure and take appropriate action to attempt to
                    fix the SNC.</p>
        T
        <p>he RR_NO value means
                    that the EMS/MEs are not allowed to reroute the SNC.
                    The RR_YES value means that the EMS/MEs are allowed
                    to reroute the SNC and required to attempt to
                    reroute it upon failure. The RR_NA value is used
                    when the NMS does not want to specify the exact EMS
                    behaviour. In this case it is left up to the EMS to
                    decide whether rerouting will be provided. It is
                    also used if the EMS/MEs are allowed to reroute the
                    SNC but not required to attempt to reroute it upon failure.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RR_NA"/>
      <xsd:enumeration value="RR_NO"/>
      <xsd:enumeration value="RR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ResourceFulfillmentStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IN_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been put into operation and is
                            operating as provisioned (completely or partially).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity is entirely not capable of
                            performing its provisioned functions and is
                            not restricted by administrative actions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE_BY_MAINTENANCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been taken intentionally out
                            of service by a management action.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SERV_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>The service state is not applicable.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceFulfillmentStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This object attribute indicates basic administration
                    state of equipment and OS objects.       Also, this
                    object attribute accepts Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceFulfillmentStateEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNCState enum is used to represent the various
                    states that an SNC may take.</p>
        <p>The following states may be supported by the EMS,
                    depending on the SNC management mode of operation
                    used by the EMS. See SNC Management Modes Of
                    Operation for details.</p>
        <p>SNCS_PENDING: the SNC has been created by an NMS and
                    has not been activated by any NMS; or the SNC has
                    been successfully deactivated by an NMS. That state
                    has no relationship with the network state of the
                    cross- connects of the SNC. It is allowable for an
                    EMS to not support the SNCS_PENDING state and to
                    reject any operation that attempts to put an SNC
                    into SNCS_PENDING state.</p>
        <p>SNCS_ACTIVE: the SNC is not in pending state, a route
                    has been assigned to the SNC and all cross-connects
                    for the SNC are active in the network.</p>
        <p>SNCS_PARTIAL: the SNC is not in pending state, and
                    either a route has not been assigned to the SNC, or
                    not all of the cross-connects of the SNC are active
                    in the network. This may or may not include
                    activated SNCs for which there are currently no
                    active cross- connects in the network, depending on
                    the SNC management mode of operation.It is possible
                    that, in some EMSes, this state be unreachable.</p>
        <p>SNCS_NONEXISTENT: this is not an SNC state per se, as
                    it applies to "non-existent SNCs". It is
                    used in the interface to report SNCs that have been
                    deleted.</p>
        <p>See SNCState state diagram for details on valid transitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SNCS_NONEXISTENT"/>
      <xsd:enumeration value="SNCS_PENDING"/>
      <xsd:enumeration value="SNCS_ACTIVE"/>
      <xsd:enumeration value="SNCS_PARTIAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNC Type describes the connection based on the
                    signal flows.  For a detailed description of the use
                    of this attribute see SNC Types. In case of an ATM
                    SNC (VP or VC), ST_SIMPLE is used to specify a
                    'plain' (hard or regular) PVC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ST_SIMPLE"/>
      <xsd:enumeration value="ST_ADD_DROP_A"/>
      <xsd:enumeration value="ST_ADD_DROP_Z"/>
      <xsd:enumeration value="ST_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_ADD_DROP"/>
      <xsd:enumeration value="ST_OPEN_ADD_DROP"/>
      <xsd:enumeration value="ST_EXPLICIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SoftwareVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The OS product software version</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="StaticProtectionLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The StaticProtectionLevel with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:StaticProtectionLevelEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="StaticProtectionLevelEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The static protection level is a statement of the
                    internal resiliency of the SNC (internal to the
                    subnetwork). The more resilient an SNC is, the more
                    bandwidth it will consume.</p>
        <p>The protection level does not have any bearing on the
                    externally visible shape and traffic flows of the
                    SNC (in non-failure cases). For a detailed
                    description of the use of this attribute, see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="PREEMPTIBLE"/>
      <xsd:enumeration value="UNPROTECTED"/>
      <xsd:enumeration value="PARTIALLY_PROTECTED"/>
      <xsd:enumeration value="FULLY_PROTECTED"/>
      <xsd:enumeration value="HIGHLY_PROTECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationModeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Within the facade definition, the CTP/FTP can act as
                    an aggregate of associated G.805 TCPs, G.805
                    Termination Functions and G.805 CPs at one or more
                    LayerRates. The CTP is contained within a PTP or FTP.</p>
        <p>The TerminationMode attribute indicates and controls
                    the connection of the named CP at a specified
                    LayerRate to the dedicated G.805 TCP and associated
                    G.805 Termination Function at the same LayerRate
                    within the CTP/FTP.</p>
        <p>The TerminationMode is used, for example, to control
                    the Termination and mapping to VT1.5 of an STS1
                    Trail within an OC3 port. This capability could
                    potentially be used to terminate an STS1 backbone
                    Trail within a lower order mux that has the
                    capability to alternatively cross-connect the STS1
                    unterminated. The same capability is used in SDH and
                    is potentially applicable to any LayerRate.</p>
        <p>TerminationMode has the following values</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TM_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can not be mapped (i.e., it has
                            no contained potential CTPs). This indicates
                            that an SNC/crossconnect can be used to
                            connect the G.805 TCP of the CTP to the
                            connection point of another CTP/FTP. This
                            only applies to CTPs that connect on their
                            server side and are related to the
                            containing PTP/FTP on their client side.</p>
            <p>FTP: The FTP can not be mapped on the server
                            side (i.e., it has no contained potential
                            CTPs on the server side). This indicates
                            that an SNC/crossconnect can be used to
                            connect the G.805 TCP of the FTP to the
                            connection point of another CTP/FTP. This
                            only applies to FTPs that connect on their
                            server side and do not support IM (Inverse
                            Multiplexing).</p>
            <p>PTP: This is the only legal value for a PTP</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_NEITHER_TERMINATED_NOR_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped and currently is
                            (i.e., it has contained actual CTPs). This
                            indicates that the G.805 CPs adapted from
                            the corresponding G.805 Termination Function
                            within the CTP aggregate are available to
                            provide client layer capacity (e.g. STS1
                            terminated and mapped to VT1.5 i.e.
                            channelized). In this state the TCP will be
                            sourcing and sinking traffic. This is only a
                            valid value for CTPs that support client
                            adaptation.</p>
            <p>FTP: The FTP can be mapped on the server side
                            and currently is (i.e., it has contained
                            actual CTPs on the server side). This
                            indicates that the FTP supports IM (Inverse
                            Multiplexing) and the server side contained
                            CTPs (if any) are available for connection
                            as the FTP is actively assembling the
                            fragments of the IM. This value is not valid
                            for an FTP that does not support IM. (see
                            layering for more details).</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped but currently is
                            not (i.e., it does have contained potential
                            CTPs, but currently has no contained actual
                            CTPs). This indicates that the G.805 CP
                            aggregated in the CTP is not connected to a
                            TCP (that would be aggregated in the same
                            CTP) and therefore the CTP is available for
                            SNC/crossconnect connectivity (e.g. STS1 not
                            terminated and not mapped to VT1.5i.e. not
                            channelized).</p>
            <p>FTP: The FTP can be mapped on the server side
                            but currently is not (i.e., it does have
                            contained potential CTPs on the server side,
                            but currently has no contained actual CTPs
                            on the server side). This indicates that the
                            FTP supports IM (Inverse Multiplexing) but
                            the IM function is not active and the TCP
                            within the FTP is available for external
                            SNC/crossconnect connectivity.</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TransmissionDescriptorStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Contains the state of consistency between a TP and
                    its associated TransmissionDescriptor.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TMD_MISSING"/>
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="APPLIED"/>
      <xsd:enumeration value="MISMATCH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="TopologyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The Topology with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:TopologyEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="TopologyEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>TopologyType is used to describe the subnetwork
                    configuration. The EMS shall be capable of providing
                    a SubNetwork Connection through any physical
                    termination point of any managed element that
                    belongs to the Subnetwork.</p>
        <p>Composite subnetworks (i.e. containing other
                    Subnetworks) are not supported in this release of
                    the interface</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="TOPO_SINGLETON">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SINGLETON, which is used for a single NE
                            (of any type) that is managed independently
                            of its Topological Link connectivity to
                            other NEs. It may for example be a member of
                            a ring that is managed by a number of EMSes.
                            It is acceptable for an EMS to represent all
                            NEs as being in Singleton subnetworks
                            regardless of the actual network
                            configuration. A singleton subnetwork does
                            not contain internal topological links.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_CHAIN">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_CHAIN, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a chain.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_PSR, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a ring that is capable of
                            supporting subnetwork connection protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_PSR, which is used to cover the
                            case where two or more NEs of a PS ring (but
                            not the entire ring) are managed by the same EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SPRING, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a complete ring that supports
                            Shared Line Protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_SPRING, which is used to cover
                            cases where two or more NEs of an SP ring
                            (but not the entire ring) are managed by one EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_MESH">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_MESH, which is used to cover an
                            arbitrary set of two or more NEs not covered
                            by any other type.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A CTP/FTP may be involved in zero, one, or many
                    connections. The value TPConnectionState indicates
                    the degree to which a CTP/FTP is used. The values
                    TPCS_SOURCE_CONNECTED and TPCS_SINK_CONNECTED
                    reflect the presence of a one way connection. The
                    value TPCS_BI_CONNECTED means that the TP is both
                    sink and source connected.</p>
        <p>If an EMS cannot report whether the source of the TP
                    is connected or the sink is connected,
                    TPCS_BI_CONNECTED may be reported by that EMS.</p>
        <p>The value TPCS_NA is used for PTPs and TPPools.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPCS_NA"/>
      <xsd:enumeration value="TPCS_SOURCE_CONNECTED"/>
      <xsd:enumeration value="TPCS_SINK_CONNECTED"/>
      <xsd:enumeration value="TPCS_BI_CONNECTED"/>
      <xsd:enumeration value="TPCS_NOT_CONNECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointProtectionAssociationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>tpProtectionAssociation expresses constraints on
                    PTPs/CTPs/FTPs for PSR connection management.</p>
        <p>In a multi-layer subnetwork, say 'a', 'b', 'c' are
                    edge points. Suppose, for example, a three-ended
                    connection is sought from 'a' to 'b', where 'b' is
                    one of the endpoints. If 'c' is the constrained
                    choice for 'b' as the other end of the three- ended
                    connection,then 'b' and 'c' are said to be
                    associated by a ] protectionAssociation. The
                    tpProtectionAssociation is set to TPPA_PSR_RELATED
                    in 'b' and 'c', and getAssociatedTP(b) returns c and
                    getAssociatedTP(c) returns b.</p>
        <p>In all other cases, tpProtectionAssociation is set to TPPA_NA.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPPA_NA"/>
      <xsd:enumeration value="TPPA_PSR_RELATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:simpleType name="TerminationPointRole">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the enumeration of all possible end point
                    roles of a TP of an SNC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CM_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a connection matrix (CM) end point the
                            span of the SNC starts at a G.805 CP with a
                            fixed or flexible connection through the ME
                            at the SNC layer, i.e. the connectable layer
                            of the end point.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="LC_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a link connection (LC) end point
                            connectivity is adapted from a server layer
                            and the span of the SNC starts with a G.805
                            TCP with mapping mode set to TM_TERMINATED_ AND_AVAILABLE_FOR_MAPPING.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of EndPointRoles.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="role" type="tns:EndPointRoleType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type indicates the end point role of an end
                    TP. See R_TMF518_NRF_I_0026.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="role" type="tns:TerminationPointRole">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the role of the end
                            TP specified by the tpIndex.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tpIndex" type="xsd:unsignedInt">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the index of the end
                            TP within the end list.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="VersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The active software version of the ManagedElement</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=16</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Fulfillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML TpData structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=4"/>
  <!--=================-->
  <xsd:complexType name="TerminationPointDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines a set of attributes associated
                    with a TP.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="tpRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Specifies a termination point.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tpMappingMode" nillable="true" type="com:TerminationModeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The mapping mode to put the TP in.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute contains the layered
                            Transmission Parameters associated with the
                            Termination Point.             Refer to the
                            attached supporting document
                            SD1-16_LayeredParameters for details of the
                            currently defined Transmission Parameters.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ingressTmdRef" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>A connection termination point may have an
                            optional reference to an ingress
                            (incoming)Transmission Descriptor. The
                            Descriptor name will be empty if there is no
                            associated Descriptor.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="egressTmdRef" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>A connection termination point may have an
                            optional reference to an egress
                            (outgoing)Transmission Descriptor. The
                            Transmission Descriptor name will be empty
                            if there is no associated Descriptor.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TerminationPointDataListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of TerminationPointDataType elements.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="tpData" type="tns:TerminationPointDataType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=11</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:lr="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--==============-->
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP XML LayeredParameters structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=10"/>
  <!--==============-->
  <xsd:element name="transmissionParametersList" nillable="true" type="tns:LayeredParametersListType"/>
  <!--==============-->
  <xsd:complexType name="LayeredParametersListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is used in the TP definition and as a
                    consequence is available for use in a connection
                    specification where a TP is specified.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:transmissionParameters"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--==============-->
  <xsd:element name="transmissionParameters" nillable="true" type="tns:LayeredParametersType"/>
  <!--==============-->
  <xsd:complexType name="LayeredParametersType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is a structure that includes the layer rate with
                    the applicable list of transmissions parameters</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="layerRate" type="lr:LayerRateType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the layer to which the parameters apply.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="parameterList" type="gen:NameAndValueStringListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of tranmission parameters as a
                            generic pair of name and value strings.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific containment for vendor
                            extensions of the list of tranmission parameters.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=8</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported Alarm ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuArcStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T Alarm Reporting
                Control (ARC) state or status parameters supported in
                mTOP;    Each element of the list identifies a state or
                status and provides its relevant value.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="m3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="m3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="m3100.NALMTIInterval" type="tns:M3100.NALMTIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.NALMQIInterval" type="tns:M3100.NALMQIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
      <xsd:element minOccurs="0" name="m3100.State" type="tns:M3100.ArcStateListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="M3100.AlarmStatusType">
    <xsd:annotation>
      <xsd:documentation>Alarm Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CLEARED"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="CRITICAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcStateType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ALM"/>
      <xsd:enumeration value="NALM"/>
      <xsd:enumeration value="NALMTypeIMED_INHIBIT"/>
      <xsd:enumeration value="NALM_QUALIFIED_INHIBIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMTIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMQIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcQIStatusType">
    <xsd:annotation>
      <xsd:documentation>ARC QI Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="NALM_NOT_READY"/>
      <xsd:enumeration value="NALM_COUNT_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="M3100.ArcStateListType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="M3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="M3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="M3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nrb.nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML CC Resource object.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=4"/>
  <!--=================-->
  <xsd:element name="cc" type="tns:CrossConnectType"/>
  <!--=================-->
  <xsd:complexType name="CrossConnectType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A CrossConnect represents a connection within a
                    single managed element. This structure is primarily
                    used in the specification of routes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="isActive" nillable="true" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>Indicates if the cross-connect is active in
                            the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="direction" nillable="true" type="com:ConnectionDirectionType"/>
      <xsd:element minOccurs="0" name="ccType" nillable="true" type="com:SubnetworkConnectionTypeType"/>
      <xsd:element minOccurs="0" name="isFixed" nillable="true" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>The attribute defines if the CrossConnect is
                            fixed (i.e. cannot be deleted by the NMS) or
                            is flexible.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="aEndRefList" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="aEndName" type="nrb.nam:NamingAttributeType">
              <xsd:annotation>
                <xsd:documentation>
                  <p>Names of PTPs/CTPs/FTPs at the
                                    aEnd of the cross connection.</p>
                </xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="zEndRefList" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="zEndName" type="nrb.nam:NamingAttributeType">
              <xsd:annotation>
                <xsd:documentation>
                  <p>Names of PTPs/CTPs/FTPs at the
                                    zEnd of the cross connection.</p>
                </xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="connectionId" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the control plane identifier. This
                            attribute is the Connection Name attribute
                            in G.7713. Note that also the Cross
                            Connection points to its superior Connection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="routeActualState" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>
              This parameter is the summary state of the
                            activity states of the route’s CCs in the
                            network, regardless the SNC the CCs are
                            currently serving.  It can assume the
                            following values:
              <ul>
                <li>active:  all of the route’s CCs are active</li>
                <li>inactive:  none of the route’s CCs
                                    is active</li>
                <li>partial:  one or more but not all of
                                    the CCs of the route are active</li>
              </ul>
            </p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="routeAdminState" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>
              This state has not any relationship with the
                            actual state.  It can assume the following
                            values:
              <ul>
                <li>locked:  the route is not allowed to
                                    be active</li>
                <li>unlocked:  the route is allowed to
                                    be active</li>
              </ul>
            </p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="isRouteExclusive" nillable="true" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>“True” if not any routes of other SNCs can
                            share any of the route’s CCs or CTPs, even
                            in pending state, “False” otherwise..</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="routeId" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This parameter is a unique identifier within
                            the SNC name, with format up to the EMS..</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="isRouteIntended" nillable="true" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>The intended route (“True”) is defined as
                            preferred, or default route for a given
                            service.  The backup route (“False”) is
                            partly or totally different from the
                            intended route (but with same end points),
                            and is useful for restoration and
                            maintenance purposes.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="isRouteInUseBy" nillable="true" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>“True” if at least one of the route’s CCs or
                            CTPs is carrying traffic of another SNC,
                            “False” otherwise..</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="CrossConnectListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of CrossConnects</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:cc"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=14</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/route/v1" version="1.0" xmlns:cc="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/route/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP Route XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval/ConnectionRetrievalHttp?xsd=1"/>
  <!--=================-->
  <xsd:element name="route" type="tns:RouteType"/>
  <!--=================-->
  <xsd:complexType name="RouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A route for an SNC is defined as a partially ordered
                    list of cross-connects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ccList" type="cc:CrossConnectListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="RouteListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of Routes</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="route" type="tns:RouteType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint></con:endpoints><con:operation isOneWay="false" action="getAllCrossConnections" name="getAllCrossConnections" bindingOperationName="getAllCrossConnections" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllCrossConnectionsRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:connectionRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionRateList>
      </v11:getAllCrossConnectionsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllCrossConnections"/></con:call></con:operation><con:operation isOneWay="false" action="getAllFixedCrossConnections" name="getAllFixedCrossConnections" bindingOperationName="getAllFixedCrossConnections" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllFixedCrossConnectionsRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:connectionRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionRateList>
      </v11:getAllFixedCrossConnectionsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllFixedCrossConnections"/></con:call></con:operation><con:operation isOneWay="false" action="getAllFixedSubnetworkConnections" name="getAllFixedSubnetworkConnections" bindingOperationName="getAllFixedSubnetworkConnections" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllFixedSubnetworkConnectionsRequest>
         <!--Optional:-->
         <v11:mlsnRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mlsnRef>
         <!--Optional:-->
         <v11:connectionRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionRateList>
      </v11:getAllFixedSubnetworkConnectionsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllFixedSubnetworkConnections"/></con:call></con:operation><con:operation isOneWay="false" action="getAllFixedSubnetworkConnectionsWithTp" name="getAllFixedSubnetworkConnectionsWithTp" bindingOperationName="getAllFixedSubnetworkConnectionsWithTp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllFixedSubnetworkConnectionsWithTpRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
         <!--Optional:-->
         <v11:connectionRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionRateList>
      </v11:getAllFixedSubnetworkConnectionsWithTpRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllFixedSubnetworkConnectionsWithTp"/></con:call></con:operation><con:operation isOneWay="false" action="getAllSubnetworkConnections" name="getAllSubnetworkConnections" bindingOperationName="getAllSubnetworkConnections" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllSubnetworkConnectionsRequest>
         <!--Optional:-->
         <v11:mlsnRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mlsnRef>
         <!--Optional:-->
         <v11:connectionRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionRateList>
      </v11:getAllSubnetworkConnectionsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllSubnetworkConnections"/></con:call></con:operation><con:operation isOneWay="false" action="getAllSubnetworkConnectionsWithTp" name="getAllSubnetworkConnectionsWithTp" bindingOperationName="getAllSubnetworkConnectionsWithTp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllSubnetworkConnectionsWithTpRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
         <!--Optional:-->
         <v11:connectionRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionRateList>
      </v11:getAllSubnetworkConnectionsWithTpRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllSubnetworkConnectionsWithTp"/></con:call></con:operation><con:operation isOneWay="false" action="getBackupRoutes" name="getBackupRoutes" bindingOperationName="getBackupRoutes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getBackupRoutesRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:isHigherOrderCcListIncluded>?</v11:isHigherOrderCcListIncluded>
         <!--Optional:-->
         <v11:additionalInfo>
            <!--Zero or more repetitions:-->
            <v13:nvs>
               <v13:name>?</v13:name>
               <v13:value>?</v13:value>
            </v13:nvs>
         </v11:additionalInfo>
      </v11:getBackupRoutesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getBackupRoutes"/></con:call></con:operation><con:operation isOneWay="false" action="getCrossConnectionsIterator" name="getCrossConnectionsIterator" bindingOperationName="getCrossConnectionsIterator" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getCrossConnectionsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getCrossConnectionsIterator"/></con:call></con:operation><con:operation isOneWay="false" action="getIntendedRoute" name="getIntendedRoute" bindingOperationName="getIntendedRoute" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getIntendedRouteRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:isHigherOrderCcListIncluded>?</v11:isHigherOrderCcListIncluded>
         <!--Optional:-->
         <v11:additionalInfo>
            <!--Zero or more repetitions:-->
            <v13:nvs>
               <v13:name>?</v13:name>
               <v13:value>?</v13:value>
            </v13:nvs>
         </v11:additionalInfo>
      </v11:getIntendedRouteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getIntendedRoute"/></con:call></con:operation><con:operation isOneWay="false" action="getPotentialFixedCrossConnections" name="getPotentialFixedCrossConnections" bindingOperationName="getPotentialFixedCrossConnections" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getPotentialFixedCrossConnectionsRequest>
         <!--Optional:-->
         <v11:inputTp>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:inputTp>
      </v11:getPotentialFixedCrossConnectionsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getPotentialFixedCrossConnections"/></con:call></con:operation><con:operation isOneWay="false" action="getRoute" name="getRoute" bindingOperationName="getRoute" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getRouteRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:isHigherOrderCcListIncluded>?</v11:isHigherOrderCcListIncluded>
      </v11:getRouteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getRoute"/></con:call></con:operation><con:operation isOneWay="false" action="getSubnetworkConnection" name="getSubnetworkConnection" bindingOperationName="getSubnetworkConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
      </v11:getSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getSubnetworkConnection"/></con:call></con:operation><con:operation isOneWay="false" action="getSubnetworkConnectionModeOfOperation" name="getSubnetworkConnectionModeOfOperation" bindingOperationName="getSubnetworkConnectionModeOfOperation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getSubnetworkConnectionModeOfOperationRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getSubnetworkConnectionModeOfOperation"/></con:call></con:operation><con:operation isOneWay="false" action="getSubnetworkConnectionsByUserLabel" name="getSubnetworkConnectionsByUserLabel" bindingOperationName="getSubnetworkConnectionsByUserLabel" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getSubnetworkConnectionsByUserLabelRequest>
         <!--Optional:-->
         <v11:userLabel>?</v11:userLabel>
      </v11:getSubnetworkConnectionsByUserLabelRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getSubnetworkConnectionsByUserLabel"/></con:call></con:operation><con:operation isOneWay="false" action="getSubnetworkConnectionsIterator" name="getSubnetworkConnectionsIterator" bindingOperationName="getSubnetworkConnectionsIterator" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getSubnetworkConnectionsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getSubnetworkConnectionsIterator"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="OperationsSystemRetrievalSoapHttpBinding" type="wsdl" bindingName="{http://www.tmforum.org/mtop/mri/wsdl/osr/v1-0}OperationsSystemRetrievalSoapHttpBinding" soapVersion="1_1" anonymous="optional" definition="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp.wsdl?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp.wsdl?WSDL"><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp.wsdl?WSDL</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-OperationsSystemRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/mri/wsdl/osr/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/mri/wsdl/osr/v1-0" xmlns:WL5G3N2="http://schemas.xmlsoap.org/wsdl/soap/">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?wsdl=1" namespace="http://www.tmforum.org/mtop/mri/wsdl/osr/v1-0"/>
  <WL5G3N0:documentation>DDP: ManageResourceInventory
    Module: OperationsSystemRetrieval Service Interface WSDL HTTP Module
    Description: This module contains all the mTOP OperationsSystemRetrieval Service Interface WSDL definitions for the Web Service deployment profile with SOAP/HTTP binding.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:portType name="OperationsSystemRetrieval_RPC">
    <WL5G3N0:documentation>The OperationsSystemRetrieval porttype (interface) for RPC (synchronous) based client/server communication patterns. All SIT operations use the specific get"ObjectType"Iterator operation to handle multiple responses.</WL5G3N0:documentation>
    <WL5G3N0:operation name="getAllOperationsSystems">
      <WL5G3N0:input message="WL5G3N1:getAllOperationsSystemsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllOperationsSystemsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllOperationsSystemsException" name="getAllOperationsSystemsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getOperationsSystem">
      <WL5G3N0:input message="WL5G3N1:getOperationsSystemRequest"/>
      <WL5G3N0:output message="WL5G3N1:getOperationsSystemResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getOperationsSystemException" name="getOperationsSystemException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSubordinateOperationsSystem">
      <WL5G3N0:input message="WL5G3N1:getSubordinateOperationsSystemRequest"/>
      <WL5G3N0:output message="WL5G3N1:getSubordinateOperationsSystemResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getSubordinateOperationsSystemException" name="getSubordinateOperationsSystemException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getOperationsSystemsIterator">
      <WL5G3N0:input message="WL5G3N1:getOperationsSystemsIteratorRequest"/>
      <WL5G3N0:output message="WL5G3N1:getOperationsSystemsIteratorResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getOperationsSystemsIteratorException" name="getOperationsSystemsIteratorException"/>
    </WL5G3N0:operation>
  </WL5G3N0:portType>
  <WL5G3N0:binding name="OperationsSystemRetrievalSoapHttpBinding" type="WL5G3N1:OperationsSystemRetrieval_RPC">
    <WL5G3N0:documentation>SOAP HTTP binding definitions of the operations of the OperationsSystemRetrieval RPC portType (interface)</WL5G3N0:documentation>
    <WL5G3N2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <WL5G3N0:operation name="getAllOperationsSystems">
      <WL5G3N2:operation soapAction="getAllOperationsSystems" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllOperationsSystemsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllOperationsSystemsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllOperationsSystemsException">
        <WL5G3N2:fault name="getAllOperationsSystemsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getOperationsSystem">
      <WL5G3N2:operation soapAction="getOperationsSystem" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getOperationsSystemRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getOperationsSystemResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getOperationsSystemException">
        <WL5G3N2:fault name="getOperationsSystemException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSubordinateOperationsSystem">
      <WL5G3N2:operation soapAction="getSubordinateOperationsSystem" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getSubordinateOperationsSystemRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getSubordinateOperationsSystemResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getSubordinateOperationsSystemException">
        <WL5G3N2:fault name="getSubordinateOperationsSystemException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getOperationsSystemsIterator">
      <WL5G3N2:operation soapAction="getOperationsSystemsIterator" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getOperationsSystemsIteratorRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getOperationsSystemsIteratorResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getOperationsSystemsIteratorException">
        <WL5G3N2:fault name="getOperationsSystemsIteratorException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
  </WL5G3N0:binding>
  <WL5G3N0:service name="OperationsSystemRetrievalHttp">
    <WL5G3N0:documentation>Example of the OperationsSystemRetrieval WSDL Service definition as a deployment example of this mTOP Service Interface. It is expected to be modified to match the specific deployment configuration in a service provider's CCV.</WL5G3N0:documentation>
    <WL5G3N0:port binding="WL5G3N1:OperationsSystemRetrievalSoapHttpBinding" name="OperationsSystemRetrievalSoapHttp">
      <WL5G3N2:address location="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp"/>
    </WL5G3N0:port>
  </WL5G3N0:service>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?wsdl=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-OperationsSystemRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/mri/wsdl/osr/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:WL5G3N2="http://www.tmforum.org/mtop/mri/xsd/osr/v1">
  <WL5G3N0:documentation>DDP: ManageResourceInventory
    Module: OperationsSystemRetrieval Service Interface WSDL Message Module
    Description: This module contains all the mTOP OperationsSystemRetrieval Service Interface WSDL message definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:types>
    <xsd:schema xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:osr="http://www.tmforum.org/mtop/mri/xsd/osr/v1" xmlns:tns="http://www.tmforum.org/mtop/mri/wsdl/osr/v1-0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.tmforum.org/mtop/mri/xsd/osr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=10"/>
    </xsd:schema>
  </WL5G3N0:types>
  <WL5G3N0:message name="getAllOperationsSystemsRequest">
    <WL5G3N0:documentation>The getAllOperationsSystems request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllOperationsSystemsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllOperationsSystemsResponse">
    <WL5G3N0:documentation>The getAllOperationsSystems response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllOperationsSystemsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllOperationsSystemsException">
    <WL5G3N0:documentation>The getAllOperationsSystems exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllOperationsSystemsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getOperationsSystemRequest">
    <WL5G3N0:documentation>The getOperationsSystem request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getOperationsSystemRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getOperationsSystemResponse">
    <WL5G3N0:documentation>The getOperationsSystem response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getOperationsSystemResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getOperationsSystemException">
    <WL5G3N0:documentation>The getOperationsSystem exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getOperationsSystemException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubordinateOperationsSystemRequest">
    <WL5G3N0:documentation>The getSubordinateOperationsSystem request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSubordinateOperationsSystemRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubordinateOperationsSystemResponse">
    <WL5G3N0:documentation>The getSubordinateOperationsSystem response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSubordinateOperationsSystemResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSubordinateOperationsSystemException">
    <WL5G3N0:documentation>The getSubordinateOperationsSystem exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getSubordinateOperationsSystemException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getOperationsSystemsIteratorRequest">
    <WL5G3N0:documentation>The getOperationsSystemsIterator request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getOperationsSystemsIteratorRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getOperationsSystemsIteratorResponse">
    <WL5G3N0:documentation>The getOperationsSystemsIterator response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getOperationsSystemsIteratorResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getOperationsSystemsIteratorException">
    <WL5G3N0:documentation>The getOperationsSystemsIterator exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getOperationsSystemsIteratorException" name="mtopBody"/>
  </WL5G3N0:message>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=10</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/mri/xsd/osr/v1" version="1.0" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:os="http://www.tmforum.org/mtop/nrf/xsd/os/v1" xmlns:tns="http://www.tmforum.org/mtop/mri/xsd/osr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Manage Resource Inventory</p>
      <p>Module:  Message XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP OS Retrieval SI XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=8"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/os/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=11"/>
  <!--================-->
  <xsd:element name="getAllOperationsSystemsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllOperationsSystems operation</p>
        <p>This operation returns the data structure for each OS
                    known to the top-level OS to which the operation is
                    directed. The data structure corresponding to the
                    top-level OS is also returned. This operation can
                    only be directed to a top-level OS and not to a
                    subordinate OS.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllOperationsSystemsResponse" type="tns:MultipleObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the  getAllOperationsSystemsoperation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllOperationsSystemsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllOperationsSystems operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getOperationsSystemRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getOperationsSystem operation</p>
        <p>This operation returns the data structure associated
                    with the addessed OS.       This operation may only
                    be directed to a top-level OS and not to a
                    subordinate OS.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getOperationsSystemResponse" type="tns:SingleObjectResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getOperationsSystem operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getOperationsSystemException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getOperationsSystem operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getSubordinateOperationsSystemRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getSubordinateOperationsSystem operation</p>
        <p>This operation returns the data structure associated
                    with a given subordinate OS identified by the
                    provided subordinateOSName. The operation can only
                    be directed to a top-level OS and not to a
                    subordinate OS.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="osRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of a top-level OS.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getSubordinateOperationsSystemResponse" type="tns:SingleObjectResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getSubordinateOperationsSystem operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getSubordinateOperationsSystemException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getSubordinateOperationsSystem operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--=================-->
  <!--Definitions of Iterator messages for Object and Object Name retrievals-->
  <!--=================-->
  <xsd:element name="getOperationsSystemsIteratorRequest" type="msg:GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getOperationsSystemsIterator operation</p>
        <p>This operation .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getOperationsSystemsIteratorResponse" type="tns:MultipleObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getOperationsSystemsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getOperationsSystemsIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getOperationsSystemsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <!--== Local Data Types ==-->
  <!--================-->
  <xsd:complexType name="SingleObjectResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for an OS object</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="os" type="os:OperationsSystemType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The OS object.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="MultipleObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for a set of OS objects</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="osList" type="os:OperationsSystemListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of OS objects.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=8</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=5"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=4"/>
  <!--==============-->
  <xsd:complexType abstract="false" name="BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The (abstract) base type definition of all exception messages.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="hdr:header">
        <xsd:annotation>
          <xsd:documentation>The mTOP header as it cannot be
                        part of the SOAP Header in a SOAP v1.1 Fault message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="reason" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>A string indicating further details about the
                            exception. It is a free format string filled
                            by the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The extension for specific vendor exception information.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:element name="notImplemented" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised by OS for an optional operation that is not implemented</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="internalError" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised in case of non-specific OS internal failure</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidInput" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters are invalid</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tooManyOpenIterators" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when data retrieval iterator capacity is full</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="entityNotFound" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters do not refer to an existing object</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="commLoss" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when communication to an entity (needed to
                    help fulfill the request) is lost</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedCompressionFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given data compression format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedPackingFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given file packing format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidFilterDefinition" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the filter is invalid.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="objectInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tpInvalidEndPoint" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="timeslotInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="protectionEffortNotMet" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notInValidState" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unableToComply" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="capacityExceeded" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="accessDenied" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedRoutingConstraints" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="userlabelInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidTopic" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the topic is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notificationServiceProblem" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when there is a failure with the Broker.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AllExceptionsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reference to all supported exception types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="tns:accessDenied"/>
      <xsd:element ref="tns:capacityExceeded"/>
      <xsd:element ref="tns:commLoss"/>
      <xsd:element ref="tns:entityNotFound"/>
      <xsd:element ref="tns:internalError"/>
      <xsd:element ref="tns:invalidFilterDefinition"/>
      <xsd:element ref="tns:invalidInput"/>
      <xsd:element ref="tns:invalidTopic"/>
      <xsd:element ref="tns:notificationServiceProblem"/>
      <xsd:element ref="tns:notImplemented"/>
      <xsd:element ref="tns:notInValidState"/>
      <xsd:element ref="tns:objectInUse"/>
      <xsd:element ref="tns:protectionEffortNotMet"/>
      <xsd:element ref="tns:timeslotInUse"/>
      <xsd:element ref="tns:tooManyOpenIterators"/>
      <xsd:element ref="tns:tpInvalidEndPoint"/>
      <xsd:element ref="tns:unableToComply"/>
      <xsd:element ref="tns:unsupportedCompressionFormat"/>
      <xsd:element ref="tns:unsupportedPackingFormat"/>
      <xsd:element ref="tns:unsupportedRoutingConstraints"/>
      <xsd:element ref="tns:userlabelInUse"/>
    </xsd:choice>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Profile of exception types supported by all mTOP
                    iterator operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="tns:AllExceptionsType">
        <xsd:choice>
          <xsd:element ref="tns:commLoss"/>
          <xsd:element ref="tns:internalError"/>
          <xsd:element ref="tns:invalidInput"/>
          <xsd:element ref="tns:notImplemented"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Generic request message structure for all data
                    iterator operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=5</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML header.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=4"/>
  <!--==============-->
  <xsd:simpleType name="ActivityStatusEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies the high-level response status for an
                    activity.  Required for response messages, including
                    error responses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="WARNING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="ActivityStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Add to the initial enumerations the Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ActivityStatusEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="MessageTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type of the message that is being exchanged as
                    part of an activity.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REQUEST"/>
      <xsd:enumeration value="RESPONSE"/>
      <xsd:enumeration value="NOTIFICATION"/>
      <xsd:enumeration value="ERROR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationPatternType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Styles supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SimpleResponse"/>
      <xsd:enumeration value="MultipleBatchResponse"/>
      <xsd:enumeration value="BulkResponse"/>
      <xsd:enumeration value="Notification"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationStyleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Style supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MSG"/>
      <xsd:enumeration value="RPC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="CompressionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if compression is to be performed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:CompressionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CompressionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported compressions. All extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_COMPRESSION"/>
      <xsd:enumeration value="GZIP"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PackingTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if the output file(s) are to be packed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:PackingEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PackingEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported packing/packaging. All
                    extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PACKING"/>
      <xsd:enumeration value="ZIP"/>
      <xsd:enumeration value="TAR"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="header">
    <xsd:annotation>
      <xsd:documentation>
        <p>MTOSI Standard Header.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="activityName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the business
                                transaction activity for the message
                                being exchanged.       The value is
                                usually the name of the mTOP operation,
                                e.g. getInventory.       This value
                                corresponds to the “operation” in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the message (or
                                contract) that is being exchanged as
                                part of an activity. E.g.
                                getInventoryResponse. This field
                                corresponds to the message name in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgType" type="tns:MessageTypeType"/>
        <xsd:element minOccurs="0" name="senderURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application sending this message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="destinationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the final destination of the
                                message (the OS that will process the
                                content of the message). This field may
                                point to a logical end point or abstract
                                topic name to be resolved by the
                                communication transport middleware in
                                order to deliver the message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="replyToURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used by request messages to specify
                                destination for response message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="originatorURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the originating application of
                                the message that resulted in this
                                response or notification message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="failureReplytoURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application receiving the
                                potential error notification message.
                                Required for all response messages and
                                notifications which are triggered by
                                request/response. If not specified the
                                replyToURI is used. If the replyToURI is
                                also not specified, senderURI endpoint
                                is used to send back the failure response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="activityStatus" type="tns:ActivityStatusType"/>
        <xsd:element minOccurs="0" name="correlationId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>An identifier that could be set by the
                                originator of an asynchronous request
                                that will allow it to correlate the
                                response to the request.  If this field
                                is set, it should be reflected in the
                                header of the response message.  Not
                                required for notification headers.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="security" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Provides credential nformation for use by
                                a security service for identification,
                                authentication, or authorization.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="securityType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the type of credential
                                contained in the security element.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="priority">
          <xsd:annotation>
            <xsd:documentation>
              <p>Indicates message-handling priority for
                                asynchronous messages.  It must be in
                                the range 0-9 (lowest-highest). Default: 4</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string"/>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgSpecificProperties">
          <xsd:annotation>
            <xsd:documentation>
              <p>Conditionally required for request,
                                response, and notification messages as
                                identified by the documentation for a
                                specific interface message.  The
                                communications infrastructure or the
                                receiving application can use this value
                                for routing or filtering messages.</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" minOccurs="0" name="property">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="propName" type="xsd:string"/>
                    <xsd:element name="propValue" type="xsd:string"/>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="communicationPattern" type="tns:CommunicationPatternType"/>
        <xsd:element minOccurs="0" name="communicationStyle" type="tns:CommunicationStyleType"/>
        <xsd:element minOccurs="0" name="requestedBatchSize" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>The RequestedBatchSize parameter provides
                                the control for the batch segmentation
                                of the full set of output data generated
                                by a coarse-grained operation such as
                                getInventory or getActiveAlarms. The
                                unit is any of the MTOSI objects. And,
                                it defines the maximum number of MTOSI
                                objects that can be included in all the
                                batches of data sent as part of a
                                multiple responses MEP.</p>
              <p>However, they are cases where a batch may
                                exceed the number of objects defined in
                                the RequestedBatchSize parameter. This
                                is true if the granularity of a response
                                atomic data representation is greater
                                than just one object. This is true for
                                the getInventory response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceNumber" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm. Pattern
                                to identify the batch seq number in a sequence.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceEndOfReply" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm.
                                Pattern, true if it is the last result
                                batch in a sequence</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="iteratorReferenceURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Mandatory for all SIT (iterators) MEP to
                                allow description of the data retrieval iterator.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="fileLocationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used for file retrieval. Specify the base
                                name of the file(s) to be generated and
                                the remote destination.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="compressionType" type="tns:CompressionTypeType"/>
        <xsd:element minOccurs="0" name="packingType" type="tns:PackingTypeType"/>
        <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>Message originating timestamp</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Location for all vendor extensions to the
                                MTOSI standard header.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=4</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of generic mTOP simple data types.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="NameAndStringValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvsList" type="tns:NameAndValueStringListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndValueStringListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndStringValue</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nvs" type="tns:NameAndStringValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:any minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvList" type="tns:NameAndAnyValueListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndAnyValueType</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nv" type="tns:NameAndAnyValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AliasNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    contains the list of aliases for the network entity.
                    The attribute is a name-value list. The name refers
                    to the type of alias (e.g., nativeEMSname) and the
                    value component holds the alias itself</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alias">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="aliasName" type="xsd:string"/>
            <xsd:element name="aliasValue" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AnyListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A generic list of any type of elements. Used for
                    vendor Extensions or loose element encapsulation
                    from other namespaces.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="DiscoveredNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the name of the object when
                    its existence is first published on the CCV but only
                    in the case where the OS that publishes the object
                    on the CCV is not the naming OS. If the naming OS
                    first publishes the object on the CCV, this
                    attribute may be left empty.</p>
        <p>The discovered name is assumed to be unique from the
                    perspective of the publishing OS.</p>
        <p>The discovered name published on the CCV does not
                    necessarily need to be the name of the object as
                    discovered by the OS from the subtending network.</p>
        <p>There are no specific rules concerning the
                    relationship between the "name" and
                    "discovered name" of the object. They
                    could be set to the same value or they could be different.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ManufactureDateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type identifies the production date of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="MultiEventInventoryAttributesType">
    <xsd:annotation>
      <xsd:documentation>This attribute is used when a object
                instance is embedded in the inventory    layout payload
                of a Multi-Event Inventory (MEI) notification.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="neTime" nillable="true" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the time at which the NE detected the
                            inventory change (if available)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventIndication" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is an indication of the type of
                            inventory update.</p>
            <p>Possible values are Object Creation (OC),
                            Object Discovery (ODsc), Object Deletion
                            (OD),        Attribute Value Change (AVC),
                            State Change (SC) and AVC_SC_and_Childern.
                            Only the acronym (e.g., OC)        is used
                            in the actual attribute value. The following
                            conventions apply:</p>
            <p>If an object creation or object discovery
                            indicator is applied to a parent object,
                            it implicitly applies to all the children,
                            i.e., the OS sending the notification only
                            needs       to set the indicator attribute
                            in the parent object.</p>
            <p>If an object deletion is applied to a parent
                            object, it is assumed that all the children
                            are also deleted. The childern should not be listed.</p>
            <p>The AVC_SC_and_Childern indication may be
                            applied to a parent object to imply that
                            there       may be AVC or SC changes to the
                            parent and some or all of the children.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="NetworkAccessDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A free-format string used to associate a resource to
                    a Network Access Domain.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="NotificationIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the notification ID.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="NotificationIdentifierListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of notification IDs  (free string). Also,  the
                    value found in notificationId field of the event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="notificationId" type="tns:NotificationIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of all the object types. It is
                    left as a string for maximum compatibility with
                    future supported object types.</p>
        <p>Refer to the SD2-7 ObjectNaming for the list of all
                    supported values.</p>
        <p>Otherwise, one can also refer to the
                    ObjectEnumTypedefined in CommonResourceInfo (see NRB
                    DDP), which is provided as XML Schema enumerations
                    solely as a helper (not used in any messaging validation).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enumeration of all the supported query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI">
      <xsd:enumeration value="ANSI-92"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath20/"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The loose definition of all the supported query
                    dialect types.</p>
        <p>Refer to QueryDialectEnumType definition to the
                    enumeration of recommended query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The generic schema datatype definition for the query
                    expression used in most filters.</p>
        <p>This definition is borrowed from WS-Notification v1.3.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="tns:QueryDialectTypeType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          <p>The dialect of the given query expression</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=9</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML naming structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=4"/>
  <!--=================-->
  <xsd:complexType name="RelativeDistinguishNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of relative distinguish
                    name (RDN) data structure used in all object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="type" type="gen:ObjectTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN object type acronym.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of the MTOSI object name
                    data structure as a sequence of RDNs, which
                    represents a unique identifier for the MTOSI object
                    on the CCV. Once set by the naming OS, the name is
                    invariant for the life of the object and should be
                    used when referring to the object over the CCV. Name
                    attribute of an object instance shall always be
                    assigned a value, unless the object instance is
                    first discovered by an OS that is not the naming OS
                    for the object instance. In such a case, the
                    discovering OS shall provide a value for the
                    Discovered Name attribute of the object. The naming
                    OS shall provide a value for the Name attribute of
                    the object once it becomes aware of the new object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="rdn" type="tns:RelativeDistinguishNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition for the list of MTOSI object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="name" nillable="true" type="tns:NamingAttributeType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=11</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/os/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/os/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP OS XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=6"/>
  <!--=================-->
  <xsd:element name="os" type="tns:OperationsSystemType"/>
  <!--=================-->
  <xsd:complexType name="OperationsSystemType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Operations System mTOP
                    network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="softwareVersion" nillable="true" type="com:SoftwareVersionType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The OS product software version.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="productName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>The product/type name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="manufacturer" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>The resource manufacturer name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="resourceFulfillmentState" nillable="true" type="com:ResourceFulfillmentStateEnumType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute indicates the OS
                                    administration state.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isSubordinateOs" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute when true specifies
                                    that this OS is a subordinate OS
                                    such as an EMS (is not a top level OS).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this OS object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="OperationsSystemListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of OperationsSystems</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:os"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" version="1.0" xmlns:coi="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:itu="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP XML CommonResourceInfo structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=7"/>
  <!--=================-->
  <xsd:element name="commonResourceInfo" substitutionGroup="coi:commonObjectInfo" type="tns:CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition for common resource info</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines attributes common to all mTOP
                    resource objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="coi:CommonObjectInfoType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="source" nillable="true" type="tns:SourceType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the object was
                                    discovered or entered in OS inventory.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="networkAccessDomain" nillable="true" type="gen:NetworkAccessDomainType"/>
          <xsd:element minOccurs="0" name="meiAttributes" nillable="true" type="gen:MultiEventInventoryAttributesType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is used when a object
                                    instance is embedded in the
                                    inventory      layout payload of a
                                    Multi-Event Inventory (MEI)
                                    notification. It provides the
                                    time at which the NE detected the
                                    inventory change (if available) and
                                    an indication      of the type of
                                    inventory update, e.g., Object Creation.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="resourceState" nillable="true" type="tns:ResourceStateType"/>
          <xsd:element name="ituStateAndStatusList" type="itu:ItuStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates whether the object was discovered from the
                    network, or was entered into the OS's inventory.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:SourceEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SourceEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NETWORK_ME">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered directly from the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was entered into an OS on the CCV,
                            e.g., OS GUI or file transfer to the OS from
                            some other system.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NETWORK_EMS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered from an EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates the state of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceStateEnumType">
        <xsd:attribute name="overlap" type="xsd:string" use="optional"/>
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ResourceStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="INSTALLING"/>
      <xsd:enumeration value="INSTALLING_ACCEPTED"/>
      <xsd:enumeration value="INSTALLING_COMMISSIONED"/>
      <xsd:enumeration value="INSTALLING_DELIVERED"/>
      <xsd:enumeration value="INSTALLING_INSTALLED"/>
      <xsd:enumeration value="INSTALLING_INTEGRATED"/>
      <xsd:enumeration value="INSTALLING_REJECTED"/>
      <xsd:enumeration value="NON_WORKING"/>
      <xsd:enumeration value="PLANNING"/>
      <xsd:enumeration value="PLANNING_INITIAL_PLAN"/>
      <xsd:enumeration value="PLANNING_ORDERED"/>
      <xsd:enumeration value="PLANNING_PLANNED"/>
      <xsd:enumeration value="RETIRING"/>
      <xsd:enumeration value="RETIRING_DECOMMISSIONED"/>
      <xsd:enumeration value="RETIRING_DEINSTALLED"/>
      <xsd:enumeration value="RETIRING_DEINTEGRATED"/>
      <xsd:enumeration value="RETIRING_RECOVERED"/>
      <xsd:enumeration value="RETIRING_STORED"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_ACTIVE"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_UNAVAILABLE"/>
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="WORKING"/>
      <xsd:enumeration value="WORKING_ACTIVATED"/>
      <xsd:enumeration value="WORKING_DEACTIVATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ObjectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the enumeration of all the known object type
                    short names related to resources (at the time of
                    this module definition). It is only provided as an
                    implementation helper. For details of all object
                    types and their naming refer to SD2-7 ObjectNaming
                    (FMW DDP).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AID">
        <xsd:annotation>
          <xsd:documentation>Alarm IDentifier (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASA">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASAP">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment Profile (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CTP">
        <xsd:annotation>
          <xsd:documentation>Connection Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EH">
        <xsd:annotation>
          <xsd:documentation>Equipment Holder (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EPG">
        <xsd:annotation>
          <xsd:documentation>Equipment Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EQ">
        <xsd:annotation>
          <xsd:documentation>Equipment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FD">
        <xsd:annotation>
          <xsd:documentation>Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FDFR">
        <xsd:annotation>
          <xsd:documentation>Flow Domain Fragment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FTP">
        <xsd:annotation>
          <xsd:documentation>Flow Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GTP">
        <xsd:annotation>
          <xsd:documentation>Group Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MD">
        <xsd:annotation>
          <xsd:documentation>Management Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ME">
        <xsd:annotation>
          <xsd:documentation>Managed Element (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MFD">
        <xsd:annotation>
          <xsd:documentation>Matrix Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MLSN">
        <xsd:annotation>
          <xsd:documentation>Multi Layer Subnetwork (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>Operations System (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PG">
        <xsd:annotation>
          <xsd:documentation>Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PMP">
        <xsd:annotation>
          <xsd:documentation>Performance Monitoring Point (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PTP">
        <xsd:annotation>
          <xsd:documentation>Physical Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SNC">
        <xsd:annotation>
          <xsd:documentation>Subnetwork Connection (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCPROFILE">
        <xsd:annotation>
          <xsd:documentation>Traffic Condifitioning Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCAPP">
        <xsd:annotation>
          <xsd:documentation>Threshold Crossing Alert
                        Parameter Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TL">
        <xsd:annotation>
          <xsd:documentation>Topological Link (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TMD">
        <xsd:annotation>
          <xsd:documentation>Transmission Descriptor (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TPPOOL">
        <xsd:annotation>
          <xsd:documentation>Termination Point Pool (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common object information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=4"/>
  <!--==============-->
  <xsd:element name="commonObjectInfo" type="tns:CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute represents a unique
                            name/identifier for the object on the CCV.
                            Consult the SD2-7 about object naming for
                            additional normative references.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="userLabel" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="discoveredName" type="gen:DiscoveredNameType"/>
      <xsd:element minOccurs="0" name="namingOs" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the object attribute definition to
                            identify the name of the OS that provided
                            the unique MTOSI name for the object. It is
                            assumed that each object (that is published
                            on the CCV) has a unique naming OS. This
                            attribute is optional in a point to point
                            NMS-EMS paradigm.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="owner" nillable="true" type="gen:OwnerType"/>
      <xsd:element minOccurs="0" name="aliasNameList" nillable="true" type="gen:AliasNameListType"/>
      <xsd:element minOccurs="0" name="vendorExtensions" nillable="true" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=7</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T state or status
                parameters supported in mTOP</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="x721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="x721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="x721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="x721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="x721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="m3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="m3100.CircuitPackType" type="tns:M3100.CircuitPackTypeType"/>
      <xsd:element minOccurs="0" name="x721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:element minOccurs="0" name="x721.State" type="tns:X721.StateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="X721.OperationalStateType">
    <xsd:annotation>
      <xsd:documentation>Oper[ational] State parameter from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DISABLED"/>
      <xsd:enumeration value="UNABLED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AdministrativeStateType">
    <xsd:annotation>
      <xsd:documentation>Admin[istrative] State parameter from
                ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="LOCKED"/>
      <xsd:enumeration value="UNLOCKED"/>
      <xsd:enumeration value="SHUTTING_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UsageStateType">
    <xsd:annotation>
      <xsd:documentation>Usage State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IDLE"/>
      <xsd:enumeration value="ACTIVE"/>
      <xsd:enumeration value="BUSY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AvailabilityStatusType">
    <xsd:annotation>
      <xsd:documentation>Avail[ability] Status based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="INTypeEST"/>
      <xsd:enumeration value="FAILED"/>
      <xsd:enumeration value="POWER_OFF"/>
      <xsd:enumeration value="OFF_LINE"/>
      <xsd:enumeration value="OFF_DUTY"/>
      <xsd:enumeration value="DEPENDENCY"/>
      <xsd:enumeration value="DEGRADED"/>
      <xsd:enumeration value="NOT_INSTALLED"/>
      <xsd:enumeration value="LOG_FULL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.ControlStatusType">
    <xsd:annotation>
      <xsd:documentation>Control Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="SUBJECTTypeOTypeEST"/>
      <xsd:enumeration value="PART_OF_SERVICES_LOCKED"/>
      <xsd:enumeration value="RESERVED_FORTypeEST"/>
      <xsd:enumeration value="SUSPENDED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.HolderStatusType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HOLDER_EMPTY"/>
      <xsd:enumeration value="INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="NOT_INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="UNKNOWNTypeYPE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.CircuitPackTypeType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UnkownstatusType">
    <xsd:annotation>
      <xsd:documentation>Unknown Status parameter based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="X721.StateType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="X721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="X721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="X721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="X721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="X721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="M3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="X721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=3</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common
                type definitions used in some the mTOP XML Resource objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:simpleType name="CommunicationStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This state reflects a communication state between the
                    EMS and its ManagedElement.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CS_AVAILABLE"/>
      <xsd:enumeration value="CS_UNAVAILABLE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="ConnectionDirectionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction of a subnetwork connection, cross-connects,
                    or topological link. For a detailed description of
                    the use of this attribute see SNC Types supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CD_UNI">
        <xsd:annotation>
          <xsd:documentation>
            <p>UNIdirectional, i.e. source TP to sink TP.
                            Note: creation of unidirectional connections
                            is supported even when CTPs/FTPs are
                            modelled as bidirectional.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CD_BI">
        <xsd:annotation>
          <xsd:documentation>
            <p>BIdirectional, i.e. bidirectional TP to
                            bidirectional TP, a.k.a. two-way.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ConnectionlessPortTerminationPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This parameter shall identify the role in the flow
                    domain of         the requested CPTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CPTPR_FD_EDGE">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Edge CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_FD_INTERNAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Internal CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_ALL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return all CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="DirectionalityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction for a TerminationPoint:</p>
        <p>The directionality of PTPs is defined from an
                    external point of view, while the directionality of
                    CTPs is defined from an internal point of view.
                    Consequently, sink PTPs generate source CTPs, and
                    sink CTPs form source PTPs. Refer to SNC Types and
                    to layers for further information on termination
                    point and connection directionality.</p>
        <p>Note that ATM termination points (LR_ATM_NI,
                    LR_ATM_VP and LR_ATM_VC) are always bi-directional
                    even though the traffic may be asymmetric (and
                    eventually null in one of the two directions).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="D_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>Used when the directionality specification is
                            not necessary.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_BIDIRECTIONAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>source and sink (transmit and receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SOURCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>source (transmit).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SINK">
        <xsd:annotation>
          <xsd:documentation>
            <p>sink (receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="FlowDomainFragmentTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          This (read-only) attribute provides an indication of
                    the type of the matrix flow domain fragment. It may
                    have one of the following values:
          <ul>
            <li>"FDFRT_POINT_TO_POINT": the FDFr
                            is between exactly two points</li>
            <li>"FDFRT_POINT_TO_MULTIPOINT": (E-tree)</li>
            <li>"FDFRT_MULTIPOINT": the FDFr is
                            between at least two points</li>
          </ul>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="GradesOfImpactType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Grades of maximum tolerable disruption to traffic as
                    a result of the operation that this parameter is describing.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="GOI_HITLESS"/>
      <xsd:enumeration value="GOI_MINOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Less or equal to 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GOI_MAJOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Greater than 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="HolderStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Holder State Type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMPTY">
        <xsd:annotation>
          <xsd:documentation>
            <p>no equipment is installed and no expected
                            equipment has been identified</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected and currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EXPECTED_AND_NOT_INSTALLED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected but not currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_NOT_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>physically inserted in the ME but not expected</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MISMATCH_OF_INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>there is an inconsistency between the
                            expected equipment and the installed equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNAVAILABLE">
        <xsd:annotation>
          <xsd:documentation>
            <p>this holder cannot accept the installation or
                            provisioning of equipment (this is typically
                            caused by a double width card installed next
                            to this slot)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>
            <p>the OS does not know the state of the equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentHolderTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The EquipmentHolder with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentHolderEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentHolderEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Equipment holder type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="rack"/>
      <xsd:enumeration value="shelf"/>
      <xsd:enumeration value="sub_shelf"/>
      <xsd:enumeration value="slot"/>
      <xsd:enumeration value="sub_slot"/>
      <xsd:enumeration value="remote_unit"/>
      <xsd:enumeration value="remote_slots"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="EquipmentObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Type of equipment object in equipment holder. Values
                    are vendor-specific.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledPartNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the resource part number (PN) of the
                    installed equipment. If not available (or there is
                    no installed equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledSerialNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the serial number of the installed equipment.
                    If not available (or there is no installed
                    equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Firmware version of the installed equipment. If not
                    available (or there is no installed equipment), an
                    empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRoutedType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Network routed, indicates if the route must be or is
                    computed and implemented at the network level.
                    NR_YES indicates that the route must be / is
                    computed at the network. NR_NO indicates that the
                    route must not be / is not computed at the network.
                    NR_NA indicates that the route can be computed anywhere.</p>
        <p>If rerouting is allowed, this attribute will indicate
                    who last rerouted the SNC, the network (NR_YES) or
                    the EMS (NR_NO).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NR_NA"/>
      <xsd:enumeration value="NR_NO"/>
      <xsd:enumeration value="NR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Indicates if the reroute of an SNC (if allowed)
                    should be computed by the network, by the EMS, or if
                    it does not matter.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_SET"/>
      <xsd:enumeration value="NO"/>
      <xsd:enumeration value="YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="FreedomLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the NMS-specified EMS level of freedom when
                    performing SNC operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMSFL_CC_AT_SNC_LAYER"/>
      <xsd:enumeration value="EMSFL_TERMINATE_AND_MAP"/>
      <xsd:enumeration value="EMSFL_HIGHER_ORDER_SNCS"/>
      <xsd:enumeration value="EMSFL_RECONFIGURATION"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ModifyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute specifies the class of SNC
                    modification; i.e. rerouting or add/remove protection.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ADD_REMOVE_PROTECTION"/>
      <xsd:enumeration value="REROUTING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="PotentialFutureSetupIndicatorType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Refers to the aEnd and is used to convey the likely
                    future (or current) configuration of the SNC (see SD1-16_layeredParameters.pdf).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RSU_POINT_TO_POINT"/>
      <xsd:enumeration value="RSU_BROADCAST"/>
      <xsd:enumeration value="RSU_ANY_CONFIG"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProtectionEffortType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection effort is a statement of the
                    requirement of the static protection level. For
                    example if EFFORT_SAME_OR_WORSE is specified for a
                    3-ended FULLY_PROTECTED connection, a 3-ended
                    PARTIALLY_PROTECTED connection is acceptable, but a
                    2-ended connection (ST_SIMPLE) is not acceptable
                    i.e. ProtectionEffort does not have any bearing on
                    the externaly visible shape of the SNC.
                    EFFORT_WHATEVER indicates that the specified static
                    protection level is preferred, but that any other
                    level is acceptable.</p>
        <p>For a detailed description of the use of this
                    attribute see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EFFORT_WHATEVER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_BETTER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_WORSE"/>
      <xsd:enumeration value="EFFORT_SAME "/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionRole with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionRoleEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionRoleEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Protection role type.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="NA"/>
      <xsd:enumeration value="PRIMARY"/>
      <xsd:enumeration value="BACKUP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="RerouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The RerouteType type indicates if the EMS/MEs are
                    allowed and/or required to reroute this SNC if there
                    is a failure on this SNC, periodically to optimize
                    the routes, of for any other reason.It is an EMS/ME
                    implementation whether this is done using network
                    routing protocols or if the EMS/MEs detect the
                    failure and take appropriate action to attempt to
                    fix the SNC.</p>
        T
        <p>he RR_NO value means
                    that the EMS/MEs are not allowed to reroute the SNC.
                    The RR_YES value means that the EMS/MEs are allowed
                    to reroute the SNC and required to attempt to
                    reroute it upon failure. The RR_NA value is used
                    when the NMS does not want to specify the exact EMS
                    behaviour. In this case it is left up to the EMS to
                    decide whether rerouting will be provided. It is
                    also used if the EMS/MEs are allowed to reroute the
                    SNC but not required to attempt to reroute it upon failure.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RR_NA"/>
      <xsd:enumeration value="RR_NO"/>
      <xsd:enumeration value="RR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ResourceFulfillmentStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IN_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been put into operation and is
                            operating as provisioned (completely or partially).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity is entirely not capable of
                            performing its provisioned functions and is
                            not restricted by administrative actions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE_BY_MAINTENANCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been taken intentionally out
                            of service by a management action.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SERV_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>The service state is not applicable.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceFulfillmentStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This object attribute indicates basic administration
                    state of equipment and OS objects.       Also, this
                    object attribute accepts Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceFulfillmentStateEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNCState enum is used to represent the various
                    states that an SNC may take.</p>
        <p>The following states may be supported by the EMS,
                    depending on the SNC management mode of operation
                    used by the EMS. See SNC Management Modes Of
                    Operation for details.</p>
        <p>SNCS_PENDING: the SNC has been created by an NMS and
                    has not been activated by any NMS; or the SNC has
                    been successfully deactivated by an NMS. That state
                    has no relationship with the network state of the
                    cross- connects of the SNC. It is allowable for an
                    EMS to not support the SNCS_PENDING state and to
                    reject any operation that attempts to put an SNC
                    into SNCS_PENDING state.</p>
        <p>SNCS_ACTIVE: the SNC is not in pending state, a route
                    has been assigned to the SNC and all cross-connects
                    for the SNC are active in the network.</p>
        <p>SNCS_PARTIAL: the SNC is not in pending state, and
                    either a route has not been assigned to the SNC, or
                    not all of the cross-connects of the SNC are active
                    in the network. This may or may not include
                    activated SNCs for which there are currently no
                    active cross- connects in the network, depending on
                    the SNC management mode of operation.It is possible
                    that, in some EMSes, this state be unreachable.</p>
        <p>SNCS_NONEXISTENT: this is not an SNC state per se, as
                    it applies to "non-existent SNCs". It is
                    used in the interface to report SNCs that have been
                    deleted.</p>
        <p>See SNCState state diagram for details on valid transitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SNCS_NONEXISTENT"/>
      <xsd:enumeration value="SNCS_PENDING"/>
      <xsd:enumeration value="SNCS_ACTIVE"/>
      <xsd:enumeration value="SNCS_PARTIAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNC Type describes the connection based on the
                    signal flows.  For a detailed description of the use
                    of this attribute see SNC Types. In case of an ATM
                    SNC (VP or VC), ST_SIMPLE is used to specify a
                    'plain' (hard or regular) PVC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ST_SIMPLE"/>
      <xsd:enumeration value="ST_ADD_DROP_A"/>
      <xsd:enumeration value="ST_ADD_DROP_Z"/>
      <xsd:enumeration value="ST_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_ADD_DROP"/>
      <xsd:enumeration value="ST_OPEN_ADD_DROP"/>
      <xsd:enumeration value="ST_EXPLICIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SoftwareVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The OS product software version</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="StaticProtectionLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The StaticProtectionLevel with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:StaticProtectionLevelEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="StaticProtectionLevelEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The static protection level is a statement of the
                    internal resiliency of the SNC (internal to the
                    subnetwork). The more resilient an SNC is, the more
                    bandwidth it will consume.</p>
        <p>The protection level does not have any bearing on the
                    externally visible shape and traffic flows of the
                    SNC (in non-failure cases). For a detailed
                    description of the use of this attribute, see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="PREEMPTIBLE"/>
      <xsd:enumeration value="UNPROTECTED"/>
      <xsd:enumeration value="PARTIALLY_PROTECTED"/>
      <xsd:enumeration value="FULLY_PROTECTED"/>
      <xsd:enumeration value="HIGHLY_PROTECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationModeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Within the facade definition, the CTP/FTP can act as
                    an aggregate of associated G.805 TCPs, G.805
                    Termination Functions and G.805 CPs at one or more
                    LayerRates. The CTP is contained within a PTP or FTP.</p>
        <p>The TerminationMode attribute indicates and controls
                    the connection of the named CP at a specified
                    LayerRate to the dedicated G.805 TCP and associated
                    G.805 Termination Function at the same LayerRate
                    within the CTP/FTP.</p>
        <p>The TerminationMode is used, for example, to control
                    the Termination and mapping to VT1.5 of an STS1
                    Trail within an OC3 port. This capability could
                    potentially be used to terminate an STS1 backbone
                    Trail within a lower order mux that has the
                    capability to alternatively cross-connect the STS1
                    unterminated. The same capability is used in SDH and
                    is potentially applicable to any LayerRate.</p>
        <p>TerminationMode has the following values</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TM_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can not be mapped (i.e., it has
                            no contained potential CTPs). This indicates
                            that an SNC/crossconnect can be used to
                            connect the G.805 TCP of the CTP to the
                            connection point of another CTP/FTP. This
                            only applies to CTPs that connect on their
                            server side and are related to the
                            containing PTP/FTP on their client side.</p>
            <p>FTP: The FTP can not be mapped on the server
                            side (i.e., it has no contained potential
                            CTPs on the server side). This indicates
                            that an SNC/crossconnect can be used to
                            connect the G.805 TCP of the FTP to the
                            connection point of another CTP/FTP. This
                            only applies to FTPs that connect on their
                            server side and do not support IM (Inverse
                            Multiplexing).</p>
            <p>PTP: This is the only legal value for a PTP</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_NEITHER_TERMINATED_NOR_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped and currently is
                            (i.e., it has contained actual CTPs). This
                            indicates that the G.805 CPs adapted from
                            the corresponding G.805 Termination Function
                            within the CTP aggregate are available to
                            provide client layer capacity (e.g. STS1
                            terminated and mapped to VT1.5 i.e.
                            channelized). In this state the TCP will be
                            sourcing and sinking traffic. This is only a
                            valid value for CTPs that support client
                            adaptation.</p>
            <p>FTP: The FTP can be mapped on the server side
                            and currently is (i.e., it has contained
                            actual CTPs on the server side). This
                            indicates that the FTP supports IM (Inverse
                            Multiplexing) and the server side contained
                            CTPs (if any) are available for connection
                            as the FTP is actively assembling the
                            fragments of the IM. This value is not valid
                            for an FTP that does not support IM. (see
                            layering for more details).</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped but currently is
                            not (i.e., it does have contained potential
                            CTPs, but currently has no contained actual
                            CTPs). This indicates that the G.805 CP
                            aggregated in the CTP is not connected to a
                            TCP (that would be aggregated in the same
                            CTP) and therefore the CTP is available for
                            SNC/crossconnect connectivity (e.g. STS1 not
                            terminated and not mapped to VT1.5i.e. not
                            channelized).</p>
            <p>FTP: The FTP can be mapped on the server side
                            but currently is not (i.e., it does have
                            contained potential CTPs on the server side,
                            but currently has no contained actual CTPs
                            on the server side). This indicates that the
                            FTP supports IM (Inverse Multiplexing) but
                            the IM function is not active and the TCP
                            within the FTP is available for external
                            SNC/crossconnect connectivity.</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TransmissionDescriptorStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Contains the state of consistency between a TP and
                    its associated TransmissionDescriptor.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TMD_MISSING"/>
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="APPLIED"/>
      <xsd:enumeration value="MISMATCH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="TopologyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The Topology with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:TopologyEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="TopologyEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>TopologyType is used to describe the subnetwork
                    configuration. The EMS shall be capable of providing
                    a SubNetwork Connection through any physical
                    termination point of any managed element that
                    belongs to the Subnetwork.</p>
        <p>Composite subnetworks (i.e. containing other
                    Subnetworks) are not supported in this release of
                    the interface</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="TOPO_SINGLETON">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SINGLETON, which is used for a single NE
                            (of any type) that is managed independently
                            of its Topological Link connectivity to
                            other NEs. It may for example be a member of
                            a ring that is managed by a number of EMSes.
                            It is acceptable for an EMS to represent all
                            NEs as being in Singleton subnetworks
                            regardless of the actual network
                            configuration. A singleton subnetwork does
                            not contain internal topological links.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_CHAIN">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_CHAIN, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a chain.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_PSR, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a ring that is capable of
                            supporting subnetwork connection protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_PSR, which is used to cover the
                            case where two or more NEs of a PS ring (but
                            not the entire ring) are managed by the same EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SPRING, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a complete ring that supports
                            Shared Line Protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_SPRING, which is used to cover
                            cases where two or more NEs of an SP ring
                            (but not the entire ring) are managed by one EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_MESH">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_MESH, which is used to cover an
                            arbitrary set of two or more NEs not covered
                            by any other type.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A CTP/FTP may be involved in zero, one, or many
                    connections. The value TPConnectionState indicates
                    the degree to which a CTP/FTP is used. The values
                    TPCS_SOURCE_CONNECTED and TPCS_SINK_CONNECTED
                    reflect the presence of a one way connection. The
                    value TPCS_BI_CONNECTED means that the TP is both
                    sink and source connected.</p>
        <p>If an EMS cannot report whether the source of the TP
                    is connected or the sink is connected,
                    TPCS_BI_CONNECTED may be reported by that EMS.</p>
        <p>The value TPCS_NA is used for PTPs and TPPools.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPCS_NA"/>
      <xsd:enumeration value="TPCS_SOURCE_CONNECTED"/>
      <xsd:enumeration value="TPCS_SINK_CONNECTED"/>
      <xsd:enumeration value="TPCS_BI_CONNECTED"/>
      <xsd:enumeration value="TPCS_NOT_CONNECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointProtectionAssociationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>tpProtectionAssociation expresses constraints on
                    PTPs/CTPs/FTPs for PSR connection management.</p>
        <p>In a multi-layer subnetwork, say 'a', 'b', 'c' are
                    edge points. Suppose, for example, a three-ended
                    connection is sought from 'a' to 'b', where 'b' is
                    one of the endpoints. If 'c' is the constrained
                    choice for 'b' as the other end of the three- ended
                    connection,then 'b' and 'c' are said to be
                    associated by a ] protectionAssociation. The
                    tpProtectionAssociation is set to TPPA_PSR_RELATED
                    in 'b' and 'c', and getAssociatedTP(b) returns c and
                    getAssociatedTP(c) returns b.</p>
        <p>In all other cases, tpProtectionAssociation is set to TPPA_NA.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPPA_NA"/>
      <xsd:enumeration value="TPPA_PSR_RELATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:simpleType name="TerminationPointRole">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the enumeration of all possible end point
                    roles of a TP of an SNC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CM_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a connection matrix (CM) end point the
                            span of the SNC starts at a G.805 CP with a
                            fixed or flexible connection through the ME
                            at the SNC layer, i.e. the connectable layer
                            of the end point.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="LC_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a link connection (LC) end point
                            connectivity is adapted from a server layer
                            and the span of the SNC starts with a G.805
                            TCP with mapping mode set to TM_TERMINATED_ AND_AVAILABLE_FOR_MAPPING.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of EndPointRoles.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="role" type="tns:EndPointRoleType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type indicates the end point role of an end
                    TP. See R_TMF518_NRF_I_0026.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="role" type="tns:TerminationPointRole">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the role of the end
                            TP specified by the tpIndex.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tpIndex" type="xsd:unsignedInt">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the index of the end
                            TP within the end list.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="VersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The active software version of the ManagedElement</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval/OperationsSystemRetrievalHttp?xsd=6</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported Alarm ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuArcStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T Alarm Reporting
                Control (ARC) state or status parameters supported in
                mTOP;    Each element of the list identifies a state or
                status and provides its relevant value.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="m3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="m3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="m3100.NALMTIInterval" type="tns:M3100.NALMTIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.NALMQIInterval" type="tns:M3100.NALMQIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
      <xsd:element minOccurs="0" name="m3100.State" type="tns:M3100.ArcStateListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="M3100.AlarmStatusType">
    <xsd:annotation>
      <xsd:documentation>Alarm Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CLEARED"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="CRITICAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcStateType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ALM"/>
      <xsd:enumeration value="NALM"/>
      <xsd:enumeration value="NALMTypeIMED_INHIBIT"/>
      <xsd:enumeration value="NALM_QUALIFIED_INHIBIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMTIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMQIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcQIStatusType">
    <xsd:annotation>
      <xsd:documentation>ARC QI Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="NALM_NOT_READY"/>
      <xsd:enumeration value="NALM_COUNT_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="M3100.ArcStateListType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="M3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="M3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="M3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</con:endpoint></con:endpoints><con:operation isOneWay="false" action="getAllOperationsSystems" name="getAllOperationsSystems" bindingOperationName="getAllOperationsSystems" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/osr/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllOperationsSystemsRequest>?</v11:getAllOperationsSystemsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllOperationsSystems"/></con:call></con:operation><con:operation isOneWay="false" action="getOperationsSystem" name="getOperationsSystem" bindingOperationName="getOperationsSystem" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/osr/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getOperationsSystemRequest>?</v11:getOperationsSystemRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getOperationsSystem"/></con:call></con:operation><con:operation isOneWay="false" action="getOperationsSystemsIterator" name="getOperationsSystemsIterator" bindingOperationName="getOperationsSystemsIterator" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/osr/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getOperationsSystemsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getOperationsSystemsIterator"/></con:call></con:operation><con:operation isOneWay="false" action="getSubordinateOperationsSystem" name="getSubordinateOperationsSystem" bindingOperationName="getSubordinateOperationsSystem" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/osr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getSubordinateOperationsSystemRequest>
         <!--Optional:-->
         <v11:osRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:osRef>
      </v11:getSubordinateOperationsSystemRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getSubordinateOperationsSystem"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ResourceInventoryRetrievalSoapHttpBinding" type="wsdl" bindingName="{http://www.tmforum.org/mtop/mri/wsdl/rir/v1-0}ResourceInventoryRetrievalSoapHttpBinding" soapVersion="1_1" anonymous="optional" definition="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp.wsdl?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp.wsdl?WSDL"><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp.wsdl?WSDL</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-ResourceInventoryRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/mri/wsdl/rir/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/mri/wsdl/rir/v1-0" xmlns:WL5G3N2="http://schemas.xmlsoap.org/wsdl/soap/">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?wsdl=1" namespace="http://www.tmforum.org/mtop/mri/wsdl/rir/v1-0"/>
  <WL5G3N0:documentation>DDP: ManageResourceInventory
    Module: ResourceInventoryRetrieval Service Interface WSDL HTTP Module
    Description: This module contains all the mTOP ResourceInventoryRetrieval Service Interface WSDL definitions for the Web Service deployment profile with SOAP/HTTP binding.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:portType name="ResourceInventoryRetrieval_RPC">
    <WL5G3N0:documentation>The ResourceInventoryRetrieval porttype (interface) for RPC (synchronous) based client/server communication patterns. All SIT operations use the specific get"ObjectType"Iterator operation to handle multiple responses.</WL5G3N0:documentation>
    <WL5G3N0:operation name="getInventory">
      <WL5G3N0:input message="WL5G3N1:getInventoryRequest"/>
      <WL5G3N0:output message="WL5G3N1:getInventoryResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getInventoryException" name="getInventoryException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getInventoryIterator">
      <WL5G3N0:input message="WL5G3N1:getInventoryIteratorRequest"/>
      <WL5G3N0:output message="WL5G3N1:getInventoryIteratorResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getInventoryIteratorException" name="getInventoryIteratorException"/>
    </WL5G3N0:operation>
  </WL5G3N0:portType>
  <WL5G3N0:binding name="ResourceInventoryRetrievalSoapHttpBinding" type="WL5G3N1:ResourceInventoryRetrieval_RPC">
    <WL5G3N0:documentation>SOAP HTTP binding definitions of the operations of the ResourceInventoryRetrieval RPC portType (interface)</WL5G3N0:documentation>
    <WL5G3N2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <WL5G3N0:operation name="getInventory">
      <WL5G3N2:operation soapAction="getInventory" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getInventoryRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getInventoryResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getInventoryException">
        <WL5G3N2:fault name="getInventoryException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getInventoryIterator">
      <WL5G3N2:operation soapAction="getInventoryIterator" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getInventoryIteratorRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getInventoryIteratorResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getInventoryIteratorException">
        <WL5G3N2:fault name="getInventoryIteratorException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
  </WL5G3N0:binding>
  <WL5G3N0:service name="ResourceInventoryRetrievalHttp">
    <WL5G3N0:documentation>Example of the ResourceInventoryRetrieval WSDL Service definition as a deployment example of this mTOP Service Interface. It is expected to be modified to match the specific deployment configuration in a service provider's CCV.</WL5G3N0:documentation>
    <WL5G3N0:port binding="WL5G3N1:ResourceInventoryRetrievalSoapHttpBinding" name="ResourceInventoryRetrievalSoapHttp">
      <WL5G3N2:address location="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp"/>
    </WL5G3N0:port>
  </WL5G3N0:service>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?wsdl=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-ResourceInventoryRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/mri/wsdl/rir/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:WL5G3N2="http://www.tmforum.org/mtop/mri/xsd/rir/v1">
  <WL5G3N0:documentation>DDP: ManageResourceInventory
    Module: ResourceInventoryRetrieval Service Interface WSDL Message Module
    Description: This module contains all the mTOP ResourceInventoryRetrieval Service Interface WSDL message definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:types>
    <xsd:schema xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:rir="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:tns="http://www.tmforum.org/mtop/mri/wsdl/rir/v1-0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.tmforum.org/mtop/mri/xsd/rir/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=34"/>
    </xsd:schema>
  </WL5G3N0:types>
  <WL5G3N0:message name="getInventoryRequest">
    <WL5G3N0:documentation>The getInventory request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getInventoryRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getInventoryResponse">
    <WL5G3N0:documentation>The getInventory response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getInventoryResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getInventoryException">
    <WL5G3N0:documentation>The getInventory exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getInventoryException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getInventoryIteratorRequest">
    <WL5G3N0:documentation>The getInventoryIterator request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getInventoryIteratorRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getInventoryIteratorResponse">
    <WL5G3N0:documentation>The getInventoryIterator response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getInventoryIteratorResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getInventoryIteratorException">
    <WL5G3N0:documentation>The getInventoryIterator exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getInventoryIteratorException" name="mtopBody"/>
  </WL5G3N0:message>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=34</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/mri/xsd/rir/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:invdata="http://www.tmforum.org/mtop/nrf/xsd/invdata/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Manage Resource Inventory</p>
      <p>Module:  Message XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP InventoryRetrieval SI XML
                message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=24"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/invdata/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=33"/>
  <!--=================-->
  <xsd:element name="getInventoryRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getInventory operation</p>
        <p>This operation returns a specified portion of the
                    inventory data from the OS to which the request is
                    directed (i.e., the target OS). The target OS
                    returns all objects satisfying the scope and filter
                    constraints of the requesting OS that have a
                    modification date equal to or later than the Diff
                    Date and Time.</p>
        <p>The operation can only be directed to a top-level OS
                    and not to a subordinate OS.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="filter" type="tns:SimpleFilterType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter defines the subset of the
                                total inventory to be returned.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="diffDateAndTime" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter allows to constraint the
                                inventory retrieval by a modification
                                date and time. I.e., all objects with a
                                modification date equal to or greater
                                than this value are in scope of this operation.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getInventoryResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getInventory operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="inventoryData" type="invdata:InventoryDataType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The inventory data which may vary based
                                on the MEP. Refer to SD2-5 in the
                                Framework DDP. Also, note that the
                                atomic elements of the inventory data
                                XML representation are all the following
                                top-level objects: MD, ME, MLSN, OS, TL,
                                and TMD. It means that all top-level
                                object instances must be fully
                                encapsulated in one batch when the MEP
                                involves multiple responses.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getInventoryException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getInventory operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
            <xsd:element ref="msg:unsupportedCompressionFormat"/>
            <xsd:element ref="msg:unsupportedPackingFormat"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--=================-->
  <xsd:element name="getInventoryIteratorRequest" type="msg:GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getInventoryIterator operation</p>
        <p>This is the iterator request to return the next batch
                    of InventoryData from the target OS.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getInventoryIteratorResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getInventoryIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="inventoryData" type="invdata:InventoryDataType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getInventoryIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getInventoryIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--=================-->
  <!--All local types-->
  <!--=================-->
  <xsd:simpleType name="GranularityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Filter attribute used to select the granularity of
                    the Inventory report.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NAME">
        <xsd:annotation>
          <xsd:documentation>
            <p>Retrieve the name only.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ATTRS">
        <xsd:annotation>
          <xsd:documentation>
            <p>Retrieve the name and the other object attributes.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FULL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Retrieve the name, the object attributes adn
                            all the relationsship object pointers.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="SimpleFilterType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          The data structure of the Inventory Retrieval filter.
                    Some examples are listed in the following table.
          <table cellpadding="0" cellspacing="0">
            <tr>
              <td valign="top">
                <p>
                  <b>Filter Constraint</b>
                </p>
              </td>
              <td valign="top">
                <p>
                  <b>Simple Filter</b>
                </p>
              </td>
            </tr>
            <tr>
              <td valign="top">
                <p>Given an ME name (e.g., md1/ME123),
                                    get all the EHs and Equipment           Attributes</p>
              </td>
              <td valign="top">
                <p>baseInstanceList: { (MD=md1;ME=ME123)}</p>
                <p>includedObjectTypes: { (EH, ATTRS),
                                    (EQ, ATTRS) }</p>
              </td>
            </tr>
            <tr>
              <td valign="top">
                <p>Given an ME name           (e.g.,
                                    md1/ME123), get all the contained
                                    Ehs Attributes and the ME attibutes</p>
              </td>
              <td valign="top">
                <p>baseInstanceList: { (MD=md1;ME=ME123) }</p>
                <p>includedObjectTypes: { (ME, ATTRS),
                                    (EH, ATTRS) }</p>
              </td>
            </tr>
            <tr>
              <td valign="top">
                <p>Get all MEs and           associated
                                    attributes (within the entire
                                    inventory known to the target OS)</p>
              </td>
              <td valign="top">
                <p>baseInstanceList: { }</p>
                <p>includedObjectTypes { (ME, ATTRS) }</p>
              </td>
            </tr>
            <tr>
              <td valign="top">
                <p>Get all ME, OS           and MD names
                                    (within the entire inventory known
                                    to the target OS)</p>
              </td>
              <td valign="top">
                <p>baseInstanceList: { }</p>
                <p>includedObjectTypes: { (ME, NAME),
                                    (MD, NAME), (OS, NAME) }</p>
              </td>
            </tr>
            <tr>
              <td valign="top">
                <p>Given an EH name           (e.g.,
                                    md1/ME123/ACME7), get all the
                                    contained Equipment (and
                                    relationship           pointers)</p>
              </td>
              <td valign="top">
                <p>baseInstanceList: {
                                    (MD=md1;ME=ME123;EH=ACME7) }</p>
                <p>includedObjectTypes: { (EQ,FULL)}</p>
              </td>
            </tr>
            <tr>
              <td valign="top">
                <p>Given a PTP name           (e.g.,
                                    md1/ME123/PTPxyz), get the PTP Attributes</p>
              </td>
              <td valign="top">
                <p>baseInstanceList: {
                                    (MD=md1;ME=ME123;PTP=PTPxyz) }</p>
                <p>includedObjectTypes: { (PTP, ATTRS) }</p>
              </td>
            </tr>
            <tr>
              <td valign="top">
                <p>Query attributes matching using Xpath
                                    1.0 expresion. A consumer would like
                                    to query all ME softwareVersion
                                    equal to "2.0" in the
                                    "md1" MD and retrieve
                                    their name only.</p>
              </td>
              <td valign="top">
                <p>baseInstanceList: { (MD=md1) }</p>
                <p>queryExpression: { {
                                    {http://www.w3.org/TR/xpath},
                                    {//meAttrs[softwareVersion=`2.0`} },
                                    {NAME} }</p>
              </td>
            </tr>
          </table>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="baseInstance" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute identifies a list of base
                            object instances for the subtrees to be
                            retrieved. BaseInstanceList is a list of
                            serialized MTOSI names. If the
                            BaseInstanceList is left empty then all the
                            nodes at the top of the MTOSI instance tree
                            are selected (i.e., all MDs, TMDs, and OSs
                            are selected). Specification of the
                            BaseInstanceList does not select any objects
                            in and of itself. In order to select
                            specific objects, one needs to specify the IncludedObjectTypes.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:choice>
        <xsd:annotation>
          <xsd:documentation>Two options to identify the scope
                        of the objects to be retrieved:</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="queryExpression" type="gen:QueryExpressionType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Specify an attribute matching query
                                    expression to be applied to the
                                    sub-tree of the inventory layout
                                    document targeted by the
                                    baseInstance. This expression is
                                    based on a standard specification
                                    query language (Xpath, ansi-92).</p>
                <p>Refer to the Business Agrrement (BA)
                                    requirement description for details
                                    of the minimum set of supported
                                    query operations.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="granularity" type="tns:GranularityType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Specify the granularity of the
                                    inventory report based.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="includedObjectType">
          <xsd:annotation>
            <xsd:documentation>
              <p>
                This attribute identifies the type of
                                objects contained under the selected
                                base object instances that are to be
                                included in the returned inventory file.
                                The base object itself is included only
                                if the type of the base instance appears
                                in the IncludedObjectTypes list. If no
                                included object types are listed, then
                                the entire subtree under the base object
                                instance is returned. For each included
                                object type, one needs to indicate
                                whether.
                <ul>
                  <li>just the name,</li>
                  <li>all the associated attributes
                                    (including the name), or</li>
                  <li>the associated attributes and
                                    relationship pointers are to be
                                    returned for each instance.</li>
                </ul>
                The
                                IncludedObjectTypes need to be picked
                                such that each selected base class has a
                                single (connected) subtree below it. For
                                example, if all the EHs under a given MD
                                where needed, the requesting OS would
                                need to list the given MD as a base
                                instance and put ME and EH in the
                                IncludedObjectTypes list. The requesting
                                OS could just request the names of the
                                MEs to reduce the size of the returned
                                file.
              </p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="objectType" type="gen:ObjectTypeType">
                <xsd:annotation>
                  <xsd:documentation>
                    <p>Specify the object type acronym.</p>
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="granularity" type="tns:GranularityType">
                <xsd:annotation>
                  <xsd:documentation>
                    <p>Specify the granularity of
                                    the inventory report based.</p>
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=24</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=17"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <!--==============-->
  <xsd:complexType abstract="false" name="BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The (abstract) base type definition of all exception messages.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="hdr:header">
        <xsd:annotation>
          <xsd:documentation>The mTOP header as it cannot be
                        part of the SOAP Header in a SOAP v1.1 Fault message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="reason" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>A string indicating further details about the
                            exception. It is a free format string filled
                            by the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The extension for specific vendor exception information.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:element name="notImplemented" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised by OS for an optional operation that is not implemented</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="internalError" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised in case of non-specific OS internal failure</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidInput" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters are invalid</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tooManyOpenIterators" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when data retrieval iterator capacity is full</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="entityNotFound" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters do not refer to an existing object</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="commLoss" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when communication to an entity (needed to
                    help fulfill the request) is lost</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedCompressionFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given data compression format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedPackingFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given file packing format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidFilterDefinition" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the filter is invalid.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="objectInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tpInvalidEndPoint" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="timeslotInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="protectionEffortNotMet" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notInValidState" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unableToComply" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="capacityExceeded" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="accessDenied" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedRoutingConstraints" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="userlabelInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidTopic" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the topic is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notificationServiceProblem" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when there is a failure with the Broker.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AllExceptionsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reference to all supported exception types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="tns:accessDenied"/>
      <xsd:element ref="tns:capacityExceeded"/>
      <xsd:element ref="tns:commLoss"/>
      <xsd:element ref="tns:entityNotFound"/>
      <xsd:element ref="tns:internalError"/>
      <xsd:element ref="tns:invalidFilterDefinition"/>
      <xsd:element ref="tns:invalidInput"/>
      <xsd:element ref="tns:invalidTopic"/>
      <xsd:element ref="tns:notificationServiceProblem"/>
      <xsd:element ref="tns:notImplemented"/>
      <xsd:element ref="tns:notInValidState"/>
      <xsd:element ref="tns:objectInUse"/>
      <xsd:element ref="tns:protectionEffortNotMet"/>
      <xsd:element ref="tns:timeslotInUse"/>
      <xsd:element ref="tns:tooManyOpenIterators"/>
      <xsd:element ref="tns:tpInvalidEndPoint"/>
      <xsd:element ref="tns:unableToComply"/>
      <xsd:element ref="tns:unsupportedCompressionFormat"/>
      <xsd:element ref="tns:unsupportedPackingFormat"/>
      <xsd:element ref="tns:unsupportedRoutingConstraints"/>
      <xsd:element ref="tns:userlabelInUse"/>
    </xsd:choice>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Profile of exception types supported by all mTOP
                    iterator operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="tns:AllExceptionsType">
        <xsd:choice>
          <xsd:element ref="tns:commLoss"/>
          <xsd:element ref="tns:internalError"/>
          <xsd:element ref="tns:invalidInput"/>
          <xsd:element ref="tns:notImplemented"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Generic request message structure for all data
                    iterator operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=17</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML header.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <!--==============-->
  <xsd:simpleType name="ActivityStatusEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies the high-level response status for an
                    activity.  Required for response messages, including
                    error responses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="WARNING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="ActivityStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Add to the initial enumerations the Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ActivityStatusEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="MessageTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type of the message that is being exchanged as
                    part of an activity.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REQUEST"/>
      <xsd:enumeration value="RESPONSE"/>
      <xsd:enumeration value="NOTIFICATION"/>
      <xsd:enumeration value="ERROR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationPatternType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Styles supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SimpleResponse"/>
      <xsd:enumeration value="MultipleBatchResponse"/>
      <xsd:enumeration value="BulkResponse"/>
      <xsd:enumeration value="Notification"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationStyleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Style supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MSG"/>
      <xsd:enumeration value="RPC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="CompressionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if compression is to be performed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:CompressionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CompressionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported compressions. All extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_COMPRESSION"/>
      <xsd:enumeration value="GZIP"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PackingTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if the output file(s) are to be packed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:PackingEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PackingEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported packing/packaging. All
                    extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PACKING"/>
      <xsd:enumeration value="ZIP"/>
      <xsd:enumeration value="TAR"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="header">
    <xsd:annotation>
      <xsd:documentation>
        <p>MTOSI Standard Header.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="activityName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the business
                                transaction activity for the message
                                being exchanged.       The value is
                                usually the name of the mTOP operation,
                                e.g. getInventory.       This value
                                corresponds to the “operation” in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the message (or
                                contract) that is being exchanged as
                                part of an activity. E.g.
                                getInventoryResponse. This field
                                corresponds to the message name in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgType" type="tns:MessageTypeType"/>
        <xsd:element minOccurs="0" name="senderURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application sending this message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="destinationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the final destination of the
                                message (the OS that will process the
                                content of the message). This field may
                                point to a logical end point or abstract
                                topic name to be resolved by the
                                communication transport middleware in
                                order to deliver the message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="replyToURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used by request messages to specify
                                destination for response message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="originatorURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the originating application of
                                the message that resulted in this
                                response or notification message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="failureReplytoURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application receiving the
                                potential error notification message.
                                Required for all response messages and
                                notifications which are triggered by
                                request/response. If not specified the
                                replyToURI is used. If the replyToURI is
                                also not specified, senderURI endpoint
                                is used to send back the failure response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="activityStatus" type="tns:ActivityStatusType"/>
        <xsd:element minOccurs="0" name="correlationId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>An identifier that could be set by the
                                originator of an asynchronous request
                                that will allow it to correlate the
                                response to the request.  If this field
                                is set, it should be reflected in the
                                header of the response message.  Not
                                required for notification headers.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="security" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Provides credential nformation for use by
                                a security service for identification,
                                authentication, or authorization.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="securityType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the type of credential
                                contained in the security element.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="priority">
          <xsd:annotation>
            <xsd:documentation>
              <p>Indicates message-handling priority for
                                asynchronous messages.  It must be in
                                the range 0-9 (lowest-highest). Default: 4</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string"/>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgSpecificProperties">
          <xsd:annotation>
            <xsd:documentation>
              <p>Conditionally required for request,
                                response, and notification messages as
                                identified by the documentation for a
                                specific interface message.  The
                                communications infrastructure or the
                                receiving application can use this value
                                for routing or filtering messages.</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" minOccurs="0" name="property">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="propName" type="xsd:string"/>
                    <xsd:element name="propValue" type="xsd:string"/>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="communicationPattern" type="tns:CommunicationPatternType"/>
        <xsd:element minOccurs="0" name="communicationStyle" type="tns:CommunicationStyleType"/>
        <xsd:element minOccurs="0" name="requestedBatchSize" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>The RequestedBatchSize parameter provides
                                the control for the batch segmentation
                                of the full set of output data generated
                                by a coarse-grained operation such as
                                getInventory or getActiveAlarms. The
                                unit is any of the MTOSI objects. And,
                                it defines the maximum number of MTOSI
                                objects that can be included in all the
                                batches of data sent as part of a
                                multiple responses MEP.</p>
              <p>However, they are cases where a batch may
                                exceed the number of objects defined in
                                the RequestedBatchSize parameter. This
                                is true if the granularity of a response
                                atomic data representation is greater
                                than just one object. This is true for
                                the getInventory response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceNumber" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm. Pattern
                                to identify the batch seq number in a sequence.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceEndOfReply" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm.
                                Pattern, true if it is the last result
                                batch in a sequence</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="iteratorReferenceURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Mandatory for all SIT (iterators) MEP to
                                allow description of the data retrieval iterator.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="fileLocationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used for file retrieval. Specify the base
                                name of the file(s) to be generated and
                                the remote destination.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="compressionType" type="tns:CompressionTypeType"/>
        <xsd:element minOccurs="0" name="packingType" type="tns:PackingTypeType"/>
        <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>Message originating timestamp</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Location for all vendor extensions to the
                                MTOSI standard header.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of generic mTOP simple data types.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="NameAndStringValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvsList" type="tns:NameAndValueStringListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndValueStringListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndStringValue</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nvs" type="tns:NameAndStringValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:any minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvList" type="tns:NameAndAnyValueListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndAnyValueType</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nv" type="tns:NameAndAnyValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AliasNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    contains the list of aliases for the network entity.
                    The attribute is a name-value list. The name refers
                    to the type of alias (e.g., nativeEMSname) and the
                    value component holds the alias itself</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alias">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="aliasName" type="xsd:string"/>
            <xsd:element name="aliasValue" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AnyListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A generic list of any type of elements. Used for
                    vendor Extensions or loose element encapsulation
                    from other namespaces.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="DiscoveredNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the name of the object when
                    its existence is first published on the CCV but only
                    in the case where the OS that publishes the object
                    on the CCV is not the naming OS. If the naming OS
                    first publishes the object on the CCV, this
                    attribute may be left empty.</p>
        <p>The discovered name is assumed to be unique from the
                    perspective of the publishing OS.</p>
        <p>The discovered name published on the CCV does not
                    necessarily need to be the name of the object as
                    discovered by the OS from the subtending network.</p>
        <p>There are no specific rules concerning the
                    relationship between the "name" and
                    "discovered name" of the object. They
                    could be set to the same value or they could be different.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ManufactureDateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type identifies the production date of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="MultiEventInventoryAttributesType">
    <xsd:annotation>
      <xsd:documentation>This attribute is used when a object
                instance is embedded in the inventory    layout payload
                of a Multi-Event Inventory (MEI) notification.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="neTime" nillable="true" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the time at which the NE detected the
                            inventory change (if available)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventIndication" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is an indication of the type of
                            inventory update.</p>
            <p>Possible values are Object Creation (OC),
                            Object Discovery (ODsc), Object Deletion
                            (OD),        Attribute Value Change (AVC),
                            State Change (SC) and AVC_SC_and_Childern.
                            Only the acronym (e.g., OC)        is used
                            in the actual attribute value. The following
                            conventions apply:</p>
            <p>If an object creation or object discovery
                            indicator is applied to a parent object,
                            it implicitly applies to all the children,
                            i.e., the OS sending the notification only
                            needs       to set the indicator attribute
                            in the parent object.</p>
            <p>If an object deletion is applied to a parent
                            object, it is assumed that all the children
                            are also deleted. The childern should not be listed.</p>
            <p>The AVC_SC_and_Childern indication may be
                            applied to a parent object to imply that
                            there       may be AVC or SC changes to the
                            parent and some or all of the children.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="NetworkAccessDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A free-format string used to associate a resource to
                    a Network Access Domain.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="NotificationIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the notification ID.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="NotificationIdentifierListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of notification IDs  (free string). Also,  the
                    value found in notificationId field of the event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="notificationId" type="tns:NotificationIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of all the object types. It is
                    left as a string for maximum compatibility with
                    future supported object types.</p>
        <p>Refer to the SD2-7 ObjectNaming for the list of all
                    supported values.</p>
        <p>Otherwise, one can also refer to the
                    ObjectEnumTypedefined in CommonResourceInfo (see NRB
                    DDP), which is provided as XML Schema enumerations
                    solely as a helper (not used in any messaging validation).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enumeration of all the supported query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI">
      <xsd:enumeration value="ANSI-92"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath20/"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The loose definition of all the supported query
                    dialect types.</p>
        <p>Refer to QueryDialectEnumType definition to the
                    enumeration of recommended query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The generic schema datatype definition for the query
                    expression used in most filters.</p>
        <p>This definition is borrowed from WS-Notification v1.3.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="tns:QueryDialectTypeType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          <p>The dialect of the given query expression</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML naming structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <!--=================-->
  <xsd:complexType name="RelativeDistinguishNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of relative distinguish
                    name (RDN) data structure used in all object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="type" type="gen:ObjectTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN object type acronym.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of the MTOSI object name
                    data structure as a sequence of RDNs, which
                    represents a unique identifier for the MTOSI object
                    on the CCV. Once set by the naming OS, the name is
                    invariant for the life of the object and should be
                    used when referring to the object over the CCV. Name
                    attribute of an object instance shall always be
                    assigned a value, unless the object instance is
                    first discovered by an OS that is not the naming OS
                    for the object instance. In such a case, the
                    discovering OS shall provide a value for the
                    Discovered Name attribute of the object. The naming
                    OS shall provide a value for the Name attribute of
                    the object once it becomes aware of the new object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="rdn" type="tns:RelativeDistinguishNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition for the list of MTOSI object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="name" nillable="true" type="tns:NamingAttributeType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=33</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/invdata/v1" version="1.0" xmlns:cc="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:ctp="http://www.tmforum.org/mtop/nrf/xsd/ctp/v1" xmlns:eh="http://www.tmforum.org/mtop/nrf/xsd/eh/v1" xmlns:epg="http://www.tmforum.org/mtop/nra/xsd/epg/v1" xmlns:eq="http://www.tmforum.org/mtop/nrf/xsd/eq/v1" xmlns:fd="http://www.tmforum.org/mtop/nrf/xsd/fd/v1" xmlns:fdfr="http://www.tmforum.org/mtop/nrf/xsd/fdfr/v1" xmlns:fdfrroute="http://www.tmforum.org/mtop/nrf/xsd/fdfrroute/v1" xmlns:ftp="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" xmlns:gtp="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" xmlns:md="http://www.tmforum.org/mtop/fmw/xsd/md/v1" xmlns:me="http://www.tmforum.org/mtop/nrf/xsd/me/v1" xmlns:mfd="http://www.tmforum.org/mtop/nrf/xsd/mfd/v1" xmlns:mfdfr="http://www.tmforum.org/mtop/nrf/xsd/mfdfr/v1" xmlns:mlsn="http://www.tmforum.org/mtop/nrf/xsd/mlsn/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:os="http://www.tmforum.org/mtop/nrf/xsd/os/v1" xmlns:pg="http://www.tmforum.org/mtop/nra/xsd/pg/v1" xmlns:ptp="http://www.tmforum.org/mtop/nrf/xsd/ptp/v1" xmlns:route="http://www.tmforum.org/mtop/nrf/xsd/route/v1" xmlns:snc="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" xmlns:tl="http://www.tmforum.org/mtop/nrf/xsd/tl/v1" xmlns:tmd="http://www.tmforum.org/mtop/nrf/xsd/tmd/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/invdata/v1" xmlns:tppool="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" xmlns:vob="http://www.tmforum.org/mtop/fmw/xsd/vob/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Manage Resource Inventory</p>
      <p>Module:  Message XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP InventoryRetrieval SI XML
                message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/md/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=22"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/ctp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/eh/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=8"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/epg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/eq/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=10"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=14"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=16"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/me/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=23"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/mlsn/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=27"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/os/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=29"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/ptp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=32"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=16"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=30"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/route/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=35"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/fdfrroute/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=36"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tl/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=37"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tmd/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=38"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/mfd/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=25"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/mfdfr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=26"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/fd/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/fdfr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=12"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=40"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/vob/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=41"/>
  <!--=== InventoryData Definition ===-->
  <xsd:complexType name="InventoryDataType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="mdList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of Management Domain inventories.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="md" type="tns:ManagementDomainInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="tmdList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of top level TMD inventories.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="tmd" type="tns:TransmissionDescriptorInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="osList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of OS inventories.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="os" type="tns:OperationsSystemInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="voList" type="vob:VendorObjectListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of Vendor Objects.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--====================-->
  <xsd:complexType name="DataQualityIndicatorType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the in-line exception log found in the
                    inventory report on object retrieval exception.
                    Refer to the InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="isSuspect" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>Flag to indicate suspect data is applicable
                            to the associated network resource object.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="isDescendant" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>Flag to indicate suspect data is applicable
                            to all the children of the associated
                            network resource object.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="reason" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>Free string to provide reason description on
                            suspect data issue.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="OperationsSystemInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Operations System as
                    returned in inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="osNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The name of the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="osAttrs" type="os:OperationsSystemType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="subordinateOsRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of the subordinate OS names.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="managesMdRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of all the MD names wrt OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="managesMeRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of all the ME names wrt OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="managesTlRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of all the TL names wrt OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="offersTmdRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of the TMD names associated with
                            this OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="managesFdRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of all the FD names wrt OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="managesMlsnRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of all the MLSN names wrt OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on OS data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="ManagementDomainInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Management Domain as
                    returned in inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="mdNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The name of the MD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="mdAttrs" type="md:ManagementDomainType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the MD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="supportingOsRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of OS names supporting this MD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="meList">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of ME inventories contained in this MD.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="meInv" type="tns:ManagedElementInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="mlsnList">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of MLSN inventories contained in this MD</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="mlsnInv" type="tns:MultiLayerSubnetworkInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="fdList">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of FD inventories contained in this MD</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="fdInv" type="tns:FlowDomainInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="tlList">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of TL inventories contained in this MD</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="tlInv" type="tns:TopologicalLinkInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on MD data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="ManagedElementInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Managed Element as returned
                    in inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="meNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The relative name of the ME in the MD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="meAttrs" type="me:ManagedElementType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ehList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The equipment inventory contained in ME.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="ehInv" type="tns:EquipmentHolderInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="ptpList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of PTP inventories contained in ME.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="ptpInv" type="tns:PhysicalTerminationPointInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="ftpList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of FTP inventories contained in ME.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="ftpInv" type="tns:FloatingTerminationPointInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="ccList" type="cc:CrossConnectListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of Cross Connects contained in ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="pgpList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of PG inventories contained in ME.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="pgInv" type="tns:ProtectionGroupInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="epgList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of EPG inventories contained in ME.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="epgInv" type="tns:EquipmentProtectionGroupInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="gtpList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of GTP inventories contained in ME.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="gtpInv" type="tns:GroupTerminationPointInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="mfdList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of MFD inventories contained in ME.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="mfdInv" type="tns:MatrixFlowDomainInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="internalTlRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of TL names internal to this ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="containingMlsnRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of MLSN names containing this ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on ME data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="EquipmentHolderInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Equipment Holder as
                    returned in inventory report.         Refer to the
                    InventoryLayout and the EquipmentModel supporting documents.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ehNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The relative name of the Equipment Holder in
                            the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ehAttrs" type="eh:EquipmentHolderType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the Equipment Holder.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ehList">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of contained equipments (EQ or EH).
                            It is optional to terminate recursive definition.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="ehInv" type="tns:EquipmentHolderInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="eqInv" type="tns:EquipmentInventoryType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The inventory of the Equipment contained
                            directly in this Equipment Holder</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on EH data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="EquipmentInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Equipment as returned in
                    inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="eqNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The relative name of the EQ in the EH.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="eqAttrs" type="eq:EquipmentType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the Equipment.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="supportedPtpRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The PTPs that are returned are those that
                            share their physical layer with the primary
                            equipment (i.e. that represent a port on the
                            equipment or are connected by a fibre, wire,
                            etc.). The FTPs that are returned are those
                            which are implemented by the physical
                            circuitry supported by the equipment and
                            will include FTPs that are named from the
                            specified equipment (the FTPs will depend
                            upon the presence of that equipment for
                            their most basic operation). When there is
                            equipment protection, this list reports
                            PTPs/FTPs for the primary equipment only.
                            That is, when called on a protecting
                            equipment (as opposed to the primary
                            equipment), this list returns an empty list,
                            irrespective of the current switch status.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="supportedEquipmentRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of equipment names supported by a
                            given piece of equipment, e.g., a power pack
                            might support many circuit packs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="supportingEquipmentRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of equipment that supports a given
                            piece of equipment, e.g., the power pack and
                            synchronization card that support a given
                            piece of equipment.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on EQ data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="PhysicalTerminationPointInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Physical Termination Point
                    as returned in inventory report.         Refer to
                    the InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ptpNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The relative name of the PTP in the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ptpAttrs" type="ptp:PhysicalTerminationPointType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ctpList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of CTP inventories contained in PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="ctpInv" type="tns:ConnectionTerminationPointInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="supportingEquipmentRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of absolute names of supporting
                            equipment associated with the PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="supportedFixedSncRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of absolute names of supported fixed
                            SNCs associated with the PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="allSupportedSncRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of absolute names of all supported
                            SNCs associated with the PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on PTP data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="FloatingTerminationPointInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Floating Termination Point
                    as returned in inventory report.         Refer to
                    the InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ftpNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The relative name of the FTP in the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ftpAttrs" type="ftp:FloatingTerminationPointType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the FTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ctpList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of CTP inventories contained in FTP.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="ctpInv" type="tns:ConnectionTerminationPointInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="supportingEquipmentRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of absolute names of supporting
                            equipment associated with the FTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="supportedFixedSncRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of absolute names of supported fixed
                            SNCs associated with the FTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="allSupportedSncRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of absolute names of all supported
                            SNCs associated with the FTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on FTP data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="ConnectionTerminationPointInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Connection Termination
                    Point as returned in inventory report.         Refer
                    to the InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ctpNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The relative name of the CTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ctpAttrs" type="ctp:ConnectionTerminationPointType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the CTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="supportedFixedSncRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of absolute names of supported fixed
                            SNCs associated with the FTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="allSupportedSncRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of absolute names of all supported
                            SNCs associated with the FTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on CTP data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="GroupTerminationPointInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the GTP as returned in
                    inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="gtpNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The relative name of the GTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="gtpAttrs" type="gtp:GroupTerminationPointType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the GTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ctpRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of CTP (aboslute) names associated
                            with GTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="supportedFixedSncRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of absolute names of supported fixed
                            SNCs associated with the FTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="allSupportedSncRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of absolute names of all supported
                            SNCs associated with the FTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on GTP data retrieval</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="MatrixFlowDomainInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the MFD as returned in
                    inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="mfdNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The relative name of the MFD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="mfdAttrs" type="mfd:MatrixFlowDomainType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the MFD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="mfdfrInvList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of MFDFr inventories.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="mfdfrInv" type="tns:MatrixFlowDomainFragmentInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="ptpRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of PTP (aboslute) names associated
                            with MFD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ftpRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of FTP (aboslute) names associated
                            with MFD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on MFD data retrieval</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="MatrixFlowDomainFragmentInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the MFDFr as returned in
                    inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="mfdfrAttrs" type="mfdfr:MatrixFlowDomainFragmentType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the MFDFr.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ctpRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of CTP (aboslute) names associated
                            with MFDFr.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ftpRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of FTP (aboslute) names associated
                            with MFDFr.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on MFDFr data retrieval</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TerminationPoolInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the TPPool as returned in
                    inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="tppoolNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The relative name of the TPPool.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tppoolAttrs" type="tppool:TerminationPointPoolType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the TPPool.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on TPPool data retrieval</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="ProtectionGroupInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Protection Group as
                    returned in inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="pgNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The relative name of the PG.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="pgAttrs" type="pg:ProtectionGroupType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the PG.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="protectedPtpRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of PTP (aboslute) names associated
                            with PG.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on PG data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="EquipmentProtectionGroupInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Equipment Protection Group
                    as returned in inventory report.         Refer to
                    the InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="epgNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The relative name of the EPG.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="epgAttrs" type="epg:EquipmentProtectionGroupType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the EPG.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="protectedEquipmentRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of EQ (aboslute) names associated
                            with EPG.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on EPG data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="MultiLayerSubnetworkInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Multi Layer Subnetwork as
                    returned in inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="mlsnNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The relative name of the MLSN in the MD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="mlsnAttrs" type="mlsn:MultiLayerSubnetworkType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the MLSN.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="sncList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of SubnetworkConnection inventories
                            contained in the MLSN.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sncInv" type="tns:SubnetworkConnectionInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="tpPoolList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of TPPool inventories contained in
                            the MLSN.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="tpPoolInv" type="tns:TerminationPoolInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="associatedMeRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of ME names associated with the MLSN.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="internalTlRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of TL names associated with this MLSN.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on MLSN data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="SubnetworkConnectionInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Subnetwork Connection as
                    returned in inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="sncNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The relative name of the SNC.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="sncAttrs" type="snc:SubnetworkConnectionType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the SNC.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="route" type="route:RouteType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Route for the SNC (List of cross-connects)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on SNC data retrieval .</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="FlowDomainInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the FD as returned in inventory
                    report.         Refer to the InventoryLayout
                    supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="fdNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The name of the TL.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="fdAttrs" type="fd:FlowDomainType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the FD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="fdfrInvList">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of FDFr inventories.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="fdfrInv" type="tns:FlowDomainFragmentInventoryType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="ptpRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of PTP (aboslute) names associated
                            with FD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ftpRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of FTP (aboslute) names associated
                            with FD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="internalTlRefList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of TL names associated with this FD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on TL data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="FlowDomainFragmentInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the FDFr as returned in
                    inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="fdfrNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The name of the TL.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="fdfrAttrs" type="fdfr:FlowDomainFragmentType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the FDFr.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="route" type="fdfrroute:FlowDomainFragmentRouteType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Route for the FDFr (List of MFDFr)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on FDFr data retrieval</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TopologicalLinkInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Topological Link as
                    returned in inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="tlNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The name of the TL.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tlAttrs" type="tl:TopologicalLinkType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the TL.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on TL data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TransmissionDescriptorInventoryType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The data structure of the Transmission Descriptor as
                    returned in inventory report.         Refer to the
                    InventoryLayout supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="tmdNm" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>The name of the TMD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tmdAttrs" type="tmd:TransmissionDescriptorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific attributes of the TMD.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="qualityIndicator" type="tns:DataQualityIndicatorType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The quality indicator used to report
                            exception information on TMD data retrieval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=22</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/md/v1" version="1.0" xmlns:coi="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/md/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP MD XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=2"/>
  <!--=================-->
  <xsd:element name="md" type="tns:ManagementDomainType"/>
  <!--=================-->
  <xsd:complexType name="ManagementDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Management Domain mTOP
                    network resource object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="coi:CommonObjectInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="ManagementDomainListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of ManagementDomains</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:md"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common object information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <!--==============-->
  <xsd:element name="commonObjectInfo" type="tns:CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute represents a unique
                            name/identifier for the object on the CCV.
                            Consult the SD2-7 about object naming for
                            additional normative references.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="userLabel" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="discoveredName" type="gen:DiscoveredNameType"/>
      <xsd:element minOccurs="0" name="namingOs" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the object attribute definition to
                            identify the name of the OS that provided
                            the unique MTOSI name for the object. It is
                            assumed that each object (that is published
                            on the CCV) has a unique naming OS. This
                            attribute is optional in a point to point
                            NMS-EMS paradigm.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="owner" nillable="true" type="gen:OwnerType"/>
      <xsd:element minOccurs="0" name="aliasNameList" nillable="true" type="gen:AliasNameListType"/>
      <xsd:element minOccurs="0" name="vendorExtensions" nillable="true" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nrb.nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML CC Resource object.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <!--=================-->
  <xsd:element name="cc" type="tns:CrossConnectType"/>
  <!--=================-->
  <xsd:complexType name="CrossConnectType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A CrossConnect represents a connection within a
                    single managed element. This structure is primarily
                    used in the specification of routes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="isActive" nillable="true" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>Indicates if the cross-connect is active in
                            the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="direction" nillable="true" type="com:ConnectionDirectionType"/>
      <xsd:element minOccurs="0" name="ccType" nillable="true" type="com:SubnetworkConnectionTypeType"/>
      <xsd:element minOccurs="0" name="isFixed" nillable="true" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>The attribute defines if the CrossConnect is
                            fixed (i.e. cannot be deleted by the NMS) or
                            is flexible.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="aEndRefList" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="aEndName" type="nrb.nam:NamingAttributeType">
              <xsd:annotation>
                <xsd:documentation>
                  <p>Names of PTPs/CTPs/FTPs at the
                                    aEnd of the cross connection.</p>
                </xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="zEndRefList" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="zEndName" type="nrb.nam:NamingAttributeType">
              <xsd:annotation>
                <xsd:documentation>
                  <p>Names of PTPs/CTPs/FTPs at the
                                    zEnd of the cross connection.</p>
                </xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="connectionId" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the control plane identifier. This
                            attribute is the Connection Name attribute
                            in G.7713. Note that also the Cross
                            Connection points to its superior Connection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="routeActualState" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>
              This parameter is the summary state of the
                            activity states of the route’s CCs in the
                            network, regardless the SNC the CCs are
                            currently serving.  It can assume the
                            following values:
              <ul>
                <li>active:  all of the route’s CCs are active</li>
                <li>inactive:  none of the route’s CCs
                                    is active</li>
                <li>partial:  one or more but not all of
                                    the CCs of the route are active</li>
              </ul>
            </p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="routeAdminState" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>
              This state has not any relationship with the
                            actual state.  It can assume the following
                            values:
              <ul>
                <li>locked:  the route is not allowed to
                                    be active</li>
                <li>unlocked:  the route is allowed to
                                    be active</li>
              </ul>
            </p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="isRouteExclusive" nillable="true" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>“True” if not any routes of other SNCs can
                            share any of the route’s CCs or CTPs, even
                            in pending state, “False” otherwise..</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="routeId" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This parameter is a unique identifier within
                            the SNC name, with format up to the EMS..</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="isRouteIntended" nillable="true" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>The intended route (“True”) is defined as
                            preferred, or default route for a given
                            service.  The backup route (“False”) is
                            partly or totally different from the
                            intended route (but with same end points),
                            and is useful for restoration and
                            maintenance purposes.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="isRouteInUseBy" nillable="true" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>“True” if at least one of the route’s CCs or
                            CTPs is carrying traffic of another SNC,
                            “False” otherwise..</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="CrossConnectListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of CrossConnects</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:cc"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common
                type definitions used in some the mTOP XML Resource objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:simpleType name="CommunicationStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This state reflects a communication state between the
                    EMS and its ManagedElement.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CS_AVAILABLE"/>
      <xsd:enumeration value="CS_UNAVAILABLE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="ConnectionDirectionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction of a subnetwork connection, cross-connects,
                    or topological link. For a detailed description of
                    the use of this attribute see SNC Types supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CD_UNI">
        <xsd:annotation>
          <xsd:documentation>
            <p>UNIdirectional, i.e. source TP to sink TP.
                            Note: creation of unidirectional connections
                            is supported even when CTPs/FTPs are
                            modelled as bidirectional.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CD_BI">
        <xsd:annotation>
          <xsd:documentation>
            <p>BIdirectional, i.e. bidirectional TP to
                            bidirectional TP, a.k.a. two-way.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ConnectionlessPortTerminationPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This parameter shall identify the role in the flow
                    domain of         the requested CPTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CPTPR_FD_EDGE">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Edge CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_FD_INTERNAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Internal CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_ALL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return all CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="DirectionalityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction for a TerminationPoint:</p>
        <p>The directionality of PTPs is defined from an
                    external point of view, while the directionality of
                    CTPs is defined from an internal point of view.
                    Consequently, sink PTPs generate source CTPs, and
                    sink CTPs form source PTPs. Refer to SNC Types and
                    to layers for further information on termination
                    point and connection directionality.</p>
        <p>Note that ATM termination points (LR_ATM_NI,
                    LR_ATM_VP and LR_ATM_VC) are always bi-directional
                    even though the traffic may be asymmetric (and
                    eventually null in one of the two directions).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="D_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>Used when the directionality specification is
                            not necessary.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_BIDIRECTIONAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>source and sink (transmit and receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SOURCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>source (transmit).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SINK">
        <xsd:annotation>
          <xsd:documentation>
            <p>sink (receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="FlowDomainFragmentTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          This (read-only) attribute provides an indication of
                    the type of the matrix flow domain fragment. It may
                    have one of the following values:
          <ul>
            <li>"FDFRT_POINT_TO_POINT": the FDFr
                            is between exactly two points</li>
            <li>"FDFRT_POINT_TO_MULTIPOINT": (E-tree)</li>
            <li>"FDFRT_MULTIPOINT": the FDFr is
                            between at least two points</li>
          </ul>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="GradesOfImpactType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Grades of maximum tolerable disruption to traffic as
                    a result of the operation that this parameter is describing.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="GOI_HITLESS"/>
      <xsd:enumeration value="GOI_MINOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Less or equal to 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GOI_MAJOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Greater than 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="HolderStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Holder State Type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMPTY">
        <xsd:annotation>
          <xsd:documentation>
            <p>no equipment is installed and no expected
                            equipment has been identified</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected and currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EXPECTED_AND_NOT_INSTALLED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected but not currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_NOT_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>physically inserted in the ME but not expected</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MISMATCH_OF_INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>there is an inconsistency between the
                            expected equipment and the installed equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNAVAILABLE">
        <xsd:annotation>
          <xsd:documentation>
            <p>this holder cannot accept the installation or
                            provisioning of equipment (this is typically
                            caused by a double width card installed next
                            to this slot)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>
            <p>the OS does not know the state of the equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentHolderTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The EquipmentHolder with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentHolderEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentHolderEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Equipment holder type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="rack"/>
      <xsd:enumeration value="shelf"/>
      <xsd:enumeration value="sub_shelf"/>
      <xsd:enumeration value="slot"/>
      <xsd:enumeration value="sub_slot"/>
      <xsd:enumeration value="remote_unit"/>
      <xsd:enumeration value="remote_slots"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="EquipmentObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Type of equipment object in equipment holder. Values
                    are vendor-specific.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledPartNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the resource part number (PN) of the
                    installed equipment. If not available (or there is
                    no installed equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledSerialNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the serial number of the installed equipment.
                    If not available (or there is no installed
                    equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Firmware version of the installed equipment. If not
                    available (or there is no installed equipment), an
                    empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRoutedType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Network routed, indicates if the route must be or is
                    computed and implemented at the network level.
                    NR_YES indicates that the route must be / is
                    computed at the network. NR_NO indicates that the
                    route must not be / is not computed at the network.
                    NR_NA indicates that the route can be computed anywhere.</p>
        <p>If rerouting is allowed, this attribute will indicate
                    who last rerouted the SNC, the network (NR_YES) or
                    the EMS (NR_NO).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NR_NA"/>
      <xsd:enumeration value="NR_NO"/>
      <xsd:enumeration value="NR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Indicates if the reroute of an SNC (if allowed)
                    should be computed by the network, by the EMS, or if
                    it does not matter.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_SET"/>
      <xsd:enumeration value="NO"/>
      <xsd:enumeration value="YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="FreedomLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the NMS-specified EMS level of freedom when
                    performing SNC operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMSFL_CC_AT_SNC_LAYER"/>
      <xsd:enumeration value="EMSFL_TERMINATE_AND_MAP"/>
      <xsd:enumeration value="EMSFL_HIGHER_ORDER_SNCS"/>
      <xsd:enumeration value="EMSFL_RECONFIGURATION"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ModifyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute specifies the class of SNC
                    modification; i.e. rerouting or add/remove protection.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ADD_REMOVE_PROTECTION"/>
      <xsd:enumeration value="REROUTING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="PotentialFutureSetupIndicatorType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Refers to the aEnd and is used to convey the likely
                    future (or current) configuration of the SNC (see SD1-16_layeredParameters.pdf).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RSU_POINT_TO_POINT"/>
      <xsd:enumeration value="RSU_BROADCAST"/>
      <xsd:enumeration value="RSU_ANY_CONFIG"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProtectionEffortType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection effort is a statement of the
                    requirement of the static protection level. For
                    example if EFFORT_SAME_OR_WORSE is specified for a
                    3-ended FULLY_PROTECTED connection, a 3-ended
                    PARTIALLY_PROTECTED connection is acceptable, but a
                    2-ended connection (ST_SIMPLE) is not acceptable
                    i.e. ProtectionEffort does not have any bearing on
                    the externaly visible shape of the SNC.
                    EFFORT_WHATEVER indicates that the specified static
                    protection level is preferred, but that any other
                    level is acceptable.</p>
        <p>For a detailed description of the use of this
                    attribute see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EFFORT_WHATEVER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_BETTER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_WORSE"/>
      <xsd:enumeration value="EFFORT_SAME "/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionRole with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionRoleEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionRoleEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Protection role type.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="NA"/>
      <xsd:enumeration value="PRIMARY"/>
      <xsd:enumeration value="BACKUP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="RerouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The RerouteType type indicates if the EMS/MEs are
                    allowed and/or required to reroute this SNC if there
                    is a failure on this SNC, periodically to optimize
                    the routes, of for any other reason.It is an EMS/ME
                    implementation whether this is done using network
                    routing protocols or if the EMS/MEs detect the
                    failure and take appropriate action to attempt to
                    fix the SNC.</p>
        T
        <p>he RR_NO value means
                    that the EMS/MEs are not allowed to reroute the SNC.
                    The RR_YES value means that the EMS/MEs are allowed
                    to reroute the SNC and required to attempt to
                    reroute it upon failure. The RR_NA value is used
                    when the NMS does not want to specify the exact EMS
                    behaviour. In this case it is left up to the EMS to
                    decide whether rerouting will be provided. It is
                    also used if the EMS/MEs are allowed to reroute the
                    SNC but not required to attempt to reroute it upon failure.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RR_NA"/>
      <xsd:enumeration value="RR_NO"/>
      <xsd:enumeration value="RR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ResourceFulfillmentStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IN_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been put into operation and is
                            operating as provisioned (completely or partially).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity is entirely not capable of
                            performing its provisioned functions and is
                            not restricted by administrative actions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE_BY_MAINTENANCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been taken intentionally out
                            of service by a management action.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SERV_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>The service state is not applicable.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceFulfillmentStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This object attribute indicates basic administration
                    state of equipment and OS objects.       Also, this
                    object attribute accepts Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceFulfillmentStateEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNCState enum is used to represent the various
                    states that an SNC may take.</p>
        <p>The following states may be supported by the EMS,
                    depending on the SNC management mode of operation
                    used by the EMS. See SNC Management Modes Of
                    Operation for details.</p>
        <p>SNCS_PENDING: the SNC has been created by an NMS and
                    has not been activated by any NMS; or the SNC has
                    been successfully deactivated by an NMS. That state
                    has no relationship with the network state of the
                    cross- connects of the SNC. It is allowable for an
                    EMS to not support the SNCS_PENDING state and to
                    reject any operation that attempts to put an SNC
                    into SNCS_PENDING state.</p>
        <p>SNCS_ACTIVE: the SNC is not in pending state, a route
                    has been assigned to the SNC and all cross-connects
                    for the SNC are active in the network.</p>
        <p>SNCS_PARTIAL: the SNC is not in pending state, and
                    either a route has not been assigned to the SNC, or
                    not all of the cross-connects of the SNC are active
                    in the network. This may or may not include
                    activated SNCs for which there are currently no
                    active cross- connects in the network, depending on
                    the SNC management mode of operation.It is possible
                    that, in some EMSes, this state be unreachable.</p>
        <p>SNCS_NONEXISTENT: this is not an SNC state per se, as
                    it applies to "non-existent SNCs". It is
                    used in the interface to report SNCs that have been
                    deleted.</p>
        <p>See SNCState state diagram for details on valid transitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SNCS_NONEXISTENT"/>
      <xsd:enumeration value="SNCS_PENDING"/>
      <xsd:enumeration value="SNCS_ACTIVE"/>
      <xsd:enumeration value="SNCS_PARTIAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNC Type describes the connection based on the
                    signal flows.  For a detailed description of the use
                    of this attribute see SNC Types. In case of an ATM
                    SNC (VP or VC), ST_SIMPLE is used to specify a
                    'plain' (hard or regular) PVC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ST_SIMPLE"/>
      <xsd:enumeration value="ST_ADD_DROP_A"/>
      <xsd:enumeration value="ST_ADD_DROP_Z"/>
      <xsd:enumeration value="ST_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_ADD_DROP"/>
      <xsd:enumeration value="ST_OPEN_ADD_DROP"/>
      <xsd:enumeration value="ST_EXPLICIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SoftwareVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The OS product software version</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="StaticProtectionLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The StaticProtectionLevel with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:StaticProtectionLevelEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="StaticProtectionLevelEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The static protection level is a statement of the
                    internal resiliency of the SNC (internal to the
                    subnetwork). The more resilient an SNC is, the more
                    bandwidth it will consume.</p>
        <p>The protection level does not have any bearing on the
                    externally visible shape and traffic flows of the
                    SNC (in non-failure cases). For a detailed
                    description of the use of this attribute, see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="PREEMPTIBLE"/>
      <xsd:enumeration value="UNPROTECTED"/>
      <xsd:enumeration value="PARTIALLY_PROTECTED"/>
      <xsd:enumeration value="FULLY_PROTECTED"/>
      <xsd:enumeration value="HIGHLY_PROTECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationModeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Within the facade definition, the CTP/FTP can act as
                    an aggregate of associated G.805 TCPs, G.805
                    Termination Functions and G.805 CPs at one or more
                    LayerRates. The CTP is contained within a PTP or FTP.</p>
        <p>The TerminationMode attribute indicates and controls
                    the connection of the named CP at a specified
                    LayerRate to the dedicated G.805 TCP and associated
                    G.805 Termination Function at the same LayerRate
                    within the CTP/FTP.</p>
        <p>The TerminationMode is used, for example, to control
                    the Termination and mapping to VT1.5 of an STS1
                    Trail within an OC3 port. This capability could
                    potentially be used to terminate an STS1 backbone
                    Trail within a lower order mux that has the
                    capability to alternatively cross-connect the STS1
                    unterminated. The same capability is used in SDH and
                    is potentially applicable to any LayerRate.</p>
        <p>TerminationMode has the following values</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TM_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can not be mapped (i.e., it has
                            no contained potential CTPs). This indicates
                            that an SNC/crossconnect can be used to
                            connect the G.805 TCP of the CTP to the
                            connection point of another CTP/FTP. This
                            only applies to CTPs that connect on their
                            server side and are related to the
                            containing PTP/FTP on their client side.</p>
            <p>FTP: The FTP can not be mapped on the server
                            side (i.e., it has no contained potential
                            CTPs on the server side). This indicates
                            that an SNC/crossconnect can be used to
                            connect the G.805 TCP of the FTP to the
                            connection point of another CTP/FTP. This
                            only applies to FTPs that connect on their
                            server side and do not support IM (Inverse
                            Multiplexing).</p>
            <p>PTP: This is the only legal value for a PTP</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_NEITHER_TERMINATED_NOR_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped and currently is
                            (i.e., it has contained actual CTPs). This
                            indicates that the G.805 CPs adapted from
                            the corresponding G.805 Termination Function
                            within the CTP aggregate are available to
                            provide client layer capacity (e.g. STS1
                            terminated and mapped to VT1.5 i.e.
                            channelized). In this state the TCP will be
                            sourcing and sinking traffic. This is only a
                            valid value for CTPs that support client
                            adaptation.</p>
            <p>FTP: The FTP can be mapped on the server side
                            and currently is (i.e., it has contained
                            actual CTPs on the server side). This
                            indicates that the FTP supports IM (Inverse
                            Multiplexing) and the server side contained
                            CTPs (if any) are available for connection
                            as the FTP is actively assembling the
                            fragments of the IM. This value is not valid
                            for an FTP that does not support IM. (see
                            layering for more details).</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped but currently is
                            not (i.e., it does have contained potential
                            CTPs, but currently has no contained actual
                            CTPs). This indicates that the G.805 CP
                            aggregated in the CTP is not connected to a
                            TCP (that would be aggregated in the same
                            CTP) and therefore the CTP is available for
                            SNC/crossconnect connectivity (e.g. STS1 not
                            terminated and not mapped to VT1.5i.e. not
                            channelized).</p>
            <p>FTP: The FTP can be mapped on the server side
                            but currently is not (i.e., it does have
                            contained potential CTPs on the server side,
                            but currently has no contained actual CTPs
                            on the server side). This indicates that the
                            FTP supports IM (Inverse Multiplexing) but
                            the IM function is not active and the TCP
                            within the FTP is available for external
                            SNC/crossconnect connectivity.</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TransmissionDescriptorStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Contains the state of consistency between a TP and
                    its associated TransmissionDescriptor.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TMD_MISSING"/>
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="APPLIED"/>
      <xsd:enumeration value="MISMATCH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="TopologyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The Topology with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:TopologyEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="TopologyEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>TopologyType is used to describe the subnetwork
                    configuration. The EMS shall be capable of providing
                    a SubNetwork Connection through any physical
                    termination point of any managed element that
                    belongs to the Subnetwork.</p>
        <p>Composite subnetworks (i.e. containing other
                    Subnetworks) are not supported in this release of
                    the interface</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="TOPO_SINGLETON">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SINGLETON, which is used for a single NE
                            (of any type) that is managed independently
                            of its Topological Link connectivity to
                            other NEs. It may for example be a member of
                            a ring that is managed by a number of EMSes.
                            It is acceptable for an EMS to represent all
                            NEs as being in Singleton subnetworks
                            regardless of the actual network
                            configuration. A singleton subnetwork does
                            not contain internal topological links.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_CHAIN">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_CHAIN, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a chain.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_PSR, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a ring that is capable of
                            supporting subnetwork connection protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_PSR, which is used to cover the
                            case where two or more NEs of a PS ring (but
                            not the entire ring) are managed by the same EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SPRING, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a complete ring that supports
                            Shared Line Protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_SPRING, which is used to cover
                            cases where two or more NEs of an SP ring
                            (but not the entire ring) are managed by one EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_MESH">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_MESH, which is used to cover an
                            arbitrary set of two or more NEs not covered
                            by any other type.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A CTP/FTP may be involved in zero, one, or many
                    connections. The value TPConnectionState indicates
                    the degree to which a CTP/FTP is used. The values
                    TPCS_SOURCE_CONNECTED and TPCS_SINK_CONNECTED
                    reflect the presence of a one way connection. The
                    value TPCS_BI_CONNECTED means that the TP is both
                    sink and source connected.</p>
        <p>If an EMS cannot report whether the source of the TP
                    is connected or the sink is connected,
                    TPCS_BI_CONNECTED may be reported by that EMS.</p>
        <p>The value TPCS_NA is used for PTPs and TPPools.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPCS_NA"/>
      <xsd:enumeration value="TPCS_SOURCE_CONNECTED"/>
      <xsd:enumeration value="TPCS_SINK_CONNECTED"/>
      <xsd:enumeration value="TPCS_BI_CONNECTED"/>
      <xsd:enumeration value="TPCS_NOT_CONNECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointProtectionAssociationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>tpProtectionAssociation expresses constraints on
                    PTPs/CTPs/FTPs for PSR connection management.</p>
        <p>In a multi-layer subnetwork, say 'a', 'b', 'c' are
                    edge points. Suppose, for example, a three-ended
                    connection is sought from 'a' to 'b', where 'b' is
                    one of the endpoints. If 'c' is the constrained
                    choice for 'b' as the other end of the three- ended
                    connection,then 'b' and 'c' are said to be
                    associated by a ] protectionAssociation. The
                    tpProtectionAssociation is set to TPPA_PSR_RELATED
                    in 'b' and 'c', and getAssociatedTP(b) returns c and
                    getAssociatedTP(c) returns b.</p>
        <p>In all other cases, tpProtectionAssociation is set to TPPA_NA.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPPA_NA"/>
      <xsd:enumeration value="TPPA_PSR_RELATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:simpleType name="TerminationPointRole">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the enumeration of all possible end point
                    roles of a TP of an SNC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CM_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a connection matrix (CM) end point the
                            span of the SNC starts at a G.805 CP with a
                            fixed or flexible connection through the ME
                            at the SNC layer, i.e. the connectable layer
                            of the end point.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="LC_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a link connection (LC) end point
                            connectivity is adapted from a server layer
                            and the span of the SNC starts with a G.805
                            TCP with mapping mode set to TM_TERMINATED_ AND_AVAILABLE_FOR_MAPPING.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of EndPointRoles.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="role" type="tns:EndPointRoleType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type indicates the end point role of an end
                    TP. See R_TMF518_NRF_I_0026.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="role" type="tns:TerminationPointRole">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the role of the end
                            TP specified by the tpIndex.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tpIndex" type="xsd:unsignedInt">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the index of the end
                            TP within the end list.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="VersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The active software version of the ManagedElement</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=7</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/ctp/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/ctp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP CTP XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=21"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--=================-->
  <xsd:element name="ctp" type="tns:ConnectionTerminationPointType"/>
  <!--=================-->
  <xsd:complexType name="ConnectionTerminationPointType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the ConnectionTerminationPoint
                    mTOP network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="direction" nillable="true" type="com:DirectionalityType"/>
          <xsd:element minOccurs="0" name="tpProtectionAssociation" nillable="true" type="com:TerminationPointProtectionAssociationType"/>
          <xsd:element minOccurs="0" name="isEdgePoint" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the TP is an edge point
                                    of at least one subnetwork, i.e. if
                                    it is an end point of a potential
                                    inter-subnetwork topological link.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isEquipmentProtected" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The attribute indicates whether or
                                    not the TP is supported by a
                                    protected equipment.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    egress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ingressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    eingress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionState" nillable="true" type="com:TerminationPointConnectionStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is only applicable to
                                    CTPs and FTPs. If the source is
                                    connected to one entity and the sink
                                    is connected to another entity then
                                    the value of this attribute is TPCS_BI_CONNECTED.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="tpMappingMode" nillable="true" type="com:TerminationModeType"/>
          <xsd:element minOccurs="0" name="ingressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Connection Termination
                                    Point may have an optional reference
                                    to an ingress (incoming)
                                    Transmission Descriptor. The
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Ingress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Egress Descriptor name should either
                                    be that of a Transmission Descriptor
                                    or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Connection Termination
                                    Point may have an optional reference
                                    to an egress (outgoing) Transmission
                                    Descriptor. The Transmission
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Egress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Ingress Descriptor name should
                                    either be that of a Transmission
                                    Descriptor or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of transmission parameters
                                    which can be set and/or retrieved on
                                    the TP at a specified layer. This
                                    attribute must contain the complete
                                    set of layer rates represented by a
                                    CTP - even if they have no
                                    parameters associated with them. The
                                    layerRates are listed in the order
                                    of their client-server relationship
                                    (see layering for more details).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this TP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="ConnectionTerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of ConnectionTerminationPoints.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:ctp"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" version="1.0" xmlns:coi="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:itu="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP XML CommonResourceInfo structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=19"/>
  <!--=================-->
  <xsd:element name="commonResourceInfo" substitutionGroup="coi:commonObjectInfo" type="tns:CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition for common resource info</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines attributes common to all mTOP
                    resource objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="coi:CommonObjectInfoType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="source" nillable="true" type="tns:SourceType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the object was
                                    discovered or entered in OS inventory.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="networkAccessDomain" nillable="true" type="gen:NetworkAccessDomainType"/>
          <xsd:element minOccurs="0" name="meiAttributes" nillable="true" type="gen:MultiEventInventoryAttributesType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is used when a object
                                    instance is embedded in the
                                    inventory      layout payload of a
                                    Multi-Event Inventory (MEI)
                                    notification. It provides the
                                    time at which the NE detected the
                                    inventory change (if available) and
                                    an indication      of the type of
                                    inventory update, e.g., Object Creation.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="resourceState" nillable="true" type="tns:ResourceStateType"/>
          <xsd:element name="ituStateAndStatusList" type="itu:ItuStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates whether the object was discovered from the
                    network, or was entered into the OS's inventory.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:SourceEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SourceEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NETWORK_ME">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered directly from the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was entered into an OS on the CCV,
                            e.g., OS GUI or file transfer to the OS from
                            some other system.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NETWORK_EMS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered from an EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates the state of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceStateEnumType">
        <xsd:attribute name="overlap" type="xsd:string" use="optional"/>
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ResourceStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="INSTALLING"/>
      <xsd:enumeration value="INSTALLING_ACCEPTED"/>
      <xsd:enumeration value="INSTALLING_COMMISSIONED"/>
      <xsd:enumeration value="INSTALLING_DELIVERED"/>
      <xsd:enumeration value="INSTALLING_INSTALLED"/>
      <xsd:enumeration value="INSTALLING_INTEGRATED"/>
      <xsd:enumeration value="INSTALLING_REJECTED"/>
      <xsd:enumeration value="NON_WORKING"/>
      <xsd:enumeration value="PLANNING"/>
      <xsd:enumeration value="PLANNING_INITIAL_PLAN"/>
      <xsd:enumeration value="PLANNING_ORDERED"/>
      <xsd:enumeration value="PLANNING_PLANNED"/>
      <xsd:enumeration value="RETIRING"/>
      <xsd:enumeration value="RETIRING_DECOMMISSIONED"/>
      <xsd:enumeration value="RETIRING_DEINSTALLED"/>
      <xsd:enumeration value="RETIRING_DEINTEGRATED"/>
      <xsd:enumeration value="RETIRING_RECOVERED"/>
      <xsd:enumeration value="RETIRING_STORED"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_ACTIVE"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_UNAVAILABLE"/>
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="WORKING"/>
      <xsd:enumeration value="WORKING_ACTIVATED"/>
      <xsd:enumeration value="WORKING_DEACTIVATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ObjectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the enumeration of all the known object type
                    short names related to resources (at the time of
                    this module definition). It is only provided as an
                    implementation helper. For details of all object
                    types and their naming refer to SD2-7 ObjectNaming
                    (FMW DDP).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AID">
        <xsd:annotation>
          <xsd:documentation>Alarm IDentifier (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASA">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASAP">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment Profile (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CTP">
        <xsd:annotation>
          <xsd:documentation>Connection Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EH">
        <xsd:annotation>
          <xsd:documentation>Equipment Holder (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EPG">
        <xsd:annotation>
          <xsd:documentation>Equipment Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EQ">
        <xsd:annotation>
          <xsd:documentation>Equipment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FD">
        <xsd:annotation>
          <xsd:documentation>Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FDFR">
        <xsd:annotation>
          <xsd:documentation>Flow Domain Fragment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FTP">
        <xsd:annotation>
          <xsd:documentation>Flow Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GTP">
        <xsd:annotation>
          <xsd:documentation>Group Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MD">
        <xsd:annotation>
          <xsd:documentation>Management Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ME">
        <xsd:annotation>
          <xsd:documentation>Managed Element (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MFD">
        <xsd:annotation>
          <xsd:documentation>Matrix Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MLSN">
        <xsd:annotation>
          <xsd:documentation>Multi Layer Subnetwork (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>Operations System (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PG">
        <xsd:annotation>
          <xsd:documentation>Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PMP">
        <xsd:annotation>
          <xsd:documentation>Performance Monitoring Point (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PTP">
        <xsd:annotation>
          <xsd:documentation>Physical Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SNC">
        <xsd:annotation>
          <xsd:documentation>Subnetwork Connection (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCPROFILE">
        <xsd:annotation>
          <xsd:documentation>Traffic Condifitioning Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCAPP">
        <xsd:annotation>
          <xsd:documentation>Threshold Crossing Alert
                        Parameter Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TL">
        <xsd:annotation>
          <xsd:documentation>Topological Link (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TMD">
        <xsd:annotation>
          <xsd:documentation>Transmission Descriptor (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TPPOOL">
        <xsd:annotation>
          <xsd:documentation>Termination Point Pool (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=19</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T state or status
                parameters supported in mTOP</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="x721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="x721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="x721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="x721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="x721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="m3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="m3100.CircuitPackType" type="tns:M3100.CircuitPackTypeType"/>
      <xsd:element minOccurs="0" name="x721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:element minOccurs="0" name="x721.State" type="tns:X721.StateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="X721.OperationalStateType">
    <xsd:annotation>
      <xsd:documentation>Oper[ational] State parameter from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DISABLED"/>
      <xsd:enumeration value="UNABLED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AdministrativeStateType">
    <xsd:annotation>
      <xsd:documentation>Admin[istrative] State parameter from
                ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="LOCKED"/>
      <xsd:enumeration value="UNLOCKED"/>
      <xsd:enumeration value="SHUTTING_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UsageStateType">
    <xsd:annotation>
      <xsd:documentation>Usage State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IDLE"/>
      <xsd:enumeration value="ACTIVE"/>
      <xsd:enumeration value="BUSY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AvailabilityStatusType">
    <xsd:annotation>
      <xsd:documentation>Avail[ability] Status based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="INTypeEST"/>
      <xsd:enumeration value="FAILED"/>
      <xsd:enumeration value="POWER_OFF"/>
      <xsd:enumeration value="OFF_LINE"/>
      <xsd:enumeration value="OFF_DUTY"/>
      <xsd:enumeration value="DEPENDENCY"/>
      <xsd:enumeration value="DEGRADED"/>
      <xsd:enumeration value="NOT_INSTALLED"/>
      <xsd:enumeration value="LOG_FULL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.ControlStatusType">
    <xsd:annotation>
      <xsd:documentation>Control Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="SUBJECTTypeOTypeEST"/>
      <xsd:enumeration value="PART_OF_SERVICES_LOCKED"/>
      <xsd:enumeration value="RESERVED_FORTypeEST"/>
      <xsd:enumeration value="SUSPENDED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.HolderStatusType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HOLDER_EMPTY"/>
      <xsd:enumeration value="INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="NOT_INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="UNKNOWNTypeYPE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.CircuitPackTypeType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UnkownstatusType">
    <xsd:annotation>
      <xsd:documentation>Unknown Status parameter based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="X721.StateType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="X721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="X721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="X721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="X721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="X721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="M3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="X721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=21</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:lr="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--==============-->
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP XML LayeredParameters structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=20"/>
  <!--==============-->
  <xsd:element name="transmissionParametersList" nillable="true" type="tns:LayeredParametersListType"/>
  <!--==============-->
  <xsd:complexType name="LayeredParametersListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is used in the TP definition and as a
                    consequence is available for use in a connection
                    specification where a TP is specified.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:transmissionParameters"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--==============-->
  <xsd:element name="transmissionParameters" nillable="true" type="tns:LayeredParametersType"/>
  <!--==============-->
  <xsd:complexType name="LayeredParametersType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is a structure that includes the layer rate with
                    the applicable list of transmissions parameters</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="layerRate" type="lr:LayerRateType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the layer to which the parameters apply.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="parameterList" type="gen:NameAndValueStringListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of tranmission parameters as a
                            generic pair of name and value strings.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific containment for vendor
                            extensions of the list of tranmission parameters.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=20</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP layer rates.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:element name="layerRateListType" type="tns:LayerRateListType"/>
  <!--================-->
  <xsd:complexType name="LayerRateListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of LayerRates</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="layerRate" nillable="true" type="tns:LayerRateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="LayerRateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          The LayerRateType value is used to identify:
          <li>the Layer of a PTP/CTP,</li>
          <li>the characteristic information of a PTP/FTP,</li>
          <li>the Layer/Rate of a connection.</li>
        </p>
        <p>Each LayerRateType may be used in conjunction with a
                    CTP/PTP/FTP of that layer. In the SDH definitions,
                    the G.805 CP and G.805 Termination Function layer
                    names differ, for example TU12 is used for the G.805
                    CP and VC12 for the corresponding G.805 Termination
                    Function. In this interface definition the TU and VC
                    definitions have been combined into a single
                    composite layer and this has been named to include
                    the equivalent SONET layer, e.g. LR_VT2_andTypeU12_VC12.</p>
        <p>
          For more details refer to the following supporting
                    document:
          <li>layering documentfor
                        all layering concepts</li>
          <li>LayerRates document for information about
                        recognized values in MTOSI</li>
        </p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:LayerRateEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="LayerRateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="LR_DS0_64K"/>
      <xsd:enumeration value="LR_DSL"/>
      <xsd:enumeration value="LR_Not_Applicable"/>
      <xsd:enumeration value="LR_Async_FOTS_150M"/>
      <xsd:enumeration value="LR_Async_FOTS_417M"/>
      <xsd:enumeration value="LR_Async_FOTS_560M"/>
      <xsd:enumeration value="LR_Async_FOTS_565M"/>
      <xsd:enumeration value="LR_Async_FOTS_1130M"/>
      <xsd:enumeration value="LR_Async_FOTS_1G7"/>
      <xsd:enumeration value="LR_Async_FOTS_1G8"/>
      <xsd:enumeration value="LR_ATM_NI"/>
      <xsd:enumeration value="LR_ATM_VC"/>
      <xsd:enumeration value="LR_ATM_VP"/>
      <xsd:enumeration value="LR_D1_Video"/>
      <xsd:enumeration value="LR_DIGITAL_SIGNAL_RATE"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_DSR_1_5M"/>
      <xsd:enumeration value="LR_DSR_2M"/>
      <xsd:enumeration value="LR_DSR_4M"/>
      <xsd:enumeration value="LR_DSR_6M"/>
      <xsd:enumeration value="LR_DSR_8M"/>
      <xsd:enumeration value="LR_DSR_16M"/>
      <xsd:enumeration value="LR_DSR_34M"/>
      <xsd:enumeration value="LR_E2_8M"/>
      <xsd:enumeration value="LR_E5_565M"/>
      <xsd:enumeration value="LR_Encapsulation"/>
      <xsd:enumeration value="LR_Fragment"/>
      <xsd:enumeration value="LR_DSR_45M"/>
      <xsd:enumeration value="LR_DSR_140M"/>
      <xsd:enumeration value="LR_DSR_565M"/>
      <xsd:enumeration value="LR_DSR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_DSR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OC1_STM0"/>
      <xsd:enumeration value="LR_DSR_OC3_STM1"/>
      <xsd:enumeration value="LR_DSR_2xSTM1"/>
      <xsd:enumeration value="LR_DSR_OC12_STM4"/>
      <xsd:enumeration value="LR_DSR_OC24_STM8"/>
      <xsd:enumeration value="LR_DSR_OC48_and_STM16"/>
      <xsd:enumeration value="LR_DSR_OC192_and_STM64"/>
      <xsd:enumeration value="LR_DSR_OC768_and_STM256"/>
      <xsd:enumeration value="LR_DSR_OTU1"/>
      <xsd:enumeration value="LR_DSR_OTU2"/>
      <xsd:enumeration value="LR_DSR_OTU3"/>
      <xsd:enumeration value="LR_E1_2M"/>
      <xsd:enumeration value="LR_E20_2x2M"/>
      <xsd:enumeration value="LR_E30_8x2M"/>
      <xsd:enumeration value="LR_E3_34M"/>
      <xsd:enumeration value="LR_E4_140M"/>
      <xsd:enumeration value="LR_ESCON"/>
      <xsd:enumeration value="LR_Ethernet"/>
      <xsd:enumeration value="LR_ETR"/>
      <xsd:enumeration value="LR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_FC_12_133M"/>
      <xsd:enumeration value="LR_FC_25_266M"/>
      <xsd:enumeration value="LR_FC_50_531M"/>
      <xsd:enumeration value="LR_FC_100_1063M"/>
      <xsd:enumeration value="LR_FDDI"/>
      <xsd:enumeration value="LR_FICON"/>
      <xsd:enumeration value="LR_FR_IF"/>
      <xsd:enumeration value="LR_FR_PVC"/>
      <xsd:enumeration value="LR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_ISDN_BRI"/>
      <xsd:enumeration value="LR_Line_OC1_STS1_and_MS_STM0"/>
      <xsd:enumeration value="LR_Line_OC3_STS3_and_MS_STM1"/>
      <xsd:enumeration value="LR_Line_OC12_STS12_and_MS_STM4"/>
      <xsd:enumeration value="LR_Line_OC24_STS24_and_MS_STM8"/>
      <xsd:enumeration value="LR_Line_OC48_STS48_and_MS_STM16"/>
      <xsd:enumeration value="LR_Line_OC192_STS192_and_MS_STM64"/>
      <xsd:enumeration value="LR_Line_OC768_STS768_and_MS_STM256"/>
      <xsd:enumeration value="LR_Low_Order_TU3_VC3"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3"/>
      <xsd:enumeration value="LR_STS3c_and_AU4_VC4"/>
      <xsd:enumeration value="LR_STS4c_and_VC3_4c"/>
      <xsd:enumeration value="LR_STS5c_and_VC3_5c"/>
      <xsd:enumeration value="LR_STS6c_and_VC4_2c"/>
      <xsd:enumeration value="LR_STS7c_and_VC3_7c"/>
      <xsd:enumeration value="LR_STS8c_and_VC3_8c"/>
      <xsd:enumeration value="LR_STS9c_and_VC4_3c"/>
      <xsd:enumeration value="LR_Optical_Channel"/>
      <xsd:enumeration value="LR_Optical_Multiplex_Section"/>
      <xsd:enumeration value="LR_OPTICAL_SECTION"/>
      <xsd:enumeration value="LR_Optical_Transmission_Section"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_PHYSICAL_MEDIALESS"/>
      <xsd:enumeration value="LR_PHYSICAL_OPTICAL"/>
      <xsd:enumeration value="LR_POTS"/>
      <xsd:enumeration value="LR_Section_OC1_STS1_and_RS_STM0"/>
      <xsd:enumeration value="LR_Section_OC3_STS3_and_RS_STM1"/>
      <xsd:enumeration value="LR_Section_OC12_STS12_and_RS_STM4"/>
      <xsd:enumeration value="LR_Section_OC24_STS24_and_RS_STM8"/>
      <xsd:enumeration value="LR_Section_OC48_STS48_and_RS_STM16"/>
      <xsd:enumeration value="LR_Section_OC192_STS192_and_RS_STM64"/>
      <xsd:enumeration value="LR_Section_OC768_STS768_and_RS_STM256"/>
      <xsd:enumeration value="LR_STS1_and_AU3_High_Order_VC3"/>
      <xsd:enumeration value="LR_STS2c_and_VC3_2c"/>
      <xsd:enumeration value="LR_STS10c_and_VC3_10c"/>
      <xsd:enumeration value="LR_STS11c_and_VC3_11c"/>
      <xsd:enumeration value="LR_STS12c_and_VC4_4c"/>
      <xsd:enumeration value="LR_STS13c_and_VC3_13c"/>
      <xsd:enumeration value="LR_STS14c_and_VC3_14c"/>
      <xsd:enumeration value="LR_STS15c_and_VC4_5c"/>
      <xsd:enumeration value="LR_STS16c_and_VC3_16c"/>
      <xsd:enumeration value="LR_STS17c_and_VC3_17c"/>
      <xsd:enumeration value="LR_STS18c_and_VC4_6c"/>
      <xsd:enumeration value="LR_STS19c_and_VC3_19c"/>
      <xsd:enumeration value="LR_STS20c_and_VC3_20c"/>
      <xsd:enumeration value="LR_STS21c_and_VC4_7c"/>
      <xsd:enumeration value="LR_STS22c_and_VC3_22c"/>
      <xsd:enumeration value="LR_STS23c_and_VC3_23c"/>
      <xsd:enumeration value="LR_STS24c_and_VC4_8c"/>
      <xsd:enumeration value="LR_STS25c_and_VC3_25c"/>
      <xsd:enumeration value="LR_STS26c_and_VC3_26c"/>
      <xsd:enumeration value="LR_STS27c_and_VC4_9c"/>
      <xsd:enumeration value="LR_STS28c_and_VC3_28c"/>
      <xsd:enumeration value="LR_STS29c_and_VC3_29c"/>
      <xsd:enumeration value="LR_STS30c_and_VC4_10c"/>
      <xsd:enumeration value="LR_STS31c_and_VC3_31c"/>
      <xsd:enumeration value="LR_STS32c_and_VC3_32c"/>
      <xsd:enumeration value="LR_STS33c_and_VC4_11c"/>
      <xsd:enumeration value="LR_STS34c_and_VC3_34c"/>
      <xsd:enumeration value="LR_STS35c_and_VC3_35c"/>
      <xsd:enumeration value="LR_STS36c_and_VC4_12c"/>
      <xsd:enumeration value="LR_STS37c_and_VC3_37c"/>
      <xsd:enumeration value="LR_STS38c_and_VC3_38c"/>
      <xsd:enumeration value="LR_STS39c_and_VC4_13c"/>
      <xsd:enumeration value="LR_STS40c_and_VC3_40c"/>
      <xsd:enumeration value="LR_STS41c_and_VC3_41c"/>
      <xsd:enumeration value="LR_STS42c_and_VC4_14c"/>
      <xsd:enumeration value="LR_STS43c_and_VC3_43c"/>
      <xsd:enumeration value="LR_STS44c_and_VC3_44c"/>
      <xsd:enumeration value="LR_STS45c_and_VC4_15c"/>
      <xsd:enumeration value="LR_STS46c_and_VC3_46c"/>
      <xsd:enumeration value="LR_STS47c_and_VC3_47c"/>
      <xsd:enumeration value="LR_STS48c_and_VC4_16c"/>
      <xsd:enumeration value="LR_STS49c_and_VC3_49c"/>
      <xsd:enumeration value="LR_STS50c_and_VC3_50c"/>
      <xsd:enumeration value="LR_STS51c_and_VC4_17c"/>
      <xsd:enumeration value="LR_STS52c_and_VC3_52c"/>
      <xsd:enumeration value="LR_STS53c_and_VC3_53c"/>
      <xsd:enumeration value="LR_STS54c_and_VC4_18c"/>
      <xsd:enumeration value="LR_STS55c_and_VC3_55c"/>
      <xsd:enumeration value="LR_STS56c_and_VC3_56c"/>
      <xsd:enumeration value="LR_STS57c_and_VC4_19c"/>
      <xsd:enumeration value="LR_STS58c_and_VC3_58c"/>
      <xsd:enumeration value="LR_STS59c_and_VC3_59c"/>
      <xsd:enumeration value="LR_STS60c_and_VC4_20c"/>
      <xsd:enumeration value="LR_STS61c_and_VC3_61c"/>
      <xsd:enumeration value="LR_STS62c_and_VC3_62c"/>
      <xsd:enumeration value="LR_STS63c_and_VC4_21c"/>
      <xsd:enumeration value="LR_STS64c_and_VC3_64c"/>
      <xsd:enumeration value="LR_STS65c_and_VC3_65c"/>
      <xsd:enumeration value="LR_STS66c_and_VC4_22c"/>
      <xsd:enumeration value="LR_STS67c_and_VC3_67c"/>
      <xsd:enumeration value="LR_STS68c_and_VC3_68c"/>
      <xsd:enumeration value="LR_STS69c_and_VC4_23c"/>
      <xsd:enumeration value="LR_STS70c_and_VC3_70c"/>
      <xsd:enumeration value="LR_STS71c_and_VC3_71c"/>
      <xsd:enumeration value="LR_STS72c_and_VC4_24c"/>
      <xsd:enumeration value="LR_STS73c_and_VC3_73c"/>
      <xsd:enumeration value="LR_STS74c_and_VC3_74c"/>
      <xsd:enumeration value="LR_STS75c_and_VC4_25c"/>
      <xsd:enumeration value="LR_STS76c_and_VC3_76c"/>
      <xsd:enumeration value="LR_STS77c_and_VC3_77c"/>
      <xsd:enumeration value="LR_STS78c_and_VC4_26c"/>
      <xsd:enumeration value="LR_STS79c_and_VC3_79c"/>
      <xsd:enumeration value="LR_STS80c_and_VC3_80c"/>
      <xsd:enumeration value="LR_STS81c_and_VC4_27c"/>
      <xsd:enumeration value="LR_STS82c_and_VC3_82c"/>
      <xsd:enumeration value="LR_STS83c_and_VC3_83c"/>
      <xsd:enumeration value="LR_STS84c_and_VC4_28c"/>
      <xsd:enumeration value="LR_STS85c_and_VC3_85c"/>
      <xsd:enumeration value="LR_STS86c_and_VC3_86c"/>
      <xsd:enumeration value="LR_STS87c_and_VC4_29c"/>
      <xsd:enumeration value="LR_STS88c_and_VC3_88c"/>
      <xsd:enumeration value="LR_STS89c_and_VC3_89c"/>
      <xsd:enumeration value="LR_STS90c_and_VC4_30c"/>
      <xsd:enumeration value="LR_STS91c_and_VC3_91c"/>
      <xsd:enumeration value="LR_STS92c_and_VC3_92c"/>
      <xsd:enumeration value="LR_STS93c_and_VC4_31c"/>
      <xsd:enumeration value="LR_STS94c_and_VC3_94c"/>
      <xsd:enumeration value="LR_STS95c_and_VC3_95c"/>
      <xsd:enumeration value="LR_STS96c_and_VC4_32c"/>
      <xsd:enumeration value="LR_STS97c_and_VC3_97c"/>
      <xsd:enumeration value="LR_STS98c_and_VC3_98c"/>
      <xsd:enumeration value="LR_STS99c_and_VC4_33c"/>
      <xsd:enumeration value="LR_STS100c_and_VC3_100c"/>
      <xsd:enumeration value="LR_STS101c_and_VC3_101c"/>
      <xsd:enumeration value="LR_STS102c_and_VC4_34c"/>
      <xsd:enumeration value="LR_STS103c_and_VC3_103c"/>
      <xsd:enumeration value="LR_STS104c_and_VC3_104c"/>
      <xsd:enumeration value="LR_STS105c_and_VC4_35c"/>
      <xsd:enumeration value="LR_STS106c_and_VC3_106c"/>
      <xsd:enumeration value="LR_STS107c_and_VC3_107c"/>
      <xsd:enumeration value="LR_STS108c_and_VC4_36c"/>
      <xsd:enumeration value="LR_STS109c_and_VC3_109c"/>
      <xsd:enumeration value="LR_STS110c_and_VC3_110c"/>
      <xsd:enumeration value="LR_STS111c_and_VC4_37c"/>
      <xsd:enumeration value="LR_STS112c_and_VC3_112c"/>
      <xsd:enumeration value="LR_STS113c_and_VC3_113c"/>
      <xsd:enumeration value="LR_STS114c_and_VC4_38c"/>
      <xsd:enumeration value="LR_STS115c_and_VC3_115c"/>
      <xsd:enumeration value="LR_STS116c_and_VC3_116c"/>
      <xsd:enumeration value="LR_STS117c_and_VC4_39c"/>
      <xsd:enumeration value="LR_STS118c_and_VC3_118c"/>
      <xsd:enumeration value="LR_STS119c_and_VC3_119c"/>
      <xsd:enumeration value="LR_STS120c_and_VC4_40c"/>
      <xsd:enumeration value="LR_STS121c_and_VC3_121c"/>
      <xsd:enumeration value="LR_STS122c_and_VC3_122c"/>
      <xsd:enumeration value="LR_STS123c_and_VC4_41c"/>
      <xsd:enumeration value="LR_STS124c_and_VC3_124c"/>
      <xsd:enumeration value="LR_STS125c_and_VC3_125c"/>
      <xsd:enumeration value="LR_STS126c_and_VC4_42c"/>
      <xsd:enumeration value="LR_STS127c_and_VC3_127c"/>
      <xsd:enumeration value="LR_STS128c_and_VC3_128c"/>
      <xsd:enumeration value="LR_STS129c_and_VC4_43c"/>
      <xsd:enumeration value="LR_STS130c_and_VC3_130c"/>
      <xsd:enumeration value="LR_STS131c_and_VC3_131c"/>
      <xsd:enumeration value="LR_STS132c_and_VC4_44c"/>
      <xsd:enumeration value="LR_STS133c_and_VC3_133c"/>
      <xsd:enumeration value="LR_STS134c_and_VC3_134c"/>
      <xsd:enumeration value="LR_STS135c_and_VC4_45c"/>
      <xsd:enumeration value="LR_STS136c_and_VC3_136c"/>
      <xsd:enumeration value="LR_STS137c_and_VC3_137c"/>
      <xsd:enumeration value="LR_STS138c_and_VC4_46c"/>
      <xsd:enumeration value="LR_STS139c_and_VC3_139c"/>
      <xsd:enumeration value="LR_STS140c_and_VC3_140c"/>
      <xsd:enumeration value="LR_STS141c_and_VC4_47c"/>
      <xsd:enumeration value="LR_STS142c_and_VC3_142c"/>
      <xsd:enumeration value="LR_STS143c_and_VC3_143c"/>
      <xsd:enumeration value="LR_STS144c_and_VC4_48c"/>
      <xsd:enumeration value="LR_STS145c_and_VC3_145c"/>
      <xsd:enumeration value="LR_STS146c_and_VC3_146c"/>
      <xsd:enumeration value="LR_STS147c_and_VC4_49c"/>
      <xsd:enumeration value="LR_STS148c_and_VC3_148c"/>
      <xsd:enumeration value="LR_STS149c_and_VC3_149c"/>
      <xsd:enumeration value="LR_STS150c_and_VC4_50c"/>
      <xsd:enumeration value="LR_STS151c_and_VC3_151c"/>
      <xsd:enumeration value="LR_STS152c_and_VC3_152c"/>
      <xsd:enumeration value="LR_STS153c_and_VC4_51c"/>
      <xsd:enumeration value="LR_STS154c_and_VC3_154c"/>
      <xsd:enumeration value="LR_STS155c_and_VC3_155c"/>
      <xsd:enumeration value="LR_STS156c_and_VC4_52c"/>
      <xsd:enumeration value="LR_STS157c_and_VC3_157c"/>
      <xsd:enumeration value="LR_STS158c_and_VC3_158c"/>
      <xsd:enumeration value="LR_STS159c_and_VC4_53c"/>
      <xsd:enumeration value="LR_STS160c_and_VC3_160c"/>
      <xsd:enumeration value="LR_STS161c_and_VC3_161c"/>
      <xsd:enumeration value="LR_STS162c_and_VC4_54c"/>
      <xsd:enumeration value="LR_STS163c_and_VC3_163c"/>
      <xsd:enumeration value="LR_STS164c_and_VC3_164c"/>
      <xsd:enumeration value="LR_STS165c_and_VC4_55c"/>
      <xsd:enumeration value="LR_STS166c_and_VC3_166c"/>
      <xsd:enumeration value="LR_STS167c_and_VC3_167c"/>
      <xsd:enumeration value="LR_STS168c_and_VC4_56c"/>
      <xsd:enumeration value="LR_STS169c_and_VC3_169c"/>
      <xsd:enumeration value="LR_STS170c_and_VC3_170c"/>
      <xsd:enumeration value="LR_STS171c_and_VC4_57c"/>
      <xsd:enumeration value="LR_STS172c_and_VC3_172c"/>
      <xsd:enumeration value="LR_STS173c_and_VC3_173c"/>
      <xsd:enumeration value="LR_STS174c_and_VC4_58c"/>
      <xsd:enumeration value="LR_STS175c_and_VC3_175c"/>
      <xsd:enumeration value="LR_STS176c_and_VC3_176c"/>
      <xsd:enumeration value="LR_STS177c_and_VC4_59c"/>
      <xsd:enumeration value="LR_STS178c_and_VC3_178c"/>
      <xsd:enumeration value="LR_STS179c_and_VC3_179c"/>
      <xsd:enumeration value="LR_STS180c_and_VC4_60c"/>
      <xsd:enumeration value="LR_STS181c_and_VC3_181c"/>
      <xsd:enumeration value="LR_STS182c_and_VC3_182c"/>
      <xsd:enumeration value="LR_STS183c_and_VC4_61c"/>
      <xsd:enumeration value="LR_STS184c_and_VC3_184c"/>
      <xsd:enumeration value="LR_STS185c_and_VC3_185c"/>
      <xsd:enumeration value="LR_STS186c_and_VC4_62c"/>
      <xsd:enumeration value="LR_STS187c_and_VC3_187c"/>
      <xsd:enumeration value="LR_STS188c_and_VC3_188c"/>
      <xsd:enumeration value="LR_STS189c_and_VC4_63c"/>
      <xsd:enumeration value="LR_STS190c_and_VC3_190c"/>
      <xsd:enumeration value="LR_STS191c_and_VC3_191c"/>
      <xsd:enumeration value="LR_STS192c_and_VC4_64c"/>
      <xsd:enumeration value="LR_STS768c_and_VC4_256c"/>
      <xsd:enumeration value="LR_T1_and_DS1_1_5M"/>
      <xsd:enumeration value="LR_T2_and_DS2_6M"/>
      <xsd:enumeration value="LR_T3_and_DS3_45M"/>
      <xsd:enumeration value="LR_VT1_5_and_TU11_VC11"/>
      <xsd:enumeration value="LR_VT2_and_TU12_VC12"/>
      <xsd:enumeration value="LR_VT6_and_TU2_VC2"/>
      <!--The ones below were added in the MTOSI 2.1 release-->
      <xsd:enumeration value="LR_LAG_Fragment"/>
      <xsd:enumeration value="LR_DSR_10Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2.5Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10.7Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_11.1Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_LAN"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_WAN"/>
      <xsd:enumeration value="LR_DSR_40Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OTU2e"/>
      <xsd:enumeration value="LR_DSR_OTU3e1"/>
      <xsd:enumeration value="LR_DSR_OTU3e2"/>
      <xsd:enumeration value="LR_DSR_OTU4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_0"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_Flexible"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_4"/>
      <xsd:enumeration value="LR_Optical_Physical_Section"/>
      <xsd:enumeration value="LR_Optical_Physical_Section_Multilane"/>
      <xsd:enumeration value="LR_Section_OC3072_STS3072_and_RS_STM1024"/>
      <xsd:enumeration value="LR_Line_OC3072_STS3072_and_MS_STM1024"/>
      <xsd:enumeration value="LR_DSR_OC3072_and_STM1024"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported Alarm ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuArcStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T Alarm Reporting
                Control (ARC) state or status parameters supported in
                mTOP;    Each element of the list identifies a state or
                status and provides its relevant value.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="m3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="m3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="m3100.NALMTIInterval" type="tns:M3100.NALMTIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.NALMQIInterval" type="tns:M3100.NALMQIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
      <xsd:element minOccurs="0" name="m3100.State" type="tns:M3100.ArcStateListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="M3100.AlarmStatusType">
    <xsd:annotation>
      <xsd:documentation>Alarm Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CLEARED"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="CRITICAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcStateType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ALM"/>
      <xsd:enumeration value="NALM"/>
      <xsd:enumeration value="NALMTypeIMED_INHIBIT"/>
      <xsd:enumeration value="NALM_QUALIFIED_INHIBIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMTIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMQIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcQIStatusType">
    <xsd:annotation>
      <xsd:documentation>ARC QI Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="NALM_NOT_READY"/>
      <xsd:enumeration value="NALM_COUNT_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="M3100.ArcStateListType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="M3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="M3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="M3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=8</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/eh/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/eh/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP EH XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--=================-->
  <xsd:element name="eh" type="tns:EquipmentHolderType"/>
  <!--=================-->
  <xsd:complexType name="EquipmentHolderType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Equipment Holder mTOP
                    network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="isReportingAlarms" nillable="true" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="holderType" nillable="true" type="com:EquipmentHolderTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the type of equipment holder.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="acceptableEquipmentTypeList" nillable="true">
            <xsd:annotation>
              <xsd:documentation>
                <p>Represents the types of equipment
                                    objects that can be supported
                                    directly by the equipment holder.
                                    This is an empty list if the
                                    equipment holder can only contain
                                    other equipment holders.</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" name="acceptableEquipmentType" type="com:EquipmentObjectTypeType">
                  <xsd:annotation>
                    <xsd:documentation>
                      <p>Type of equipment object
                                    in equipment holder.</p>
                    </xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="expectedOrInstalledEquipmentRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The equipment object expected or
                                    installed in the equipment holder,
                                    if any. NULL if the equipment holder
                                    is empty or if it only contains
                                    other equipment holders.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="holderState" nillable="true" type="com:HolderStateType"/>
          <xsd:element minOccurs="0" name="location" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="manufacturer" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="manufactureDate" nillable="true" type="gen:ManufactureDateType"/>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this EH object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=9</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/epg/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:nrb.com="http://www.tmforum.org/mtop/nrb/xsd/com/v1" xmlns:pgp="http://www.tmforum.org/mtop/nra/xsd/pgp/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/epg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP EPGP XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=5"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pgp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=31"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--=================-->
  <xsd:element name="epgp" type="tns:EquipmentProtectionGroupType"/>
  <!--=================-->
  <xsd:complexType name="EquipmentProtectionGroupType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines all the
                    EquipmentProtectionGroup mTOP network resource
                    object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="type" nillable="true" type="com:EquipmentProtectionGroupTypeType"/>
          <xsd:element minOccurs="0" name="protectionSchemeState" nillable="true" type="nrb.com:ProtectionSchemeStateType"/>
          <xsd:element minOccurs="0" name="reversionMode" nillable="true" type="com:ReversionModeType"/>
          <xsd:element minOccurs="0" name="parameterList" nillable="true" type="pgp:ProtectionGroupParameterListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This contains a list for the known
                                    parameters of the equipment
                                    protection group. Non-applicable
                                    parameters and parameters for which
                                    the value is unknown to the EMS may
                                    be left out</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="protectedEquipmentRefList" nillable="true" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This provides a list of the protected
                                    equipment instances. For M:N
                                    equipment protection, this list
                                    would have N elements</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="protectingEquipmentRefList" nillable="true" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This provides a list of the
                                    protecting equipment instances. For
                                    M:N equipment protection, this list
                                    would have M elements</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this PGP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="EquipmentProtectionGroupListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of EquipmentProtectionGroups</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:epgp"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=5</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/com/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/com/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common
                type definitions used in some the mTOP XML Network
                Resource objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ProtectionSchemeStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionSchemeState with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionSchemeStateEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionSchemeStateEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection scheme state identifies the state in
                    which the protection scheme is in. Individual locks
                    can be reported through transmission parameters on
                    the appropriate TPs or equipment instances.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="PSS_UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>
            <p>Protection scheme state is unknown by the system.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PSS_AUTOMATIC">
        <xsd:annotation>
          <xsd:documentation>
            <p>It indicates partial locking of the entire group.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PSS_FORCED_OR_LOCKED_OUT">
        <xsd:annotation>
          <xsd:documentation>
            <p>It indicates that the entire group is locked.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=6</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common
                type definitions used in some the mTOP XML Network
                Resource Assurance objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:simpleType name="AcknowledgeIndicationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>AcknowledgeIndicationType describes the event
                    acknowledge state.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ACKNOWLEDGED">
        <xsd:annotation>
          <xsd:documentation>provided in case of manual or
                        auto acknowledgement</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNACKNOWLEDGED">
        <xsd:annotation>
          <xsd:documentation>provided if the event has not
                        been acknowledged but the OS supports
                        acknowledgement for this event or in the case
                        that the alarm has been previously acknowledged
                        and then unacknowledged</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NOT_APPLICABLE">
        <xsd:annotation>
          <xsd:documentation>provided in case the OS does not
                        support acknowledgement for this event or does
                        not support acknowledgement at all</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=====================-->
  <xsd:complexType name="AssignedSeverityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The assigned severity is allocated to a probable
                    cause using the alarm severity assignment profile.</p>
        <p>The identified probable cause should be raised with
                    the assigned severity.</p>
        <p>The assignment of severities is extended beyond
                    PerceivedSeverity to cover the case where:</p>
        <p>- no alarm should be raised: "NOT_ALARMED"</p>
        <p>- the EMS/NE is free to make a choice based upon its
                    local criteria: "FREE_CHOICE"</p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:AssignedSeverityEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="AssignedSeverityEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enum values of a probable cause.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="CRITICAL"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="NOT_ALARMED"/>
      <xsd:enumeration value="FREE_CHOICE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentProtectionGroupTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The EquipmentProtectionGroupType with MTOSI minor
                    version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentProtectionGroupTypeEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentProtectionGroupTypeEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The equipment protection group type is a string that
                    identifies the type of equipment protection. The
                    string can take on the following value:
                    "M_FOR_N." M:N equipment protection means
                    that M pieces of equipment protect N pieces of equipment.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="M_FOR_N"/>
      <xsd:enumeration value="M:N"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentSwitchReasonType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The equipment switch reason reflects the reason why a
                    switch occurred.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentSwitchReasonEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentSwitchReasonEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>EswitchReason is a string that can take           the
                    following values:</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="NOT_APPLICABLE">
        <xsd:annotation>
          <xsd:documentation>
            <p>is used if a more precise value is not available</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FAILURE">
        <xsd:annotation>
          <xsd:documentation>
            <p>is used when an instance of equipment has failed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MANUAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>indicates a switch that was requested by the
                            operator          and includes forced switches</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NativeProbableCauseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Represents the native probable cause.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PerceivedSeverityListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of PerceivedSeverityType elements.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="perceivedSeverity" type="tns:PerceivedSeverityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PerceivedSeverityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The PerceivedSeverity values are consistent with
                    ITU-T X.733 definitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="CRITICAL"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="CLEARED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProbableCauseQualifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Represents the probable cause qualifier and shall be
                    present if the probable cause</p>
        <p>attribute is not sufficient to uniquely identify an alarm.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProposedRepairActionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Element of ProposedRepairActionListType.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProposedRepairActionListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of ProposedRepairActionType elements.</p>
        The
                optional "X.733::ProposedRepairActions"
                parameter uses this type. When present in an alarm
                notification, it indicates if the cause is known and the
                system being managed can suggest one or more solutions
                (such as switch in standby equipment, retry, replace
                media). This is consistent with the ITU-T X.733
                definition.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="proposedRepairAction" type="tns:ProposedRepairActionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionCommandType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This type identifies the possible protection switch
                    commands. See ITU-T Recommendation G.841 for definitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CLEAR"/>
      <xsd:enumeration value="LOCKOUT"/>
      <xsd:enumeration value="FORCED_SWITCH"/>
      <xsd:enumeration value="MANUAL_SWITCH"/>
      <xsd:enumeration value="EXERCISER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionGroupTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionGroupType with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionGroupTypeEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionGroupTypeEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection group type identifies the type of the
                    protection Group.</p>
        <p>It should be noted that although the term MSP was
                    chosen as the original specific protection scheme to
                    which the related behaviour applied was Multiplex
                    Section Protection, the label is now more generally
                    applied to any 1+1 or 1:N Trail protection scheme</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="MSP_1_PLUS_1"/>
      <xsd:enumeration value="MSP_1_FOR_N"/>
      <xsd:enumeration value="2_FIBER_BLSR"/>
      <xsd:enumeration value="4_FIBER_BLSR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionType with MTOSI minor version and
                    vendor extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionTypeEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionTypeEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection type identifies whether a protection
                    switch is an MS protection switch or an SNCP
                    protection switch.  It should be noted that although
                    the term MSP was chosen as the original specific
                    protection scheme to which the related behaviour
                    applied was Multiplex Section Protection, the label
                    is now more generally applied to any 1+1 or 1:N
                    Trail protection scheme.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MSP_APS"/>
      <xsd:enumeration value="SNCP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ReversionModeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reversion mode is used to indicate whether, after
                    repair of a failed resource, an additional switch
                    should be made to revert to the preferred resource.
                    Revertive modes may require a wait to restore (WTR)
                    time setting.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="NON_REVERTIVE"/>
      <xsd:enumeration value="REVERTIVE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ServiceAffectingType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the impact of a fault on monitored entities</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>The OS cannot determine if the
                        condition affects service or not</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SERVICE_AFFECTING">
        <xsd:annotation>
          <xsd:documentation>The OS determines that the
                        condition affects service</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NON_SERVICE_AFFECTING">
        <xsd:annotation>
          <xsd:documentation>TheOS determines that the
                        condition does not affect service</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="SpecificProblemListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of SpecificProblemType elements. The optional
                    "X.733::SpecificProblems" parameter uses
                    that type. When present in an alarm notification, it
                    identifies further refinements to the probable cause
                    of the alarm. This is consistent with the ITU-T
                    X.733 definition.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="specificProblem" type="tns:SpecificProblemType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SpecificProblemType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Element of SpecificProblemListType.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SwitchReasonType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The switch reason reflects the reason why a switch occurred.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_APPLICABLE">
        <xsd:annotation>
          <xsd:documentation>Value used upon retrieval of
                        switch data for non-revertive groups, if a more
                        precise value is not available</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="RESTORED">
        <xsd:annotation>
          <xsd:documentation>used for revertive groups to
                        indicate a return to the normal state</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIGNAL_FAIL">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIGNAL_MISMATCH">
        <xsd:annotation>
          <xsd:documentation>Value used in the case the signal
                        is ok, but is identified as coming from an
                        incorrect source:
                        TRAIL_TRACE_IDENTIFIER_MISMATCH, Signal Label
                        Mismatch, etc</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIGNAL_DEGRADE">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="AUTOMATIC_SWITCH">
        <xsd:annotation>
          <xsd:documentation>Value used when the exact switch
                        reason is unknown, in retrievals of switch data
                        if a protection switch is currently active or in
                        protection switch notifications</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MANUAL">
        <xsd:annotation>
          <xsd:documentation>Value indicates a switch that was
                        requested by the operator and includes forced switches</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="G_774_3_APSfunctionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The G_774_3_APSfunction with MTOSI minor version and
                    vendor extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:G_774_3_APSfunctionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="G_774_3_APSfunctionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Indicates if the switching function is based on APS
                    standardized protocol or on a proprietary protocol.
                    "G.783" is set in case of K1/K2 based APS,
                    and "Legacy" is set in case of proprietary
                    protocol, as for radio equipment for example.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="G.783"/>
      <xsd:enumeration value="Legacy"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=31</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/pgp/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/pgp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PGParameters XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <!--=================-->
  <xsd:complexType name="SwitchModeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SwitchMode with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:SwitchModeEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="SwitchModeEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection switch mode.</p>
        <p>
          <b>1+1 trail protection, 2-F MSSPRING, 4-F MSSPRING,
                        1:N trail protection</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="SingleEnded"/>
      <xsd:enumeration value="DualEnded"/>
      <xsd:enumeration value="G841_NonStandard"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="SpringProtocolType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SpringProtocol with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:SpringProtocolEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="SpringProtocolEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enumeration definition of the protection SPRING protocol.</p>
        <p>
          <b>2-F MSSPRING, 4-F MSSPRING</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="Standard"/>
      <xsd:enumeration value="TransOceanic"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SpringNodeIdType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection SPRING node ID. The SPRINGNodeId is
                    used to identify the managedElement during creation
                    of SNCs. This is needed for BLSRs to identify the
                    ingress and the egress nodes so that they know where
                    to loop around in case of failure.       Value can
                    be "0" to "15" (may be any other
                    string that matches the SPRINGNodeId transmission
                    parameter values) or "Unknown".</p>
        <p>
          <b>2-F MSSPRING, 4-F MSSPRING</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SwitchPositionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This indicates whether the RING switch has occurred
                    because of fault detection on this group or in a
                    different group around the ring.</p>
        <p>
          <b>2-F MSSPRING, 4-F MSSPRING</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IDLE"/>
      <xsd:enumeration value="PASSTypeHROUGH"/>
      <xsd:enumeration value="SWITCH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NonPreEmptibleTrafficType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This indicates whether the non-pre-emptible traffic
                    is allowed within this group.</p>
        <p>
          <b>1:N trail protection,2-F MSSPRING</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ALLOWED"/>
      <xsd:enumeration value="NOT_ALLOWED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="WtrTimeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the time required to wait before the
                    revertive switch can go back to the primary TP.
                    Values are in seconds or "-1" indicates an
                    unknown value or that the parameter is not applicable.</p>
        <p>
          <b>For revertive switches. 1+1 trail protection,1:N
                        trail protection,2-F MSSPRING, 4-F MSSPRING</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer">
      <xsd:minInclusive value="-1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="HoldOffTimeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the time duration for which the alarm
                    condition must persist before the switch takes
                    place.       Values are in milliseconds.</p>
        <p>
          <b>All protection groups that support revertive
                        switch. 1+1 trail protection,1:N trail
                        protection,2-F MSSPRING, 4-F MSSPRING</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Unknown"/>
          <xsd:enumeration value="Infinite"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:unsignedLong"/>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="LodNumSwitchesType">
    <xsd:annotation>
      <xsd:documentation>
        <p>LODNumSwitches and LODDuration are used together to
                    specify when Lock Out should occur. If the specified
                    number of switches occur within the specified
                    duration, the result is Lock Out for that group.</p>
        <p>
          <b>For non-revertive switches. 1+1 trail
                        protection,1:N trail protection,2-F MSSPRING,
                        4-F MSSPRING</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedInt"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="LodDurationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Refer to LODNumSwitchesType.       Values are in seconds.</p>
        <p>
          <b>For non-revertive switches. 1+1 trail
                        protection,1:N trail protection,2-F MSSPRING,
                        4-F MSSPRING</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedLong"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TandemSwitchingType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute specifies whether the switching
                    capability of the protection group is independent of
                    the switching of any other group (empty string) or
                    if its operation is associated with, related to or
                    synchronised to the operation of another identified
                    group (PGPName).</p>
        <p>
          Value is Empty string or "PGPName".
          <b>1+1 trail protection</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="BundleSwitchingType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute specifies whether the switching
                    capability of the protection group is autonomous
                    (empty string) or, if it must work accordingly with
                    another one, the name of the associated PGP.
                    PGPName: is the PGPName[2].value of the associated PG.</p>
        <p>
          Value is Empty string or "PGPName".
          <b>1+1 trail protection</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="HitlessType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute specifies whether the hitless
                    switching capability (i.e. a switch event between a
                    working and a protection channel which does not add
                    any errors to those already produced by the
                    propagation medium during the switching procedure)
                    is present or not. A value of "Yes"
                    indicates that the hitless capability is present in
                    the protection system. A value of "No"
                    indicates that the hitless capability is not present
                    and will as a consequence introduce errors on a
                    switch operation. See G.774.08.</p>
        <p>
          <b>1+1 trail protection,1:N trail protection</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Yes"/>
      <xsd:enumeration value="No"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ExerciseOnType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute is used to indicate if an exercise
                    procedure is in progress. Exercise is an optional
                    request which may be used to test the RPS function
                    by initiating an RPS process without actual
                    switching. If the value is "True" the
                    procedure is activated, otherwise it is deactivated.
                    When the exerciseOn attribute is "True",
                    possible malfunctioning of the exercise procedure
                    shall be signaled setting the 'degraded' component
                    in the AvailabilityStatus attribute. See G.774.08.</p>
        <p>
          <b>1+1 trail protection,1:N trail protection</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="AvailabilityStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The AvailabilityStatus with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:AvailabilityStatusEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="AvailabilityStatusEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          This attribute is used to indicate the availability
                    of a protection group, summarizing both operatively
                    and usage (see X.731). Used values are:
          <ul>
            <li>In Test: The switching function is
                            undergoing a test procedure.</li>
            <li>Failed: The switching function has an
                            internal fault that prevents it from operating.</li>
            <li>Degraded: The service available from the
                            switching function is degraded with respect
                            to its operating capacity.</li>
          </ul>
        </p>
        <p>
          <b>1+1 trail protection,1:N trail protection</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="Failed"/>
      <xsd:enumeration value="InTest"/>
      <xsd:enumeration value="Degraded"/>
      <xsd:enumeration value="OK"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="SwitchCriteriaEnableType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SwitchCriteriaEnable with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:SwitchCriteriaEnableEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SwitchCriteriaEnableEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute restricts the severity of alarms for
                    which switching criteria is enabled. See
                    Enums::PerceivedSeverity in IA.</p>
        <p>
          <b>1:N trail protection</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="CRITICAL"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="CLEARED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="PrivilegedChannelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>For a 1:N architecture, when no pre-emptible traffic
                    is equipped, this attribute is used to indicate if
                    the protected TP defined in the value of the
                    attribute is permanently bridged in the TX side (in
                    absence of any switching requests) to the protecting
                    TP. An empty string value indicates that there is no
                    bridge active. Note: For a 1+1 architecture, when no
                    occasional traffic facility is foreseen,
                    communication between the two corresponding RPS
                    functions is not required, being the working
                    tributary permanently bridged to both working and
                    protection lines. "PTPName" is the
                    TPName[2].value of the corresponding privileged PTP.
                    See G.774.08.</p>
        <p>Value is Empty string or "PTPName".</p>
        <p>
          <b>1:N trail protection</b>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="ProtectionGroupParameterListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          The definition of the list of PG parameters.       It
                    should be noted that although the term MSP was
                    chosen as the original specific protection scheme to
                    which the related behaviour applied was Multiplex
                    Section Protection, the label is now more generally
                    applied to any 1+1 or 1:N Trail protection scheme.
          <ul>
            <li>PG type "1+1 trail protection"
                            refers to ProtectionGroupType "MSP_1_PLUS_1"</li>
            <li>PG type "1:N trail protection"
                            refers to ProtectionGroupType "MSP_1_FOR_N"</li>
            <li>PG type "2-F MSSPRING" refers to
                            ProtectionGroupType "2_FIBER_BLSR"</li>
            <li>PG type "2-F MSSPRING" refers to
                            ProtectionGroupType "4_FIBER_BLSR"</li>
          </ul>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="switchMode" type="tns:SwitchModeType"/>
      <xsd:element minOccurs="0" name="springProtocol" type="tns:SpringProtocolType"/>
      <xsd:element minOccurs="0" name="springNodeId" type="tns:SpringNodeIdType"/>
      <xsd:element minOccurs="0" name="switchPosition" type="tns:SwitchPositionType"/>
      <xsd:element minOccurs="0" name="nonPreEmptibleTraffic" type="tns:NonPreEmptibleTrafficType"/>
      <xsd:element minOccurs="0" name="wtrTime" type="tns:WtrTimeType"/>
      <xsd:element minOccurs="0" name="holdOffTime" type="tns:HoldOffTimeType"/>
      <xsd:element minOccurs="0" name="lodNumSwitches" type="tns:LodNumSwitchesType"/>
      <xsd:element minOccurs="0" name="lodDuration" type="tns:LodDurationType"/>
      <xsd:element minOccurs="0" name="tandemSwitching" type="tns:TandemSwitchingType"/>
      <xsd:element minOccurs="0" name="bundleSwitching" type="tns:BundleSwitchingType"/>
      <xsd:element minOccurs="0" name="hitless" type="tns:HitlessType"/>
      <xsd:element minOccurs="0" name="exerciseOn" type="tns:ExerciseOnType"/>
      <xsd:element minOccurs="0" name="availabilityStatus" type="tns:AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="switchCriteriaEnable" type="tns:SwitchCriteriaEnableType"/>
      <xsd:element minOccurs="0" name="privilegedChannel" type="tns:PrivilegedChannelType"/>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=10</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/eq/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:nrb.com="http://www.tmforum.org/mtop/nrb/xsd/com/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/eq/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP EQ XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=5"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--=================-->
  <xsd:element name="eq" type="tns:EquipmentType"/>
  <!--=================-->
  <xsd:complexType name="EquipmentType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Equipment mTOP network
                    resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="isReportingAlarms" nillable="true" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="expectedEquipmentObjectType" nillable="true" type="com:EquipmentObjectTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Defines the type of expected
                                    equipment. This is an empty string
                                    if there is no expected equipment.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="installedEquipmentObjectType" nillable="true" type="com:EquipmentObjectTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Defines the type of installed
                                    equipment. This is an empty string
                                    if there is no installed equipment.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="installedPartNumber" nillable="true" type="com:InstalledPartNumberType"/>
          <xsd:element minOccurs="0" name="installedSerialNumber" nillable="true" type="com:InstalledSerialNumberType"/>
          <xsd:element minOccurs="0" name="resourceFulfillmentState" nillable="true" type="com:ResourceFulfillmentStateEnumType"/>
          <xsd:element minOccurs="0" name="installedVersion" nillable="true" type="com:InstalledVersionType"/>
          <xsd:element minOccurs="0" name="manufacturer" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="protectionRole" nillable="true" type="com:ProtectionRoleType"/>
          <xsd:element minOccurs="0" name="protectionSchemeState" nillable="true" type="nrb.com:ProtectionSchemeStateType"/>
          <xsd:element minOccurs="0" name="manufactureDate" nillable="true" type="gen:ManufactureDateType"/>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this EQ object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=14</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP FTP XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=21"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--=================-->
  <xsd:element name="ftp" type="tns:FloatingTerminationPointType"/>
  <!--=================-->
  <xsd:complexType name="FloatingTerminationPointType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the FloatingTerminationPoint
                    mTOP network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="direction" nillable="true" type="com:DirectionalityType"/>
          <xsd:element minOccurs="0" name="tpProtectionAssociation" nillable="true" type="com:TerminationPointProtectionAssociationType"/>
          <xsd:element minOccurs="0" name="isEdgePoint" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the TP is an edge point
                                    of at least one subnetwork, i.e. if
                                    it is an end point of a potential
                                    inter-subnetwork topological link.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isEquipmentProtected" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The attribute indicates whether or
                                    not the TP is supported by a
                                    protected equipment.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    egress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ingressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    eingress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionState" nillable="true" type="com:TerminationPointConnectionStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is only applicable to
                                    CTPs and FTPs. If the source is
                                    connected to one entity and the sink
                                    is connected to another entity then
                                    the value of this attribute is TPCS_BI_CONNECTED.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="tpMappingMode" nillable="true" type="com:TerminationModeType"/>
          <xsd:element minOccurs="0" name="ingressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Floating Termination
                                    Point may have an optional reference
                                    to an ingress (incoming)
                                    Transmission Descriptor. The
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Ingress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Egress Descriptor name should either
                                    be that of a Transmission Descriptor
                                    or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Floating Termination
                                    Point may have an optional reference
                                    to an egress (outgoing) Transmission
                                    Descriptor. The Transmission
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Egress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Ingress Descriptor name should
                                    either be that of a Transmission
                                    Descriptor or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of transmission parameters
                                    which can be set and/or retrieved on
                                    the TP at a specified layer. This
                                    attribute must contain the complete
                                    set of layer rates represented by a
                                    FTP - even if they have no
                                    parameters associated with them. The
                                    layerRates are listed in the order
                                    of their client-server relationship
                                    (see layering for more details).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this TP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="FloatingTerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of FloatinglTerminationPoints.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:ftp"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=16</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP GTP XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--=================-->
  <xsd:element name="gtp" type="tns:GroupTerminationPointType"/>
  <!--=================-->
  <xsd:complexType name="GroupTerminationPointType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Group TerminationPoint
                    mTOP network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="isReportingAlarms" nillable="true" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="containedTpRefList" nillable="true" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute represents an ordered
                                    list of contained CTP names.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionState" nillable="true" type="com:TerminationPointConnectionStateType"/>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this GTP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="GroupTerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of GTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:gtp"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=23</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/me/v1" version="1.0" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/me/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP ME XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=20"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--=================-->
  <xsd:element name="me" type="tns:ManagedElementType"/>
  <!--=================-->
  <xsd:complexType name="ManagedElementType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines all the Managed Element mTOP
                    network resource object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="location" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="manufacturer" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="manufactureDate" nillable="true" type="gen:ManufactureDateType"/>
          <xsd:element minOccurs="0" name="productName" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="softwareVersion" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="isInSyncState" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the EMS/OS is able to
                                    keep the current EMS/OS data
                                    synchronized with the current NE
                                    data and generate all appropriate
                                    notifications. The EMS sets this
                                    attribute to false to indicate that
                                    it requires resynchronization with
                                    NE data and that it is not able to
                                    generate the appropriate
                                    notifications (such as OCs/ODs/AVCs)
                                    while doing so.</p>
                <p>The EMS/OS sets this attribute back
                                    to true when the resynchronization
                                    is completed and when notifications
                                    can start being generated as appropriate.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="supportedConnectionLayerRateList" nillable="true" type="lay:LayerRateListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is a list (possibly
                                    empty) of potential Cross Connection
                                    Rates at which it is possible to
                                    have cross-connections within the
                                    managed element.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="communicationState" nillable="true" type="tns:CommunicationStateType"/>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this ME object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="ManagedElementListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of ManagedElements</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:me"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CommunicationStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This state reflects a communication state between the
                    EMS and its ManagedElement.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CS_AVAILABLE"/>
      <xsd:enumeration value="CS_UNAVAILABLE"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=27</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/mlsn/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/mlsn/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP MLSN XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=20"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--=================-->
  <xsd:element name="mlsn" type="tns:MultiLayerSubnetworkType"/>
  <!--=================-->
  <xsd:complexType name="MultiLayerSubnetworkType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Manage Domain mTOP network
                    resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="subnetworkType" nillable="true" type="com:TopologyType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The subnetworkType gives a coarse
                                    view of the topology of the
                                    subnetwork. It is a readonly attribute.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="supportedRateList" nillable="true" type="lay:LayerRateListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is a list (possibly
                                    empty) of potential Cross Connection
                                    Rates at which it is possible to
                                    make SNCs within the subnetwork. It
                                    is a readonly attribute.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="MultiLayerSubnetworkListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of MultiLayerSubnetworks</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:mlsn"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=29</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/os/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/os/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP OS XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--=================-->
  <xsd:element name="os" type="tns:OperationsSystemType"/>
  <!--=================-->
  <xsd:complexType name="OperationsSystemType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Operations System mTOP
                    network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="softwareVersion" nillable="true" type="com:SoftwareVersionType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The OS product software version.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="productName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>The product/type name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="manufacturer" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>The resource manufacturer name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="resourceFulfillmentState" nillable="true" type="com:ResourceFulfillmentStateEnumType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute indicates the OS
                                    administration state.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isSubordinateOs" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute when true specifies
                                    that this OS is a subordinate OS
                                    such as an EMS (is not a top level OS).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this OS object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="OperationsSystemListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of OperationsSystems</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:os"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=32</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/ptp/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/ptp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PTP XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=21"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--=================-->
  <xsd:element name="ptp" type="tns:PhysicalTerminationPointType"/>
  <!--=================-->
  <xsd:complexType name="PhysicalTerminationPointType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the PhysicalTerminationPoint
                    mTOP network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="direction" nillable="true" type="com:DirectionalityType"/>
          <xsd:element minOccurs="0" name="tpProtectionAssociation" nillable="true" type="com:TerminationPointProtectionAssociationType"/>
          <xsd:element minOccurs="0" name="isEdgePoint" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the TP is an edge point
                                    of at least one subnetwork, i.e. if
                                    it is an end point of a potential
                                    inter-subnetwork topological link.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isEquipmentProtected" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The attribute indicates whether or
                                    not the TP is supported by a
                                    protected equipment.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    egress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ingressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    eingress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ingressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Physical Termination
                                    Point may have an optional reference
                                    to an ingress (incoming)
                                    Transmission Descriptor. The
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Ingress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Egress Descriptor name should either
                                    be that of a Transmission Descriptor
                                    or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Physical Termination
                                    Point may have an optional reference
                                    to an egress (outgoing) Transmission
                                    Descriptor. The Transmission
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Egress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Ingress Descriptor name should
                                    either be that of a Transmission
                                    Descriptor or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of transmission parameters
                                    which can be set and/or retrieved on
                                    the TP at a specified layer. This
                                    attribute must contain the complete
                                    set of layer rates represented by a
                                    PTP - even if they have no
                                    parameters associated with them. The
                                    layerRates are listed in the order
                                    of their client-server relationship
                                    (see layering for more details).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this TP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="PhysicalTerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PhysicalTerminationPoints.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:ptp"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=30</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/pg/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:nrb.com="http://www.tmforum.org/mtop/nrb/xsd/com/v1" xmlns:pgp="http://www.tmforum.org/mtop/nra/xsd/pgp/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/pg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PGP XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=20"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=5"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pgp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=31"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--=================-->
  <xsd:element name="pg" type="tns:ProtectionGroupType"/>
  <!--=================-->
  <xsd:complexType name="ProtectionGroupType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines all the ProtectionGroup mTOP
                    network resource object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="type" nillable="true" type="com:ProtectionGroupTypeType"/>
          <xsd:element minOccurs="0" name="protectionSchemeState" nillable="true" type="nrb.com:ProtectionSchemeStateType"/>
          <xsd:element minOccurs="0" name="reversionMode" nillable="true" type="com:ReversionModeType"/>
          <xsd:element minOccurs="0" name="layerRate" nillable="true" type="lay:LayerRateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Line rate of the PTPs of the
                                    protection group. It is a readonly attribute.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="parameterList" nillable="true" type="pgp:ProtectionGroupParameterListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This contains a list for the known
                                    parameters of the protection group.
                                    Non-applicable parameters and
                                    parameters for which the value is
                                    unknown to the EMS may be left out</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="protectionRelatedTpRefList" nillable="true" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This is the list of TPs that belong
                                    in the protection group. The list of
                                    TPs is partially ordered. The
                                    protecting TP always trails its
                                    worker TPs. The East TPs are always
                                    contiguous in the list, as well as
                                    West TPs.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="apsProtocolType" nillable="true" type="com:G_774_3_APSfunctionType"/>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this PGP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="ProtectionGroupListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of ProtectionGroups</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:pg"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=35</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/route/v1" version="1.0" xmlns:cc="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/route/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP Route XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=1"/>
  <!--=================-->
  <xsd:element name="route" type="tns:RouteType"/>
  <!--=================-->
  <xsd:complexType name="RouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A route for an SNC is defined as a partially ordered
                    list of cross-connects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ccList" type="cc:CrossConnectListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="RouteListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of Routes</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="route" type="tns:RouteType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=13</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/fdfrroute/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:mfdfr="http://www.tmforum.org/mtop/nrf/xsd/mfdfr/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/fdfrroute/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP FDFr Route XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/mfdfr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=26"/>
  <!--=================-->
  <xsd:element name="fdfrRoute" type="tns:FlowDomainFragmentRouteType"/>
  <!--=================-->
  <xsd:complexType name="FlowDomainFragmentRouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A route for an FDFr is defined as a partially ordered
                    list of MFDFr.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="mfdfr:mfdfr"/>
      <xsd:element minOccurs="0" name="actualState" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>
              it is the summary state of the actual state
                            of XCs in the network,     regardless the
                            SNC such XCs are currently serving; it can
                            assume only the     following values:
              <ul>
                <li>
                  <b>inactive</b>
                  : None of its XCs is
                                    active in the network
                </li>
                <li>
                  <b>active</b>
                  : all its XCs are
                                    active in the network. So it is the
                                    route where SNC traffic is currently
                                    carried. There can be at most one
                                    active route per SNC. inUseBy shall
                                    be always "n".
                </li>
                <li>
                  <b>partial</b>
                  : one or more, but not
                                    all the XCs are active in the
                                    network. If the route was
                                    unsuccessfully activated, then
                                    inUseBy shall be     always
                                    "n". If the route was
                                    unsuccessfully deactivated, then
                                    inUseBy could     be "y".
                  <i>Note: a capability to
                                    activate segments of a backup
                                    route for     more rapid switch
                                    over would be of value. It was
                                    agreed that this would not
                                    be included in the current
                                    release but that it could be
                                    considered for a     later release.</i>
                </li>
              </ul>
            </p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=26</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/mfdfr/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:itu="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/mfdfr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP FDFR XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=19"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=20"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=21"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <!--==============-->
  <xsd:element name="mfdfr" type="tns:MatrixFlowDomainFragmentType"/>
  <!--==============-->
  <xsd:complexType name="MatrixFlowDomainFragmentType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A Matrix Flow Domain Fragment (MFDFr) object
                    represents the portion of a Flow Domain Fragment
                    within a Matrix Flow Domain (MFD) inside a Network
                    Element (NE). An MFDFr is atomic and is similar to a
                    Flow Domain Fragment (FDFr) in a singleton Flow
                    Domain. An MFDFr is primarily used in the
                    specification of an FDFr Route, in cases where the
                    route must be specified by the NMS.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="direction" nillable="true" type="com:ConnectionDirectionType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute shall represent the
                            directionality of the FDFr (bidirectional or
                            unidirectional). Note: In the case of
                            Ethernet, the directionality is always bidirectional.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" ref="lp:transmissionParameters">
        <xsd:annotation>
          <xsd:documentation>
            <p>The layer rate on which connectivity is
                            established and a related set of
                            connectionless parameters. Refer to chapter
                            "Connectionless Technology
                            Parameters" of the supporting document
                            LayeredParameters.pdf for details of the
                            currently defined connectionless parameters</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="aEndTpRefList" nillable="true" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The flow points between which connectivity is
                            established by this matrix flow domain
                            fragment. The flow points must be
                            connectable on the same layer as the flow
                            domain fragment's layer rate. Only between
                            client flow points of flow domain edge CPTPs
                            of the same flow domain connectivity can be established.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="zEndTpRefList" nillable="true" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The flow points between which connectivity is
                            established by this matrix flow domain
                            fragment. The flow points must be
                            connectable on the same layer as the flow
                            domain fragment's layer rate. Only between
                            client flow points of  flow domain edge
                            CPTPs of the same flow domain connectivity
                            can be established.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="isFlexible" nillable="true" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>Indicates whether the flow domain fragment is
                            fixed (i.e., cannot be modified  or deleted
                            by the NMS, in particular flow points cannot
                            be added or/ removed) or is flexible.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="isActive" nillable="true" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>Indicates if the MFDFr has been successfully
                            activated in the Network Element (NE).True
                            if the MFDFr is active in the ME; false
                            otherwise. An "active" MFDFr means
                            that no further intervention on the MFDFr
                            itself is required from the NMS to activate
                            it. The fact that an MFDFr is
                            "active" does not necessarily
                            imply that there is traffic flow on the network.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="mfdfrType" nillable="true" type="com:FlowDomainFragmentTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the type of the FDFr.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==============-->
  <xsd:complexType name="MatrixFlowDomainFragmentListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of MatrixFlowDomainFragments</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:mfdfr"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=36</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" xmlns:tpdata="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP SNC XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=20"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=39"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--=================-->
  <xsd:element name="snc" type="tns:SubnetworkConnectionType"/>
  <!--=================-->
  <xsd:complexType name="SubnetworkConnectionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Subnetwor Connection mTOP
                    network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="sncState" nillable="true" type="com:SubnetworkConnectionStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The sncState is an attribute managed
                                    by the EMS. The EMS manages the
                                    state transition of this attribute.
                                    The EMS will assess the
                                    cross-connections in the network
                                    that support the SNC and will
                                    appropriately adjust the value of
                                    SNCState to reflect the actual state
                                    of the SNC in the network.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="direction" nillable="true" type="com:ConnectionDirectionType"/>
          <xsd:element minOccurs="0" name="layerRate" nillable="true" type="lay:LayerRateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The rate of the SubnetworkConnection
                                    is obtained by reading this attribute.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="staticProtectionLevel" nillable="true" type="com:StaticProtectionLevelType"/>
          <xsd:element minOccurs="0" name="sncType" nillable="true" type="com:SubnetworkConnectionTypeType"/>
          <xsd:element minOccurs="0" name="aEndTpDataList" nillable="true" type="tpdata:TerminationPointDataListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The list of Aend termination points
                                    TP where this SNC terminates. For a
                                    detailed description of the use of
                                    this attribute, see MTNM SNC Types
                                    supporting document.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="zEndTpDataList" nillable="true" type="tpdata:TerminationPointDataListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The list of Zend termination points
                                    TP where this SNC terminates. For a
                                    detailed description of the use of
                                    this attribute, see MTNM SNC Types
                                    supporting document.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="rerouteAllowed" nillable="true" type="com:RerouteType"/>
          <xsd:element minOccurs="0" name="networkRouted" nillable="true" type="com:NetworkRoutedType"/>
          <xsd:element minOccurs="0" name="isReportingAlarms" nillable="true" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="isFixed" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Takes value True  when all
                                    cross-connects of the SNC are fixed.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this SNC object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="correlationIdentifier" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Used to contain information about
                                    relationships that this SNC may have
                                    to other managed objects.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="networkReroute" nillable="true" type="com:RerouteType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the reroute of an SNC
                                    (if allowed) should be computed by
                                    the network, by the EMS, or if it
                                    does not matter.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="priority" nillable="true" type="xsd:unsignedInt">
            <xsd:annotation>
              <xsd:documentation>
                <p>The SNC creation priority</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="revertive" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Takes value “True”, i.e. the SNC or
                                    Connection is revertive, when the
                                    SNC or connection can be switched
                                    back to its original route.  In case
                                    of an SNC with multiple routes when
                                    the SNC is revertive, then the
                                    restoration or rerouting process
                                    will always switch to the intended
                                    route if possible, i.e. if there are
                                    no failures or if the intended route
                                    is not locked.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="aEndPointsRole" nillable="true">
            <xsd:annotation>
              <xsd:documentation>Defines the
                                element that defines the end point role
                                of all aEnd TPs of an SNC. This is an
                                ordered list indexed with the aEnd TP
                                list of the SNC.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" name="role" type="com:EndPointRoleType"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="isBundledSnc" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the SNC constitutes
                                    a Bundled SNC service (value “True”)
                                    or not..</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="callId" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This is the control plane identifier.
                                    This attribute is the Call Name
                                    attribute in G.7713.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="callName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute indicates the Call
                                    Name which the connection is
                                    supporting in a non control plane case.</p>
                <p>String containing the RDN of the Call
                                    Name.The value in the last
                                    name-value pair of name structure</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionId" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This is the control plane identifier.
                                    This attribute is the Connection
                                    Name attribute in G.7713. Note that
                                    also the Cross Connection points to
                                    its superior Connection.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionSetUpType" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute indicates whether the
                                    connection has been established by
                                    UNI signalling (SC) or NMS (SPC, PC).</p>
                <p>
                  Legal values are:
                  <ul>
                    <li>PC</li>
                    <li>SC</li>
                    <li>SPC</li>
                  </ul>
                </p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionState" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates that all (“Complete”) or
                                    not all (“Searching”) the resources
                                    necessary to support the connection
                                    have been successfully allocated yet.</p>
                <p>
                  Legal values are:
                  <ul>
                    <li>Complete</li>
                    <li>Searching</li>
                    <li>N/A</li>
                  </ul>
                </p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="maximumCost" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>The maximum link/node cost allowed
                                    for routing.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element default="true" minOccurs="0" name="mustRemoveGtpList" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The parameter is only used for
                                    bundled SNCs.   If set to “True” the
                                    EMS when removing the SNC must make
                                    a best-effort attempt to remove the
                                    interior GTPs that once belonged to
                                    the SNC, and if set to “False” the
                                    NMS does not care whether the EMS
                                    removes the interior GTPs or not.
                                    Any behavior other than best-effort
                                    is likely to involve a complicated
                                    rollback procedure for the EMS and
                                    NEs.  In the case that the parameter
                                    is set to “True” and the EMS cannot
                                    remove all the interior GTPs, the
                                    EMS should return a list of the GTPs
                                    that could not be removed in the
                                    errorReason field of the
                                    deactivateAndDeleteSNC() and
                                    deleteSNC() operations.  The
                                    errorReason would  be “not all
                                    interior GTPs could be deleted”;
                                    this would be followed by the names
                                    of the GTPs that could not be deleted.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element default="true" minOccurs="0" name="mustRetainOldSnc" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="protectionEffort" nillable="true" type="com:ProtectionEffortType"/>
          <xsd:element minOccurs="0" name="routeGroupLabel" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute shall represent the
                                    route group of the connection.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="routingConstraintEffort" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>The effort required for routing
                                    constraint application.</p>
                <p>
                  Legal Values are:
                  <ul>
                    <li>BEST_EFFORT</li>
                    <li>EXACT_MATCH</li>
                  </ul>
                </p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="supportedConnectionName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute indicates the
                                    Connection Name (i.e. its superior
                                    connection) which the connection is
                                    supporting in a non control plane
                                    case. Note that this superior
                                    connection must be defined in a top
                                    level MLSN – which allows
                                    identifying it with a simple string
                                    – RDN value.</p>
                <p>RDN of Connection Name, i.e., the
                                    value in the last name-value pair of
                                    name structure</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="supportingSncList" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute shall contain the
                                    names of the supporting Subnetwork
                                    Connections if any. Note: This
                                    attribute is only applicable for top
                                    level connections in a non-Control
                                    Plane environment if SNCs support
                                    indirectly the Call. Format:
                                    \name=OS\value=CompanyName/EMSname\name=MLSN\value=
                                    SubnetworkName\name= SNC\value=SubnetworkName</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="zEndPointsRole" nillable="true">
            <xsd:annotation>
              <xsd:documentation>
                <p>Defines the element that defines the
                                    end point role of all zEnd TPs of an
                                    SNC. This is an ordered list indexed
                                    with the zEnd TP list of the SNC</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" name="role" type="com:EndPointRoleType"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="SubnetworkConnectionListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of SubnetworkConnections</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:snc"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionModeOfOperationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The supported subnetwork connection management mode
                    of operation.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PENDING_NO_SHARING"/>
      <xsd:enumeration value="NO_PENDING_WITH_SHARING"/>
      <xsd:enumeration value="PENDING_NO_SHARING"/>
      <xsd:enumeration value="PENDING_WITH_SHARING"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=39</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Fulfillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML TpData structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=21"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <!--=================-->
  <xsd:complexType name="TerminationPointDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines a set of attributes associated
                    with a TP.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="tpRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Specifies a termination point.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tpMappingMode" nillable="true" type="com:TerminationModeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The mapping mode to put the TP in.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute contains the layered
                            Transmission Parameters associated with the
                            Termination Point.             Refer to the
                            attached supporting document
                            SD1-16_LayeredParameters for details of the
                            currently defined Transmission Parameters.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ingressTmdRef" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>A connection termination point may have an
                            optional reference to an ingress
                            (incoming)Transmission Descriptor. The
                            Descriptor name will be empty if there is no
                            associated Descriptor.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="egressTmdRef" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>A connection termination point may have an
                            optional reference to an egress
                            (outgoing)Transmission Descriptor. The
                            Transmission Descriptor name will be empty
                            if there is no associated Descriptor.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TerminationPointDataListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of TerminationPointDataType elements.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="tpData" type="tns:TerminationPointDataType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=37</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/tl/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/tl/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP TL XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=20"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--=================-->
  <xsd:element name="tl" type="tns:TopologicalLinkType"/>
  <!--==============-->
  <xsd:complexType name="TopologicalLinkType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the TopologicalLink mTOP
                    network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="direction" nillable="true" type="com:ConnectionDirectionType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Direction of the topological link. A
                                    topological link can be
                                    unidirectional even if both its ends
                                    are bidirectional TPs.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="layerRate" nillable="true" type="lay:LayerRateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The layer of the topological link.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="aEndTpRefList" nillable="true" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Name of A end TP (PTP/CTP/FTP). The
                                    termination point name must be
                                    explicit (a generic endpoint
                                    specification may not be used in
                                    this case).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="zEndTpRefList" nillable="true" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Name of Z end TP (PTP/CTP/FTP). The
                                    termination point name must be
                                    explicit (a generic endpoint
                                    specification may not be used in
                                    this case).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isReportingAlarms" nillable="true" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this TL object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TopologicalLinkListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of TopologicalLinks</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:tl"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=38</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/tmd/v1" version="1.0" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/tmd/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP TMD XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=21"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <!--=================-->
  <xsd:element name="tmd" type="tns:TransmissionDescriptorType"/>
  <!--=================-->
  <xsd:complexType name="TransmissionDescriptorType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines all the TransmissionDescriptor
                    mTOP network resource object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of transmission parameters
                                    which can be set and retrieved at a
                                    specified layer on a TP having this
                                    TMD assigned as egress or ingress TMD</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="additionalObjectInformation" nillable="true" type="gen:NameAndValueStringListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Additional info parameters which can
                                    be set and/or retrieved on a Object
                                    having this TMD assigned as egress
                                    or ingress TMD</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="containingTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The NamingAttributeType structure is
                                    used as a naming scheme between the
                                    NMS and EMS interface</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="externalRepresentationReference" nillable="true" type="tns:ExternalRepresentationReferenceType"/>
          <xsd:element minOccurs="0" name="conformanceDefinition" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Translates the ATM conformance
                                    definitions for TDs according to
                                    SD1-5_conformanceDefinitions.pdf to
                                    CTPs and Transmission Descriptors.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="serviceCategory" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>Translates the ATM service categories
                                    for TDs to CTPs and Transmission Descriptors.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TransmissionDescriptorListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of TransmissionDescriptor</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:tmd"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ExternalRepresentationReferenceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A means to store at the EMS a reference to the
                    external representation of the TMD (e.g., an XML
                    file name).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=25</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/mfd/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/mfd/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP MFD XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=21"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--==============-->
  <xsd:element name="mfd" type="tns:MatrixFlowDomainType"/>
  <!--==============-->
  <xsd:complexType name="MatrixFlowDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A matrix flow domain is associated with a set of
                    CPTPs. It reflects         an atomic switching matrix.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of layer rates on which
                                    connectivity can be established in
                                    the flow domain together with a set
                                    of connectionless technology
                                    parameters for each layer rate.
                                    Refer to chapter
                                    "Connectionless Technology
                                    Parameters" of the supporting
                                    document LayeredParameters.pdf for
                                    details of the currently defined
                                    connectionless parameters.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isFlexible" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the MFD is fixed
                                    (i.e., cannot be configured by
                                    the NMS) or flexible.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="tmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicate the state of consistency
                                    between the MFD and its associated
                                    Transmission Descriptor</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:complexType name="MatrixFlowDomainListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of MatrixFlowDomain</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:mfd"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=11</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/fd/v1" version="1.0" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/fd/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP FD XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=21"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--==============-->
  <xsd:simpleType name="ConnectivityStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute provides an indication to the NMS
                    about the server layer connectivity between the MFDs
                    associated to an FD.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CS_UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>all FD Edge CPTPs are reachable
                        to each other</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CS_FULLY_CONNECTED">
        <xsd:annotation>
          <xsd:documentation>at least one FD Edge CPTP is not
                        reachable by another FD Edge CPTP</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CS_NOT_FULLY_CONNECTED">
        <xsd:annotation>
          <xsd:documentation>the Connectivity state of the FD
                        is not known by the EMS</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="FdTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This (read-only) attribute provides an indication of
                    the type of the FD.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FDT_SINGLETON">
        <xsd:annotation>
          <xsd:documentation>The FD contains at most one MFD</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FDT_NETWORK">
        <xsd:annotation>
          <xsd:documentation>The FD may contain more than one MFD</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="fd" type="tns:FlowDomainType"/>
  <!--==============-->
  <xsd:complexType name="FlowDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A flow domain is associated with a set of flow domain
                    edge CPTPs and matrix flow domains. Connectivity can
                    be created between flow points contained by flow
                    domain edge CPTPs through flow domain fragments.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of layer rates on which
                                    connectivity can be established in
                                    the flow domain together with a set
                                    of connectionless technology
                                    parameters for each layer rate.
                                    Refer to chapter
                                    "Connectionless Technology
                                    Parameters" of the supporting
                                    document LayeredParameters.pdf for
                                    details of the currently defined
                                    connectionless parameters.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectivityState" nillable="true" type="tns:ConnectivityStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indication about the server layer
                                    connectivity between matrix flow
                                    domains associated to the flow domain.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="type" nillable="true" type="tns:FdTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This (read-only) attribute provides
                                    an indication of the type of the FD.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:complexType name="FlowDomainListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of FlowDomains</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:fd"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="ConnectivityRequirementType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute shall identify (for a
                    "connectivity-aware" EMS) the requested
                    operation mode in case not all FPs have potential
                    connectivity to one another. If the EMS is not
                    connectivity-aware, this parameter is ignored.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CR_IGNORE">
        <xsd:annotation>
          <xsd:documentation>
            <p>in case not all FPs have potential
                            connectivity to one another, add all Flow
                            Points regardless of potential connectivity
                            (default value).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CR_REJECT">
        <xsd:annotation>
          <xsd:documentation>
            <p>in case not all FPs have potential
                            connectivity to one another, reject the request.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="ConnectivityAwarenessType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CONNECTIVITY_AWARE">
        <xsd:annotation>
          <xsd:documentation>
            <p>i“connectivity aware” indicates that the
                            target OS has some capability to detect the
                            connectivity between the MFDs within an FD</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CONNECTIVITY_UNAWARE">
        <xsd:annotation>
          <xsd:documentation>
            <p>“connectivity-unaware” indicates that the
                            target OS has no capability at all to detect
                            connectivity between the MFDs within an FD</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=12</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/fdfr/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:itu="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/fdfr/v1" xmlns:tpdata="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP FDFR XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=28"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=19"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=21"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=39"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=18"/>
  <!--==============-->
  <xsd:element name="fdfr" type="tns:FlowDomainFragmentType"/>
  <!--==============-->
  <xsd:complexType name="FlowDomainFragmentType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A flow domain fragment represents connectivity
                    between flow points.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="direction" nillable="true" type="com:ConnectionDirectionType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute shall represent the
                                    directionality of the FDFr
                                    (bidirectional or unidirectional).
                                    Note: In the case of Ethernet, the
                                    directionality is always bidirectional.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="lp:transmissionParameters">
            <xsd:annotation>
              <xsd:documentation>
                <p>The layer rate on which connectivity
                                    is established and a related set of
                                    connectionless parameters. Refer to
                                    chapter "Connectionless
                                    Technology Parameters" of the
                                    supporting document
                                    LayeredParameters.pdf for details of
                                    the currently defined connectionless parameters</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="aEndTpDataList" nillable="true" type="tpdata:TerminationPointDataListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The flow points between which
                                    connectivity is established by this
                                    flow domain fragment. For each flow
                                    point the termination points data is
                                    included. The flow points must be
                                    connectable on the same layer as the
                                    flow domain fragment's layer rate.
                                    Only between client flow points of
                                    flow domain edge TPs of the same
                                    flow domain connectivity can be established.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="zEndTpDataList" nillable="true" type="tpdata:TerminationPointDataListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The flow points between which
                                    connectivity is established by this
                                    flow domain fragment with the
                                    termination point data included for
                                    each flow point. The flow points
                                    must be connectable on the same
                                    layer as the flow domain fragment's
                                    layer rate. Only between client flow
                                    points of  flow domain edge TPs of
                                    the same flow domain connectivity
                                    can be established.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isFlexible" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the flow domain
                                    fragment is fixed (i.e., cannot be
                                    modified or deleted by the NMS, in
                                    particular flow points cannot be
                                    added or/ removed) or is flexible.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="administrativeState" nillable="true" type="itu:X721.AdministrativeStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the FDFr is locked
                                    (i.e., traffic units cannot flow
                                    through the FDFr) or unlocked (i.e.,
                                    traffic units are allowed to flow
                                    through the FDFr).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="fdfrState" nillable="true" type="com:SubnetworkConnectionStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates  one of the following
                                    values: Active if  all MFDFrs and
                                    all (edge and internal) FPs for the
                                    FDFr are active in the network.
                                    Partial if not all parts (MFDFrs or
                                    FPs) of the FDFr were created during
                                    the creation operation, or not all
                                    parts of the FDFr were deleted
                                    during the deletion operation.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="fdfrType" nillable="true" type="com:FlowDomainFragmentTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates  one of the following
                                    values: Active if  all MFDFrs and
                                    all (edge and internal) FPs for the
                                    FDFr are active in the network.
                                    Partial if not all parts (MFDFrs or
                                    FPs) of the FDFr were created during
                                    the creation operation, or not all
                                    parts of the FDFr were deleted
                                    during the deletion operation.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:complexType name="FlowDomainFragmentListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of FlowDomainFragment</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:fdfr"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=40</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" version="1.0" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Fulfillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML TpPool structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=21"/>
  <!--=================-->
  <xsd:element name="tpPool" type="tns:TerminationPointPoolType"/>
  <!--=================-->
  <xsd:complexType name="TerminationPointPoolType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the TP Pool mTOP network
                    resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="numberOfMembers" nillable="true" type="tns:NumberOfMembersType"/>
          <xsd:element minOccurs="0" name="numberOfIdleMembers" nillable="true" type="tns:NumberOfIdleMembersType"/>
          <xsd:element minOccurs="0" name="descriptionOfUse" nillable="true" type="tns:DescriptionOfUseType"/>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of transmission parameters
                                    which can be set and/or retrieved on
                                    the TP at a specified layer. This
                                    attribute must contain the complete
                                    set of layer rates represented by a
                                    TPPool - even if they have no
                                    parameters associated with them. The
                                    layerRates are listed in the order
                                    of their client-server relationship
                                    (see layering for more details).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="containedMemberList" nillable="true">
            <xsd:annotation>
              <xsd:documentation>
                <p>Refers to the indexed members list of
                                    the TPPool.  It is only used within
                                    AVC notifications.  Use
                                    getTerminationPointGroupingRelationships()
                                    with tpName = TPPool to read the
                                    names of the TPPool members.  Use
                                    getTerminationPointGroupingRelationships()
                                    with tpName = PTP/CTP/FTP/GTP to
                                    read the TPPool the TP or GTP is a
                                    member of.  For full name
                                    qualification consider use of the
                                    two attributes;
                                    MemberContainingMeList and MemberContainingTpList.</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" name="containedMember" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>
                      <p>value of TP or GTP (RDN)
                                    name component of TP or
                                    GTP name.</p>
                    </xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="memberContainingMeList" nillable="true">
            <xsd:annotation>
              <xsd:documentation>
                <p>Refers to the indexed list of members
                                    of the TPPool (i.e., a TP or a GTP).
                                    It is only used within AVC
                                    notifications.  Use
                                    getTerminationPointGroupingRelationships()
                                    with tpName = TPPool to read the
                                    names of the TPPool members.</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" name="memberContainingMe" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>
                      <p>value of ME (RDN) name
                                    component of ME name.</p>
                    </xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="memberContainingTpList" nillable="true">
            <xsd:annotation>
              <xsd:documentation>
                <p>Refers to the indexed list member of
                                    the TPPool when this is a CTP.  It
                                    is only used within AVC
                                    notifications.  Use
                                    getTerminationPointGroupingRelationships()
                                    with tpName = TPPool to read the
                                    names of the TPPool members.</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" name="memberContainingTp" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>
                      <p>value of PTP/FTP (RDN)
                                    name component of
                                    PTP/FTP name.</p>
                    </xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TerminationPointPoolListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of TPPools</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:tpPool"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="DescriptionOfUseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A description of the specific use of the TP pool, in
                    particular how its members are collected and
                    administered. It could include, for example, the
                    name of a TP (e.g., an ATM NI CTP) such that all TP
                    pool members have to be collected from the set of
                    potential client CTPs of this TP. The description of
                    use of an ATM VP TP pool would be
                    "VirtualUNI", if all its VP CTPs are
                    contained in the same real user network interface
                    (UNI) (i.e., a tributary ATM NI CTP) that is
                    partitioned into virtual UNIs (i.e., VP TP pools).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NumberOfIdleMembersType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Identifies the number of currently contained idle TPs
                    that are free to be used for the intended management purpose.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedInt"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NumberOfMembersType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Identifies the total number of TPs currently
                    contained in the TPPool.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedInt"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=41</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/vob/v1" version="1.0" xmlns:coi="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/vob/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP XML VendorResourceObject structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval/ResourceInventoryRetrievalHttp?xsd=2"/>
  <!--=================-->
  <xsd:element name="vendorObject" type="tns:VendorObjectType"/>
  <!--=================-->
  <xsd:complexType final="#all" name="VendorObjectType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines attributes of the mTOP vendor object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="coi:CommonObjectInfoType">
        <xsd:sequence/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="VendorObjectListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of VendorObjects</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:vendorObject"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint></con:endpoints><con:operation isOneWay="false" action="getInventory" name="getInventory" bindingOperationName="getInventory" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <!--Optional:-->
         <v11:filter>
            <!--Zero or more repetitions:-->
            <v11:baseInstance>
               <!--1 or more repetitions:-->
               <v12:rdn>
                  <v12:type>?</v12:type>
                  <v12:value>?</v12:value>
               </v12:rdn>
            </v11:baseInstance>
            <!--You have a CHOICE of the next 2 items at this level-->
            <!--Optional:-->
            <v11:queryExpression Dialect="?">
               e
               <!--You may enter ANY elements at this point-->
               gero
            </v11:queryExpression>
            <v11:granularity>?</v11:granularity>
            <!--1 or more repetitions:-->
            <v11:includedObjectType>
               <v11:objectType>?</v11:objectType>
               <v11:granularity>?</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
         <!--Optional:-->
         <v11:diffDateAndTime>?</v11:diffDateAndTime>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getInventory"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="getInventoryIterator" name="getInventoryIterator" bindingOperationName="getInventoryIterator" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getInventoryIterator"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ConnectionControlSoapHttpBinding" type="wsdl" bindingName="{http://www.tmforum.org/mtop/rp/wsdl/conc/v1-0}ConnectionControlSoapHttpBinding" soapVersion="1_1" anonymous="optional" definition="../../../../../../../../docs/TMF/MTOSI-2.1/DDPs/ResourceProvisioning/IIS/wsdl/ConnectionControl/ConnectionControlHttp.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/ResourceProvisioning/IIS/wsdl/ConnectionControl/ConnectionControlHttp.wsdl"><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/ResourceProvisioning/IIS/wsdl/ConnectionControl/ConnectionControlHttp.wsdl</con:url><con:content><![CDATA[<!--mTOP DDP - OM ResourceProvisioning - Copyright TeleManagement Forum 2008-->
<wsdl:definitions name="mTOP-ConnectionControlV1-0" targetNamespace="http://www.tmforum.org/mtop/rp/wsdl/conc/v1-0" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://www.tmforum.org/mtop/rp/wsdl/conc/v1-0">
  <wsdl:documentation>
    <p>DDP: ResourceProvisioning</p>
    <p>Module: ConnectionControl Service Interface WSDL HTTP Module</p>
    <p>Description: This module contains all the mTOP ConnectionControl Service Interface WSDL definitions for the Web Service deployment profile with SOAP/HTTP binding.</p>
    <p>Version: 1.0</p>
  </wsdl:documentation>
  <wsdl:import namespace="http://www.tmforum.org/mtop/rp/wsdl/conc/v1-0" location="ConnectionControlPortType.wsdl"/>
  <wsdl:binding name="ConnectionControlSoapHttpBinding" type="tns:ConnectionControl">
    <wsdl:documentation>
      <p>SOAP HTTP binding definitions of the operations of the ConnectionControl portType (interface)</p>
    </wsdl:documentation>
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="activateSubnetworkConnection">
      <soap:operation soapAction="activateSubnetworkConnection" style="document"/>
      <wsdl:input>
        <soap:header message="tns:activateSubnetworkConnectionRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:activateSubnetworkConnectionResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="activateSubnetworkConnectionException">
        <soap:fault name="activateSubnetworkConnectionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRoute">
      <soap:operation soapAction="addRoute" style="document"/>
      <wsdl:input>
        <soap:header message="tns:addRouteRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:addRouteResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="addRouteException">
        <soap:fault name="addRouteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkValidSubnetworkConnection">
      <soap:operation soapAction="checkValidSubnetworkConnection" style="document"/>
      <wsdl:input>
        <soap:header message="tns:checkValidSubnetworkConnectionRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:checkValidSubnetworkConnectionResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="checkValidSubnetworkConnectionException">
        <soap:fault name="checkValidSubnetworkConnectionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAndActivateSubnetworkConnection">
      <soap:operation soapAction="createAndActivateSubnetworkConnection" style="document"/>
      <wsdl:input>
        <soap:header message="tns:createAndActivateSubnetworkConnectionRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:createAndActivateSubnetworkConnectionResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="createAndActivateSubnetworkConnectionException">
        <soap:fault name="createAndActivateSubnetworkConnectionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createModifiedSubnetworkConnection">
      <soap:operation soapAction="createModifiedSubnetworkConnection" style="document"/>
      <wsdl:input>
        <soap:header message="tns:createModifiedSubnetworkConnectionRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:createModifiedSubnetworkConnectionResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="createModifiedSubnetworkConnectionException">
        <soap:fault name="createModifiedSubnetworkConnectionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createSubnetworkConnection">
      <soap:operation soapAction="createSubnetworkConnection" style="document"/>
      <wsdl:input>
        <soap:header message="tns:createSubnetworkConnectionRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:createSubnetworkConnectionResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="createSubnetworkConnectionException">
        <soap:fault name="createSubnetworkConnectionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivateAndDeleteSubnetworkConnection">
      <soap:operation soapAction="deactivateAndDeleteSubnetworkConnection" style="document"/>
      <wsdl:input>
        <soap:header message="tns:deactivateAndDeleteSubnetworkConnectionRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:deactivateAndDeleteSubnetworkConnectionResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="deactivateAndDeleteSubnetworkConnectionException">
        <soap:fault name="deactivateAndDeleteSubnetworkConnectionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivateSubnetworkConnection">
      <soap:operation soapAction="deactivateSubnetworkConnection" style="document"/>
      <wsdl:input>
        <soap:header message="tns:deactivateSubnetworkConnectionRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:deactivateSubnetworkConnectionResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="deactivateSubnetworkConnectionException">
        <soap:fault name="deactivateSubnetworkConnectionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteSubnetworkConnection">
      <soap:operation soapAction="deleteSubnetworkConnection" style="document"/>
      <wsdl:input>
        <soap:header message="tns:deleteSubnetworkConnectionRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:deleteSubnetworkConnectionResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="deleteSubnetworkConnectionException">
        <soap:fault name="deleteSubnetworkConnectionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="modifySubnetworkConnection">
      <soap:operation soapAction="modifySubnetworkConnection" style="document"/>
      <wsdl:input>
        <soap:header message="tns:modifySubnetworkConnectionRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:modifySubnetworkConnectionResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="modifySubnetworkConnectionException">
        <soap:fault name="modifySubnetworkConnectionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRoute">
      <soap:operation soapAction="removeRoute" style="document"/>
      <wsdl:input>
        <soap:header message="tns:removeRouteRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:removeRouteResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="removeRouteException">
        <soap:fault name="removeRouteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setIntendedRoute">
      <soap:operation soapAction="setIntendedRoute" style="document"/>
      <wsdl:input>
        <soap:header message="tns:setIntendedRouteRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:setIntendedRouteResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="setIntendedRouteException">
        <soap:fault name="setIntendedRouteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRoutesAdminState">
      <soap:operation soapAction="setRoutesAdminState" style="document"/>
      <wsdl:input>
        <soap:header message="tns:setRoutesAdminStateRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:setRoutesAdminStateResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="setRoutesAdminStateException">
        <soap:fault name="setRoutesAdminStateException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="swapSubnetworkConnection">
      <soap:operation soapAction="swapSubnetworkConnection" style="document"/>
      <wsdl:input>
        <soap:header message="tns:swapSubnetworkConnectionRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:swapSubnetworkConnectionResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="swapSubnetworkConnectionException">
        <soap:fault name="swapSubnetworkConnectionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="switchRoute">
      <soap:operation soapAction="switchRoute" style="document"/>
      <wsdl:input>
        <soap:header message="tns:switchRouteRequest" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:switchRouteResponse" part="mtopHeader" use="literal"/>
        <soap:body parts="mtopBody" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="switchRouteException">
        <soap:fault name="switchRouteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ConnectionControlHttp">
    <wsdl:documentation>
      <p>Example of the ConnectionControl WSDL Service definition as a deployment example of this mTOP Service Interface. It is expected to be modified to match the specific deployment configuration in a service provider's CCV.</p>
    </wsdl:documentation>
    <wsdl:port name="ConnectionControlSoapHttp" binding="tns:ConnectionControlSoapHttpBinding">
      <soap:address location="http://aserver/mtosi/ConnectionControl"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/ResourceProvisioning/IIS/wsdl/ConnectionControl/ConnectionControlPortType.wsdl</con:url><con:content><![CDATA[<!--mTOP DDP - OM ResourceProvisioning - Copyright TeleManagement Forum 2008-->
<wsdl:definitions name="mTOP-ConnectionControlV1-0" targetNamespace="http://www.tmforum.org/mtop/rp/wsdl/conc/v1-0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://www.tmforum.org/mtop/rp/wsdl/conc/v1-0">
  <wsdl:documentation>
    <p>DDP: ResourceProvisioning</p>
    <p>Module: ConnectionControl Service Interface WSDL PortType Module</p>
    <p>Description: This module contains all the mTOP ConnectionControl Service Interface PortType WSDL definitions common to both Web Service deployment profiles; SOAP/HTTP and SOAP/JMS.</p>
    <p>Version: 1.0</p>
  </wsdl:documentation>
  <wsdl:import namespace="http://www.tmforum.org/mtop/rp/wsdl/conc/v1-0" location="ConnectionControlMessages.wsdl"/>
  <wsdl:portType name="ConnectionControl">
    <wsdl:documentation>
      <p>The ConnectionControl porttype (interface) common to both RPC (synchronous) and MSG (asynchronous) based client/server communication patterns.</p>
    </wsdl:documentation>
    <wsdl:operation name="activateSubnetworkConnection">
      <wsdl:input message="tns:activateSubnetworkConnectionRequest"/>
      <wsdl:output message="tns:activateSubnetworkConnectionResponse"/>
      <wsdl:fault name="activateSubnetworkConnectionException" message="tns:activateSubnetworkConnectionException"/>
    </wsdl:operation>
    <wsdl:operation name="addRoute">
      <wsdl:input message="tns:addRouteRequest"/>
      <wsdl:output message="tns:addRouteResponse"/>
      <wsdl:fault name="addRouteException" message="tns:addRouteException"/>
    </wsdl:operation>
    <wsdl:operation name="checkValidSubnetworkConnection">
      <wsdl:input message="tns:checkValidSubnetworkConnectionRequest"/>
      <wsdl:output message="tns:checkValidSubnetworkConnectionResponse"/>
      <wsdl:fault name="checkValidSubnetworkConnectionException" message="tns:checkValidSubnetworkConnectionException"/>
    </wsdl:operation>
    <wsdl:operation name="createAndActivateSubnetworkConnection">
      <wsdl:input message="tns:createAndActivateSubnetworkConnectionRequest"/>
      <wsdl:output message="tns:createAndActivateSubnetworkConnectionResponse"/>
      <wsdl:fault name="createAndActivateSubnetworkConnectionException" message="tns:createAndActivateSubnetworkConnectionException"/>
    </wsdl:operation>
    <wsdl:operation name="createModifiedSubnetworkConnection">
      <wsdl:input message="tns:createModifiedSubnetworkConnectionRequest"/>
      <wsdl:output message="tns:createModifiedSubnetworkConnectionResponse"/>
      <wsdl:fault name="createModifiedSubnetworkConnectionException" message="tns:createModifiedSubnetworkConnectionException"/>
    </wsdl:operation>
    <wsdl:operation name="createSubnetworkConnection">
      <wsdl:input message="tns:createSubnetworkConnectionRequest"/>
      <wsdl:output message="tns:createSubnetworkConnectionResponse"/>
      <wsdl:fault name="createSubnetworkConnectionException" message="tns:createSubnetworkConnectionException"/>
    </wsdl:operation>
    <wsdl:operation name="deactivateAndDeleteSubnetworkConnection">
      <wsdl:input message="tns:deactivateAndDeleteSubnetworkConnectionRequest"/>
      <wsdl:output message="tns:deactivateAndDeleteSubnetworkConnectionResponse"/>
      <wsdl:fault name="deactivateAndDeleteSubnetworkConnectionException" message="tns:deactivateAndDeleteSubnetworkConnectionException"/>
    </wsdl:operation>
    <wsdl:operation name="deactivateSubnetworkConnection">
      <wsdl:input message="tns:deactivateSubnetworkConnectionRequest"/>
      <wsdl:output message="tns:deactivateSubnetworkConnectionResponse"/>
      <wsdl:fault name="deactivateSubnetworkConnectionException" message="tns:deactivateSubnetworkConnectionException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteSubnetworkConnection">
      <wsdl:input message="tns:deleteSubnetworkConnectionRequest"/>
      <wsdl:output message="tns:deleteSubnetworkConnectionResponse"/>
      <wsdl:fault name="deleteSubnetworkConnectionException" message="tns:deleteSubnetworkConnectionException"/>
    </wsdl:operation>
    <wsdl:operation name="modifySubnetworkConnection">
      <wsdl:input message="tns:modifySubnetworkConnectionRequest"/>
      <wsdl:output message="tns:modifySubnetworkConnectionResponse"/>
      <wsdl:fault name="modifySubnetworkConnectionException" message="tns:modifySubnetworkConnectionException"/>
    </wsdl:operation>
    <wsdl:operation name="removeRoute">
      <wsdl:input message="tns:removeRouteRequest"/>
      <wsdl:output message="tns:removeRouteResponse"/>
      <wsdl:fault name="removeRouteException" message="tns:removeRouteException"/>
    </wsdl:operation>
    <wsdl:operation name="setIntendedRoute">
      <wsdl:input message="tns:setIntendedRouteRequest"/>
      <wsdl:output message="tns:setIntendedRouteResponse"/>
      <wsdl:fault name="setIntendedRouteException" message="tns:setIntendedRouteException"/>
    </wsdl:operation>
    <wsdl:operation name="setRoutesAdminState">
      <wsdl:input message="tns:setRoutesAdminStateRequest"/>
      <wsdl:output message="tns:setRoutesAdminStateResponse"/>
      <wsdl:fault name="setRoutesAdminStateException" message="tns:setRoutesAdminStateException"/>
    </wsdl:operation>
    <wsdl:operation name="swapSubnetworkConnection">
      <wsdl:input message="tns:swapSubnetworkConnectionRequest"/>
      <wsdl:output message="tns:swapSubnetworkConnectionResponse"/>
      <wsdl:fault name="swapSubnetworkConnectionException" message="tns:swapSubnetworkConnectionException"/>
    </wsdl:operation>
    <wsdl:operation name="switchRoute">
      <wsdl:input message="tns:switchRouteRequest"/>
      <wsdl:output message="tns:switchRouteResponse"/>
      <wsdl:fault name="switchRouteException" message="tns:switchRouteException"/>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/ResourceProvisioning/IIS/wsdl/ConnectionControl/ConnectionControlMessages.wsdl</con:url><con:content><![CDATA[<!--mTOP DDP - OM ResourceProvisioning - Copyright TeleManagement Forum 2008-->
<wsdl:definitions name="mTOP-ConnectionControlV1-0" targetNamespace="http://www.tmforum.org/mtop/rp/wsdl/conc/v1-0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:conc="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:tns="http://www.tmforum.org/mtop/rp/wsdl/conc/v1-0">
  <wsdl:documentation>
    <p>DDP: ResourceProvisioning</p>
    <p>Module: ConnectionControl Service Interface WSDL Message Module</p>
    <p>Description: This module contains all the mTOP ConnectionControl Service Interface WSDL message definitions.</p>
    <p>Version: 1.0</p>
  </wsdl:documentation>
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://www.tmforum.org/mtop/rp/xsd/conc/v1" schemaLocation="../../xsd/ConnectionControlMessages.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="activateSubnetworkConnectionRequest">
    <wsdl:documentation>
      <p>The activateSubnetworkConnection request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:activateSubnetworkConnectionRequest"/>
  </wsdl:message>
  <wsdl:message name="activateSubnetworkConnectionResponse">
    <wsdl:documentation>
      <p>The activateSubnetworkConnection response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:activateSubnetworkConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="activateSubnetworkConnectionException">
    <wsdl:documentation>
      <p>The activateSubnetworkConnection exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:activateSubnetworkConnectionException"/>
  </wsdl:message>
  <wsdl:message name="addRouteRequest">
    <wsdl:documentation>
      <p>The addRoute request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:addRouteRequest"/>
  </wsdl:message>
  <wsdl:message name="addRouteResponse">
    <wsdl:documentation>
      <p>The addRoute response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:addRouteResponse"/>
  </wsdl:message>
  <wsdl:message name="addRouteException">
    <wsdl:documentation>
      <p>The addRoute exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:addRouteException"/>
  </wsdl:message>
  <wsdl:message name="checkValidSubnetworkConnectionRequest">
    <wsdl:documentation>
      <p>The checkValidSubnetworkConnection request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:checkValidSubnetworkConnectionRequest"/>
  </wsdl:message>
  <wsdl:message name="checkValidSubnetworkConnectionResponse">
    <wsdl:documentation>
      <p>The checkValidSubnetworkConnection response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:checkValidSubnetworkConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="checkValidSubnetworkConnectionException">
    <wsdl:documentation>
      <p>The checkValidSubnetworkConnection exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:checkValidSubnetworkConnectionException"/>
  </wsdl:message>
  <wsdl:message name="createAndActivateSubnetworkConnectionRequest">
    <wsdl:documentation>
      <p>The createAndActivateSubnetworkConnection request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:createAndActivateSubnetworkConnectionRequest"/>
  </wsdl:message>
  <wsdl:message name="createAndActivateSubnetworkConnectionResponse">
    <wsdl:documentation>
      <p>The createAndActivateSubnetworkConnection response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:createAndActivateSubnetworkConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="createAndActivateSubnetworkConnectionException">
    <wsdl:documentation>
      <p>The createAndActivateSubnetworkConnection exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:createAndActivateSubnetworkConnectionException"/>
  </wsdl:message>
  <wsdl:message name="createModifiedSubnetworkConnectionRequest">
    <wsdl:documentation>
      <p>The createModifiedSubnetworkConnection request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:createModifiedSubnetworkConnectionRequest"/>
  </wsdl:message>
  <wsdl:message name="createModifiedSubnetworkConnectionResponse">
    <wsdl:documentation>
      <p>The createModifiedSubnetworkConnection response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:createModifiedSubnetworkConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="createModifiedSubnetworkConnectionException">
    <wsdl:documentation>
      <p>The createModifiedSubnetworkConnection exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:createModifiedSubnetworkConnectionException"/>
  </wsdl:message>
  <wsdl:message name="createSubnetworkConnectionRequest">
    <wsdl:documentation>
      <p>The createSubnetworkConnection request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:createSubnetworkConnectionRequest"/>
  </wsdl:message>
  <wsdl:message name="createSubnetworkConnectionResponse">
    <wsdl:documentation>
      <p>The createSubnetworkConnection response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:createSubnetworkConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="createSubnetworkConnectionException">
    <wsdl:documentation>
      <p>The createSubnetworkConnection exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:createSubnetworkConnectionException"/>
  </wsdl:message>
  <wsdl:message name="deactivateAndDeleteSubnetworkConnectionRequest">
    <wsdl:documentation>
      <p>The deactivateAndDeleteSubnetworkConnection request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:deactivateAndDeleteSubnetworkConnectionRequest"/>
  </wsdl:message>
  <wsdl:message name="deactivateAndDeleteSubnetworkConnectionResponse">
    <wsdl:documentation>
      <p>The deactivateAndDeleteSubnetworkConnection response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:deactivateAndDeleteSubnetworkConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="deactivateAndDeleteSubnetworkConnectionException">
    <wsdl:documentation>
      <p>The deactivateAndDeleteSubnetworkConnection exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:deactivateAndDeleteSubnetworkConnectionException"/>
  </wsdl:message>
  <wsdl:message name="deactivateSubnetworkConnectionRequest">
    <wsdl:documentation>
      <p>The deactivateSubnetworkConnection request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:deactivateSubnetworkConnectionRequest"/>
  </wsdl:message>
  <wsdl:message name="deactivateSubnetworkConnectionResponse">
    <wsdl:documentation>
      <p>The deactivateSubnetworkConnection response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:deactivateSubnetworkConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="deactivateSubnetworkConnectionException">
    <wsdl:documentation>
      <p>The deactivateSubnetworkConnection exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:deactivateSubnetworkConnectionException"/>
  </wsdl:message>
  <wsdl:message name="deleteSubnetworkConnectionRequest">
    <wsdl:documentation>
      <p>The deleteSubnetworkConnection request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:deleteSubnetworkConnectionRequest"/>
  </wsdl:message>
  <wsdl:message name="deleteSubnetworkConnectionResponse">
    <wsdl:documentation>
      <p>The deleteSubnetworkConnection response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:deleteSubnetworkConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteSubnetworkConnectionException">
    <wsdl:documentation>
      <p>The deleteSubnetworkConnection exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:deleteSubnetworkConnectionException"/>
  </wsdl:message>
  <wsdl:message name="modifySubnetworkConnectionRequest">
    <wsdl:documentation>
      <p>The modifySubnetworkConnection request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:modifySubnetworkConnectionRequest"/>
  </wsdl:message>
  <wsdl:message name="modifySubnetworkConnectionResponse">
    <wsdl:documentation>
      <p>The modifySubnetworkConnection response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:modifySubnetworkConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="modifySubnetworkConnectionException">
    <wsdl:documentation>
      <p>The modifySubnetworkConnection exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:modifySubnetworkConnectionException"/>
  </wsdl:message>
  <wsdl:message name="removeRouteRequest">
    <wsdl:documentation>
      <p>The removeRoute request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:removeRouteRequest"/>
  </wsdl:message>
  <wsdl:message name="removeRouteResponse">
    <wsdl:documentation>
      <p>The removeRoute response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:removeRouteResponse"/>
  </wsdl:message>
  <wsdl:message name="removeRouteException">
    <wsdl:documentation>
      <p>The removeRoute exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:removeRouteException"/>
  </wsdl:message>
  <wsdl:message name="setIntendedRouteRequest">
    <wsdl:documentation>
      <p>The setIntendedRoute request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:setIntendedRouteRequest"/>
  </wsdl:message>
  <wsdl:message name="setIntendedRouteResponse">
    <wsdl:documentation>
      <p>The setIntendedRoute response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:setIntendedRouteResponse"/>
  </wsdl:message>
  <wsdl:message name="setIntendedRouteException">
    <wsdl:documentation>
      <p>The setIntendedRoute exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:setIntendedRouteException"/>
  </wsdl:message>
  <wsdl:message name="setRoutesAdminStateRequest">
    <wsdl:documentation>
      <p>The setRoutesAdminState request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:setRoutesAdminStateRequest"/>
  </wsdl:message>
  <wsdl:message name="setRoutesAdminStateResponse">
    <wsdl:documentation>
      <p>The setRoutesAdminState response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:setRoutesAdminStateResponse"/>
  </wsdl:message>
  <wsdl:message name="setRoutesAdminStateException">
    <wsdl:documentation>
      <p>The setRoutesAdminState exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:setRoutesAdminStateException"/>
  </wsdl:message>
  <wsdl:message name="swapSubnetworkConnectionRequest">
    <wsdl:documentation>
      <p>The swapSubnetworkConnection request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:swapSubnetworkConnectionRequest"/>
  </wsdl:message>
  <wsdl:message name="swapSubnetworkConnectionResponse">
    <wsdl:documentation>
      <p>The swapSubnetworkConnection response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:swapSubnetworkConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="swapSubnetworkConnectionException">
    <wsdl:documentation>
      <p>The swapSubnetworkConnection exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:swapSubnetworkConnectionException"/>
  </wsdl:message>
  <wsdl:message name="switchRouteRequest">
    <wsdl:documentation>
      <p>The switchRoute request message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:switchRouteRequest"/>
  </wsdl:message>
  <wsdl:message name="switchRouteResponse">
    <wsdl:documentation>
      <p>The switchRoute response message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopHeader" element="hdr:header"/>
    <wsdl:part name="mtopBody" element="conc:switchRouteResponse"/>
  </wsdl:message>
  <wsdl:message name="switchRouteException">
    <wsdl:documentation>
      <p>The switchRoute exception message.</p>
    </wsdl:documentation>
    <wsdl:part name="mtopBody" element="conc:switchRouteException"/>
  </wsdl:message>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/ResourceProvisioning/IIS/xsd/ConnectionControlMessages.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - OM ResourceProvisioning - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/rp/xsd/conc/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:lr="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:snc="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" xmlns:cc="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:route="http://www.tmforum.org/mtop/nrf/xsd/route/v1" xmlns:routedes="http://www.tmforum.org/mtop/nrf/xsd/routedes/v1" xmlns:tpdata="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:crcd="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:crmd="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: ResourceProvisioning</p>
      <p>Module:  Message XSD Module</p>
      <p>Description: This module contains the XML Schema type definitions of all the mTOP ConnectionControl SI XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="../../../Framework/IIS/xsd/MessageDefinitions.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="../../../Framework/IIS/xsd/NamingDefinitions.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/LayerRates.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/CommonTypes.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Snc.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Cc.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/route/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Route.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/routedes/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/RouteDescriptor.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/TpData.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/CommonResourceCreateDataType.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/CommonResourceModifyDataType.xsd"/>
  <!--================-->
  <xsd:element name="activateSubnetworkConnectionRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the activateSubnetworkConnection operation</p>
        <p>This operation is used to put an SNC into the ACTIVE state. This operation also applies to bundled SNCs.</p>
        <p>Success: SNCState in the parameter theSNC is set to SNCS_ACTIVE. All cross-connects required for the SNC were activated successfully. The errorReason parameter is set to an empty string.</p>
        <p>Failure: No exception thrown, except in the cases listed below. If the SNC or any of its network resources have changed as a result of this operation, then no exception can be thrown so that theSNC can be passed back to the Requesting OS. The SNCState in resulting theSNC will be either SNCS_PARTIAL or SNCS_PENDING. The state will be SNCS_PARTIAL if not all cross-connects on MEs have been successfully set up. The state will be SNCS_PENDING if the Target OS mode of operation prevents the activation of the SNC. The errorReason parameter is set accordingly</p>
        <p>For more details on how this service affects the state of an SNC see SNC Management Modes of Operation and SNC state diagram.</p>
        <p>During activation of an SNC, the TPs of the SNC are configured, and the necessary cross-connects are established for the SNC and appropriate changes are made to tpMappingMode such that TPs that are not TP_NA have their tpMappingMode set appropriately for the SNC configuration. See also createSnc() for an explanation of tpMappingMode behaviour. An SNC can be activated while in any state. When activated that additional information provided during the creation is also applied to the SNC in the network.</p>
        <p>In case of an ATM SNC (VP or VC), multiple termination points (VP CTP or VC CTP) can be created as a result of an activateSnc operation. These CTPs are all created/adjusted in compliance with the egress and ingress traffic parameters provided in the tpDataListToModify structure. For example, a non terminated VP SNC created over 3 managed elements will result, upon activation, in the usage of 6 VP CTPs and 3 VP cross-connections.</p>
        <p>Note that the activateSnc operation can be called repeatedly and eventually should succeed (except in conflict cases where the SNC remains in SNCS_PENDING or SNCS_PARTIAL). Should the missing cross-connects be activated in the MEs via a craft interface, for example, prior to communications to those MEs being re-established, the activateSnc command ultimately should succeed when communication to the MEs is re-established (even though all cross-connects already exist).</p>
        <p>The Target OS will apply the transmissionParams specified in the tpDataListToModify parameter (same behaviour as ManagedElementMgr::setTPData(). They may be applied before or after the creation of the CCs, as appropriate. Existing TP transmission parameters for which no changes were requested in tpDataListToModify will be left unchanged. However, the alarm reporting on the TPs and the containing TPs may be turned on by the Target OS as part of this request, unless otherwise specified via the transmission parameter "AlarmReporting". A similar behaviour is also allowed for the serviceState parameter, which may be set to IN_SERVICE for the TPs and the containing TPs. See transmissionParameters.</p>
        <p>If a given entry in the list of transmission parameters specified in the TPDataType can not be successfully applied to the TP, for any reason, then the errorReason field is appended with an appropriate reason text. Applying transmission parameters is best-effort (where not stated otherwise) and the resulting values of the transmission parameters are provided in the updated tpDataListToModify parameter. If the parameter is "not best effort" then the whole operation will be rejected and the appropriate exception thrown (see exceptions below).</p>
        <p>An already active SNC can be activated again; the Target OS is allowed to not send the commands to the ME a second time for the cross connect establishment however the commands may be sent for the transmission parameters. While in SNCS_PARTIAL state, it is possible to activate an SNC again, this corresponds to a retry.</p>
        <p>Note that all the SNC routes, intended and backup, if any, are unlocked. The restoration process will take control of the unlocked routes and activate the proper one. The behavior of sncState is the same in case there is only one route or more routes of the SNC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sncRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork connection to be activated</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tolerableImpact" type="com:GradesOfImpactType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum tolerable impact allowed.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="osFreedomLevel" type="com:FreedomLevelType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum level of freedom allowed to the Target OS to perform the activation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of TPs and parameters to apply.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="activateSubnetworkConnectionResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the activateSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of updated TPs to provide the resulting parameters.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="activatedSnc" type="snc:SubnetworkConnectionType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The subnetwork connection after the operation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Specifies the activation error(s) if any.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="activateSubnetworkConnectionException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the activateSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:notInValidState"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:timeslotInUse"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="addRouteRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the addRoute operation</p>
        <p>This operation creates a new route (e.g. for restoration purposes) and 
   associates it to the given SNC. The route is created in locked state.</p>
        <p>A route belongs to only one SNC. However CCs/TPs can be shared by 
   routes of different SNCs.</p>
        <p>A route applies to CCs at the same layer of the SNC. The route id must 
   be an unique identifier within the SNC name, with format up to Target OS.</p>
        <p>It is possible to specify if the creating route is the INTENDED route or 
   not; if intended, then the former intended route is updated to backup 
   route. Only one intended route can be associated to a given SNC at a 
   time.</p>
        <p>It is possible to specify if the creating route is ECCLUSIVE or not; if 
   ECCLUSIVE, then the Target OS must find a route that does not conflict or share 
   CCs with any other existing SNC route, in any administrative state . Once 
   an ECCLUSIVE route has been created by Target OS, any further creation operation 
   which conflicts with the exclusive route shall be refused.</p>
        <p>
          A route implicitly inherits from its SNC the following attributes:
          <ul>
            <li>the endpoints</li>
            <li>owner</li>
            <li>direction</li>
            <li>rerouteAllowed</li>
            <li>networkRouted</li>
            <li>connectionRate</li>
            <li>type</li>
            <li>protectionEffort is considered 
   EFFORT_SAME, i.e. if Target OS can not create a route with same static protection 
   level as the SNC, the operation is refused.</li>
          </ul>
        </p>
        <p>Note: The relationship between Bundled SNC service and the SNC with Multiple Routes feature requires
        further study and is not applicable for v3.0.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sncRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>This parameter indicates the name of the already created Subnetwork Connection
            to which the Route shall be added</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="routeCreateData" type="tns:RouteCreateDataType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>This parameter provides the structure describing the new Route
            to be added to the Subnetwork Connection</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tolerableImpact" type="com:GradesOfImpactType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum tolerable impact allowed.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="osFreedomLevel" type="com:FreedomLevelType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum level of freedom allowed to the Target OS to perform the creation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="addRouteResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the addRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="addedRoute" type="routedes:RouteDescriptorType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>This parameter returns the created Route.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Specifies the activation error(s) if any.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="addRouteException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the addRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:protectionEffortNotMet"/>
            <xsd:element ref="msg:unableToComply"/>
            <xsd:element ref="msg:unsupportedRoutingConstraints"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="checkValidSubnetworkConnectionRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the checkValidSubnetworkConnection operation</p>
        <p>The Requesting OS uses this operation to check if it is possible to create and maybe activate an SNC as specified in the input parameters. This operation also applies to bundled SNCs (see Bundled SNC overview for further details).</p>
        <p>The test should check for the existence of hardware that will support the requested SNC. If the mustConsiderResources parameter is false, the check must be independent of the current specific resource usage in the subnetwork (as in createSnc). If the mustConsiderResources parameter is true, the check must consider the current specific resource usage in the subnetwork (as in activateSnc); in that case, the rules of the Target OS' mode of operation apply to the check (see SD1-23_ModesOfOperation).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="createData" type="tns:SubnetworkConnectionCreateDataType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Data about the potential SNC.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of TPs and parameters that would be applied to the potential SNC.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="mustConsiderResources" type="xsd:boolean" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Indicates whether or not resource allocation must be considered.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="checkValidSubnetworkConnectionResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the checkValidSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="isValid" type="xsd:boolean" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Indicates if this is a valid SNC.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="checkValidSubnetworkConnectionException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the checkValidSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:unableToComply"/>
            <xsd:element ref="msg:unsupportedRoutingConstraints"/>
            <xsd:element ref="msg:userlabelInUse"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="createAndActivateSubnetworkConnectionRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the createAndActivateSubnetworkConnection operation</p>
        <p>This operation provides a way to create and activate a subnetwork connection in one command. As with the createSnc() operation and the activateSnc() operation, this operation also applies to bundled SNCs (see Bundled SNC overview for further details).</p>
        <p>It conceptually behaves like a call to createSnc followed by a call to activateSnc. Therefore, if the pending state is supported, it is possible for the SNC to be created but activation to be rejected, and the resulting SNC will be in pending state. If the pending state is not supported, then this is not possible and the SNC will not be created if activation is rejected. All success/failure conditions that apply to the two base operations also apply to the combined operation.</p>
        <p>If the SNC or any of its network resources have changed as a result of this operation, then no exception can be thrown so that theSNC can be passed back to the Requesting OS. Therefore, the exceptions that apply to activateSnc may not apply to the combined operation: if the creation was successful but the activation is rejected (only possible if the pending state is supported), no exception shall be thrown and the resulting SNC shall be provided in the out parameter createdSnc.</p>
        <p>For more details on how this service affects the state of an SNC see SNC Management Modes of Operation and SNC state diagram.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="containingMlsnRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork containing the SNC.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="createData" type="tns:SubnetworkConnectionCreateDataType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Data about the potential SNC.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tolerableImpact" type="com:GradesOfImpactType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum tolerable impact allowed.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="osFreedomLevel" type="com:FreedomLevelType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>This parameter indicates the maximum level of freedom allowed to the target OS
            to perform the creation and activation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of TPs and parameters to apply.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="createAndActivateSubnetworkConnectionResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the createAndActivateSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of updated TPs to provide the resulting parameters.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="createdSnc" type="snc:SubnetworkConnectionType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The subnetwork connection after the operation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Specifies the activation error(s) if any.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="createAndActivateSubnetworkConnectionException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the createAndActivateSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:notInValidState"/>
            <xsd:element ref="msg:protectionEffortNotMet"/>
            <xsd:element ref="msg:timeslotInUse"/>
            <xsd:element ref="msg:unableToComply"/>
            <xsd:element ref="msg:unsupportedRoutingConstraints"/>
            <xsd:element ref="msg:userlabelInUse"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="createModifiedSubnetworkConnectionRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the createModifiedSubnetworkConnection operation</p>
        <p>The Requesting OS invokes the createModifiedSNC to request the Target OS to modify the addressed SNC route. If the Target OS does not preserve the SNC name, then the method will create a new pending SNC from an existing pending or active SNC. It is similar to createSnc() (which provides details of creation behaviour) but the created SNC is made from data provided by an existing SNC and may replace the existing SNC.</p>
        <p>This operation does apply to bundled SNCs (see Bundled SNC overview for further details).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sncRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork connection to be modified.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="routeId" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The id of the route to be modifed. Empty string, indicates that the "intended" route is to be modified.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="modifyData" type="tns:SubnetworkConnectionModifyDataType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Structure describing the new/modified subnetwork connection. When the modify type is set to "rerouting", the Target OS should use the routing constraints (if any) to reroute the SNC from end to end. When the modify type is set to "add_protection" (leg) or "remove_protection" (leg), the Target OS should only try to modify the SNC by applying or removing the legs provided in the input parameters. When adding or removing a protection leg, the Target OS should compute the differencing of cross connect on NE.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tolerableImpact" type="com:GradesOfImpactType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>This parameter qualifies the tolerable conditions under which the SNC modification may be performed.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tolerableImpactEffort" type="com:ProtectionEffortType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Qualifies the conditions under which an SNC modification may be performed is a qualification of the requirement that the tolerableImpact as specified, is met.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="osFreedomLevel" type="com:FreedomLevelType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum level of freedom allowed to the Target OS to perform the activation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of TPs and parameters to apply.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="createModifiedSubnetworkConnectionResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the createModifiedSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of updated TPs to provide the resulting parameters.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="newOrModifiedSnc" type="snc:SubnetworkConnectionType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The modified SNC. It will have sncState and name set. The Target OS selects the SNC names so that they are not reused (within a reasonable time frame) for different SNCs.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Specifies the activation error(s) if any.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="createModifiedSubnetworkConnectionException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the createModifiedSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:protectionEffortNotMet"/>
            <xsd:element ref="msg:unableToComply"/>
            <xsd:element ref="msg:unsupportedRoutingConstraints"/>
            <xsd:element ref="msg:userlabelInUse"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="createSubnetworkConnectionRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the createSubnetworkConnection operation</p>
        <p>The Requesting OS invokes the createSnc service to request the Target OS to create an SNC given the parameters passed in the method. This operation also applies to bundled SNCs (see Bundled SNC overview for further details).</p>
        <p>Failure : This will throw an exception if it fails. No SNC object will be created on the Target OS.</p>
        <p>Success : SNC is created in the Target OS and the SNCState is set to the appropriate state in the parameter theSNC. The parameter theSNC will contain the attributes of the created SNC.</p>
        <p>For more details on how this service affects the state of an SNC see SNC Management Modes of Operation and SNC state diagram.</p>
        <p>An SNC may be created between any TPs. At a "CM" end point (a G.805 CP) the span of the SNC starts with a fixed or flexible connection through the ME at the SNC layer, i.e. the connectable layer of the end point. At an "LC"end point the span of the SNC starts with a G.805 TCP with mapping mode set to TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING.</p>
        <p>
          This operation may be used to create subnetwork connections. There is some variety to the form that SNCs may take. Examples of these SNCs are provided in layering. The following list shows the essence of variety of SNCs. An SNC may be one:
          <ul>
            <li>in which CTPs are all cross-connected and their tpMappingMode is set to TM_NEITHER_TERMINATED_NOR_AVAILABLE_FOR_MAPPING. In this case G.805 trails could be created by the Requesting OS by using setTPData to terminate and map CTPs that are adjacent to the CTPat the end of subnetwork connections created by means of createSnc.</li>
            <li>in which one or more end FTP/CTPs expose G.805 TCPs e.g. CTP type F referenced in layering. If all ends of the SNC terminate on this type of TP then the SNC provides the full route of a G.805 Trail.</li>
            <li>in which one or more end CTP offer the capability to terminate and map and the SNC reaches the end CTP via the PTP/FTP containing the CTP. In this case the SNC creation also sets the tpMappingMode to TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING as well as creating the crossconnects. If all ends of the SNC terminate on this type of TP or any combination of this type of TP and TPs that expose G.805 TCPs (see above) then the SNC provides the full route of a G.805 Trail.</li>
            <li>in which an end TP is a PTP (which is effectively permanently "terminated and available for mapping". If all ends of the SNC terminate on this type of TP or any combination of this type of TP, CTPs offering the capability to terminate and map and TPs that expose G.805 TCPs (see above) then the SNC provides the full route of a G.805 Trail.</li>
          </ul>
        </p>
        <p>CreateSNC allows for the creation of either point-to-point connections or legs of point-to-multipoint connections.</p>
        <p>To add a leg to a broadcast system, the aEnd TP in SNCCreateData_T shall be populated with the common source TP of the broadcast system. Each leg of a broadcast system is a separate SNC and is managed individually, even though they may share cross-connects.</p>
        <p>To create a broadcast system from a Point to Point SNC, the aEnd of the Point to Point SNC is used as the aEnd TP in tpdata:TerminationPointDataListType.</p>
        <p>If an existing SNC respects all the conditions described in createData, then the Target OS is allowed to return that existing SNC. It is also allowed for the Target OS to attempt to create a different SNC as explained below. The rest of the description below applies to the cases where the Target OS decides to create a new SNC.</p>
        <p>If the Requesting OS specifies a routing constraint in the request, then the Target OS must respect the specified constraint even if there are pending, partial, or active SNCs using the required parts of the route.</p>
        <p>The SNC is created with its intended route, in locked state. By means of other operations it is possible to add (then remove) additional routes for restoration purposes. By means of additional info, it is possible to specify if the intended route is ECCLUSIVE or not; if ECCLUSIVE, then the Target OS must find a route that does not conflict or share CCs or TPs with any other existing SNC route, in any administrative state. Once an ECCLUSIVE (intended) route has been created by Target OS, any further creation operation which conflicts with the exclusive route shall be refused.</p>
        <p>The Target OS tries to find a route for the request and if found returns the snc:SubnetworkConnectionType structure back to the Requesting OS with the members set to the appropriate values. The Target OS should attempt to find a route that does not conflict or share CCs with any other existing SNC, before it resorts to creating a conflicting SNC or an SNC that shares CCs.</p>
        <p>If the TPs at the Aend and the Zend are already in use by another SNC, the Target OS may still create the SNC or ECCPT_OBJECT_IN_USE or ECCPT_TIMESLOT_IN_USE may be thrown, depending on its mode of operation.</p>
        <p>If there already exists between the same termination points and with the same directionality and type, another SNC that is in the partial state, the Target OS will still attempt to create the new SNC. If no constraint is specified, the Target OS should attempt to find a different path. If constraints are specified, then the Target OS attempts to create the SNC with an appropriate route.</p>
        <p>If a route cannot be found, the SNC is not created in the Target OS and the ECCPT_UNABLE_TO_COMPLY exception is thrown (unless a more precise exception applies), indicating the reason.</p>
        <p>Depending on the SNC management mode of operation, it is acceptable for an Target OS to not implement this service in which case the ECCPT_NOT_IMPLEMENTED exception is thrown.</p>
        <p>VC SNCs are normally created over a VP network. Therefore, the VPI numbers of the VC SNCs specified with createData should match existing terminated and mapped VP CTPs. If a VPI number does not match an existing VP CTP, then the Target OS may create the VP CTP as 'TERMINATED and MAPPED' if osFreedomLevel allows it. Such a VP CTP is created with no traffic parameters. Note that such automatic creation of resourceless terminated VP CTPs depends on the capability of the Target OS and/or the ATM NE to support VC connections directly on ATM links (i.e., with no VP overlay network).</p>
        <p>An Requesting OS can request the Target OS to create an ATM network routed SNC (VP or VC layer rates); the Target OS will then manage the subnetwork connection as a soft PVC. The soft PVC may be completely or partially defined with regards to its source and destination TPs. The aEnd will, by definition, be the source of the Soft PVC (i.e., the originator of the call) and the zEnd will be the destination (i.e., being called). In order to allow the Requesting OS to manage Soft PVCs that may have only their source TPs in the subnetwork, the ctpName parameter from TPDataList zEnd will be used to either specify the VPI and/or VCI value of the destination CTP (including Target OS, managedElement, PTP/FTP and ATM_NI a.k.a., the full location in the physical ATM NE)or the address of the ATM interface on which the call will terminate and optionally the VPI/VCI values if they are specified/known by the Requesting OS (but not the complete physical location of the VP or VC TP).</p>
        <p>Note that all SNC state transitions (including to/from PENDING and PARTIAL) are applicable to ATM VPCs and VCCs. However, the PARTIAL state should only apply to plain PVCs (intermediate CTPs of a Soft PVC are automatically created and deleted by the network elements and they do not usually notify the Target OS).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="containingMlsnRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork containing the SNC.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="createData" type="tns:SubnetworkConnectionCreateDataType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Data about the potential SNC.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tolerableImpact" type="com:GradesOfImpactType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum tolerable impact allowed.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="osFreedomLevel" type="com:FreedomLevelType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum level of freedom allowed to the Target OS to perform the activation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="createSubnetworkConnectionResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the createSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="createdSnc" type="snc:SubnetworkConnectionType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The newly created SNC. It will have sncState and name set. The Target OS selects the SNC names so that they are not reused (within a reasonable time frame) for different SNCs.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Specifies the activation error(s) if any.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="createSubnetworkConnectionException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the createSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:protectionEffortNotMet"/>
            <xsd:element ref="msg:unableToComply"/>
            <xsd:element ref="msg:unsupportedRoutingConstraints"/>
            <xsd:element ref="msg:userlabelInUse"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="deactivateAndDeleteSubnetworkConnectionRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the deactivateAndDeleteSubnetworkConnection operation</p>
        <p>This operation provides a way to deactivate and then delete a subnetwork connection in one operation. As with the deactivateSnc(), operation and the deleteSnc() operation, this operation also applies to bundled SNCs (see Bundled SNC overview for further details).</p>
        <p>It conceptually behaves like a call to deactivateSnc followed by a call to deleteSnc. All success/failure conditions that apply to the two base operations also apply to the combined operation. If the SNC or any of its network resources have changed as a result of this operation, then no exception can be thrown so that deletedSnc can be passed back to the Requesting OS. Therefore, the exceptions that apply to deleteSnc may not apply to the combined operation: if the deactivation changed the SNC but the deletion is rejected,no exception should be thrown and the resulting SNC should be provided in the out parameter theSNC.</p>
        <p>The parameter deletedSnc will identify the SNC after the combined operation. If the operation is entirely successful, state will be SNCS_NONEXISTENT. In that case, this object does not exist on the Target OS and the Requesting OS should only look at state. This work around is so that the Requesting OS can have a combined operation.</p>
        <p>For more details on how this operation affects the state of an SNC see SNC Management Modes of Operation and SNC state diagram.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sncRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork connection to be deactivated and deleted.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tolerableImpact" type="com:GradesOfImpactType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Indicates the amount of traffic disruption that the Requesting OS user is willing to tolerate as a result of the deactivation and deletion request.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="osFreedomLevel" type="com:FreedomLevelType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum level of freedom allowed to the Target OS to perform the deactivation and deletion.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of TPs and parameters to apply.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deactivateAndDeleteSubnetworkConnectionResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the deactivateAndDeleteSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of updated TPs to provide the resulting parameters.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="theSnc" type="snc:SubnetworkConnectionType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>This parameter returns the complete information of the deleted SubnetworkConnection object
            (that it had before it was deleted)</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Specifies the deactivation and/or deletion error(s) if any.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deactivateAndDeleteSubnetworkConnectionException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the deactivateAndDeleteSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="deactivateSubnetworkConnectionRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the deactivateSubnetworkConnection operation</p>
        <p>Deactivating an SNC implies deletion in the ME of all the non-shared cross-connects that belong to this SNC and makes appropriate changes to tpMappingMode such that TPs that are not TP_NA have their tpMappingMode set to TM_NEITHER_TERMINATED_NOR_AVAILABLE_FOR_MAPPING as a result of this operation. See also createSnc(), for an explanation of tpMappingMode behaviour. The ports are left in the same state and are not put out of service.</p>
        <p>This operation applies to SNCs and bundled SNCs (see Bundled SNC overview for further details).</p>
        <p>Failure - No exception thrown (except for cases described below). If the SNC or any of its network resources have changed as a result of this operation, then no exception can be thrown so that theSNC can be passed back to the Requesting OS. The SNCState will be either SNCS_PARTIAL if the command partially completed or SNCS_ACTIVE if no cross-connects were deleted. The errorReason will be detailed accordingly.</p>
        <p>Success - SNC is deactivated in the Target OS and the SNCState is set to SNCS_PENDING in the out parameter theSNC. The parameter deactivatedSNC will contain the attributes of the deactivated SNC. The errorReason parameter may be set to an empty string.</p>
        <p>For more details on how this service affects the state of an SNC see SNC Management Modes of Operation and SNC state diagram.</p>
        <p>The Target OS will apply the transmissionParams specified in the tpDataListToModify parameter (same behaviour as setTpData()). They may be applied before or after the creation of the CCs, as appropriate. See transmissionParameters.</p>
        <p>If a given entry in the list of transmission parameters specified in tpDataListToModify can not be successfully applied to the TP, for any reason, then the errorReason field is appended with an appropriate reason text. Applying transmission parameters is best-effort (where not stated otherwise) and the resulting values of the transmission parameters are provided in the updated tpDataListToModify parameter. If the parameter is "not best effort" then the whole operation will be rejected and the appropriate exception thrown (see exceptions below).</p>
        <p>Existing TP transmission parameters for which no changes were requested in transmissionParams will be left unchanged. However, the alarm reporting on the TPs and the containing TPs may be turned off by the Target OS as part of this request, unless otherwise specified via the parameter "isAlarmReporting".</p>
        <p>An already deactivated SNC can be deactivated again with success (the Target OS is allowed to not send the commands to the ME a second time however). While in SNCS_PARTIAL state, it is possible to deactivate an SNC again, this corresponds to a retry.</p>
        <p>If the SNC has more alternative routes, then the operation locks all the SNC routes, intended and backup.</p>
        <p>In case of a VP or VC SNC, this operation implies deletion in the ME of all the non-shared VP or VC CTPs and VP or VC cross-connections involved in the SNC. Note that in the case of a VC SNC deactivation, only the VC CTP and VC cross-connections are normally deleted. VP CTPs must be explicitly deleted using deactivateSnc on the VP SNC, except when osFreedomLevel allows it. In that case, the VP CTP can be deleted along with the VC SNC if the VP CTP no longer contains any VC CTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sncRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork connection to be deactivated.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tolerableImpact" type="com:GradesOfImpactType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum tolerable impact allowed. Indicates the amount of traffic disruption that the Requesting OS user is willing to tolerate as a result of the deactivation request.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="osFreedomLevel" type="com:FreedomLevelType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum level of freedom allowed to the Target OS to perform the deactivation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of TPs and parameters to apply</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deactivateSubnetworkConnectionResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the deactivateSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of updated TPs to provide the resulting parameters.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="deactivatedSnc" type="snc:SubnetworkConnectionType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>the deactivated subnetwork connection</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Specifies the deactivation error(s) if any.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deactivateSubnetworkConnectionException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the deactivateSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="deleteSubnetworkConnectionRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the deleteSubnetworkConnection operation</p>
        <p>An already deactivated SNC can be deactivated again with success (the Target OS is allowed to not send the commands to the ME a second time however). While in SNCS_PARTIAL state, it is possible to deactivate an SNC again, this corresponds to a retry.</p>
        <p>If the SNC has more alternative routes, then the operation locks all the SNC routes, intended and backup.</p>
        <p>In case of a VP or VC SNC, this operation implies deletion in the ME of all the non-shared VP or VC CTPs and VP or VC cross-connections involved in the SNC. Note that in the case of a VC SNC deactivation, only the VC CTP and VC cross-connections are normally deleted. VP CTPs must be explicitly deleted using deactivateSnc on the VP SNC, except when osFreedomLevel allows it. In that case, the VP CTP can be deleted along with the VC SNC if the VP CTP no longer contains any VC CTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sncRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork connection to be deleted.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="osFreedomLevel" type="com:FreedomLevelType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum level of freedom allowed to the Target OS to perform the deletion.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deleteSubnetworkConnectionResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the deleteSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Specifies the deletion error(s) if any.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deleteSubnetworkConnectionException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the deleteSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:notInValidState"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="modifySubnetworkConnectionRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the modifySubnetworkConnection operation</p>
        <p>The Requesting OS invokes the modifySnc to perform the combined function of createModifiedSnc() and swapSnc() in sequence. The signature of the operation is the same as that of createModifiedSNC().</p>
        <p>This method will modify and activate the SNC on the network. If the Target OS does not preserve the SNC name, then output SNC will have a different name than formerly addressed SNC, which is deactivated and deleted.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sncRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork connection to be modified.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="routeId" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The id of the route to be modifed. Empty string, indicates that the "intended" route is to be modified.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="modifyData" type="tns:SubnetworkConnectionModifyDataType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Structure describing the new/modified subnetwork connection.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tolerableImpact" type="com:GradesOfImpactType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum tolerable impact allowed.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tolerableImpactEffort" type="com:ProtectionEffortType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>This parameter qualifies the tolerable conditions under which the SNC modification may be performed.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="osFreedomLevel" type="com:FreedomLevelType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum level of freedom allowed to the Target OS to perform the modification.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of TPs and parameters to apply</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="modifySubnetworkConnectionResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the modifySubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of updated TPs to provide the resulting parameters.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="newOrModifiedSnc" type="snc:SubnetworkConnectionType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The modified SNC. It will have sncState and name set. The Target OS selects the SNC names so that they are not reused (within a reasonable time frame) for different SNCs.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Specifies the modification error(s) if any.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="modifySubnetworkConnectionException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the modifySubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:notInValidState"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:protectionEffortNotMet"/>
            <xsd:element ref="msg:unableToComply"/>
            <xsd:element ref="msg:unsupportedRoutingConstraints"/>
            <xsd:element ref="msg:userlabelInUse"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="removeRouteRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the removeRoute operation</p>
        <p>This operation allows an Requesting OS to request the deletion of a route of given 
   SubnetworkConnection on a specified subnetwork.</p>
        <p>The addressed route must not be in the unlocked  state, and must not be 
   the intended route.</p>
        <p>Of course it is possible to delete a locked backup route which is "in 
   use" by other SNC route, because this operation has no side effect on 
   routes of any other SNCs, even if sharing CCs/TPs.</p>
        <p>Note: The relationship between Bundled SNC service and the SNC with Multiple Routes feature
        requires further study and is not applicable for v3.0.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sncRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork connection</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="routeId" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The id of the route.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="osFreedomLevel" type="com:FreedomLevelType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum level of freedom allowed to the Target OS to perform the deletion.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>This is a container for all operation request message vendor extensions.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="removeRouteResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the removeRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>This is a container for all operation response message vendor extensions.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="removeRouteException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the removeRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:notInValidState"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="setIntendedRouteRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the setIntendedRoute operation</p>
        <p>This operation allows an Requesting OS to request to set the addressed route as 
   intended route. The formerly intended route (if different from addressed) 
   is no longer the intended one, in order to respect the rule that an SNC 
   must have one intended route, and only one. The addressed route can be in 
   any administrative / actual state.</p>
        <p>Note: The relationship between Bundled SNC service and the SNC with Multiple Routes feature
        requires further study and is not applicable for v3.0.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sncRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork connection.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="routeId" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The id of the route.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>This is a container for all operation request message vendor extensions.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setIntendedRouteResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the setIntendedRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>This is a container for all operation response message vendor extensions.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setIntendedRouteException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the setIntendedRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="setRoutesAdminStateRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the setRoutesAdminState operation</p>
        <p>This operation allows an Requesting OS to specify a list of routes jointly with their 
   provisioned administrative state. If all routes of a given SNC are 
   successfully locked, then the SNC state transits to pending. If the SNC 
   state was partial or pending, and at least one route is successfully 
   unlocked, then the SNC state may transits to active.</p>
        <p>If the SNC represents a Control Plane Connection, an exception is raised.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sncRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork connection.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="routeNameAndAdminStateList" type="tns:RouteNameAndAdminStateListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>the list of route IDs plus their administrative state.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setRoutesAdminStateResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the setRoutesAdminState operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="routeNameAndAdminStateList" type="tns:RouteNameAndAdminStateListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The list of route IDs plus their administrative state.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="sncState" type="com:SubnetworkConnectionStateType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The subnetwork connection state after the operation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setRoutesAdminStateException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the setRoutesAdminState operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="swapSubnetworkConnectionRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the swapSubnetworkConnection operation</p>
        <p>The swapSNC operation will deactivate an identified active SNC (state changes to pending) and activate an identified pending SNC. The pending SNC may have been created by using a createSnc() or a createModifiedSnc().</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sncToBeDeactivatedRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork connection to be deactivated.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="sncToBeActivatedRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork connection to be activated.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tolerableImpact" type="com:GradesOfImpactType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum tolerable impact allowed.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="osFreedomLevel" type="com:FreedomLevelType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum level of freedom allowed to the Target OS to perform the activation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of TPs and parameters to apply</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="swapSubnetworkConnectionResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the swapSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of updated TPs to provide the resulting parameters.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="stateOfActivatedSnc" type="com:SubnetworkConnectionStateType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The state of the activated subnetwork connection after the operation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Specifies the error(s) if any.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="swapSubnetworkConnectionException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the swapSubnetworkConnection operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:notInValidState"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="switchRouteRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the switchRoute operation</p>
        <p>This operation is used to activate the input route and deactivate the 
   current (or partial) route(s), if different from input route. The operation 
   is rejected if performed on a pending SNC. The operation does not affect 
   the administrativeState of any route. The restoration process may re-route 
   again, e.g. in case of failures.</p>
        <p>
          <b>Success</b>
          : output parameter sncState is set to SNCS_ACTIVE. All 
   cross-connects required for the given route were activated successfully, 
   and if needed, all the cross-connects of former current (or partial) 
   route(s) were deactivated successfully. The errorReason parameter is set to 
   an empty string.
        </p>
        <p>
          <b>Failure</b>
          : No exception thrown, except in the cases listed below. 
   If the SNC or any of its network resources have changed as a result of this 
   operation, then no exception can be thrown so that the sncState can be 
   passed back to the Requesting OS. The resulting SNCState will be either SNCS_PARTIAL 
   or SNCS_ACTIVE.
        </p>
        <p>The sncState will be SNCS_PARTIAL if not all cross-connects (of given 
   input route) on MEs have been successfully set up, and there is not an 
   active route. Moreover one or more of the cross-connects to be removed may 
   be still active, this leads to two (or more) routes in partial state.</p>
        <p>The sncState will be SNCS_ACTIVE if all cross-connects (of given input 
   route) on MEs have been successfully set up, but one or more of the cross-
   connects (of any of the other partial routes) to be removed are still 
   active, this leads to one route in active state and another (or more) route 
   in partial state. The errorReason parameter is set accordingly.</p>
        <p>
          Recovery scenarios: this operation can be performed again addressing
          <ul>
            <li>an already active route, in order to retry the deactivation of other 
   route(s) in partial state.</li>
            <li>a partial route, in order to retry its activation (and retry, if 
   needed, the deactivation of other partial routes as well).</li>
          </ul>
        </p>
        <p>The Target OS will apply the transmissionParams specified in the tpDataListToModify 
   parameter (same behaviour as setTpData). They may be applied before or 
   after the creation of the CCs, as appropriate. Existing TP transmission 
   parameters for which no changes were requested in tpDataListToModify will be left 
   unchanged. However, the alarm reporting on the connected TPs and the 
   containing TPs may be turned on by the Target OS as part of this request, unless 
   otherwise specified via the transmission parameter "AlarmReporting". A 
   similar behaviour is also allowed for the serviceState parameter, which may 
   be set to IN_SERVICE for the TPs. See SD1-16_LayeredParameters.pdf</p>
        <p>If a given entry in the list of transmission parameters specified in the 
   TpData can not be successfully applied to the TP, for any reason, then 
   the errorReason field is appended with an appropriate reason text. Applying 
   transmission parameters is best-effort (where not stated 
   otherwise) and the resulting values of the 
   transmission parameters are provided in the updated tpDataListToModify 
   parameter.</p>
        <p>An already active SNC route can be activated again; the Target OS is allowed 
   to not send the commands to the ME a second time for the cross connect 
   establishment however the commands may be sent for the transmission 
   parameters.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sncRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The name of the subnetwork connection.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="routeId" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The id of the route.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tolerableImpact" type="com:GradesOfImpactType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum tolerable impact allowed.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="osFreedomLevel" type="com:FreedomLevelType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The maximum level of freedom allowed to the Target OS to perform the deletion.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of TPs and parameters to apply.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>This is a container for all operation request message vendor extensions .</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="switchRouteResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the switchRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>A list of TPs and parameters to apply.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>This is a container for all operation request message vendor extensions .</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="sncState" type="com:SubnetworkConnectionStateType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The subnetwork connection state after the operation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Specifies the error(s) if any.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="switchRouteException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the switchRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:notInValidState"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="SubnetworkConnectionCreateDataType">
    <xsd:annotation>
      <xsd:documentation>The read-create attributes required for the creation of a subnetworkConnection on the Target OS are packaged together in an SNCCreateData structure which the Requesting OS will pass to the Target OS at SNC creation time. These are the read-create attributes of the SNC.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="crcd:CommonResourceCreateDataType">
        <xsd:sequence>
          <xsd:element name="direction" type="com:ConnectionDirectionType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The connection directionality must be specified by the Requesting OS.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="staticProtectionLevel" type="com:StaticProtectionLevelType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The Requesting OS must specify the requested staticProtectionLevel as specified in SNC Types.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="protectionEffort" type="com:ProtectionEffortType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The Requesting OS must specify the protectionEffort as specified in SNC Types.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="rerouteAllowed" type="com:RerouteType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>This attribute indicates if the Target OS/MEs are allowed and/or required to reroute this SNC if there is a failure on this SNC, periodically to optimize the routes, or for any other reason. It is an Target OS/ME implementation whether this is done using network routing protocols or if the Target OS/MEs detect the failure and take appropriate action to attempt to fix the SNC. There is no requirement for the reroutes to respect the constraints specified in the creation request (ccInclusions, neTpInclusions, fullRoute, neTpSubnetworkConnectionExclusions).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="networkRouted" type="com:NetworkRoutedType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>This attribute specifies if the network is allowed/required to route this SNC.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="type" type="com:SubnetworkConnectionTypeType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The Requesting OS must specify the sncType as specified in SNC Types.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="layerRate" type="lr:LayerRateType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Identifies the layer at which the SNC is to be made.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ccInclusionList" type="cc:CrossConnectListType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Specifies a list of cross-connects that must be used by the SNC. The list must be empty if no cross-connect constraints are required.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="inclusionResourceRefList" type="nam:NamingAttributeListType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Specifies a list of MEs, GTPs, TLs, PTPs, FTPs, CTPs, and/or SNCs that must be used by the SNC when carrying out a full reroute or adding a routing leg. The list must be empty if no ME/TL/PTP/FTP/CTP/SNC constraints are required. If the Target OS cannot fully satisfy the constraints, then the request will be rejected. Specifying both inclusion and exclusion constraints is not supported, therefore this list must be empty if exclusionRefList is not empty.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isFullRoute" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Specifies if the neTpInclusions constraints describe the full route of the SNC or routing leg (as opposed to only a partial constraint). When no inclusions constraints are specified, false must be used.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="exclusionResourceRefList" type="nam:NamingAttributeListType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Specifies a list of MEs, TLs, PTPs, FTPs, CTPs, and/or SNCs to be excluded. This is applicable for adding the leg or doing a full reroute and the route must not use any of the NEs, TLs, PTPs, FTPs and CTPs specified, nor any resource used by the SNCs specified. Specifying both inclusion and exclusion constraints is not supported, therefore this list must be empty if inclusionResourceRefList or ccInclusionList is not empty.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="aEndRefList" type="nam:NamingAttributeListType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The Requesting OS must specify the aEnd (CTP/FTP) as specified in SNC Types. Is also used to indicate the Source TP when adding a leg to an existing broadcast system. If the TP is an FTP the Requesting OS is allowed to specify a generic end point within a ME, the Target OS will choose the appropriate TP instance. See Object Naming for further detail.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="zEndRefList" type="nam:NamingAttributeListType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The Requesting OS must specify the zEnd (CTP/FTP) as specified in SNC Types. Is also used to indicate the Sink TP when adding a leg to an existing broadcast system. If the Requesting OS supplies an invalid combination of TPs in aEnd and zEnd, then the Target OS will throw an INVALID_INPUT exception. Aend and Zend TPs have to be on the same subnetwork If the TP is an FTP the Requesting OS is allowed to specify a generic end point within a ME, the Target OS will choose the appropriate TP instance. See Object Naming for further detail.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="aRoleList" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Defines the element that defines the end point role of all aEnd TPs of an SNC. This is an ordered list indexed with the aEnd TP list of the SNC.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <!--???							
								<xsd:element name="role" type="com:TerminationPointRoleInSubnetworkConnectionType" minOccurs="0" maxOccurs="unbounded"/>-->
                <xsd:element name="role" type="com:EndPointRoleListType" minOccurs="0" maxOccurs="unbounded"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="isReportingAlarms" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Provides an indication whether alarm reporting for this instance is active or not.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="networkReroute" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the reroute of an SNC (if allowed) should be computed by the network, by the Target OS, or if it does not matter. Values are "Yes", "No", "NotSet".</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isRevertive" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Takes value "True" when an SNC can be switched back to its original route.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isRevertiveReroute" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the rerouting of an SNC is revertive or not.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="intendedRouteAEnds" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Must be specified when creating an SNC with multiple routes in case the end points of the intended route are a subset of SNC end points. Value is "aEnd-i-j-k-..." where i, j, k are the indexes of SNC aEnd points.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isIntendedRouteExclusive" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Specifies when creating an SNC with multiple routes if the intended route is ECCLUSIVE or not; if ECCLUSIVE, then the Target OS must find a route that does not conflict or shared CCs or CTPs with any other existing SNC route, in any state (pending/partial/current). Once an ECCLUSIVE (intended) route has been created by the Target OS, any further creation operation which conflicts with the exclusive route shall be rejected.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="intendedRouteZEnds" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Must be specified when creating an SNC with multiple routes in case the end points of the intended route are a subset of SNC end points. Value is "zEnd-i-j-k-..." where i, j, k are the indexes of SNC zEnd points.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="priority" type="xsd:unsignedInt" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The SNC creation priority.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="zRoleList" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Defines the element that defines the end point role of all zEnd TPs of an SNC. This is an ordered list indexed with the zEnd TP list of the SNC.</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <!--<xsd:element name="role" type="com:TerminationPointRoleInSubnetworkConnectionType" minOccurs="0" maxOccurs="unbounded"/>-->
                <xsd:element name="role" type="com:EndPointRoleListType" minOccurs="0" maxOccurs="unbounded"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="asapRef" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP to this SNC object. Value is the ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="aEndTpList" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>String representing a sequence of name-value pairs. The backslash (“\”) character is used as separator.</p>
                <p>Format: \name=OS\value=CompanyName/OSname\name=ME\value=ManagedElementName\name=PTP\value=PTPName\name=CTP\value=CTPName
E.g.: 
\name=OS\value=BigCompany/SmallTarget OS\name=ME\value=YellowManagedElement\name=PTP\value=BluePTP\name=CTP\value=RedCTP</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="blsrDirection" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Used in conjunction with “Timeslot” when the Target OS cannot use the routing constraints for a BLSR case.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isBundledSnc" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the SNC constitutes a Bundled SNC service (value “True”) or not.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="mustRemoveGtps" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute defines that the target OS has to delete all the interior Group Termination Points (GTPs) supporting the bundled Subnetwork Connection (SNC) when the SNC is deleted. The attribute is only used when creating bundled SNCs.</p>
                <p>
                  It can take on two possible values:
                  <uL>
                    <li>true (the target OS must make a best-effort attempt to remove the interior GTPs that once belonged to the SNC) and</li>
                    <li>false (the requesting OS doesn't care if the target OS removes the interior GTPs or not).</li>
                  </uL>
                </p>
                <p>In the case that mustRemoveGtps is set to "true" and the target OS cannot remove all the interior GTPs, the target OS should return a list of the GTPs that could not be removed in the errorReason field of the deactivateAndDeleteSnc and deleteSnc operations. The errorReason will be "not all interior GTPs could be deleted" - this will be followed by the names of the GTPs that could not be deleted.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="potentialFutureSetupIndicator" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Refers to the aEnd and is used to convey the likely future (or current) configuration of the SNC (see SD1-16_layeredParameters.pdf).</p>
                <p>
                  Legal Values are:
                  <ul>
                    <li>RSU_POINT_TO_POINT</li>
                    <li>RSU_BROADCAST</li>
                    <li>RSU_ANY_CONFIG</li>
                  </ul>
                </p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="routingConstraintEffort" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The effort required for routing constraint application.</p>
                <p>
                  Legal Values are:
                  <ul>
                    <li>BEST_EFFORT</li>
                    <li>EXACT_MATCH</li>
                  </ul>
                </p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="timeslot" type="xsd:integer" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Used in conjunction with “blsrDirection”.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="zEndTpList" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>see aEndTpList.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--====================-->
  <xsd:complexType name="SubnetworkConnectionModifyDataType">
    <xsd:annotation>
      <xsd:documentation>The read-create attributes required for the modification of a subnetworkConnection on the Target OS are packaged together in an SNCModifyData structure which the Requesting OS will pass to the Target OS in a request to modify an existing SNC.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="crmd:CommonResourceModifyDataType">
        <xsd:sequence>
          <xsd:element name="direction" type="com:ConnectionDirectionType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The connection directionality must be specified by the Requesting OS.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="modifyType" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Class of modification: "rerouting", "add_protection" or "remove_protection".</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="mustRetainOldSnc" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Request for the Target OS to keep the old SNC in pending state.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="modifyServersAllowed" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Allow to modify the server layers to fulfil the protection constraint.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="staticProtectionLevel" type="com:StaticProtectionLevelType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The Requesting OS must specify the requested staticProtectionLevel as specified in SNC Types.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="protectionEffort" type="com:ProtectionEffortType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The Requesting OS must specify the protectionEffort as specified in SNC Types.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="rerouteAllowed" type="com:RerouteType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>This attribute indicates if the Target OS/MEs are allowed and/or required to reroute this SNC if there is a failure on this SNC, periodically to optimize the routes, or for any other reason. It is an Target OS/ME implementation whether this is done using network routing protocols or if the Target OS/MEs detect the failure and take appropriate action to attempt to fix the SNC. There is no requirement for the reroutes to respect the constraints specified in the creation request (ccInclusions, inclusionResourceRefList, fullRoute, exclusionResourceRefList).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="networkRouted" type="com:NetworkRoutedType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>This attribute specifies if the network is allowed/required to route this SNC.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="type" type="com:SubnetworkConnectionTypeType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The Requesting OS must specify the sncType as specified in SNC Types.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="layerRate" type="lr:LayerRateType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Identifies the layer at which the SNC is to be made.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="addedOrNewRoute" type="route:RouteListType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Depending on the modifyType, AddedOrNewRoute describes the route of a new protection leg or the whole SNC. When it describes a segment to be added, either the SNCP cross-connects or the switch TPs that will be changed in the segment may be specified by the Requesting OS. The Target OS then chooses the missing segments. Alternatively, the Requesting OS may specify the full route.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="removedRoute" type="route:RouteListType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>RemovedRoute describes dropping of a protection leg from the original SNC. Either the last cross-connects (that contain the SNCP) are specified by the Requesting OS or the full route may be specified. This parameter can be used in conjunction with addedOrNewRoute only to reroute a segment.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="inclusionResourceRefList" type="nam:NamingAttributeListType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Specifies a list of MEs, TLs, PTPs, FTPs, CTPs and/or SNCs that must be used by the SNC when carrying out a full reroute or adding a routing leg. The list must be empty if no ME/TL/PTP/FTP/CTP/SNC constraints are required.If the Target OS cannot fully satisfy the constraints, then the request will be rejected. Specifying both inclusion and exclusion constraints is not supported, therefore this list must be empty if exclusionResourceRefList is not empty.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isFullRoute" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Specifies if the neTpInclusions constraints describe the full route of the SNC or routing leg (as opposed to only a partial constraint). When no inclusions constraints are specified, false must be used.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="exclusionResourceRefList" type="nam:NamingAttributeListType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Specifies a list of MEs, TLs, PTPs, FTPs, CTPs, and/or SNCs to be excluded. This is applicable for adding the leg or doing a full reroute and the route must not use any of the NEs, TLs, PTPs, FTPs and CTPs specified, nor any resource used by the SNCs specified. Specifying both inclusion and exclusion constraints is not supported, therefore this list must be empty if inclusionResourceRefList or ccInclusionList are not empty..</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="aEndRefList" type="nam:NamingAttributeListType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The Requesting OS must specify the aEnd (CTP/FTP) as specified in SNC Types. Is also used to indicate the Source TP when adding a leg to an existing broadcast system. If the TP is an FTP the Requesting OS is allowed to specify a generic end point within a ME, the Target OS will choose the appropriate TP instance. See Object Naming for further detail.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="zEndRefList" type="nam:NamingAttributeListType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The Requesting OS must specify the zEnd (CTP/FTP) as specified in SNC Types. Is also used to indicate the Sink TP when adding a leg to an existing broadcast system. If the Requesting OS supplies an invalid combination of TPs in aEnd and zEnd, then the Target OS will throw an INVALID_INPUT exception. Aend and Zend TPs have to be on the same subnetwork. If the TP is an FTP the Requesting OS is allowed to specify a generic end point within a ME, the Target OS will choose the appropriate TP instance. See Object Naming for further detail.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isReportingAlarms" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Provides an indication whether alarm reporting for this instance is active or not.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="networkReroute" type="com:RerouteType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Indicates if the reroute of an SNC (if allowed) should be computed by the network, by the Target OS, or if it does not matter.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isRevertive" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Takes value "True" when an SNC can be switched back to its original route.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isRevertiveReroute" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Indicates whether the rerouting of an SNC is revertive or not.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="asapRef" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP to this SNC object. Value is the ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="mustRemoveGtps" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute defines that the target OS has to delete all the interior Group Termination Points (GTPs) supporting the bundled Subnetwork Connection (SNC) when the SNC is deleted. The attribute is only used when creating bundled SNCs.</p>
                <p>
                  It can take on two possible values:
                  <uL>
                    <li>true (the target OS must make a best-effort attempt to remove the interior GTPs that once belonged to the SNC) and</li>
                    <li>false (the requesting OS doesn't care if the target OS removes the interior GTPs or not).</li>
                  </uL>
                </p>
                <p>In the case that mustRemoveGtps is set to "true" and the target OS cannot remove all the interior GTPs, the target OS should return a list of the GTPs that could not be removed in the errorReason field of the deactivateAndDeleteSnc and deleteSnc operations. The errorReason will be "not all interior GTPs could be deleted" - this will be followed by the names of the GTPs that could not be deleted.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="priority" type="xsd:unsignedInt" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The SNC creation priority.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="RouteCreateDataType">
    <xsd:annotation>
      <xsd:documentation>Structure is used by the Requesting OS to pass to the Target OS when a route is added to a SNC.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="isIntendedRoute" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute defines the purpose of the Route to be created. Refer to description in the Route object class.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isExclusiveRoute" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute defines that not any other Routes of other Subnetwork Connections can share any of the Routes Cross Connections or Connection Termination Points, even in pending state (true).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ccInclusionList" type="cc:CrossConnectListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Specifies a list of cross-connects that must be used by the route. The 
   list must be empty if no cross-connect constraints are required.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="inclusionResourceRefList" type="nam:NamingAttributeListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Specifies a list of MEs/TLs/TPs/GTPs/SNCs that must be used by the 
   route. The list must be empty if no ME/TL/TP/GTP/SNC constraints are required. If the Target OS cannot fully satisfy the constraints, then the request will be rejected. Specifying both inclusion and exclusion constraints is not supported, therefore this list must be empty if exclusionResourceRefList is not empty.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isFullRoute" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Specifies if the ccInclusions and neTpInclusions constraints describe 
   the full route details (as opposed to only a partial constraint). When no 
   inclusions constraints are specified, false must be used.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="exclusionResourceRefList" type="nam:NamingAttributeListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Specifies a list of MEs/TLs/TPs/GTPs and/or "SNC + routes" to be 
   excluded. The route to be created must not use any of the MEs/TLs/TPs/GTPs
   specified, nor any resource used by the "SNC + routes" specified. 
   Specifying both inclusion and exclusion constraints is not supported, 
   therefore this list must be empty if ccInclusions or inclusionResourceRefList are non 
   empty. "SNC + route" is described by the SNC name followed by the string 
   ("/routeId=") and the route id. If only the SNC name is specified, then its 
   intended route is considered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="RouteNameAndAdminStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This structure is used by the Requesting OS to lock or unlock the route of an SNC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="id" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>Unique identifier within the SNC name, with format up to Target OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="administrativeState" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>
              This state refers to the belonging SNC, and has not any relationship 
   with the actual state. It can assume only the following values:
              <ul>
                <li>
                  <b>locked</b>
                  : the route is not allowed to be active.
                </li>
                <li>
                  <b>unlocked</b>
                  : the route is allowed to be active.
                </li>
              </ul>
            </p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="RouteNameAndAdminStateListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of RouteNameAndAdminState structures.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="item" type="tns:RouteNameAndAdminStateType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/Framework/IIS/xsd/GeneralDefinitions.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - Framework - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema definitions of generic mTOP simple data types.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="NameAndStringValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="value" type="xsd:string" nillable="true"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvsList" type="tns:NameAndValueStringListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndValueStringListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndStringValue</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nvs" type="tns:NameAndStringValueType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:any namespace="##any" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvList" type="tns:NameAndAnyValueListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndAnyValueType</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nv" type="tns:NameAndAnyValueType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AliasNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that contains the list of aliases for the network entity. The attribute is a name-value list. The name refers to the type of alias (e.g., nativeEMSname) and the value component holds the alias itself</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="alias" minOccurs="0" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="aliasName" type="xsd:string"/>
            <xsd:element name="aliasValue" type="xsd:string" nillable="true"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AnyListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A generic list of any type of elements. Used for vendor Extensions or loose element encapsulation from other namespaces.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="DiscoveredNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the name of the object when its existence is first published on the CCV but only in the case where the OS that publishes the object on the CCV is not the naming OS. If the naming OS first publishes the object on the CCV, this attribute may be left empty.</p>
        <p>The discovered name is assumed to be unique from the perspective of the publishing OS.</p>
        <p>The discovered name published on the CCV does not necessarily need to be the name of the object as discovered by the OS from the subtending network.</p>
        <p>There are no specific rules concerning the relationship between the "name" and "discovered name" of the object. They could be set to the same value or they could be different.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ManufactureDateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type identifies the production date of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="MultiEventInventoryAttributesType">
    <xsd:annotation>
      <xsd:documentation>This attribute is used when a object instance is embedded in the inventory
			layout payload of a Multi-Event Inventory (MEI) notification.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="neTime" type="xsd:date" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the time at which the NE detected the inventory change (if available)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventIndication" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is an indication of the type of inventory update.</p>
            <p>Possible values are Object Creation (OC), Object Discovery (ODsc), Object Deletion (OD), 
				  Attribute Value Change (AVC), State Change (SC) and AVC_SC_and_Childern. Only the acronym (e.g., OC) 
				  is used in the actual attribute value. The following conventions apply:</p>
            <p>If an object creation or object discovery indicator is applied to a parent object, 
					it implicitly applies to all the children, i.e., the OS sending the notification only needs 
					to set the indicator attribute in the parent object.</p>
            <p>If an object deletion is applied to a parent object, it is assumed that all the children 
					are also deleted. The childern should not be listed.</p>
            <p>The AVC_SC_and_Childern indication may be applied to a parent object to imply that there 
					may be AVC or SC changes to the parent and some or all of the children.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="NetworkAccessDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A free-format string used to associate a resource to a Network Access Domain.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="NotificationIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the notification ID.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="NotificationIdentifierListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of notification IDs  (free string). Also,  the value found in notificationId field of the event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="notificationId" type="tns:NotificationIdentifierType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of all the object types. It is left as a string for maximum compatibility with future supported object types.</p>
        <p>Refer to the SD2-7 ObjectNaming for the list of all supported values.</p>
        <p>Otherwise, one can also refer to the ObjectEnumTypedefined in CommonResourceInfo (see NRB DDP), which is provided as XML Schema enumerations solely as a helper (not used in any messaging validation).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enumeration of all the supported query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI">
      <xsd:enumeration value="ANSI-92"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath20/"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The loose definition of all the supported query dialect types.</p>
        <p>Refer to QueryDialectEnumType definition to the enumeration of recommended query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="QueryExpressionType" mixed="true">
    <xsd:annotation>
      <xsd:documentation>
        <p>The generic schema datatype definition for the query expression used in most filters.</p>
        <p>This definition is borrowed from WS-Notification v1.3.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any processContents="lax" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="tns:QueryDialectTypeType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          <p>The dialect of the given query expression</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/Framework/IIS/xsd/MessageDefinitions.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - Framework - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema definitions of all the generic mTOP XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" schemaLocation="HeaderDefinitions.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="GeneralDefinitions.xsd"/>
  <!--==============-->
  <xsd:complexType name="BaseExceptionMessageType" abstract="false">
    <xsd:annotation>
      <xsd:documentation>
        <p>The (abstract) base type definition of all exception messages.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="hdr:header" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The mTOP header as it cannot be part of the SOAP Header in a SOAP v1.1 Fault message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="reason" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>A string indicating further details about the exception. It is a free format string filled by the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>The extension for specific vendor exception information.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:element name="notImplemented" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised by OS for an optional operation that is not implemented</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="internalError" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised in case of non-specific OS internal failure</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidInput" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request) parameters are invalid</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tooManyOpenIterators" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when data retrieval iterator capacity is full</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="entityNotFound" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request) parameters do not refer to an existing object</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="commLoss" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when communication to an entity (needed to help fulfill the request) is lost</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedCompressionFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given data compression format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedPackingFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given file packing format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidFilterDefinition" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the filter is invalid.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="objectInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tpInvalidEndPoint" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="timeslotInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="protectionEffortNotMet" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notInValidState" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unableToComply" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="capacityExceeded" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="accessDenied" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedRoutingConstraints" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="userlabelInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidTopic" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the topic is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notificationServiceProblem" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when there is a failure with the Broker.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AllExceptionsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reference to all supported exception types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="tns:accessDenied"/>
      <xsd:element ref="tns:capacityExceeded"/>
      <xsd:element ref="tns:commLoss"/>
      <xsd:element ref="tns:entityNotFound"/>
      <xsd:element ref="tns:internalError"/>
      <xsd:element ref="tns:invalidFilterDefinition"/>
      <xsd:element ref="tns:invalidInput"/>
      <xsd:element ref="tns:invalidTopic"/>
      <xsd:element ref="tns:notificationServiceProblem"/>
      <xsd:element ref="tns:notImplemented"/>
      <xsd:element ref="tns:notInValidState"/>
      <xsd:element ref="tns:objectInUse"/>
      <xsd:element ref="tns:protectionEffortNotMet"/>
      <xsd:element ref="tns:timeslotInUse"/>
      <xsd:element ref="tns:tooManyOpenIterators"/>
      <xsd:element ref="tns:tpInvalidEndPoint"/>
      <xsd:element ref="tns:unableToComply"/>
      <xsd:element ref="tns:unsupportedCompressionFormat"/>
      <xsd:element ref="tns:unsupportedPackingFormat"/>
      <xsd:element ref="tns:unsupportedRoutingConstraints"/>
      <xsd:element ref="tns:userlabelInUse"/>
    </xsd:choice>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Profile of exception types supported by all mTOP iterator operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="tns:AllExceptionsType">
        <xsd:choice>
          <xsd:element ref="tns:commLoss"/>
          <xsd:element ref="tns:internalError"/>
          <xsd:element ref="tns:invalidInput"/>
          <xsd:element ref="tns:notImplemented"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Generic request message structure for all data iterator operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/Framework/IIS/xsd/HeaderDefinitions.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - Framework - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema definitions of the mTOP XML header.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="GeneralDefinitions.xsd"/>
  <!--==============-->
  <xsd:simpleType name="ActivityStatusEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies the high-level response status for an activity.  Required for response messages, including error responses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="WARNING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="ActivityStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Add to the initial enumerations the Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ActivityStatusEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="MessageTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type of the message that is being exchanged as part of an activity.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REQUEST"/>
      <xsd:enumeration value="RESPONSE"/>
      <xsd:enumeration value="NOTIFICATION"/>
      <xsd:enumeration value="ERROR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationPatternType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Styles supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SimpleResponse"/>
      <xsd:enumeration value="MultipleBatchResponse"/>
      <xsd:enumeration value="BulkResponse"/>
      <xsd:enumeration value="Notification"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationStyleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Style supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MSG"/>
      <xsd:enumeration value="RPC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="CompressionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if compression is to be performed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:CompressionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CompressionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported compressions. All extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_COMPRESSION"/>
      <xsd:enumeration value="GZIP"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PackingTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if the output file(s) are to be packed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:PackingEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PackingEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported packing/packaging. All extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PACKING"/>
      <xsd:enumeration value="ZIP"/>
      <xsd:enumeration value="TAR"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="header">
    <xsd:annotation>
      <xsd:documentation>
        <p>MTOSI Standard Header.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="activityName" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the business transaction activity for the message being exchanged.
      The value is usually the name of the mTOP operation, e.g. getInventory.
      This value corresponds to the “operation” in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="msgName" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the message (or contract) that is being exchanged as part of an activity.
E.g. getInventoryResponse.
This field corresponds to the message name in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="msgType" type="tns:MessageTypeType" minOccurs="0"></xsd:element>
        <xsd:element name="senderURI" type="xsd:anyURI" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application sending this message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="destinationURI" type="xsd:anyURI" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the final destination of the message (the OS that will process the content of the message). This field may point to a logical end point or abstract topic name to be resolved by the communication transport middleware in order to deliver the message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="replyToURI" type="xsd:anyURI" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used by request messages to specify destination for response message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="originatorURI" type="xsd:anyURI" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the originating application of the message that resulted in this response or notification message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="failureReplytoURI" type="xsd:anyURI" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application receiving the potential error notification message. Required for all response messages and notifications which are triggered by request/response. If not specified the replyToURI is used. If the replyToURI is also not specified, senderURI endpoint is used to send back the failure response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="activityStatus" type="tns:ActivityStatusType" minOccurs="0"></xsd:element>
        <xsd:element name="correlationId" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>An identifier that could be set by the originator of an asynchronous request that will allow it to correlate the response to the request.  If this field is set, it should be reflected in the header of the response message.  Not required for notification headers.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="security" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Provides credential nformation for use by a security service for identification, authentication, or authorization.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="securityType" type="xsd:string" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the type of credential contained in the security element.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="priority" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Indicates message-handling priority for asynchronous messages.  It must be in the range 0-9 (lowest-highest). Default: 4</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string"></xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="msgSpecificProperties" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Conditionally required for request, response, and notification messages as identified by the documentation for a specific interface message.  The communications infrastructure or the receiving application can use this value for routing or filtering messages.</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="property" minOccurs="0" maxOccurs="unbounded">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="propName" type="xsd:string"/>
                    <xsd:element name="propValue" type="xsd:string"/>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="communicationPattern" type="tns:CommunicationPatternType" minOccurs="0"></xsd:element>
        <xsd:element name="communicationStyle" type="tns:CommunicationStyleType" minOccurs="0"></xsd:element>
        <xsd:element name="requestedBatchSize" type="xsd:unsignedInt" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The RequestedBatchSize parameter provides the control for the batch segmentation of the full set of output data generated by a coarse-grained operation such as getInventory or getActiveAlarms. The unit is any of the MTOSI objects. And, it defines the maximum number of MTOSI objects that can be included in all the batches of data sent as part of a multiple responses MEP.</p>
              <p>However, they are cases where a batch may exceed the number of objects defined in the RequestedBatchSize parameter. This is true if the granularity of a response atomic data representation is greater than just one object. This is true for the getInventory response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="batchSequenceNumber" type="xsd:unsignedInt" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm. Pattern to identify the batch seq number in a sequence.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="batchSequenceEndOfReply" type="xsd:boolean" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm. Pattern, true if it is the last result batch in a sequence</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="iteratorReferenceURI" type="xsd:anyURI" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Mandatory for all SIT (iterators) MEP to allow description of the data retrieval iterator.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="fileLocationURI" type="xsd:anyURI" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used for file retrieval. Specify the base name of the file(s) to be generated and the remote destination.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="compressionType" type="tns:CompressionTypeType" minOccurs="0"></xsd:element>
        <xsd:element name="packingType" type="tns:PackingTypeType" minOccurs="0"></xsd:element>
        <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Message originating timestamp</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Location for all vendor extensions to the MTOSI standard header.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/Framework/IIS/xsd/NamingDefinitions.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - Framework - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema definitions of all the generic mTOP XML naming structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="GeneralDefinitions.xsd"/>
  <!--=================-->
  <xsd:complexType name="RelativeDistinguishNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of relative distinguish name (RDN) data structure used in all object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="type" type="gen:ObjectTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN object type acronym.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of the MTOSI object name data structure as a sequence of RDNs, which represents a unique identifier for the MTOSI object on the CCV. Once set by the naming OS, the name is invariant for the life of the object and should be used when referring to the object over the CCV. Name attribute of an object instance shall always be assigned a value, unless the object instance is first discovered by an OS that is not the naming OS for the object instance. In such a case, the discovering OS shall provide a value for the Discovered Name attribute of the object. The naming OS shall provide a value for the Name attribute of the object once it becomes aware of the new object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="rdn" type="tns:RelativeDistinguishNameType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition for the list of MTOSI object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="tns:NamingAttributeType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/NetworkResourceBasic/IIS/xsd/LayerRates.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - DM Network Resources Basic - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type definitions of all the mTOP layer rates.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:element name="layerRateListType" type="tns:LayerRateListType"/>
  <!--================-->
  <xsd:complexType name="LayerRateListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of LayerRates</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="layerRate" type="tns:LayerRateType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="LayerRateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          The LayerRateType value is used to identify:
          <li>the Layer of a PTP/CTP,</li>
          <li>the characteristic information of a PTP/FTP,</li>
          <li>the Layer/Rate of a connection.</li>
        </p>
        <p>Each LayerRateType may be used in conjunction with a CTP/PTP/FTP of that layer. In the SDH definitions, the G.805 CP and G.805 Termination Function layer names differ, for example TU12 is used for the G.805 CP and VC12 for the corresponding G.805 Termination Function. In this interface definition the TU and VC definitions have been combined into a single composite layer and this has been named to include the equivalent SONET layer, e.g. LR_VT2_andTypeU12_VC12.</p>
        <p>
          For more details refer to the following supporting document:
          <li>layering documentfor all layering concepts</li>
          <li>LayerRates document for information about recognized values in MTOSI</li>
        </p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:LayerRateEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="LayerRateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="LR_DS0_64K"/>
      <xsd:enumeration value="LR_DSL"/>
      <xsd:enumeration value="LR_Not_Applicable"/>
      <xsd:enumeration value="LR_Async_FOTS_150M"/>
      <xsd:enumeration value="LR_Async_FOTS_417M"/>
      <xsd:enumeration value="LR_Async_FOTS_560M"/>
      <xsd:enumeration value="LR_Async_FOTS_565M"/>
      <xsd:enumeration value="LR_Async_FOTS_1130M"/>
      <xsd:enumeration value="LR_Async_FOTS_1G7"/>
      <xsd:enumeration value="LR_Async_FOTS_1G8"/>
      <xsd:enumeration value="LR_ATM_NI"/>
      <xsd:enumeration value="LR_ATM_VC"/>
      <xsd:enumeration value="LR_ATM_VP"/>
      <xsd:enumeration value="LR_D1_Video"/>
      <xsd:enumeration value="LR_DIGITAL_SIGNAL_RATE"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_DSR_1_5M"/>
      <xsd:enumeration value="LR_DSR_2M"/>
      <xsd:enumeration value="LR_DSR_4M"/>
      <xsd:enumeration value="LR_DSR_6M"/>
      <xsd:enumeration value="LR_DSR_8M"/>
      <xsd:enumeration value="LR_DSR_16M"/>
      <xsd:enumeration value="LR_DSR_34M"/>
      <xsd:enumeration value="LR_E2_8M"/>
      <xsd:enumeration value="LR_E5_565M"/>
      <xsd:enumeration value="LR_Encapsulation"/>
      <xsd:enumeration value="LR_Fragment"/>
      <xsd:enumeration value="LR_DSR_45M"/>
      <xsd:enumeration value="LR_DSR_140M"/>
      <xsd:enumeration value="LR_DSR_565M"/>
      <xsd:enumeration value="LR_DSR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_DSR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OC1_STM0"/>
      <xsd:enumeration value="LR_DSR_OC3_STM1"/>
      <xsd:enumeration value="LR_DSR_2xSTM1"/>
      <xsd:enumeration value="LR_DSR_OC12_STM4"/>
      <xsd:enumeration value="LR_DSR_OC24_STM8"/>
      <xsd:enumeration value="LR_DSR_OC48_and_STM16"/>
      <xsd:enumeration value="LR_DSR_OC192_and_STM64"/>
      <xsd:enumeration value="LR_DSR_OC768_and_STM256"/>
      <xsd:enumeration value="LR_DSR_OTU1"/>
      <xsd:enumeration value="LR_DSR_OTU2"/>
      <xsd:enumeration value="LR_DSR_OTU3"/>
      <xsd:enumeration value="LR_E1_2M"/>
      <xsd:enumeration value="LR_E20_2x2M"/>
      <xsd:enumeration value="LR_E30_8x2M"/>
      <xsd:enumeration value="LR_E3_34M"/>
      <xsd:enumeration value="LR_E4_140M"/>
      <xsd:enumeration value="LR_ESCON"/>
      <xsd:enumeration value="LR_Ethernet"/>
      <xsd:enumeration value="LR_ETR"/>
      <xsd:enumeration value="LR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_FC_12_133M"/>
      <xsd:enumeration value="LR_FC_25_266M"/>
      <xsd:enumeration value="LR_FC_50_531M"/>
      <xsd:enumeration value="LR_FC_100_1063M"/>
      <xsd:enumeration value="LR_FDDI"/>
      <xsd:enumeration value="LR_FICON"/>
      <xsd:enumeration value="LR_FR_IF"/>
      <xsd:enumeration value="LR_FR_PVC"/>
      <xsd:enumeration value="LR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_ISDN_BRI"/>
      <xsd:enumeration value="LR_Line_OC1_STS1_and_MS_STM0"/>
      <xsd:enumeration value="LR_Line_OC3_STS3_and_MS_STM1"/>
      <xsd:enumeration value="LR_Line_OC12_STS12_and_MS_STM4"/>
      <xsd:enumeration value="LR_Line_OC24_STS24_and_MS_STM8"/>
      <xsd:enumeration value="LR_Line_OC48_STS48_and_MS_STM16"/>
      <xsd:enumeration value="LR_Line_OC192_STS192_and_MS_STM64"/>
      <xsd:enumeration value="LR_Line_OC768_STS768_and_MS_STM256"/>
      <xsd:enumeration value="LR_Low_Order_TU3_VC3"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3"/>
      <xsd:enumeration value="LR_STS3c_and_AU4_VC4"/>
      <xsd:enumeration value="LR_STS4c_and_VC3_4c"/>
      <xsd:enumeration value="LR_STS5c_and_VC3_5c"/>
      <xsd:enumeration value="LR_STS6c_and_VC4_2c"/>
      <xsd:enumeration value="LR_STS7c_and_VC3_7c"/>
      <xsd:enumeration value="LR_STS8c_and_VC3_8c"/>
      <xsd:enumeration value="LR_STS9c_and_VC4_3c"/>
      <xsd:enumeration value="LR_Optical_Channel"/>
      <xsd:enumeration value="LR_Optical_Multiplex_Section"/>
      <xsd:enumeration value="LR_OPTICAL_SECTION"/>
      <xsd:enumeration value="LR_Optical_Transmission_Section"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_PHYSICAL_MEDIALESS"/>
      <xsd:enumeration value="LR_PHYSICAL_OPTICAL"/>
      <xsd:enumeration value="LR_POTS"/>
      <xsd:enumeration value="LR_Section_OC1_STS1_and_RS_STM0"/>
      <xsd:enumeration value="LR_Section_OC3_STS3_and_RS_STM1"/>
      <xsd:enumeration value="LR_Section_OC12_STS12_and_RS_STM4"/>
      <xsd:enumeration value="LR_Section_OC24_STS24_and_RS_STM8"/>
      <xsd:enumeration value="LR_Section_OC48_STS48_and_RS_STM16"/>
      <xsd:enumeration value="LR_Section_OC192_STS192_and_RS_STM64"/>
      <xsd:enumeration value="LR_Section_OC768_STS768_and_RS_STM256"/>
      <xsd:enumeration value="LR_STS1_and_AU3_High_Order_VC3"/>
      <xsd:enumeration value="LR_STS2c_and_VC3_2c"/>
      <xsd:enumeration value="LR_STS10c_and_VC3_10c"/>
      <xsd:enumeration value="LR_STS11c_and_VC3_11c"/>
      <xsd:enumeration value="LR_STS12c_and_VC4_4c"/>
      <xsd:enumeration value="LR_STS13c_and_VC3_13c"/>
      <xsd:enumeration value="LR_STS14c_and_VC3_14c"/>
      <xsd:enumeration value="LR_STS15c_and_VC4_5c"/>
      <xsd:enumeration value="LR_STS16c_and_VC3_16c"/>
      <xsd:enumeration value="LR_STS17c_and_VC3_17c"/>
      <xsd:enumeration value="LR_STS18c_and_VC4_6c"/>
      <xsd:enumeration value="LR_STS19c_and_VC3_19c"/>
      <xsd:enumeration value="LR_STS20c_and_VC3_20c"/>
      <xsd:enumeration value="LR_STS21c_and_VC4_7c"/>
      <xsd:enumeration value="LR_STS22c_and_VC3_22c"/>
      <xsd:enumeration value="LR_STS23c_and_VC3_23c"/>
      <xsd:enumeration value="LR_STS24c_and_VC4_8c"/>
      <xsd:enumeration value="LR_STS25c_and_VC3_25c"/>
      <xsd:enumeration value="LR_STS26c_and_VC3_26c"/>
      <xsd:enumeration value="LR_STS27c_and_VC4_9c"/>
      <xsd:enumeration value="LR_STS28c_and_VC3_28c"/>
      <xsd:enumeration value="LR_STS29c_and_VC3_29c"/>
      <xsd:enumeration value="LR_STS30c_and_VC4_10c"/>
      <xsd:enumeration value="LR_STS31c_and_VC3_31c"/>
      <xsd:enumeration value="LR_STS32c_and_VC3_32c"/>
      <xsd:enumeration value="LR_STS33c_and_VC4_11c"/>
      <xsd:enumeration value="LR_STS34c_and_VC3_34c"/>
      <xsd:enumeration value="LR_STS35c_and_VC3_35c"/>
      <xsd:enumeration value="LR_STS36c_and_VC4_12c"/>
      <xsd:enumeration value="LR_STS37c_and_VC3_37c"/>
      <xsd:enumeration value="LR_STS38c_and_VC3_38c"/>
      <xsd:enumeration value="LR_STS39c_and_VC4_13c"/>
      <xsd:enumeration value="LR_STS40c_and_VC3_40c"/>
      <xsd:enumeration value="LR_STS41c_and_VC3_41c"/>
      <xsd:enumeration value="LR_STS42c_and_VC4_14c"/>
      <xsd:enumeration value="LR_STS43c_and_VC3_43c"/>
      <xsd:enumeration value="LR_STS44c_and_VC3_44c"/>
      <xsd:enumeration value="LR_STS45c_and_VC4_15c"/>
      <xsd:enumeration value="LR_STS46c_and_VC3_46c"/>
      <xsd:enumeration value="LR_STS47c_and_VC3_47c"/>
      <xsd:enumeration value="LR_STS48c_and_VC4_16c"/>
      <xsd:enumeration value="LR_STS49c_and_VC3_49c"/>
      <xsd:enumeration value="LR_STS50c_and_VC3_50c"/>
      <xsd:enumeration value="LR_STS51c_and_VC4_17c"/>
      <xsd:enumeration value="LR_STS52c_and_VC3_52c"/>
      <xsd:enumeration value="LR_STS53c_and_VC3_53c"/>
      <xsd:enumeration value="LR_STS54c_and_VC4_18c"/>
      <xsd:enumeration value="LR_STS55c_and_VC3_55c"/>
      <xsd:enumeration value="LR_STS56c_and_VC3_56c"/>
      <xsd:enumeration value="LR_STS57c_and_VC4_19c"/>
      <xsd:enumeration value="LR_STS58c_and_VC3_58c"/>
      <xsd:enumeration value="LR_STS59c_and_VC3_59c"/>
      <xsd:enumeration value="LR_STS60c_and_VC4_20c"/>
      <xsd:enumeration value="LR_STS61c_and_VC3_61c"/>
      <xsd:enumeration value="LR_STS62c_and_VC3_62c"/>
      <xsd:enumeration value="LR_STS63c_and_VC4_21c"/>
      <xsd:enumeration value="LR_STS64c_and_VC3_64c"/>
      <xsd:enumeration value="LR_STS65c_and_VC3_65c"/>
      <xsd:enumeration value="LR_STS66c_and_VC4_22c"/>
      <xsd:enumeration value="LR_STS67c_and_VC3_67c"/>
      <xsd:enumeration value="LR_STS68c_and_VC3_68c"/>
      <xsd:enumeration value="LR_STS69c_and_VC4_23c"/>
      <xsd:enumeration value="LR_STS70c_and_VC3_70c"/>
      <xsd:enumeration value="LR_STS71c_and_VC3_71c"/>
      <xsd:enumeration value="LR_STS72c_and_VC4_24c"/>
      <xsd:enumeration value="LR_STS73c_and_VC3_73c"/>
      <xsd:enumeration value="LR_STS74c_and_VC3_74c"/>
      <xsd:enumeration value="LR_STS75c_and_VC4_25c"/>
      <xsd:enumeration value="LR_STS76c_and_VC3_76c"/>
      <xsd:enumeration value="LR_STS77c_and_VC3_77c"/>
      <xsd:enumeration value="LR_STS78c_and_VC4_26c"/>
      <xsd:enumeration value="LR_STS79c_and_VC3_79c"/>
      <xsd:enumeration value="LR_STS80c_and_VC3_80c"/>
      <xsd:enumeration value="LR_STS81c_and_VC4_27c"/>
      <xsd:enumeration value="LR_STS82c_and_VC3_82c"/>
      <xsd:enumeration value="LR_STS83c_and_VC3_83c"/>
      <xsd:enumeration value="LR_STS84c_and_VC4_28c"/>
      <xsd:enumeration value="LR_STS85c_and_VC3_85c"/>
      <xsd:enumeration value="LR_STS86c_and_VC3_86c"/>
      <xsd:enumeration value="LR_STS87c_and_VC4_29c"/>
      <xsd:enumeration value="LR_STS88c_and_VC3_88c"/>
      <xsd:enumeration value="LR_STS89c_and_VC3_89c"/>
      <xsd:enumeration value="LR_STS90c_and_VC4_30c"/>
      <xsd:enumeration value="LR_STS91c_and_VC3_91c"/>
      <xsd:enumeration value="LR_STS92c_and_VC3_92c"/>
      <xsd:enumeration value="LR_STS93c_and_VC4_31c"/>
      <xsd:enumeration value="LR_STS94c_and_VC3_94c"/>
      <xsd:enumeration value="LR_STS95c_and_VC3_95c"/>
      <xsd:enumeration value="LR_STS96c_and_VC4_32c"/>
      <xsd:enumeration value="LR_STS97c_and_VC3_97c"/>
      <xsd:enumeration value="LR_STS98c_and_VC3_98c"/>
      <xsd:enumeration value="LR_STS99c_and_VC4_33c"/>
      <xsd:enumeration value="LR_STS100c_and_VC3_100c"/>
      <xsd:enumeration value="LR_STS101c_and_VC3_101c"/>
      <xsd:enumeration value="LR_STS102c_and_VC4_34c"/>
      <xsd:enumeration value="LR_STS103c_and_VC3_103c"/>
      <xsd:enumeration value="LR_STS104c_and_VC3_104c"/>
      <xsd:enumeration value="LR_STS105c_and_VC4_35c"/>
      <xsd:enumeration value="LR_STS106c_and_VC3_106c"/>
      <xsd:enumeration value="LR_STS107c_and_VC3_107c"/>
      <xsd:enumeration value="LR_STS108c_and_VC4_36c"/>
      <xsd:enumeration value="LR_STS109c_and_VC3_109c"/>
      <xsd:enumeration value="LR_STS110c_and_VC3_110c"/>
      <xsd:enumeration value="LR_STS111c_and_VC4_37c"/>
      <xsd:enumeration value="LR_STS112c_and_VC3_112c"/>
      <xsd:enumeration value="LR_STS113c_and_VC3_113c"/>
      <xsd:enumeration value="LR_STS114c_and_VC4_38c"/>
      <xsd:enumeration value="LR_STS115c_and_VC3_115c"/>
      <xsd:enumeration value="LR_STS116c_and_VC3_116c"/>
      <xsd:enumeration value="LR_STS117c_and_VC4_39c"/>
      <xsd:enumeration value="LR_STS118c_and_VC3_118c"/>
      <xsd:enumeration value="LR_STS119c_and_VC3_119c"/>
      <xsd:enumeration value="LR_STS120c_and_VC4_40c"/>
      <xsd:enumeration value="LR_STS121c_and_VC3_121c"/>
      <xsd:enumeration value="LR_STS122c_and_VC3_122c"/>
      <xsd:enumeration value="LR_STS123c_and_VC4_41c"/>
      <xsd:enumeration value="LR_STS124c_and_VC3_124c"/>
      <xsd:enumeration value="LR_STS125c_and_VC3_125c"/>
      <xsd:enumeration value="LR_STS126c_and_VC4_42c"/>
      <xsd:enumeration value="LR_STS127c_and_VC3_127c"/>
      <xsd:enumeration value="LR_STS128c_and_VC3_128c"/>
      <xsd:enumeration value="LR_STS129c_and_VC4_43c"/>
      <xsd:enumeration value="LR_STS130c_and_VC3_130c"/>
      <xsd:enumeration value="LR_STS131c_and_VC3_131c"/>
      <xsd:enumeration value="LR_STS132c_and_VC4_44c"/>
      <xsd:enumeration value="LR_STS133c_and_VC3_133c"/>
      <xsd:enumeration value="LR_STS134c_and_VC3_134c"/>
      <xsd:enumeration value="LR_STS135c_and_VC4_45c"/>
      <xsd:enumeration value="LR_STS136c_and_VC3_136c"/>
      <xsd:enumeration value="LR_STS137c_and_VC3_137c"/>
      <xsd:enumeration value="LR_STS138c_and_VC4_46c"/>
      <xsd:enumeration value="LR_STS139c_and_VC3_139c"/>
      <xsd:enumeration value="LR_STS140c_and_VC3_140c"/>
      <xsd:enumeration value="LR_STS141c_and_VC4_47c"/>
      <xsd:enumeration value="LR_STS142c_and_VC3_142c"/>
      <xsd:enumeration value="LR_STS143c_and_VC3_143c"/>
      <xsd:enumeration value="LR_STS144c_and_VC4_48c"/>
      <xsd:enumeration value="LR_STS145c_and_VC3_145c"/>
      <xsd:enumeration value="LR_STS146c_and_VC3_146c"/>
      <xsd:enumeration value="LR_STS147c_and_VC4_49c"/>
      <xsd:enumeration value="LR_STS148c_and_VC3_148c"/>
      <xsd:enumeration value="LR_STS149c_and_VC3_149c"/>
      <xsd:enumeration value="LR_STS150c_and_VC4_50c"/>
      <xsd:enumeration value="LR_STS151c_and_VC3_151c"/>
      <xsd:enumeration value="LR_STS152c_and_VC3_152c"/>
      <xsd:enumeration value="LR_STS153c_and_VC4_51c"/>
      <xsd:enumeration value="LR_STS154c_and_VC3_154c"/>
      <xsd:enumeration value="LR_STS155c_and_VC3_155c"/>
      <xsd:enumeration value="LR_STS156c_and_VC4_52c"/>
      <xsd:enumeration value="LR_STS157c_and_VC3_157c"/>
      <xsd:enumeration value="LR_STS158c_and_VC3_158c"/>
      <xsd:enumeration value="LR_STS159c_and_VC4_53c"/>
      <xsd:enumeration value="LR_STS160c_and_VC3_160c"/>
      <xsd:enumeration value="LR_STS161c_and_VC3_161c"/>
      <xsd:enumeration value="LR_STS162c_and_VC4_54c"/>
      <xsd:enumeration value="LR_STS163c_and_VC3_163c"/>
      <xsd:enumeration value="LR_STS164c_and_VC3_164c"/>
      <xsd:enumeration value="LR_STS165c_and_VC4_55c"/>
      <xsd:enumeration value="LR_STS166c_and_VC3_166c"/>
      <xsd:enumeration value="LR_STS167c_and_VC3_167c"/>
      <xsd:enumeration value="LR_STS168c_and_VC4_56c"/>
      <xsd:enumeration value="LR_STS169c_and_VC3_169c"/>
      <xsd:enumeration value="LR_STS170c_and_VC3_170c"/>
      <xsd:enumeration value="LR_STS171c_and_VC4_57c"/>
      <xsd:enumeration value="LR_STS172c_and_VC3_172c"/>
      <xsd:enumeration value="LR_STS173c_and_VC3_173c"/>
      <xsd:enumeration value="LR_STS174c_and_VC4_58c"/>
      <xsd:enumeration value="LR_STS175c_and_VC3_175c"/>
      <xsd:enumeration value="LR_STS176c_and_VC3_176c"/>
      <xsd:enumeration value="LR_STS177c_and_VC4_59c"/>
      <xsd:enumeration value="LR_STS178c_and_VC3_178c"/>
      <xsd:enumeration value="LR_STS179c_and_VC3_179c"/>
      <xsd:enumeration value="LR_STS180c_and_VC4_60c"/>
      <xsd:enumeration value="LR_STS181c_and_VC3_181c"/>
      <xsd:enumeration value="LR_STS182c_and_VC3_182c"/>
      <xsd:enumeration value="LR_STS183c_and_VC4_61c"/>
      <xsd:enumeration value="LR_STS184c_and_VC3_184c"/>
      <xsd:enumeration value="LR_STS185c_and_VC3_185c"/>
      <xsd:enumeration value="LR_STS186c_and_VC4_62c"/>
      <xsd:enumeration value="LR_STS187c_and_VC3_187c"/>
      <xsd:enumeration value="LR_STS188c_and_VC3_188c"/>
      <xsd:enumeration value="LR_STS189c_and_VC4_63c"/>
      <xsd:enumeration value="LR_STS190c_and_VC3_190c"/>
      <xsd:enumeration value="LR_STS191c_and_VC3_191c"/>
      <xsd:enumeration value="LR_STS192c_and_VC4_64c"/>
      <xsd:enumeration value="LR_STS768c_and_VC4_256c"/>
      <xsd:enumeration value="LR_T1_and_DS1_1_5M"/>
      <xsd:enumeration value="LR_T2_and_DS2_6M"/>
      <xsd:enumeration value="LR_T3_and_DS3_45M"/>
      <xsd:enumeration value="LR_VT1_5_and_TU11_VC11"/>
      <xsd:enumeration value="LR_VT2_and_TU12_VC12"/>
      <xsd:enumeration value="LR_VT6_and_TU2_VC2"/>
      <!--The ones below were added in the MTOSI 2.1 release-->
      <xsd:enumeration value="LR_LAG_Fragment"/>
      <xsd:enumeration value="LR_DSR_10Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2.5Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10.7Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_11.1Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_LAN"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_WAN"/>
      <xsd:enumeration value="LR_DSR_40Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OTU2e"/>
      <xsd:enumeration value="LR_DSR_OTU3e1"/>
      <xsd:enumeration value="LR_DSR_OTU3e2"/>
      <xsd:enumeration value="LR_DSR_OTU4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_0"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_Flexible"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_4"/>
      <xsd:enumeration value="LR_Optical_Physical_Section"/>
      <xsd:enumeration value="LR_Optical_Physical_Section_Multilane"/>
      <xsd:enumeration value="LR_Section_OC3072_STS3072_and_RS_STM1024"/>
      <xsd:enumeration value="LR_Line_OC3072_STS3072_and_MS_STM1024"/>
      <xsd:enumeration value="LR_DSR_OC3072_and_STM1024"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/NetworkResourceFulfillment/IIS/xsd/CommonTypes.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - DM Network Resource Fulfillment - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/com/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common type definitions used in some the mTOP XML Resource objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:simpleType name="CommunicationStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This state reflects a communication state between the EMS and its ManagedElement.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CS_AVAILABLE"/>
      <xsd:enumeration value="CS_UNAVAILABLE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="ConnectionDirectionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction of a subnetwork connection, cross-connects, or topological link.
For a detailed description of the use of this attribute see SNC Types supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CD_UNI">
        <xsd:annotation>
          <xsd:documentation>
            <p>UNIdirectional, i.e. source TP to sink TP. Note: creation of unidirectional connections is supported even when CTPs/FTPs are modelled as bidirectional.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CD_BI">
        <xsd:annotation>
          <xsd:documentation>
            <p>BIdirectional, i.e. bidirectional TP to bidirectional TP, a.k.a. two-way.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ConnectionlessPortTerminationPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This parameter shall identify the role in the flow domain of
        the requested CPTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CPTPR_FD_EDGE">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Edge CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_FD_INTERNAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Internal CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_ALL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return all CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="DirectionalityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction for a TerminationPoint:</p>
        <p>The directionality of PTPs is defined from an external point of view, while the directionality of CTPs is defined from an internal point of view. Consequently, sink PTPs generate source CTPs, and sink CTPs form source PTPs. Refer to SNC Types and to layers for further information on termination point and connection directionality.</p>
        <p>Note that ATM termination points (LR_ATM_NI, LR_ATM_VP and LR_ATM_VC) are always bi-directional even though the traffic may be asymmetric (and eventually null in one of the two directions).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="D_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>Used when the directionality specification is not necessary.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_BIDIRECTIONAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>source and sink (transmit and receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SOURCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>source (transmit).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SINK">
        <xsd:annotation>
          <xsd:documentation>
            <p>sink (receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="FlowDomainFragmentTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          This (read-only) attribute provides an indication of the type of the matrix flow domain fragment. It may have one of the following values:
          <ul>
            <li>"FDFRT_POINT_TO_POINT": the FDFr is between exactly two points</li>
            <li>"FDFRT_POINT_TO_MULTIPOINT": (E-tree)</li>
            <li>"FDFRT_MULTIPOINT": the FDFr is between at least two points</li>
          </ul>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"></xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="GradesOfImpactType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Grades of maximum tolerable disruption to traffic as a result of the operation that this parameter is describing.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="GOI_HITLESS"/>
      <xsd:enumeration value="GOI_MINOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Less or equal to 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GOI_MAJOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Greater than 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="HolderStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Holder State Type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMPTY">
        <xsd:annotation>
          <xsd:documentation>
            <p>no equipment is installed and no expected equipment has been identified</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected and currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EXPECTED_AND_NOT_INSTALLED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected but not currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_NOT_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>physically inserted in the ME but not expected</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MISMATCH_OF_INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>there is an inconsistency between the expected equipment and the installed equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNAVAILABLE">
        <xsd:annotation>
          <xsd:documentation>
            <p>this holder cannot accept the installation or provisioning of equipment (this is typically caused by a double width card installed next to this slot)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>
            <p>the OS does not know the state of the equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentHolderTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The EquipmentHolder with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentHolderEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentHolderEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Equipment holder type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="rack"/>
      <xsd:enumeration value="shelf"/>
      <xsd:enumeration value="sub_shelf"/>
      <xsd:enumeration value="slot"/>
      <xsd:enumeration value="sub_slot"/>
      <xsd:enumeration value="remote_unit"/>
      <xsd:enumeration value="remote_slots"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="EquipmentObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Type of equipment object in equipment holder. Values are vendor-specific.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledPartNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the resource part number (PN) of the installed equipment. If not available (or there is no installed equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledSerialNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the serial number of the installed equipment. If not available (or there is no installed equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Firmware version of the installed equipment. If not available (or there is no installed equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRoutedType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Network routed, indicates if the route must be or is computed and implemented at the network level. NR_YES indicates that the route must be / is computed at the network. NR_NO indicates that the route must not be / is not computed at the network. NR_NA indicates that the route can be computed anywhere.</p>
        <p>If rerouting is allowed, this attribute will indicate who last rerouted the SNC, the network (NR_YES) or the EMS (NR_NO).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NR_NA"/>
      <xsd:enumeration value="NR_NO"/>
      <xsd:enumeration value="NR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Indicates if the reroute of an SNC (if allowed) should be computed by the network, by the EMS, or if it does not matter.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_SET"/>
      <xsd:enumeration value="NO"/>
      <xsd:enumeration value="YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="FreedomLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the NMS-specified EMS level of freedom when performing SNC operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMSFL_CC_AT_SNC_LAYER"/>
      <xsd:enumeration value="EMSFL_TERMINATE_AND_MAP"/>
      <xsd:enumeration value="EMSFL_HIGHER_ORDER_SNCS"/>
      <xsd:enumeration value="EMSFL_RECONFIGURATION"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ModifyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute specifies the class of SNC modification; i.e. rerouting or add/remove protection.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ADD_REMOVE_PROTECTION"/>
      <xsd:enumeration value="REROUTING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="PotentialFutureSetupIndicatorType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Refers to the aEnd and is used to convey the likely future (or current) configuration of the SNC (see SD1-16_layeredParameters.pdf).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RSU_POINT_TO_POINT"/>
      <xsd:enumeration value="RSU_BROADCAST"/>
      <xsd:enumeration value="RSU_ANY_CONFIG"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProtectionEffortType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection effort is a statement of the requirement of the static protection level. For example if EFFORT_SAME_OR_WORSE is specified for a 3-ended FULLY_PROTECTED connection, a 3-ended PARTIALLY_PROTECTED connection is acceptable, but a 2-ended connection (ST_SIMPLE) is not acceptable i.e. ProtectionEffort does not have any bearing on the externaly visible shape of the SNC.
EFFORT_WHATEVER indicates that the specified static protection level is preferred, but that any other level is acceptable.</p>
        <p>For a detailed description of the use of this attribute see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EFFORT_WHATEVER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_BETTER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_WORSE"/>
      <xsd:enumeration value="EFFORT_SAME "/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionRole with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionRoleEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionRoleEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Protection role type.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="NA"/>
      <xsd:enumeration value="PRIMARY"/>
      <xsd:enumeration value="BACKUP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="RerouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The RerouteType type indicates if the EMS/MEs are allowed and/or required to reroute this SNC if there is a failure on this SNC, periodically to optimize the routes, of for any other reason.It is an EMS/ME implementation whether this is done using network routing protocols or if the EMS/MEs detect the failure and take appropriate action to attempt to fix the SNC.</p>
        T
        <p>he RR_NO value means that the EMS/MEs are not allowed to reroute the SNC. The RR_YES value means that the EMS/MEs are allowed to reroute the SNC and required to attempt to reroute it upon failure. The RR_NA value is used when the NMS does not want to specify the exact EMS behaviour. In this case it is left up to the EMS to decide whether rerouting will be provided. It is also used if the EMS/MEs are allowed to reroute the SNC but not required to attempt to reroute it upon failure.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RR_NA"/>
      <xsd:enumeration value="RR_NO"/>
      <xsd:enumeration value="RR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ResourceFulfillmentStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IN_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been put into operation and is operating as provisioned (completely or partially).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity is entirely not capable of performing its provisioned functions and is not restricted by administrative actions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE_BY_MAINTENANCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been taken intentionally out of service by a management action.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SERV_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>The service state is not applicable.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceFulfillmentStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This object attribute indicates basic administration state of equipment and OS objects.
      Also, this object attribute accepts Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceFulfillmentStateEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNCState enum is used to represent the various states that an SNC may take.</p>
        <p>The following states may be supported by the EMS, depending on the SNC management mode of operation used by the EMS. See SNC Management Modes Of Operation for details.</p>
        <p>SNCS_PENDING: the SNC has been created by an NMS and has not been activated by any NMS; or the SNC has been successfully deactivated by an NMS. That state has no relationship with the network state of the cross- connects of the SNC. It is allowable for an EMS to not support the SNCS_PENDING state and to reject any operation that attempts to put an SNC into SNCS_PENDING state.</p>
        <p>SNCS_ACTIVE: the SNC is not in pending state, a route has been assigned to the SNC and all cross-connects for the SNC are active in the network.</p>
        <p>SNCS_PARTIAL: the SNC is not in pending state, and either a route has not been assigned to the SNC, or not all of the cross-connects of the SNC are active in the network. This may or may not include activated SNCs for which there are currently no active cross- connects in the network, depending on the SNC management mode of operation.It is possible that, in some EMSes, this state be unreachable.</p>
        <p>SNCS_NONEXISTENT: this is not an SNC state per se, as it applies to "non-existent SNCs". It is used in the interface to report SNCs that have been deleted.</p>
        <p>See SNCState state diagram for details on valid transitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SNCS_NONEXISTENT"/>
      <xsd:enumeration value="SNCS_PENDING"/>
      <xsd:enumeration value="SNCS_ACTIVE"/>
      <xsd:enumeration value="SNCS_PARTIAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNC Type describes the connection based on the signal flows. 
For a detailed description of the use of this attribute see SNC Types.
In case of an ATM SNC (VP or VC), ST_SIMPLE is used to specify a 'plain' (hard or regular) PVC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ST_SIMPLE"/>
      <xsd:enumeration value="ST_ADD_DROP_A"/>
      <xsd:enumeration value="ST_ADD_DROP_Z"/>
      <xsd:enumeration value="ST_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_ADD_DROP"/>
      <xsd:enumeration value="ST_OPEN_ADD_DROP"/>
      <xsd:enumeration value="ST_EXPLICIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SoftwareVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The OS product software version</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="StaticProtectionLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The StaticProtectionLevel with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:StaticProtectionLevelEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="StaticProtectionLevelEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The static protection level is a statement of the internal resiliency of the SNC (internal to the subnetwork). The more resilient an SNC is, the more bandwidth it will consume.</p>
        <p>The protection level does not have any bearing on the externally visible shape and traffic flows of the SNC (in non-failure cases).
For a detailed description of the use of this attribute, see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="PREEMPTIBLE"/>
      <xsd:enumeration value="UNPROTECTED"/>
      <xsd:enumeration value="PARTIALLY_PROTECTED"/>
      <xsd:enumeration value="FULLY_PROTECTED"/>
      <xsd:enumeration value="HIGHLY_PROTECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationModeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Within the facade definition, the CTP/FTP can act as an aggregate of associated G.805 TCPs, G.805 Termination Functions and G.805 CPs at one or more LayerRates. The CTP is contained within a PTP or FTP.</p>
        <p>The TerminationMode attribute indicates and controls the connection of the named CP at a specified LayerRate to the dedicated G.805 TCP and associated G.805 Termination Function at the same LayerRate within the CTP/FTP.</p>
        <p>The TerminationMode is used, for example, to control the Termination and mapping to VT1.5 of an STS1 Trail within an OC3 port. This capability could potentially be used to terminate an STS1 backbone Trail within a lower order mux that has the capability to alternatively cross-connect the STS1 unterminated. The same capability is used in SDH and is potentially applicable to any LayerRate.</p>
        <p>TerminationMode has the following values</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TM_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can not be mapped (i.e., it has no contained potential CTPs). This indicates that an SNC/crossconnect can be used to connect the G.805 TCP of the CTP to the connection point of another CTP/FTP. This only applies to CTPs that connect on their server side and are related to the containing PTP/FTP on their client side.</p>
            <p>FTP: The FTP can not be mapped on the server side (i.e., it has no contained potential CTPs on the server side). This indicates that an SNC/crossconnect can be used to connect the G.805 TCP of the FTP to the connection point of another CTP/FTP. This only applies to FTPs that connect on their server side and do not support IM (Inverse Multiplexing).</p>
            <p>PTP: This is the only legal value for a PTP</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_NEITHER_TERMINATED_NOR_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped and currently is (i.e., it has contained actual CTPs). This indicates that the G.805 CPs adapted from the corresponding G.805 Termination Function within the CTP aggregate are available to provide client layer capacity (e.g. STS1 terminated and mapped to VT1.5 i.e. channelized). In this state the TCP will be sourcing and sinking traffic. This is only a valid value for CTPs that support client adaptation.</p>
            <p>FTP: The FTP can be mapped on the server side and currently is (i.e., it has contained actual CTPs on the server side). This indicates that the FTP supports IM (Inverse Multiplexing) and the server side contained CTPs (if any) are available for connection as the FTP is actively assembling the fragments of the IM. This value is not valid for an FTP that does not support IM. (see layering for more details).</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped but currently is not (i.e., it does have contained potential CTPs, but currently has no contained actual CTPs). This indicates that the G.805 CP aggregated in the CTP is not connected to a TCP (that would be aggregated in the same CTP) and therefore the CTP is available for SNC/crossconnect connectivity (e.g. STS1 not terminated and not mapped to VT1.5i.e. not channelized).</p>
            <p>FTP: The FTP can be mapped on the server side but currently is not (i.e., it does have contained potential CTPs on the server side, but currently has no contained actual CTPs on the server side). This indicates that the FTP supports IM (Inverse Multiplexing) but the IM function is not active and the TCP within the FTP is available for external SNC/crossconnect connectivity.</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TransmissionDescriptorStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Contains the state of consistency between a TP and its associated TransmissionDescriptor.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TMD_MISSING"/>
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="APPLIED"/>
      <xsd:enumeration value="MISMATCH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="TopologyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The Topology with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:TopologyEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="TopologyEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>TopologyType is used to describe the subnetwork configuration. The EMS shall be capable of providing a SubNetwork Connection through any physical termination point of any managed element that belongs to the Subnetwork.</p>
        <p>Composite subnetworks (i.e. containing other Subnetworks) are not supported in this release of the interface</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="TOPO_SINGLETON">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SINGLETON, which is used for a single NE (of any type) that is managed independently of its Topological Link connectivity to other NEs. It may for example be a member of a ring that is managed by a number of EMSes. It is acceptable for an EMS to represent all NEs as being in Singleton subnetworks regardless of the actual network configuration. A singleton subnetwork does not contain internal topological links.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_CHAIN">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_CHAIN, which is used to cover the case where two or more NEs are managed by the same EMS and are connected by Topological Links in a chain.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_PSR, which is used to cover the case where two or more NEs are managed by the same EMS and are connected by Topological Links in a ring that is capable of supporting subnetwork connection protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_PSR, which is used to cover the case where two or more NEs of a PS ring (but not the entire ring) are managed by the same EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SPRING, which is used to cover the case where two or more NEs are managed by the same EMS and are connected by Topological Links in a complete ring that supports Shared Line Protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_SPRING, which is used to cover cases where two or more NEs of an SP ring (but not the entire ring) are managed by one EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_MESH">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_MESH, which is used to cover an arbitrary set of two or more NEs not covered by any other type.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A CTP/FTP may be involved in zero, one, or many connections. The value TPConnectionState indicates the degree to which a CTP/FTP is used. The values TPCS_SOURCE_CONNECTED and TPCS_SINK_CONNECTED reflect the presence of a one way connection. The value TPCS_BI_CONNECTED means that the TP is both sink and source connected.</p>
        <p>If an EMS cannot report whether the source of the TP is connected or the sink is connected, TPCS_BI_CONNECTED may be reported by that EMS.</p>
        <p>The value TPCS_NA is used for PTPs and TPPools.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPCS_NA"/>
      <xsd:enumeration value="TPCS_SOURCE_CONNECTED"/>
      <xsd:enumeration value="TPCS_SINK_CONNECTED"/>
      <xsd:enumeration value="TPCS_BI_CONNECTED"/>
      <xsd:enumeration value="TPCS_NOT_CONNECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointProtectionAssociationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>tpProtectionAssociation expresses constraints on PTPs/CTPs/FTPs for PSR connection management.</p>
        <p>In a multi-layer subnetwork, say 'a', 'b', 'c' are edge points. Suppose, for example, a three-ended connection is sought from 'a' to 'b', where 'b' is one of the endpoints. If 'c' is the constrained choice for 'b' as the other end of the three- ended connection,then 'b' and 'c' are said to be associated by a ] protectionAssociation. The tpProtectionAssociation is set to TPPA_PSR_RELATED in 'b' and 'c', and getAssociatedTP(b) returns c and getAssociatedTP(c) returns b.</p>
        <p>In all other cases, tpProtectionAssociation is set to TPPA_NA.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPPA_NA"/>
      <xsd:enumeration value="TPPA_PSR_RELATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:simpleType name="TerminationPointRole">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the enumeration of all possible end point roles of a TP of an SNC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CM_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a connection matrix (CM) end point the span of the SNC starts at a G.805 CP with a fixed or flexible connection through the ME at the SNC layer, i.e. the connectable layer of the end point.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="LC_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a link connection (LC) end point connectivity is adapted from a server layer and the span of the SNC starts with a G.805 TCP with mapping mode set to TM_TERMINATED_ AND_AVAILABLE_FOR_MAPPING.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of EndPointRoles.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="role" type="tns:EndPointRoleType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type indicates the end point role of an end TP.
See R_TMF518_NRF_I_0026.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="role" type="tns:TerminationPointRole" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the role of the end TP specified by the tpIndex.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="tpIndex" type="xsd:unsignedInt" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the index of the end TP within the end list.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="VersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The active software version of the ManagedElement</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"></xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/NetworkResourceFulfillment/IIS/xsd/Snc.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - Network Resource Fulfillment - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:tpdata="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type definition of the mTOP SNC XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/LayerRates.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/CommonResourceInfo.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="CommonTypes.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" schemaLocation="TpData.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="../../../NetworkResourceAssurance/IIS/xsd/ITU-T-ArcDefinitions.xsd"/>
  <!--=================-->
  <xsd:element name="snc" type="tns:SubnetworkConnectionType"/>
  <!--=================-->
  <xsd:complexType name="SubnetworkConnectionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Subnetwor Connection mTOP network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element name="sncState" type="com:SubnetworkConnectionStateType" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The sncState is an attribute managed by the EMS. The EMS manages the state transition of this attribute. The EMS will assess the cross-connections in the network that support the SNC and will appropriately adjust the value of SNCState to reflect the actual state of the SNC in the network.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="direction" type="com:ConnectionDirectionType" nillable="true" minOccurs="0"/>
          <xsd:element name="layerRate" type="lay:LayerRateType" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The rate of the SubnetworkConnection is obtained by reading this attribute.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="staticProtectionLevel" type="com:StaticProtectionLevelType" nillable="true" minOccurs="0"/>
          <xsd:element name="sncType" type="com:SubnetworkConnectionTypeType" nillable="true" minOccurs="0"/>
          <xsd:element name="aEndTpDataList" type="tpdata:TerminationPointDataListType" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The list of Aend termination points TP where this SNC terminates. For a detailed description of the use of this attribute, see MTNM SNC Types supporting document.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="zEndTpDataList" type="tpdata:TerminationPointDataListType" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The list of Zend termination points TP where this SNC terminates. For a detailed description of the use of this attribute, see MTNM SNC Types supporting document.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="rerouteAllowed" type="com:RerouteType" nillable="true" minOccurs="0"/>
          <xsd:element name="networkRouted" type="com:NetworkRoutedType" nillable="true" minOccurs="0"/>
          <xsd:element name="isReportingAlarms" type="xsd:boolean" nillable="true" minOccurs="0"/>
          <xsd:element name="isFixed" type="xsd:boolean" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Takes value True  when all cross-connects of the SNC are fixed.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="asapRef" type="xsd:string" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP to this SNC object. Value is of the ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="correlationIdentifier" type="xsd:string" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Used to contain information about relationships that this SNC may have to other managed objects.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="networkReroute" type="com:RerouteType" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the reroute of an SNC (if allowed) should be computed by the network, by the EMS, or if it does not matter.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="priority" type="xsd:unsignedInt" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The SNC creation priority</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="revertive" type="xsd:boolean" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Takes value “True”, i.e. the SNC or Connection is revertive, when the SNC or connection can be switched back to its original route.  In case of an SNC with multiple routes when the SNC is revertive, then the restoration or rerouting process will always switch to the intended route if possible, i.e. if there are no failures or if the intended route is not locked.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="aEndPointsRole" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Defines the element that defines the end point role of all aEnd TPs of an SNC. This is an ordered list indexed with the aEnd TP list of the SNC.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="role" type="com:EndPointRoleType" minOccurs="0" maxOccurs="unbounded"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="isBundledSnc" type="xsd:boolean" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the SNC constitutes a Bundled SNC service (value “True”) or not..</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="callId" type="xsd:string" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>This is the control plane identifier. This attribute is the Call Name attribute in G.7713.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="callName" type="xsd:string" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute indicates the Call Name which the connection is supporting in a non control plane case.</p>
                <p>String containing the RDN of the Call Name.The value in the last name-value pair of name structure</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="connectionId" type="xsd:string" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>This is the control plane identifier. This attribute is the Connection Name attribute in G.7713.
Note that also the Cross Connection points to its superior Connection.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="connectionSetUpType" type="xsd:string" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute indicates whether the connection has been established by UNI signalling (SC) or NMS (SPC, PC).</p>
                <p>
                  Legal values are:
                  <ul>
                    <li>PC</li>
                    <li>SC</li>
                    <li>SPC</li>
                  </ul>
                </p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="connectionState" type="xsd:string" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates that all (“Complete”) or not all (“Searching”) the resources necessary to support the connection have been successfully allocated yet.</p>
                <p>
                  Legal values are:
                  <ul>
                    <li>Complete</li>
                    <li>Searching</li>
                    <li>N/A</li>
                  </ul>
                </p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="maximumCost" type="xsd:string" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The maximum link/node cost allowed for routing.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="mustRemoveGtpList" type="xsd:boolean" default="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The parameter is only used for bundled SNCs.  
If set to “True” the EMS when removing the SNC must make a best-effort attempt to remove the interior GTPs that once belonged to the SNC, and if set to “False” the NMS does not care whether the EMS removes the interior GTPs or not.  
Any behavior other than best-effort is likely to involve a complicated rollback procedure for the EMS and NEs.  In the case that the parameter is set to “True” and the EMS cannot remove all the interior GTPs, the EMS should return a list of the GTPs that could not be removed in the errorReason field of the deactivateAndDeleteSNC() and deleteSNC() operations.  The errorReason would 
be “not all interior GTPs could be deleted”;  this would be followed by the names of the GTPs that could not be deleted.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="mustRetainOldSnc" type="xsd:boolean" default="true" minOccurs="0"/>
          <xsd:element name="protectionEffort" type="com:ProtectionEffortType" nillable="true" minOccurs="0"/>
          <xsd:element name="routeGroupLabel" type="xsd:string" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute shall represent the route group of the connection.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="routingConstraintEffort" type="xsd:string" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The effort required for routing constraint application.</p>
                <p>
                  Legal Values are:
                  <ul>
                    <li>BEST_EFFORT</li>
                    <li>EXACT_MATCH</li>
                  </ul>
                </p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="supportedConnectionName" type="xsd:string" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute indicates the Connection Name (i.e. its superior connection) which the connection is supporting in a non control plane case. Note that this superior connection must be defined in a top level MLSN – which allows identifying it with a simple string – RDN value.</p>
                <p>RDN of Connection Name, i.e., the value in the last name-value pair of name structure</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="supportingSncList" type="xsd:string" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute shall contain the names of the supporting Subnetwork Connections if any.
Note: This attribute is only applicable for top level connections in a non-Control Plane environment if SNCs support indirectly the Call.
Format: 
\name=OS\value=CompanyName/EMSname\name=MLSN\value= SubnetworkName\name= SNC\value=SubnetworkName</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="zEndPointsRole" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Defines the element that defines the end point role of all zEnd TPs of an SNC. This is an ordered list indexed with the zEnd TP list of the SNC</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="role" type="com:EndPointRoleType" minOccurs="0" maxOccurs="unbounded"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="SubnetworkConnectionListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of SubnetworkConnections</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="tns:snc" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionModeOfOperationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The supported subnetwork connection management mode of operation.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PENDING_NO_SHARING"/>
      <xsd:enumeration value="NO_PENDING_WITH_SHARING"/>
      <xsd:enumeration value="PENDING_NO_SHARING"/>
      <xsd:enumeration value="PENDING_WITH_SHARING"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/NetworkResourceBasic/IIS/xsd/CommonResourceInfo.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - DM Network Resources Basic - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:coi="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:itu="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type definition of the mTOP XML CommonResourceInfo structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" schemaLocation="../../../Framework/IIS/xsd/CommonObjectInfo.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" schemaLocation="ITU-T-Definitions.xsd"/>
  <!--=================-->
  <xsd:element name="commonResourceInfo" type="tns:CommonResourceInfoType" substitutionGroup="coi:commonObjectInfo">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition for common resource info</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="CommonResourceInfoType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines attributes common to all mTOP resource objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="coi:CommonObjectInfoType">
        <xsd:sequence>
          <xsd:element name="source" type="tns:SourceType" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the object was discovered or entered in OS inventory.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="networkAccessDomain" type="gen:NetworkAccessDomainType" nillable="true" minOccurs="0"/>
          <xsd:element name="meiAttributes" type="gen:MultiEventInventoryAttributesType" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is used when a object instance is embedded in the inventory
					layout payload of a Multi-Event Inventory (MEI) notification. It provides the 
					time at which the NE detected the inventory change (if available) and an indication
					of the type of inventory update, e.g., Object Creation.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="resourceState" type="tns:ResourceStateType" nillable="true" minOccurs="0"/>
          <xsd:element name="ituStateAndStatusList" type="itu:ItuStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that indicates whether the object was discovered from the network, or was entered into the OS's inventory.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:SourceEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SourceEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NETWORK_ME">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered directly from the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was entered into an OS on the CCV, e.g., OS GUI or file transfer to the OS from some other system.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NETWORK_EMS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered from an EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that indicates the state of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceStateEnumType">
        <xsd:attribute name="overlap" type="xsd:string" use="optional"/>
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ResourceStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="INSTALLING"/>
      <xsd:enumeration value="INSTALLING_ACCEPTED"/>
      <xsd:enumeration value="INSTALLING_COMMISSIONED"/>
      <xsd:enumeration value="INSTALLING_DELIVERED"/>
      <xsd:enumeration value="INSTALLING_INSTALLED"/>
      <xsd:enumeration value="INSTALLING_INTEGRATED"/>
      <xsd:enumeration value="INSTALLING_REJECTED"/>
      <xsd:enumeration value="NON_WORKING"/>
      <xsd:enumeration value="PLANNING"/>
      <xsd:enumeration value="PLANNING_INITIAL_PLAN"/>
      <xsd:enumeration value="PLANNING_ORDERED"/>
      <xsd:enumeration value="PLANNING_PLANNED"/>
      <xsd:enumeration value="RETIRING"/>
      <xsd:enumeration value="RETIRING_DECOMMISSIONED"/>
      <xsd:enumeration value="RETIRING_DEINSTALLED"/>
      <xsd:enumeration value="RETIRING_DEINTEGRATED"/>
      <xsd:enumeration value="RETIRING_RECOVERED"/>
      <xsd:enumeration value="RETIRING_STORED"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_ACTIVE"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_UNAVAILABLE"/>
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="WORKING"/>
      <xsd:enumeration value="WORKING_ACTIVATED"/>
      <xsd:enumeration value="WORKING_DEACTIVATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ObjectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the enumeration of all the known object type short names related to resources (at the time of this module definition). It is only provided as an implementation helper. For details of all object types and their naming refer to SD2-7 ObjectNaming (FMW DDP).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AID">
        <xsd:annotation>
          <xsd:documentation>Alarm IDentifier (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASA">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASAP">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment Profile (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CTP">
        <xsd:annotation>
          <xsd:documentation>Connection Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EH">
        <xsd:annotation>
          <xsd:documentation>Equipment Holder (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EPG">
        <xsd:annotation>
          <xsd:documentation>Equipment Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EQ">
        <xsd:annotation>
          <xsd:documentation>Equipment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FD">
        <xsd:annotation>
          <xsd:documentation>Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FDFR">
        <xsd:annotation>
          <xsd:documentation>Flow Domain Fragment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FTP">
        <xsd:annotation>
          <xsd:documentation>Flow Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GTP">
        <xsd:annotation>
          <xsd:documentation>Group Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MD">
        <xsd:annotation>
          <xsd:documentation>Management Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ME">
        <xsd:annotation>
          <xsd:documentation>Managed Element (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MFD">
        <xsd:annotation>
          <xsd:documentation>Matrix Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MLSN">
        <xsd:annotation>
          <xsd:documentation>Multi Layer Subnetwork (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>Operations System (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PG">
        <xsd:annotation>
          <xsd:documentation>Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PMP">
        <xsd:annotation>
          <xsd:documentation>Performance Monitoring Point (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PTP">
        <xsd:annotation>
          <xsd:documentation>Physical Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SNC">
        <xsd:annotation>
          <xsd:documentation>Subnetwork Connection (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCPROFILE">
        <xsd:annotation>
          <xsd:documentation>Traffic Condifitioning Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCAPP">
        <xsd:annotation>
          <xsd:documentation>Threshold Crossing Alert Parameter Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TL">
        <xsd:annotation>
          <xsd:documentation>Topological Link (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TMD">
        <xsd:annotation>
          <xsd:documentation>Transmission Descriptor (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TPPOOL">
        <xsd:annotation>
          <xsd:documentation>Termination Point Pool (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/Framework/IIS/xsd/CommonObjectInfo.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - Framework - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema definitions of the common object information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="NamingDefinitions.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="GeneralDefinitions.xsd"/>
  <!--==============-->
  <xsd:element name="commonObjectInfo" type="tns:CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="CommonObjectInfoType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="nam:NamingAttributeType" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute represents a unique name/identifier for the object on the CCV. Consult the SD2-7 about object naming for additional normative references.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="userLabel" type="xsd:string" nillable="true" minOccurs="0"></xsd:element>
      <xsd:element name="discoveredName" type="gen:DiscoveredNameType" minOccurs="0"></xsd:element>
      <xsd:element name="namingOs" type="xsd:string" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the object attribute definition to identify the name of the OS that provided the unique MTOSI name for the object. It is assumed that each object (that is published on the CCV) has a unique naming OS. This attribute is optional in a point to point NMS-EMS paradigm.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="owner" type="gen:OwnerType" nillable="true" minOccurs="0"></xsd:element>
      <xsd:element name="aliasNameList" type="gen:AliasNameListType" nillable="true" minOccurs="0"></xsd:element>
      <xsd:element name="vendorExtensions" type="gen:AnyListType" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/NetworkResourceBasic/IIS/xsd/ITU-T-Definitions.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - DM Network Resources Basic - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/itu/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type definitions of all the supported ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T state or status parameters supported in mTOP</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="x721.OperationalState" type="tns:X721.OperationalStateType" minOccurs="0"/>
      <xsd:element name="x721.AdministrativeState" type="tns:X721.AdministrativeStateType" minOccurs="0"/>
      <xsd:element name="x721.UsageState" type="tns:X721.UsageStateType" minOccurs="0"/>
      <xsd:element name="x721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType" minOccurs="0"/>
      <xsd:element name="x721.ControlStatus" type="tns:X721.ControlStatusType" minOccurs="0"/>
      <xsd:element name="m3100.HolderStatus" type="tns:M3100.HolderStatusType" minOccurs="0"/>
      <xsd:element name="m3100.CircuitPackType" type="tns:M3100.CircuitPackTypeType" minOccurs="0"/>
      <xsd:element name="x721.Unkownstatus" type="tns:X721.UnkownstatusType" minOccurs="0"/>
      <xsd:element name="x721.State" type="tns:X721.StateType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="X721.OperationalStateType">
    <xsd:annotation>
      <xsd:documentation>Oper[ational] State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DISABLED"/>
      <xsd:enumeration value="UNABLED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AdministrativeStateType">
    <xsd:annotation>
      <xsd:documentation>Admin[istrative] State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="LOCKED"/>
      <xsd:enumeration value="UNLOCKED"/>
      <xsd:enumeration value="SHUTTING_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UsageStateType">
    <xsd:annotation>
      <xsd:documentation>Usage State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IDLE"/>
      <xsd:enumeration value="ACTIVE"/>
      <xsd:enumeration value="BUSY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AvailabilityStatusType">
    <xsd:annotation>
      <xsd:documentation>Avail[ability] Status based from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="INTypeEST"/>
      <xsd:enumeration value="FAILED"/>
      <xsd:enumeration value="POWER_OFF"/>
      <xsd:enumeration value="OFF_LINE"/>
      <xsd:enumeration value="OFF_DUTY"/>
      <xsd:enumeration value="DEPENDENCY"/>
      <xsd:enumeration value="DEGRADED"/>
      <xsd:enumeration value="NOT_INSTALLED"/>
      <xsd:enumeration value="LOG_FULL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.ControlStatusType">
    <xsd:annotation>
      <xsd:documentation>Control Status parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="SUBJECTTypeOTypeEST"/>
      <xsd:enumeration value="PART_OF_SERVICES_LOCKED"/>
      <xsd:enumeration value="RESERVED_FORTypeEST"/>
      <xsd:enumeration value="SUSPENDED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.HolderStatusType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HOLDER_EMPTY"/>
      <xsd:enumeration value="INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="NOT_INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="UNKNOWNTypeYPE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.CircuitPackTypeType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UnkownstatusType">
    <xsd:annotation>
      <xsd:documentation>Unknown Status parameter based from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="X721.StateType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="X721.OperationalState" type="tns:X721.OperationalStateType" minOccurs="0"/>
      <xsd:element name="X721.AdministrativeState" type="tns:X721.AdministrativeStateType" minOccurs="0"/>
      <xsd:element name="X721.UsageState" type="tns:X721.UsageStateType" minOccurs="0"/>
      <xsd:element name="X721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType" minOccurs="0"/>
      <xsd:element name="X721.ControlStatus" type="tns:X721.ControlStatusType" minOccurs="0"/>
      <xsd:element name="M3100.HolderStatus" type="tns:M3100.HolderStatusType" minOccurs="0"/>
      <xsd:element name="X721.Unkownstatus" type="tns:X721.UnkownstatusType" minOccurs="0"/>
      <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/NetworkResourceFulfillment/IIS/xsd/TpData.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - DM Network Resource Fulfillment - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Fulfillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema definitions of the mTOP XML TpData structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import schemaLocation="../../../Framework/IIS/xsd/NamingDefinitions.xsd" namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceBasic/IIS/xsd/LayeredParameters.xsd" namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1"/>
  <xsd:import schemaLocation="CommonTypes.xsd" namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1"/>
  <!--=================-->
  <xsd:complexType name="TerminationPointDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines a set of attributes associated with a TP.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="tpRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Specifies a termination point.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="tpMappingMode" type="com:TerminationModeType" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>The mapping mode to put the TP in.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="lp:transmissionParametersList" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute contains the layered Transmission Parameters associated with the Termination Point.
            Refer to the attached supporting document SD1-16_LayeredParameters for details of the currently defined Transmission Parameters.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ingressTmdRef" type="nam:NamingAttributeType" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>A connection termination point may have an optional reference to an ingress (incoming)Transmission Descriptor. The Descriptor name will be empty if there is no associated Descriptor.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="egressTmdRef" type="nam:NamingAttributeType" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>A connection termination point may have an optional reference to an egress (outgoing)Transmission Descriptor. The Transmission Descriptor name will be empty if there is no associated Descriptor.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TerminationPointDataListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of TerminationPointDataType elements.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="tpData" type="tns:TerminationPointDataType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/NetworkResourceBasic/IIS/xsd/LayeredParameters.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - DM Network Resource Fulfillment - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:lr="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
  <!--==============-->
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type definition of the mTOP XML LayeredParameters structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="../../../Framework/IIS/xsd/NamingDefinitions.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="LayerRates.xsd"/>
  <!--==============-->
  <xsd:element name="transmissionParametersList" type="tns:LayeredParametersListType" nillable="true"/>
  <!--==============-->
  <xsd:complexType name="LayeredParametersListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is used in the TP definition and as a consequence is available for use in a connection specification where a TP is specified.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="tns:transmissionParameters" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--==============-->
  <xsd:element name="transmissionParameters" type="tns:LayeredParametersType" nillable="true"/>
  <!--==============-->
  <xsd:complexType name="LayeredParametersType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is a structure that includes the layer rate with the applicable list of transmissions parameters</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="layerRate" type="lr:LayerRateType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the layer to which the parameters apply.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="parameterList" type="gen:NameAndValueStringListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of tranmission parameters as a generic pair of name and value strings.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific containment for vendor extensions of the list of tranmission parameters.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/NetworkResourceAssurance/IIS/xsd/ITU-T-ArcDefinitions.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - DM Network Resources Basic - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type definitions of all the supported Alarm ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuArcStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T Alarm Reporting Control (ARC) state or status parameters supported in mTOP;
			Each element of the list identifies a state or status and provides its relevant value.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="m3100.AlarmStatus" type="tns:M3100.AlarmStatusType" minOccurs="0"/>
      <xsd:element name="m3100.ArcState" type="tns:M3100.ArcStateType" minOccurs="0"/>
      <xsd:element name="m3100.NALMTIInterval" type="tns:M3100.NALMTIIntervalType" minOccurs="0"/>
      <xsd:element name="m3100.NALMQIInterval" type="tns:M3100.NALMQIIntervalType" minOccurs="0"/>
      <xsd:element name="m3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType" minOccurs="0"/>
      <xsd:element name="m3100.State" type="tns:M3100.ArcStateListType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="M3100.AlarmStatusType">
    <xsd:annotation>
      <xsd:documentation>Alarm Status parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CLEARED"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="CRITICAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcStateType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ALM"/>
      <xsd:enumeration value="NALM"/>
      <xsd:enumeration value="NALMTypeIMED_INHIBIT"/>
      <xsd:enumeration value="NALM_QUALIFIED_INHIBIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMTIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMQIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcQIStatusType">
    <xsd:annotation>
      <xsd:documentation>ARC QI Status parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="NALM_NOT_READY"/>
      <xsd:enumeration value="NALM_COUNT_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="M3100.ArcStateListType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="M3100.AlarmStatus" type="tns:M3100.AlarmStatusType" minOccurs="0"/>
      <xsd:element name="M3100.ArcState" type="tns:M3100.ArcStateType" minOccurs="0"/>
      <xsd:element name="M3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/NetworkResourceFulfillment/IIS/xsd/Cc.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - Network Resource Fulfillment - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nrb.nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema definitions of the mTOP XML CC Resource object.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd"/>
  <xsd:import schemaLocation="../../../Framework/IIS/xsd/NamingDefinitions.xsd" namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1"/>
  <xsd:import schemaLocation="CommonTypes.xsd" namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1"/>
  <!--=================-->
  <xsd:element name="cc" type="tns:CrossConnectType"/>
  <!--=================-->
  <xsd:complexType name="CrossConnectType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A CrossConnect represents a connection within a single managed element. This structure is primarily used in the specification of routes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="isActive" type="xsd:boolean" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>Indicates if the cross-connect is active in the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="direction" type="com:ConnectionDirectionType" nillable="true" minOccurs="0"></xsd:element>
      <xsd:element name="ccType" type="com:SubnetworkConnectionTypeType" nillable="true" minOccurs="0"></xsd:element>
      <xsd:element name="isFixed" type="xsd:boolean" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>The attribute defines if the CrossConnect is fixed (i.e. cannot be deleted by the NMS) or is flexible.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="aEndRefList" nillable="true" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="aEndName" type="nrb.nam:NamingAttributeType" maxOccurs="unbounded">
              <xsd:annotation>
                <xsd:documentation>
                  <p>Names of PTPs/CTPs/FTPs at the aEnd of the cross connection.</p>
                </xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="zEndRefList" nillable="true" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="zEndName" type="nrb.nam:NamingAttributeType" maxOccurs="unbounded">
              <xsd:annotation>
                <xsd:documentation>
                  <p>Names of PTPs/CTPs/FTPs at the zEnd of the cross connection.</p>
                </xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="connectionId" type="xsd:string" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the control plane identifier. This attribute is the Connection Name attribute in G.7713.
Note that also the Cross Connection points to its superior Connection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="routeActualState" type="xsd:string" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>
              This parameter is the summary state of the activity states of the route’s CCs in the network, regardless the SNC the CCs are currently serving.  It can assume the following values:
              <ul>
                <li>active:  all of the route’s CCs are active</li>
                <li>inactive:  none of the route’s CCs is active</li>
                <li>partial:  one or more but not all of the CCs of the route are active</li>
              </ul>
            </p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="routeAdminState" type="xsd:string" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>
              This state has not any relationship with the actual state.  It can assume the following values:
              <ul>
                <li>locked:  the route is not allowed to be active</li>
                <li>unlocked:  the route is allowed to be active</li>
              </ul>
            </p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isRouteExclusive" type="xsd:boolean" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>“True” if not any routes of other SNCs can share any of the route’s CCs or CTPs, even in pending state, “False” otherwise..</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="routeId" type="xsd:string" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This parameter is a unique identifier within the SNC name, with format up to the EMS..</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isRouteIntended" type="xsd:boolean" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>The intended route (“True”) is defined as preferred, or default route for a given service.  The backup route (“False”) is partly or totally different from the intended route (but with same end points), and is useful for restoration and maintenance purposes.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isRouteInUseBy" type="xsd:boolean" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>“True” if at least one of the route’s CCs or CTPs is carrying traffic of another SNC, “False” otherwise..</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="CrossConnectListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of CrossConnects</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="tns:cc" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/NetworkResourceFulfillment/IIS/xsd/Route.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - Network Resource Fulfillment - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/route/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/route/v1" xmlns:cc="http://www.tmforum.org/mtop/nrf/xsd/cc/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type definition of the mTOP Route XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import schemaLocation="Cc.xsd" namespace="http://www.tmforum.org/mtop/nrf/xsd/cc/v1"/>
  <!--=================-->
  <xsd:element name="route" type="tns:RouteType"/>
  <!--=================-->
  <xsd:complexType name="RouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A route for an SNC is defined as a partially ordered list of cross-connects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ccList" type="cc:CrossConnectListType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="RouteListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of Routes</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="route" type="tns:RouteType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/NetworkResourceFulfillment/IIS/xsd/RouteDescriptor.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - Network Resource Fulfillment - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/routedes/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/routedes/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:route="http://www.tmforum.org/mtop/nrf/xsd/route/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type definition of the mTOP Route Descriptor XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd" namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1"/>
  <xsd:import schemaLocation="Route.xsd" namespace="http://www.tmforum.org/mtop/nrf/xsd/route/v1"/>
  <!--=================-->
  <xsd:element name="routeDescriptor" type="tns:RouteDescriptorType"/>
  <!--=================-->
  <xsd:complexType name="RouteDescriptorType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          A route is a partially ordered list of cross connections. A SNC always has one route and may have more than one:
          <ul>
            <li>always 1 intended route, i.e. the preferred, or default route</li>
            <li>0..n backup / alternative route(s)</li>
          </ul>
          A route belongs to only one SNC. However XCs/CTPs can be shared by routes of different SNCs.
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="routeIdentifier" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>Unique identifier within the SNC name, with format up to EMS or Control Plane</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isIntended" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>The intended route (true)
   could be defined as the preferred, or default route for a given 
   service. Practically, the intended route could be simply the first time 
   provisioned route, or the preferred route for a number of factors, from 
   network engineering to intrinsic media reliability. The backup route (false) is partly or totally different from intended route (but with same end 
   points), and it is useful mainly for restoration and maintenance 
   purposes.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="actualState" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>
              it is the summary state of the actual state of XCs in the network, 
   regardless the SNC such XCs are currently serving; it can assume only the 
   following values:
              <ul>
                <li>
                  <b>inactive</b>
                  : None of its XCs is active in the network
                </li>
                <li>
                  <b>active</b>
                  : all its XCs are active in the network. So it is the 
   route where SNC traffic is currently carried. There can be at most one 
   active route per SNC. inUseBy shall be always "n".
                </li>
                <li>
                  <b>partial</b>
                  : one or more, but not all the XCs are active in the 
   network. If the route was unsuccessfully activated, then inUseBy shall be 
   always "n". If the route was unsuccessfully deactivated, then inUseBy could 
   be "y".
                  <i>Note: a capability to activate segments of a backup route for 
   more rapid switch over would be of value. It was agreed that this would not 
   be included in the current release but that it could be considered for a 
   later release.</i>
                </li>
              </ul>
            </p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="administrativeState" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>
              This state refers to the belonging SNC, and has not any relationship 
   with the actual state. It can assume only the following values:
              <ul>
                <li>
                  <b>locked</b>
                  : the route is not allowed to be active. This state is 
   changeable by:
                  <ul>
                    <li>setRoutesAdminState()
   if all the routes of a given SNC are set to locked, 
   the SNC transits in PENDING state.</li>
                    <li>createSnc()
   creates one locked intended route</li>
                    <li>deactivateSnc()
   locks all routes</li>
                    <li>addRoute()
   creates one locked backup route</li>
                    <li>createModifiedSnc()
   modifies the addressed route, which transits to 
   locked.
   Note for createModifySNC(): the SNC will transit to PARTIAL  state, because 
   the just modified route was never unlocked/activated before, and the old 
   route is still ACTIVE in the network. So the SNC PARTIAL state means that 
   an activateSNC() or unlockRoute() operation is needed. Moreover, it is not 
   possible to determine the actual route of the SNC in the network once the 
   old route was modified.</li>
                  </ul>
                </li>
                <li>
                  <b>unlocked</b>
                  : the route is allowed to be active. This state is 
   changeable by:
                  <ul>
                    <li>setRoutesAdminState()
   If a route was modified by createModifySNC(), then 
   setting it to unlocked implies the activation of the new route. If the 
   activation is successful, (route actual state is ACTIVE) then also the SNC 
   will transit to ACTIVE. If a locked route of a PENDING SNC is set to 
   UNLOCKED, the SNC will transit to either ACTIVE or PARTIAL.</li>
                    <li>createAndActivateSnc()
   creates and unlocks the intended route</li>
                    <li>activateSnc()
   unlocks all routes</li>
                    <li>switchRoute()
   is a "manual" switch, so no route is locked or 
   unlocked.</li>
                    <li>modifySnc()
   modifies and unlocks the addressed route</li>
                    <li>deleteSnc()
   fails if at least one route is unlocked</li>
                  </ul>
                </li>
              </ul>
            </p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isInUseBy" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>True if at least one of its CCs or CTPs is carrying traffic of another SNC, false otherwise.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isExclusive" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>True means not any routes of other SNCs can share any of its CCs or CTPs, even in locked state, false otherwise.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="routeCcList" type="route:RouteType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p/>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="RouteDescriptorListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of RouteDescriptors</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="routeDescriptor" type="tns:RouteDescriptorType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/NetworkResourceBasic/IIS/xsd/CommonResourceCreateDataType.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - ResourceProvisioning - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:cocd="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: ResourceProvisioning</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema definitions of all the common resource attributes that can be set at the time of the object creation.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" schemaLocation="../../../Framework/IIS/xsd/CommonObjectCreateDataType.xsd"/>
  <!--==============-->
  <xsd:element name="commonResourceCreateData" type="tns:CommonResourceCreateDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of all common resource attributes that can be set at the time of the object creation.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="CommonResourceCreateDataType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common resource attributes that can be set at the time of the object creation.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cocd:CommonObjectCreateDataType">
        <xsd:sequence>
          <xsd:element name="networkAccessDomain" type="gen:NetworkAccessDomainType" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The value to be set to the networkAccessDomain attribute at creation of an object.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/Framework/IIS/xsd/CommonObjectCreateDataType.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - Framework - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:cosd="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema definitions of all the common object attributes that can be set at the time of the object creation.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="NamingDefinitions.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" schemaLocation="CommonObjectSetDataType.xsd"/>
  <!--==============-->
  <xsd:element name="commonObjectCreateData" type="tns:CommonObjectCreateDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of all common object attributes that can be set at the time of the object creation.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="CommonObjectCreateDataType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes that can be set at the time of the object creation.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cosd:CommonObjectSetDataType">
        <xsd:sequence>
          <xsd:element name="name" type="nam:NamingAttributeType" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The value to be set to the name attribute at creation of an object. This attribute represents a unique name/identifier for the object on the CCV. Consult the SD about object naming for additional normative references.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/Framework/IIS/xsd/CommonObjectSetDataType.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - Framework - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema definitions of all the common object attributes that can set by Client OS (at creation of the object or modified after).</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="GeneralDefinitions.xsd"/>
  <!--==============-->
  <xsd:element name="commonObjectSetData" type="tns:CommonObjectSetDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of all common object attributes that that set by Client OS (at creation of the object or modified after).</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="CommonObjectSetDataType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes that can be set by Client OS (at creation of the object or modified after).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="userLabel" type="xsd:string" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>Value to be set to the userLabel attribute of an object. The userLabel is owned by the NMSes. It is a string assigned by an NMS to an object. The difference between the userLabel and the NamingAttributes name is that the userLabel is an attribute of the objects that may be "set" by the NMS through well defined interfaces (setUserLabel).</p>
            <p>When an object is created by an NMS, the NMS specifies the userLabel for the object.</p>
            <p>When an object is created by the EMS, the EMS sets the userLabel to the nativeEMSName.</p>
            <p>Once an object is created, the userLabel may only be changed by an NMS through the setUserLabel operation.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isForceUniqueness" type="xsd:boolean" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>Specifies whether or not userLabel should be checked for uniqueness amongst objects of the same class within the EMS. If true, then the operation will fail if userLabel is already in use</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="owner" type="gen:OwnerType" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>Value to be set to the owner attribute of an object.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="aliasNameList" type="gen:AliasNameListType" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>Multiple alias names with values to be set to the aliasNameList attribute of an object.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="vendorExtensions" type="gen:AnyListType" nillable="true" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the containment for all vendor extensions to be set as vendorExtension of the given object.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/NetworkResourceBasic/IIS/xsd/CommonResourceModifyDataType.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - ResourceProvisioning - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:comd="http://www.tmforum.org/mtop/fmw/xsd/comd/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: ResourceProvisioning</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema definitions of all the common resource attributes that can be created (with the object) or modified.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/comd/v1" schemaLocation="../../../Framework/IIS/xsd/CommonObjectModifyDataType.xsd"/>
  <!--==============-->
  <xsd:element name="commonResourceModifyData" type="tns:CommonResourceModifyDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of all common resource attributes that can be created (with the object) or modified.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="CommonResourceModifyDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common resource attributes that can be created (with the object) or modified.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="comd:CommonObjectModifyDataType">
        <xsd:sequence>
          <xsd:element name="networkAccessDomain" type="gen:NetworkAccessDomainType" nillable="true" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                <p>The value to be set to the networkAccessDomain attribute of an object.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/opt/ums/UMS/docs/TMF/MTOSI-2.1/DDPs/Framework/IIS/xsd/CommonObjectModifyDataType.xsd</con:url><con:content><![CDATA[<!--mTOP DDP - Framework - Copyright TeleManagement Forum 2008-->
<xsd:schema targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/comd/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/comd/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:cosd="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema definitions of all the common object attributes that can be modified after the object creation.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="NamingDefinitions.xsd"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" schemaLocation="CommonObjectSetDataType.xsd"/>
  <!--==============-->
  <xsd:element name="commonObjectModifyData" type="tns:CommonObjectModifyDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of all common object attributes that can be modified after the object creation.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="CommonObjectModifyDataType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes that can be modified after the object creation.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cosd:CommonObjectSetDataType">
        <xsd:sequence/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint></con:endpoints><con:operation isOneWay="false" action="activateSubnetworkConnection" name="activateSubnetworkConnection" bindingOperationName="activateSubnetworkConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:activateSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v13:tpData>
               <v13:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:tpRef>
               <!--Optional:-->
               <v13:tpMappingMode>?</v13:tpMappingMode>
               <!--Optional:-->
               <v14:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v14:transmissionParameters>
                     <!--Optional:-->
                     <v14:layerRate extension="?">?</v14:layerRate>
                     <!--Optional:-->
                     <v14:parameterList>
                        <!--Zero or more repetitions:-->
                        <v15:nvs>
                           <v15:name>?</v15:name>
                           <v15:value>?</v15:value>
                        </v15:nvs>
                     </v14:parameterList>
                     <!--Optional:-->
                     <v14:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v14:vendorExtensions>
                  </v14:transmissionParameters>
               </v14:transmissionParametersList>
               <!--Optional:-->
               <v13:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:ingressTmdRef>
               <!--Optional:-->
               <v13:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:egressTmdRef>
            </v13:tpData>
         </v11:tpDataListToModify>
      </v11:activateSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="activateSubnetworkConnection"/></con:call></con:operation><con:operation isOneWay="false" action="addRoute" name="addRoute" bindingOperationName="addRoute" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/cc/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:addRouteRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeCreateData>
            <!--Optional:-->
            <v11:isIntendedRoute>?</v11:isIntendedRoute>
            <!--Optional:-->
            <v11:isExclusiveRoute>?</v11:isExclusiveRoute>
            <!--Optional:-->
            <v11:ccInclusionList>
               <!--Zero or more repetitions:-->
               <v13:cc>
                  <!--Optional:-->
                  <v13:isActive>?</v13:isActive>
                  <!--Optional:-->
                  <v13:direction>?</v13:direction>
                  <!--Optional:-->
                  <v13:ccType>?</v13:ccType>
                  <!--Optional:-->
                  <v13:isFixed>?</v13:isFixed>
                  <!--Optional:-->
                  <v13:aEndRefList>
                     <!--1 or more repetitions:-->
                     <v13:aEndName>
                        <!--1 or more repetitions:-->
                        <v12:rdn>
                           <v12:type>?</v12:type>
                           <v12:value>?</v12:value>
                        </v12:rdn>
                     </v13:aEndName>
                  </v13:aEndRefList>
                  <!--Optional:-->
                  <v13:zEndRefList>
                     <!--1 or more repetitions:-->
                     <v13:zEndName>
                        <!--1 or more repetitions:-->
                        <v12:rdn>
                           <v12:type>?</v12:type>
                           <v12:value>?</v12:value>
                        </v12:rdn>
                     </v13:zEndName>
                  </v13:zEndRefList>
                  <!--Optional:-->
                  <v13:connectionId>?</v13:connectionId>
                  <!--Optional:-->
                  <v13:routeActualState>?</v13:routeActualState>
                  <!--Optional:-->
                  <v13:routeAdminState>?</v13:routeAdminState>
                  <!--Optional:-->
                  <v13:isRouteExclusive>?</v13:isRouteExclusive>
                  <!--Optional:-->
                  <v13:routeId>?</v13:routeId>
                  <!--Optional:-->
                  <v13:isRouteIntended>?</v13:isRouteIntended>
                  <!--Optional:-->
                  <v13:isRouteInUseBy>?</v13:isRouteInUseBy>
                  <!--Optional:-->
                  <v13:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v13:vendorExtensions>
               </v13:cc>
            </v11:ccInclusionList>
            <!--Optional:-->
            <v11:inclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:inclusionResourceRefList>
            <!--Optional:-->
            <v11:isFullRoute>?</v11:isFullRoute>
            <!--Optional:-->
            <v11:exclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:exclusionResourceRefList>
            <!--Optional:-->
            <v11:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v11:vendorExtensions>
         </v11:routeCreateData>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
      </v11:addRouteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="addRoute"/></con:call></con:operation><con:operation isOneWay="false" action="checkValidSubnetworkConnection" name="checkValidSubnetworkConnection" bindingOperationName="checkValidSubnetworkConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v16="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:v17="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:v18="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:v19="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v110="http://www.tmforum.org/mtop/nrb/xsd/lp/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:checkValidSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:createData>
            <!--Optional:-->
            <v12:userLabel>?</v12:userLabel>
            <!--Optional:-->
            <v12:isForceUniqueness>?</v12:isForceUniqueness>
            <!--Optional:-->
            <v12:owner>?</v12:owner>
            <!--Optional:-->
            <v12:aliasNameList>
               <!--Zero or more repetitions:-->
               <v13:alias>
                  <v13:aliasName>?</v13:aliasName>
                  <v13:aliasValue>?</v13:aliasValue>
               </v13:alias>
            </v12:aliasNameList>
            <!--Optional:-->
            <v12:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v12:vendorExtensions>
            <!--Optional:-->
            <v14:name>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v14:name>
            <!--Optional:-->
            <v16:networkAccessDomain>?</v16:networkAccessDomain>
            <!--Optional:-->
            <v11:direction>?</v11:direction>
            <!--Optional:-->
            <v11:staticProtectionLevel extension="?">?</v11:staticProtectionLevel>
            <!--Optional:-->
            <v11:protectionEffort>?</v11:protectionEffort>
            <!--Optional:-->
            <v11:rerouteAllowed>?</v11:rerouteAllowed>
            <!--Optional:-->
            <v11:networkRouted>?</v11:networkRouted>
            <!--Optional:-->
            <v11:type>?</v11:type>
            <!--Optional:-->
            <v11:layerRate extension="?">?</v11:layerRate>
            <!--Optional:-->
            <v11:ccInclusionList>
               <!--Zero or more repetitions:-->
               <v17:cc>
                  <!--Optional:-->
                  <v17:isActive>?</v17:isActive>
                  <!--Optional:-->
                  <v17:direction>?</v17:direction>
                  <!--Optional:-->
                  <v17:ccType>?</v17:ccType>
                  <!--Optional:-->
                  <v17:isFixed>?</v17:isFixed>
                  <!--Optional:-->
                  <v17:aEndRefList>
                     <!--1 or more repetitions:-->
                     <v17:aEndName>
                        <!--1 or more repetitions:-->
                        <v15:rdn>
                           <v15:type>?</v15:type>
                           <v15:value>?</v15:value>
                        </v15:rdn>
                     </v17:aEndName>
                  </v17:aEndRefList>
                  <!--Optional:-->
                  <v17:zEndRefList>
                     <!--1 or more repetitions:-->
                     <v17:zEndName>
                        <!--1 or more repetitions:-->
                        <v15:rdn>
                           <v15:type>?</v15:type>
                           <v15:value>?</v15:value>
                        </v15:rdn>
                     </v17:zEndName>
                  </v17:zEndRefList>
                  <!--Optional:-->
                  <v17:connectionId>?</v17:connectionId>
                  <!--Optional:-->
                  <v17:routeActualState>?</v17:routeActualState>
                  <!--Optional:-->
                  <v17:routeAdminState>?</v17:routeAdminState>
                  <!--Optional:-->
                  <v17:isRouteExclusive>?</v17:isRouteExclusive>
                  <!--Optional:-->
                  <v17:routeId>?</v17:routeId>
                  <!--Optional:-->
                  <v17:isRouteIntended>?</v17:isRouteIntended>
                  <!--Optional:-->
                  <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                  <!--Optional:-->
                  <v17:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v17:vendorExtensions>
               </v17:cc>
            </v11:ccInclusionList>
            <!--Optional:-->
            <v11:inclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v15:name>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v15:name>
            </v11:inclusionResourceRefList>
            <!--Optional:-->
            <v11:isFullRoute>?</v11:isFullRoute>
            <!--Optional:-->
            <v11:exclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v15:name>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v15:name>
            </v11:exclusionResourceRefList>
            <!--Optional:-->
            <v11:aEndRefList>
               <!--Zero or more repetitions:-->
               <v15:name>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v15:name>
            </v11:aEndRefList>
            <!--Optional:-->
            <v11:zEndRefList>
               <!--Zero or more repetitions:-->
               <v15:name>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v15:name>
            </v11:zEndRefList>
            <!--Optional:-->
            <v11:aRoleList>
               <!--Zero or more repetitions:-->
               <v11:role>
                  <!--Zero or more repetitions:-->
                  <v18:role>
                     <!--Optional:-->
                     <v18:role>?</v18:role>
                     <!--Optional:-->
                     <v18:tpIndex>?</v18:tpIndex>
                  </v18:role>
               </v11:role>
            </v11:aRoleList>
            <!--Optional:-->
            <v11:isReportingAlarms>?</v11:isReportingAlarms>
            <!--Optional:-->
            <v11:networkReroute>?</v11:networkReroute>
            <!--Optional:-->
            <v11:isRevertive>?</v11:isRevertive>
            <!--Optional:-->
            <v11:isRevertiveReroute>?</v11:isRevertiveReroute>
            <!--Optional:-->
            <v11:intendedRouteAEnds>?</v11:intendedRouteAEnds>
            <!--Optional:-->
            <v11:isIntendedRouteExclusive>?</v11:isIntendedRouteExclusive>
            <!--Optional:-->
            <v11:intendedRouteZEnds>?</v11:intendedRouteZEnds>
            <!--Optional:-->
            <v11:priority>?</v11:priority>
            <!--Optional:-->
            <v11:zRoleList>
               <!--Zero or more repetitions:-->
               <v11:role>
                  <!--Zero or more repetitions:-->
                  <v18:role>
                     <!--Optional:-->
                     <v18:role>?</v18:role>
                     <!--Optional:-->
                     <v18:tpIndex>?</v18:tpIndex>
                  </v18:role>
               </v11:role>
            </v11:zRoleList>
            <!--Optional:-->
            <v11:asapRef>?</v11:asapRef>
            <!--Optional:-->
            <v11:aEndTpList>?</v11:aEndTpList>
            <!--Optional:-->
            <v11:blsrDirection>?</v11:blsrDirection>
            <!--Optional:-->
            <v11:isBundledSnc>?</v11:isBundledSnc>
            <!--Optional:-->
            <v11:mustRemoveGtps>?</v11:mustRemoveGtps>
            <!--Optional:-->
            <v11:potentialFutureSetupIndicator>?</v11:potentialFutureSetupIndicator>
            <!--Optional:-->
            <v11:routingConstraintEffort>?</v11:routingConstraintEffort>
            <!--Optional:-->
            <v11:timeslot>?</v11:timeslot>
            <!--Optional:-->
            <v11:zEndTpList>?</v11:zEndTpList>
         </v11:createData>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v19:tpData>
               <v19:tpRef>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v19:tpRef>
               <!--Optional:-->
               <v19:tpMappingMode>?</v19:tpMappingMode>
               <!--Optional:-->
               <v110:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v110:transmissionParameters>
                     <!--Optional:-->
                     <v110:layerRate extension="?">?</v110:layerRate>
                     <!--Optional:-->
                     <v110:parameterList>
                        <!--Zero or more repetitions:-->
                        <v13:nvs>
                           <v13:name>?</v13:name>
                           <v13:value>?</v13:value>
                        </v13:nvs>
                     </v110:parameterList>
                     <!--Optional:-->
                     <v110:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v110:vendorExtensions>
                  </v110:transmissionParameters>
               </v110:transmissionParametersList>
               <!--Optional:-->
               <v19:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v19:ingressTmdRef>
               <!--Optional:-->
               <v19:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v19:egressTmdRef>
            </v19:tpData>
         </v11:tpDataListToModify>
         <!--Optional:-->
         <v11:mustConsiderResources>?</v11:mustConsiderResources>
      </v11:checkValidSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="checkValidSubnetworkConnection"/></con:call></con:operation><con:operation isOneWay="false" action="createAndActivateSubnetworkConnection" name="createAndActivateSubnetworkConnection" bindingOperationName="createAndActivateSubnetworkConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:v16="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:v17="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:v18="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:v19="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v110="http://www.tmforum.org/mtop/nrb/xsd/lp/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:createAndActivateSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:containingMlsnRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:containingMlsnRef>
         <!--Optional:-->
         <v11:createData>
            <!--Optional:-->
            <v13:userLabel>?</v13:userLabel>
            <!--Optional:-->
            <v13:isForceUniqueness>?</v13:isForceUniqueness>
            <!--Optional:-->
            <v13:owner>?</v13:owner>
            <!--Optional:-->
            <v13:aliasNameList>
               <!--Zero or more repetitions:-->
               <v14:alias>
                  <v14:aliasName>?</v14:aliasName>
                  <v14:aliasValue>?</v14:aliasValue>
               </v14:alias>
            </v13:aliasNameList>
            <!--Optional:-->
            <v13:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v13:vendorExtensions>
            <!--Optional:-->
            <v15:name>
               <!--1 or more repetitions:-->
               <v12:rdn>
                  <v12:type>?</v12:type>
                  <v12:value>?</v12:value>
               </v12:rdn>
            </v15:name>
            <!--Optional:-->
            <v16:networkAccessDomain>?</v16:networkAccessDomain>
            <!--Optional:-->
            <v11:direction>?</v11:direction>
            <!--Optional:-->
            <v11:staticProtectionLevel extension="?">?</v11:staticProtectionLevel>
            <!--Optional:-->
            <v11:protectionEffort>?</v11:protectionEffort>
            <!--Optional:-->
            <v11:rerouteAllowed>?</v11:rerouteAllowed>
            <!--Optional:-->
            <v11:networkRouted>?</v11:networkRouted>
            <!--Optional:-->
            <v11:type>?</v11:type>
            <!--Optional:-->
            <v11:layerRate extension="?">?</v11:layerRate>
            <!--Optional:-->
            <v11:ccInclusionList>
               <!--Zero or more repetitions:-->
               <v17:cc>
                  <!--Optional:-->
                  <v17:isActive>?</v17:isActive>
                  <!--Optional:-->
                  <v17:direction>?</v17:direction>
                  <!--Optional:-->
                  <v17:ccType>?</v17:ccType>
                  <!--Optional:-->
                  <v17:isFixed>?</v17:isFixed>
                  <!--Optional:-->
                  <v17:aEndRefList>
                     <!--1 or more repetitions:-->
                     <v17:aEndName>
                        <!--1 or more repetitions:-->
                        <v12:rdn>
                           <v12:type>?</v12:type>
                           <v12:value>?</v12:value>
                        </v12:rdn>
                     </v17:aEndName>
                  </v17:aEndRefList>
                  <!--Optional:-->
                  <v17:zEndRefList>
                     <!--1 or more repetitions:-->
                     <v17:zEndName>
                        <!--1 or more repetitions:-->
                        <v12:rdn>
                           <v12:type>?</v12:type>
                           <v12:value>?</v12:value>
                        </v12:rdn>
                     </v17:zEndName>
                  </v17:zEndRefList>
                  <!--Optional:-->
                  <v17:connectionId>?</v17:connectionId>
                  <!--Optional:-->
                  <v17:routeActualState>?</v17:routeActualState>
                  <!--Optional:-->
                  <v17:routeAdminState>?</v17:routeAdminState>
                  <!--Optional:-->
                  <v17:isRouteExclusive>?</v17:isRouteExclusive>
                  <!--Optional:-->
                  <v17:routeId>?</v17:routeId>
                  <!--Optional:-->
                  <v17:isRouteIntended>?</v17:isRouteIntended>
                  <!--Optional:-->
                  <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                  <!--Optional:-->
                  <v17:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v17:vendorExtensions>
               </v17:cc>
            </v11:ccInclusionList>
            <!--Optional:-->
            <v11:inclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:inclusionResourceRefList>
            <!--Optional:-->
            <v11:isFullRoute>?</v11:isFullRoute>
            <!--Optional:-->
            <v11:exclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:exclusionResourceRefList>
            <!--Optional:-->
            <v11:aEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:aEndRefList>
            <!--Optional:-->
            <v11:zEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:zEndRefList>
            <!--Optional:-->
            <v11:aRoleList>
               <!--Zero or more repetitions:-->
               <v11:role>
                  <!--Zero or more repetitions:-->
                  <v18:role>
                     <!--Optional:-->
                     <v18:role>?</v18:role>
                     <!--Optional:-->
                     <v18:tpIndex>?</v18:tpIndex>
                  </v18:role>
               </v11:role>
            </v11:aRoleList>
            <!--Optional:-->
            <v11:isReportingAlarms>?</v11:isReportingAlarms>
            <!--Optional:-->
            <v11:networkReroute>?</v11:networkReroute>
            <!--Optional:-->
            <v11:isRevertive>?</v11:isRevertive>
            <!--Optional:-->
            <v11:isRevertiveReroute>?</v11:isRevertiveReroute>
            <!--Optional:-->
            <v11:intendedRouteAEnds>?</v11:intendedRouteAEnds>
            <!--Optional:-->
            <v11:isIntendedRouteExclusive>?</v11:isIntendedRouteExclusive>
            <!--Optional:-->
            <v11:intendedRouteZEnds>?</v11:intendedRouteZEnds>
            <!--Optional:-->
            <v11:priority>?</v11:priority>
            <!--Optional:-->
            <v11:zRoleList>
               <!--Zero or more repetitions:-->
               <v11:role>
                  <!--Zero or more repetitions:-->
                  <v18:role>
                     <!--Optional:-->
                     <v18:role>?</v18:role>
                     <!--Optional:-->
                     <v18:tpIndex>?</v18:tpIndex>
                  </v18:role>
               </v11:role>
            </v11:zRoleList>
            <!--Optional:-->
            <v11:asapRef>?</v11:asapRef>
            <!--Optional:-->
            <v11:aEndTpList>?</v11:aEndTpList>
            <!--Optional:-->
            <v11:blsrDirection>?</v11:blsrDirection>
            <!--Optional:-->
            <v11:isBundledSnc>?</v11:isBundledSnc>
            <!--Optional:-->
            <v11:mustRemoveGtps>?</v11:mustRemoveGtps>
            <!--Optional:-->
            <v11:potentialFutureSetupIndicator>?</v11:potentialFutureSetupIndicator>
            <!--Optional:-->
            <v11:routingConstraintEffort>?</v11:routingConstraintEffort>
            <!--Optional:-->
            <v11:timeslot>?</v11:timeslot>
            <!--Optional:-->
            <v11:zEndTpList>?</v11:zEndTpList>
         </v11:createData>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v19:tpData>
               <v19:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v19:tpRef>
               <!--Optional:-->
               <v19:tpMappingMode>?</v19:tpMappingMode>
               <!--Optional:-->
               <v110:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v110:transmissionParameters>
                     <!--Optional:-->
                     <v110:layerRate extension="?">?</v110:layerRate>
                     <!--Optional:-->
                     <v110:parameterList>
                        <!--Zero or more repetitions:-->
                        <v14:nvs>
                           <v14:name>?</v14:name>
                           <v14:value>?</v14:value>
                        </v14:nvs>
                     </v110:parameterList>
                     <!--Optional:-->
                     <v110:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v110:vendorExtensions>
                  </v110:transmissionParameters>
               </v110:transmissionParametersList>
               <!--Optional:-->
               <v19:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v19:ingressTmdRef>
               <!--Optional:-->
               <v19:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v19:egressTmdRef>
            </v19:tpData>
         </v11:tpDataListToModify>
      </v11:createAndActivateSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="createAndActivateSubnetworkConnection"/></con:call></con:operation><con:operation isOneWay="false" action="createModifiedSubnetworkConnection" name="createModifiedSubnetworkConnection" bindingOperationName="createModifiedSubnetworkConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v15="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1" xmlns:v16="http://www.tmforum.org/mtop/nrf/xsd/route/v1" xmlns:v17="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:v18="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v19="http://www.tmforum.org/mtop/nrb/xsd/lp/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:createModifiedSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:modifyData>
            <!--Optional:-->
            <v13:userLabel>?</v13:userLabel>
            <!--Optional:-->
            <v13:isForceUniqueness>?</v13:isForceUniqueness>
            <!--Optional:-->
            <v13:owner>?</v13:owner>
            <!--Optional:-->
            <v13:aliasNameList>
               <!--Zero or more repetitions:-->
               <v14:alias>
                  <v14:aliasName>?</v14:aliasName>
                  <v14:aliasValue>?</v14:aliasValue>
               </v14:alias>
            </v13:aliasNameList>
            <!--Optional:-->
            <v13:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v13:vendorExtensions>
            <!--Optional:-->
            <v15:networkAccessDomain>?</v15:networkAccessDomain>
            <!--Optional:-->
            <v11:direction>?</v11:direction>
            <!--Optional:-->
            <v11:modifyType>?</v11:modifyType>
            <!--Optional:-->
            <v11:mustRetainOldSnc>?</v11:mustRetainOldSnc>
            <!--Optional:-->
            <v11:modifyServersAllowed>?</v11:modifyServersAllowed>
            <!--Optional:-->
            <v11:staticProtectionLevel extension="?">?</v11:staticProtectionLevel>
            <!--Optional:-->
            <v11:protectionEffort>?</v11:protectionEffort>
            <!--Optional:-->
            <v11:rerouteAllowed>?</v11:rerouteAllowed>
            <!--Optional:-->
            <v11:networkRouted>?</v11:networkRouted>
            <!--Optional:-->
            <v11:type>?</v11:type>
            <!--Optional:-->
            <v11:layerRate extension="?">?</v11:layerRate>
            <!--Optional:-->
            <v11:addedOrNewRoute>
               <!--Zero or more repetitions:-->
               <v16:route>
                  <!--Optional:-->
                  <v16:ccList>
                     <!--Zero or more repetitions:-->
                     <v17:cc>
                        <!--Optional:-->
                        <v17:isActive>?</v17:isActive>
                        <!--Optional:-->
                        <v17:direction>?</v17:direction>
                        <!--Optional:-->
                        <v17:ccType>?</v17:ccType>
                        <!--Optional:-->
                        <v17:isFixed>?</v17:isFixed>
                        <!--Optional:-->
                        <v17:aEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:aEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:aEndName>
                        </v17:aEndRefList>
                        <!--Optional:-->
                        <v17:zEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:zEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:zEndName>
                        </v17:zEndRefList>
                        <!--Optional:-->
                        <v17:connectionId>?</v17:connectionId>
                        <!--Optional:-->
                        <v17:routeActualState>?</v17:routeActualState>
                        <!--Optional:-->
                        <v17:routeAdminState>?</v17:routeAdminState>
                        <!--Optional:-->
                        <v17:isRouteExclusive>?</v17:isRouteExclusive>
                        <!--Optional:-->
                        <v17:routeId>?</v17:routeId>
                        <!--Optional:-->
                        <v17:isRouteIntended>?</v17:isRouteIntended>
                        <!--Optional:-->
                        <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                        <!--Optional:-->
                        <v17:vendorExtensions>
                           <!--You may enter ANY elements at this point-->
                        </v17:vendorExtensions>
                     </v17:cc>
                  </v16:ccList>
               </v16:route>
            </v11:addedOrNewRoute>
            <!--Optional:-->
            <v11:removedRoute>
               <!--Zero or more repetitions:-->
               <v16:route>
                  <!--Optional:-->
                  <v16:ccList>
                     <!--Zero or more repetitions:-->
                     <v17:cc>
                        <!--Optional:-->
                        <v17:isActive>?</v17:isActive>
                        <!--Optional:-->
                        <v17:direction>?</v17:direction>
                        <!--Optional:-->
                        <v17:ccType>?</v17:ccType>
                        <!--Optional:-->
                        <v17:isFixed>?</v17:isFixed>
                        <!--Optional:-->
                        <v17:aEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:aEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:aEndName>
                        </v17:aEndRefList>
                        <!--Optional:-->
                        <v17:zEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:zEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:zEndName>
                        </v17:zEndRefList>
                        <!--Optional:-->
                        <v17:connectionId>?</v17:connectionId>
                        <!--Optional:-->
                        <v17:routeActualState>?</v17:routeActualState>
                        <!--Optional:-->
                        <v17:routeAdminState>?</v17:routeAdminState>
                        <!--Optional:-->
                        <v17:isRouteExclusive>?</v17:isRouteExclusive>
                        <!--Optional:-->
                        <v17:routeId>?</v17:routeId>
                        <!--Optional:-->
                        <v17:isRouteIntended>?</v17:isRouteIntended>
                        <!--Optional:-->
                        <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                        <!--Optional:-->
                        <v17:vendorExtensions>
                           <!--You may enter ANY elements at this point-->
                        </v17:vendorExtensions>
                     </v17:cc>
                  </v16:ccList>
               </v16:route>
            </v11:removedRoute>
            <!--Optional:-->
            <v11:inclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:inclusionResourceRefList>
            <!--Optional:-->
            <v11:isFullRoute>?</v11:isFullRoute>
            <!--Optional:-->
            <v11:exclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:exclusionResourceRefList>
            <!--Optional:-->
            <v11:aEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:aEndRefList>
            <!--Optional:-->
            <v11:zEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:zEndRefList>
            <!--Optional:-->
            <v11:isReportingAlarms>?</v11:isReportingAlarms>
            <!--Optional:-->
            <v11:networkReroute>?</v11:networkReroute>
            <!--Optional:-->
            <v11:isRevertive>?</v11:isRevertive>
            <!--Optional:-->
            <v11:isRevertiveReroute>?</v11:isRevertiveReroute>
            <!--Optional:-->
            <v11:asapRef>?</v11:asapRef>
            <!--Optional:-->
            <v11:mustRemoveGtps>?</v11:mustRemoveGtps>
            <!--Optional:-->
            <v11:priority>?</v11:priority>
         </v11:modifyData>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:tolerableImpactEffort>?</v11:tolerableImpactEffort>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v18:tpData>
               <v18:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v18:tpRef>
               <!--Optional:-->
               <v18:tpMappingMode>?</v18:tpMappingMode>
               <!--Optional:-->
               <v19:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v19:transmissionParameters>
                     <!--Optional:-->
                     <v19:layerRate extension="?">?</v19:layerRate>
                     <!--Optional:-->
                     <v19:parameterList>
                        <!--Zero or more repetitions:-->
                        <v14:nvs>
                           <v14:name>?</v14:name>
                           <v14:value>?</v14:value>
                        </v14:nvs>
                     </v19:parameterList>
                     <!--Optional:-->
                     <v19:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v19:vendorExtensions>
                  </v19:transmissionParameters>
               </v19:transmissionParametersList>
               <!--Optional:-->
               <v18:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v18:ingressTmdRef>
               <!--Optional:-->
               <v18:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v18:egressTmdRef>
            </v18:tpData>
         </v11:tpDataListToModify>
      </v11:createModifiedSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="createModifiedSubnetworkConnection"/></con:call></con:operation><con:operation isOneWay="false" action="createSubnetworkConnection" name="createSubnetworkConnection" bindingOperationName="createSubnetworkConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:v16="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:v17="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:v18="http://www.tmforum.org/mtop/nrf/xsd/com/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:createSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:containingMlsnRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:containingMlsnRef>
         <!--Optional:-->
         <v11:createData>
            <!--Optional:-->
            <v13:userLabel>?</v13:userLabel>
            <!--Optional:-->
            <v13:isForceUniqueness>?</v13:isForceUniqueness>
            <!--Optional:-->
            <v13:owner>?</v13:owner>
            <!--Optional:-->
            <v13:aliasNameList>
               <!--Zero or more repetitions:-->
               <v14:alias>
                  <v14:aliasName>?</v14:aliasName>
                  <v14:aliasValue>?</v14:aliasValue>
               </v14:alias>
            </v13:aliasNameList>
            <!--Optional:-->
            <v13:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v13:vendorExtensions>
            <!--Optional:-->
            <v15:name>
               <!--1 or more repetitions:-->
               <v12:rdn>
                  <v12:type>?</v12:type>
                  <v12:value>?</v12:value>
               </v12:rdn>
            </v15:name>
            <!--Optional:-->
            <v16:networkAccessDomain>?</v16:networkAccessDomain>
            <!--Optional:-->
            <v11:direction>?</v11:direction>
            <!--Optional:-->
            <v11:staticProtectionLevel extension="?">?</v11:staticProtectionLevel>
            <!--Optional:-->
            <v11:protectionEffort>?</v11:protectionEffort>
            <!--Optional:-->
            <v11:rerouteAllowed>?</v11:rerouteAllowed>
            <!--Optional:-->
            <v11:networkRouted>?</v11:networkRouted>
            <!--Optional:-->
            <v11:type>?</v11:type>
            <!--Optional:-->
            <v11:layerRate extension="?">?</v11:layerRate>
            <!--Optional:-->
            <v11:ccInclusionList>
               <!--Zero or more repetitions:-->
               <v17:cc>
                  <!--Optional:-->
                  <v17:isActive>?</v17:isActive>
                  <!--Optional:-->
                  <v17:direction>?</v17:direction>
                  <!--Optional:-->
                  <v17:ccType>?</v17:ccType>
                  <!--Optional:-->
                  <v17:isFixed>?</v17:isFixed>
                  <!--Optional:-->
                  <v17:aEndRefList>
                     <!--1 or more repetitions:-->
                     <v17:aEndName>
                        <!--1 or more repetitions:-->
                        <v12:rdn>
                           <v12:type>?</v12:type>
                           <v12:value>?</v12:value>
                        </v12:rdn>
                     </v17:aEndName>
                  </v17:aEndRefList>
                  <!--Optional:-->
                  <v17:zEndRefList>
                     <!--1 or more repetitions:-->
                     <v17:zEndName>
                        <!--1 or more repetitions:-->
                        <v12:rdn>
                           <v12:type>?</v12:type>
                           <v12:value>?</v12:value>
                        </v12:rdn>
                     </v17:zEndName>
                  </v17:zEndRefList>
                  <!--Optional:-->
                  <v17:connectionId>?</v17:connectionId>
                  <!--Optional:-->
                  <v17:routeActualState>?</v17:routeActualState>
                  <!--Optional:-->
                  <v17:routeAdminState>?</v17:routeAdminState>
                  <!--Optional:-->
                  <v17:isRouteExclusive>?</v17:isRouteExclusive>
                  <!--Optional:-->
                  <v17:routeId>?</v17:routeId>
                  <!--Optional:-->
                  <v17:isRouteIntended>?</v17:isRouteIntended>
                  <!--Optional:-->
                  <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                  <!--Optional:-->
                  <v17:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v17:vendorExtensions>
               </v17:cc>
            </v11:ccInclusionList>
            <!--Optional:-->
            <v11:inclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:inclusionResourceRefList>
            <!--Optional:-->
            <v11:isFullRoute>?</v11:isFullRoute>
            <!--Optional:-->
            <v11:exclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:exclusionResourceRefList>
            <!--Optional:-->
            <v11:aEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:aEndRefList>
            <!--Optional:-->
            <v11:zEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:zEndRefList>
            <!--Optional:-->
            <v11:aRoleList>
               <!--Zero or more repetitions:-->
               <v11:role>
                  <!--Zero or more repetitions:-->
                  <v18:role>
                     <!--Optional:-->
                     <v18:role>?</v18:role>
                     <!--Optional:-->
                     <v18:tpIndex>?</v18:tpIndex>
                  </v18:role>
               </v11:role>
            </v11:aRoleList>
            <!--Optional:-->
            <v11:isReportingAlarms>?</v11:isReportingAlarms>
            <!--Optional:-->
            <v11:networkReroute>?</v11:networkReroute>
            <!--Optional:-->
            <v11:isRevertive>?</v11:isRevertive>
            <!--Optional:-->
            <v11:isRevertiveReroute>?</v11:isRevertiveReroute>
            <!--Optional:-->
            <v11:intendedRouteAEnds>?</v11:intendedRouteAEnds>
            <!--Optional:-->
            <v11:isIntendedRouteExclusive>?</v11:isIntendedRouteExclusive>
            <!--Optional:-->
            <v11:intendedRouteZEnds>?</v11:intendedRouteZEnds>
            <!--Optional:-->
            <v11:priority>?</v11:priority>
            <!--Optional:-->
            <v11:zRoleList>
               <!--Zero or more repetitions:-->
               <v11:role>
                  <!--Zero or more repetitions:-->
                  <v18:role>
                     <!--Optional:-->
                     <v18:role>?</v18:role>
                     <!--Optional:-->
                     <v18:tpIndex>?</v18:tpIndex>
                  </v18:role>
               </v11:role>
            </v11:zRoleList>
            <!--Optional:-->
            <v11:asapRef>?</v11:asapRef>
            <!--Optional:-->
            <v11:aEndTpList>?</v11:aEndTpList>
            <!--Optional:-->
            <v11:blsrDirection>?</v11:blsrDirection>
            <!--Optional:-->
            <v11:isBundledSnc>?</v11:isBundledSnc>
            <!--Optional:-->
            <v11:mustRemoveGtps>?</v11:mustRemoveGtps>
            <!--Optional:-->
            <v11:potentialFutureSetupIndicator>?</v11:potentialFutureSetupIndicator>
            <!--Optional:-->
            <v11:routingConstraintEffort>?</v11:routingConstraintEffort>
            <!--Optional:-->
            <v11:timeslot>?</v11:timeslot>
            <!--Optional:-->
            <v11:zEndTpList>?</v11:zEndTpList>
         </v11:createData>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
      </v11:createSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="createSubnetworkConnection"/></con:call></con:operation><con:operation isOneWay="false" action="deactivateAndDeleteSubnetworkConnection" name="deactivateAndDeleteSubnetworkConnection" bindingOperationName="deactivateAndDeleteSubnetworkConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:deactivateAndDeleteSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v13:tpData>
               <v13:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:tpRef>
               <!--Optional:-->
               <v13:tpMappingMode>?</v13:tpMappingMode>
               <!--Optional:-->
               <v14:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v14:transmissionParameters>
                     <!--Optional:-->
                     <v14:layerRate extension="?">?</v14:layerRate>
                     <!--Optional:-->
                     <v14:parameterList>
                        <!--Zero or more repetitions:-->
                        <v15:nvs>
                           <v15:name>?</v15:name>
                           <v15:value>?</v15:value>
                        </v15:nvs>
                     </v14:parameterList>
                     <!--Optional:-->
                     <v14:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v14:vendorExtensions>
                  </v14:transmissionParameters>
               </v14:transmissionParametersList>
               <!--Optional:-->
               <v13:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:ingressTmdRef>
               <!--Optional:-->
               <v13:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:egressTmdRef>
            </v13:tpData>
         </v11:tpDataListToModify>
      </v11:deactivateAndDeleteSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="deactivateAndDeleteSubnetworkConnection"/></con:call></con:operation><con:operation isOneWay="false" action="deactivateSubnetworkConnection" name="deactivateSubnetworkConnection" bindingOperationName="deactivateSubnetworkConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:deactivateSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v13:tpData>
               <v13:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:tpRef>
               <!--Optional:-->
               <v13:tpMappingMode>?</v13:tpMappingMode>
               <!--Optional:-->
               <v14:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v14:transmissionParameters>
                     <!--Optional:-->
                     <v14:layerRate extension="?">?</v14:layerRate>
                     <!--Optional:-->
                     <v14:parameterList>
                        <!--Zero or more repetitions:-->
                        <v15:nvs>
                           <v15:name>?</v15:name>
                           <v15:value>?</v15:value>
                        </v15:nvs>
                     </v14:parameterList>
                     <!--Optional:-->
                     <v14:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v14:vendorExtensions>
                  </v14:transmissionParameters>
               </v14:transmissionParametersList>
               <!--Optional:-->
               <v13:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:ingressTmdRef>
               <!--Optional:-->
               <v13:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:egressTmdRef>
            </v13:tpData>
         </v11:tpDataListToModify>
      </v11:deactivateSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="deactivateSubnetworkConnection"/></con:call></con:operation><con:operation isOneWay="false" action="deleteSubnetworkConnection" name="deleteSubnetworkConnection" bindingOperationName="deleteSubnetworkConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:deleteSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
      </v11:deleteSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="deleteSubnetworkConnection"/></con:call></con:operation><con:operation isOneWay="false" action="modifySubnetworkConnection" name="modifySubnetworkConnection" bindingOperationName="modifySubnetworkConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v15="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1" xmlns:v16="http://www.tmforum.org/mtop/nrf/xsd/route/v1" xmlns:v17="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:v18="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v19="http://www.tmforum.org/mtop/nrb/xsd/lp/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:modifySubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:modifyData>
            <!--Optional:-->
            <v13:userLabel>?</v13:userLabel>
            <!--Optional:-->
            <v13:isForceUniqueness>?</v13:isForceUniqueness>
            <!--Optional:-->
            <v13:owner>?</v13:owner>
            <!--Optional:-->
            <v13:aliasNameList>
               <!--Zero or more repetitions:-->
               <v14:alias>
                  <v14:aliasName>?</v14:aliasName>
                  <v14:aliasValue>?</v14:aliasValue>
               </v14:alias>
            </v13:aliasNameList>
            <!--Optional:-->
            <v13:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v13:vendorExtensions>
            <!--Optional:-->
            <v15:networkAccessDomain>?</v15:networkAccessDomain>
            <!--Optional:-->
            <v11:direction>?</v11:direction>
            <!--Optional:-->
            <v11:modifyType>?</v11:modifyType>
            <!--Optional:-->
            <v11:mustRetainOldSnc>?</v11:mustRetainOldSnc>
            <!--Optional:-->
            <v11:modifyServersAllowed>?</v11:modifyServersAllowed>
            <!--Optional:-->
            <v11:staticProtectionLevel extension="?">?</v11:staticProtectionLevel>
            <!--Optional:-->
            <v11:protectionEffort>?</v11:protectionEffort>
            <!--Optional:-->
            <v11:rerouteAllowed>?</v11:rerouteAllowed>
            <!--Optional:-->
            <v11:networkRouted>?</v11:networkRouted>
            <!--Optional:-->
            <v11:type>?</v11:type>
            <!--Optional:-->
            <v11:layerRate extension="?">?</v11:layerRate>
            <!--Optional:-->
            <v11:addedOrNewRoute>
               <!--Zero or more repetitions:-->
               <v16:route>
                  <!--Optional:-->
                  <v16:ccList>
                     <!--Zero or more repetitions:-->
                     <v17:cc>
                        <!--Optional:-->
                        <v17:isActive>?</v17:isActive>
                        <!--Optional:-->
                        <v17:direction>?</v17:direction>
                        <!--Optional:-->
                        <v17:ccType>?</v17:ccType>
                        <!--Optional:-->
                        <v17:isFixed>?</v17:isFixed>
                        <!--Optional:-->
                        <v17:aEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:aEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:aEndName>
                        </v17:aEndRefList>
                        <!--Optional:-->
                        <v17:zEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:zEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:zEndName>
                        </v17:zEndRefList>
                        <!--Optional:-->
                        <v17:connectionId>?</v17:connectionId>
                        <!--Optional:-->
                        <v17:routeActualState>?</v17:routeActualState>
                        <!--Optional:-->
                        <v17:routeAdminState>?</v17:routeAdminState>
                        <!--Optional:-->
                        <v17:isRouteExclusive>?</v17:isRouteExclusive>
                        <!--Optional:-->
                        <v17:routeId>?</v17:routeId>
                        <!--Optional:-->
                        <v17:isRouteIntended>?</v17:isRouteIntended>
                        <!--Optional:-->
                        <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                        <!--Optional:-->
                        <v17:vendorExtensions>
                           <!--You may enter ANY elements at this point-->
                        </v17:vendorExtensions>
                     </v17:cc>
                  </v16:ccList>
               </v16:route>
            </v11:addedOrNewRoute>
            <!--Optional:-->
            <v11:removedRoute>
               <!--Zero or more repetitions:-->
               <v16:route>
                  <!--Optional:-->
                  <v16:ccList>
                     <!--Zero or more repetitions:-->
                     <v17:cc>
                        <!--Optional:-->
                        <v17:isActive>?</v17:isActive>
                        <!--Optional:-->
                        <v17:direction>?</v17:direction>
                        <!--Optional:-->
                        <v17:ccType>?</v17:ccType>
                        <!--Optional:-->
                        <v17:isFixed>?</v17:isFixed>
                        <!--Optional:-->
                        <v17:aEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:aEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:aEndName>
                        </v17:aEndRefList>
                        <!--Optional:-->
                        <v17:zEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:zEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:zEndName>
                        </v17:zEndRefList>
                        <!--Optional:-->
                        <v17:connectionId>?</v17:connectionId>
                        <!--Optional:-->
                        <v17:routeActualState>?</v17:routeActualState>
                        <!--Optional:-->
                        <v17:routeAdminState>?</v17:routeAdminState>
                        <!--Optional:-->
                        <v17:isRouteExclusive>?</v17:isRouteExclusive>
                        <!--Optional:-->
                        <v17:routeId>?</v17:routeId>
                        <!--Optional:-->
                        <v17:isRouteIntended>?</v17:isRouteIntended>
                        <!--Optional:-->
                        <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                        <!--Optional:-->
                        <v17:vendorExtensions>
                           <!--You may enter ANY elements at this point-->
                        </v17:vendorExtensions>
                     </v17:cc>
                  </v16:ccList>
               </v16:route>
            </v11:removedRoute>
            <!--Optional:-->
            <v11:inclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:inclusionResourceRefList>
            <!--Optional:-->
            <v11:isFullRoute>?</v11:isFullRoute>
            <!--Optional:-->
            <v11:exclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:exclusionResourceRefList>
            <!--Optional:-->
            <v11:aEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:aEndRefList>
            <!--Optional:-->
            <v11:zEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:zEndRefList>
            <!--Optional:-->
            <v11:isReportingAlarms>?</v11:isReportingAlarms>
            <!--Optional:-->
            <v11:networkReroute>?</v11:networkReroute>
            <!--Optional:-->
            <v11:isRevertive>?</v11:isRevertive>
            <!--Optional:-->
            <v11:isRevertiveReroute>?</v11:isRevertiveReroute>
            <!--Optional:-->
            <v11:asapRef>?</v11:asapRef>
            <!--Optional:-->
            <v11:mustRemoveGtps>?</v11:mustRemoveGtps>
            <!--Optional:-->
            <v11:priority>?</v11:priority>
         </v11:modifyData>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:tolerableImpactEffort>?</v11:tolerableImpactEffort>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v18:tpData>
               <v18:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v18:tpRef>
               <!--Optional:-->
               <v18:tpMappingMode>?</v18:tpMappingMode>
               <!--Optional:-->
               <v19:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v19:transmissionParameters>
                     <!--Optional:-->
                     <v19:layerRate extension="?">?</v19:layerRate>
                     <!--Optional:-->
                     <v19:parameterList>
                        <!--Zero or more repetitions:-->
                        <v14:nvs>
                           <v14:name>?</v14:name>
                           <v14:value>?</v14:value>
                        </v14:nvs>
                     </v19:parameterList>
                     <!--Optional:-->
                     <v19:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v19:vendorExtensions>
                  </v19:transmissionParameters>
               </v19:transmissionParametersList>
               <!--Optional:-->
               <v18:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v18:ingressTmdRef>
               <!--Optional:-->
               <v18:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v18:egressTmdRef>
            </v18:tpData>
         </v11:tpDataListToModify>
      </v11:modifySubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="modifySubnetworkConnection"/></con:call></con:operation><con:operation isOneWay="false" action="removeRoute" name="removeRoute" bindingOperationName="removeRoute" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:removeRouteRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v11:vendorExtensions>
      </v11:removeRouteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="removeRoute"/></con:call></con:operation><con:operation isOneWay="false" action="setIntendedRoute" name="setIntendedRoute" bindingOperationName="setIntendedRoute" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:setIntendedRouteRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v11:vendorExtensions>
      </v11:setIntendedRouteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="setIntendedRoute"/></con:call></con:operation><con:operation isOneWay="false" action="setRoutesAdminState" name="setRoutesAdminState" bindingOperationName="setRoutesAdminState" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:setRoutesAdminStateRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeNameAndAdminStateList>
            <!--Zero or more repetitions:-->
            <v11:item>
               <!--Optional:-->
               <v11:id>?</v11:id>
               <!--Optional:-->
               <v11:administrativeState>?</v11:administrativeState>
               <!--Optional:-->
               <v11:vendorExtensions>
                  <!--You may enter ANY elements at this point-->
               </v11:vendorExtensions>
            </v11:item>
         </v11:routeNameAndAdminStateList>
      </v11:setRoutesAdminStateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="setRoutesAdminState"/></con:call></con:operation><con:operation isOneWay="false" action="swapSubnetworkConnection" name="swapSubnetworkConnection" bindingOperationName="swapSubnetworkConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:swapSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncToBeDeactivatedRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncToBeDeactivatedRef>
         <!--Optional:-->
         <v11:sncToBeActivatedRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncToBeActivatedRef>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v13:tpData>
               <v13:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:tpRef>
               <!--Optional:-->
               <v13:tpMappingMode>?</v13:tpMappingMode>
               <!--Optional:-->
               <v14:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v14:transmissionParameters>
                     <!--Optional:-->
                     <v14:layerRate extension="?">?</v14:layerRate>
                     <!--Optional:-->
                     <v14:parameterList>
                        <!--Zero or more repetitions:-->
                        <v15:nvs>
                           <v15:name>?</v15:name>
                           <v15:value>?</v15:value>
                        </v15:nvs>
                     </v14:parameterList>
                     <!--Optional:-->
                     <v14:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v14:vendorExtensions>
                  </v14:transmissionParameters>
               </v14:transmissionParametersList>
               <!--Optional:-->
               <v13:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:ingressTmdRef>
               <!--Optional:-->
               <v13:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:egressTmdRef>
            </v13:tpData>
         </v11:tpDataListToModify>
      </v11:swapSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="swapSubnetworkConnection"/></con:call></con:operation><con:operation isOneWay="false" action="switchRoute" name="switchRoute" bindingOperationName="switchRoute" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:switchRouteRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v13:tpData>
               <v13:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:tpRef>
               <!--Optional:-->
               <v13:tpMappingMode>?</v13:tpMappingMode>
               <!--Optional:-->
               <v14:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v14:transmissionParameters>
                     <!--Optional:-->
                     <v14:layerRate extension="?">?</v14:layerRate>
                     <!--Optional:-->
                     <v14:parameterList>
                        <!--Zero or more repetitions:-->
                        <v15:nvs>
                           <v15:name>?</v15:name>
                           <v15:value>?</v15:value>
                        </v15:nvs>
                     </v14:parameterList>
                     <!--Optional:-->
                     <v14:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v14:vendorExtensions>
                  </v14:transmissionParameters>
               </v14:transmissionParametersList>
               <!--Optional:-->
               <v13:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:ingressTmdRef>
               <!--Optional:-->
               <v13:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:egressTmdRef>
            </v13:tpData>
         </v11:tpDataListToModify>
         <!--Optional:-->
         <v11:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v11:vendorExtensions>
      </v11:switchRouteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="switchRoute"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="TerminationPointControlSoapHttpBinding" type="wsdl" bindingName="{http://www.tmforum.org/mtop/rp/wsdl/tpc/v1-0}TerminationPointControlSoapHttpBinding" soapVersion="1_1" anonymous="optional" definition="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp.wsdl?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp.wsdl?WSDL"><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp.wsdl?WSDL</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-TerminationPointControlV1-0" targetNamespace="http://www.tmforum.org/mtop/rp/wsdl/tpc/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/rp/wsdl/tpc/v1-0" xmlns:WL5G3N2="http://schemas.xmlsoap.org/wsdl/soap/">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?wsdl=2" namespace="http://www.tmforum.org/mtop/rp/wsdl/tpc/v1-0"/>
  <WL5G3N0:documentation>DDP: ResourceProvisioning
    Module: TerminationPointControl Service Interface WSDL HTTP Module
    Description: This module contains all the mTOP TerminationPointControl Service Interface WSDL definitions for the Web Service deployment profile with SOAP/HTTP binding.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:binding name="TerminationPointControlSoapHttpBinding" type="WL5G3N1:TerminationPointControl">
    <WL5G3N0:documentation>SOAP HTTP binding definitions of the operations of the TerminationPointControl portType (interface)</WL5G3N0:documentation>
    <WL5G3N2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <WL5G3N0:operation name="createFloatingTerminationPoint">
      <WL5G3N2:operation soapAction="createFloatingTerminationPoint" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:createFloatingTerminationPointRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:createFloatingTerminationPointResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="createFloatingTerminationPointException">
        <WL5G3N2:fault name="createFloatingTerminationPointException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="createGroupTerminationPoint">
      <WL5G3N2:operation soapAction="createGroupTerminationPoint" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:createGroupTerminationPointRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:createGroupTerminationPointResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="createGroupTerminationPointException">
        <WL5G3N2:fault name="createGroupTerminationPointException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="createTerminationPointPool">
      <WL5G3N2:operation soapAction="createTerminationPointPool" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:createTerminationPointPoolRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:createTerminationPointPoolResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="createTerminationPointPoolException">
        <WL5G3N2:fault name="createTerminationPointPoolException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="deleteFloatingTerminationPoint">
      <WL5G3N2:operation soapAction="deleteFloatingTerminationPoint" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:deleteFloatingTerminationPointRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:deleteFloatingTerminationPointResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="deleteFloatingTerminationPointException">
        <WL5G3N2:fault name="deleteFloatingTerminationPointException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="deleteGroupTerminationPoint">
      <WL5G3N2:operation soapAction="deleteGroupTerminationPoint" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:deleteGroupTerminationPointRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:deleteGroupTerminationPointResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="deleteGroupTerminationPointException">
        <WL5G3N2:fault name="deleteGroupTerminationPointException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="deleteTerminationPointPool">
      <WL5G3N2:operation soapAction="deleteTerminationPointPool" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:deleteTerminationPointPoolRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:deleteTerminationPointPoolResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="deleteTerminationPointPoolException">
        <WL5G3N2:fault name="deleteTerminationPointPoolException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="modifyGroupTerminationPoint">
      <WL5G3N2:operation soapAction="modifyGroupTerminationPoint" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:modifyGroupTerminationPointRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:modifyGroupTerminationPointResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="modifyGroupTerminationPointException">
        <WL5G3N2:fault name="modifyGroupTerminationPointException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="modifyTerminationPointPool">
      <WL5G3N2:operation soapAction="modifyTerminationPointPool" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:modifyTerminationPointPoolRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:modifyTerminationPointPoolResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="modifyTerminationPointPoolException">
        <WL5G3N2:fault name="modifyTerminationPointPoolException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="setTerminationPointData">
      <WL5G3N2:operation soapAction="setTerminationPointData" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:setTerminationPointDataRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:setTerminationPointDataResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="setTerminationPointDataException">
        <WL5G3N2:fault name="setTerminationPointDataException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
  </WL5G3N0:binding>
  <WL5G3N0:service name="TerminationPointControlHttp">
    <WL5G3N0:documentation>Example of the TerminationPointControl WSDL Service definition as a deployment example of this mTOP Service Interface. It is expected to be modified to match the specific deployment configuration in a service provider's CCV.</WL5G3N0:documentation>
    <WL5G3N0:port binding="WL5G3N1:TerminationPointControlSoapHttpBinding" name="TerminationPointControlSoapHttp">
      <WL5G3N2:address location="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp"/>
    </WL5G3N0:port>
  </WL5G3N0:service>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?wsdl=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-TerminationPointControlV1-0" targetNamespace="http://www.tmforum.org/mtop/rp/wsdl/tpc/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/rp/wsdl/tpc/v1-0">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?wsdl=1" namespace="http://www.tmforum.org/mtop/rp/wsdl/tpc/v1-0"/>
  <WL5G3N0:documentation>DDP: ResourceProvisioning
    Module: TerminationPointControl Service Interface WSDL PortType Module
    Description: This module contains all the mTOP TerminationPointControl Service Interface PortType WSDL definitions common to both Web Service deployment profiles; SOAP/HTTP and SOAP/JMS.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:portType name="TerminationPointControl">
    <WL5G3N0:documentation>The TerminationPointControl porttype (interface) common to both RPC (synchronous) and MSG (asynchronous) based client/server communication patterns.</WL5G3N0:documentation>
    <WL5G3N0:operation name="createFloatingTerminationPoint">
      <WL5G3N0:input message="WL5G3N1:createFloatingTerminationPointRequest"/>
      <WL5G3N0:output message="WL5G3N1:createFloatingTerminationPointResponse"/>
      <WL5G3N0:fault message="WL5G3N1:createFloatingTerminationPointException" name="createFloatingTerminationPointException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="createGroupTerminationPoint">
      <WL5G3N0:input message="WL5G3N1:createGroupTerminationPointRequest"/>
      <WL5G3N0:output message="WL5G3N1:createGroupTerminationPointResponse"/>
      <WL5G3N0:fault message="WL5G3N1:createGroupTerminationPointException" name="createGroupTerminationPointException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="createTerminationPointPool">
      <WL5G3N0:input message="WL5G3N1:createTerminationPointPoolRequest"/>
      <WL5G3N0:output message="WL5G3N1:createTerminationPointPoolResponse"/>
      <WL5G3N0:fault message="WL5G3N1:createTerminationPointPoolException" name="createTerminationPointPoolException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="deleteFloatingTerminationPoint">
      <WL5G3N0:input message="WL5G3N1:deleteFloatingTerminationPointRequest"/>
      <WL5G3N0:output message="WL5G3N1:deleteFloatingTerminationPointResponse"/>
      <WL5G3N0:fault message="WL5G3N1:deleteFloatingTerminationPointException" name="deleteFloatingTerminationPointException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="deleteGroupTerminationPoint">
      <WL5G3N0:input message="WL5G3N1:deleteGroupTerminationPointRequest"/>
      <WL5G3N0:output message="WL5G3N1:deleteGroupTerminationPointResponse"/>
      <WL5G3N0:fault message="WL5G3N1:deleteGroupTerminationPointException" name="deleteGroupTerminationPointException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="deleteTerminationPointPool">
      <WL5G3N0:input message="WL5G3N1:deleteTerminationPointPoolRequest"/>
      <WL5G3N0:output message="WL5G3N1:deleteTerminationPointPoolResponse"/>
      <WL5G3N0:fault message="WL5G3N1:deleteTerminationPointPoolException" name="deleteTerminationPointPoolException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="modifyGroupTerminationPoint">
      <WL5G3N0:input message="WL5G3N1:modifyGroupTerminationPointRequest"/>
      <WL5G3N0:output message="WL5G3N1:modifyGroupTerminationPointResponse"/>
      <WL5G3N0:fault message="WL5G3N1:modifyGroupTerminationPointException" name="modifyGroupTerminationPointException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="modifyTerminationPointPool">
      <WL5G3N0:input message="WL5G3N1:modifyTerminationPointPoolRequest"/>
      <WL5G3N0:output message="WL5G3N1:modifyTerminationPointPoolResponse"/>
      <WL5G3N0:fault message="WL5G3N1:modifyTerminationPointPoolException" name="modifyTerminationPointPoolException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="setTerminationPointData">
      <WL5G3N0:input message="WL5G3N1:setTerminationPointDataRequest"/>
      <WL5G3N0:output message="WL5G3N1:setTerminationPointDataResponse"/>
      <WL5G3N0:fault message="WL5G3N1:setTerminationPointDataException" name="setTerminationPointDataException"/>
    </WL5G3N0:operation>
  </WL5G3N0:portType>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?wsdl=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-TerminationPointControlV1-0" targetNamespace="http://www.tmforum.org/mtop/rp/wsdl/tpc/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:WL5G3N2="http://www.tmforum.org/mtop/rp/xsd/tpc/v1">
  <WL5G3N0:documentation>DDP: ResourceProvisioning
    Module: TerminationPointControl Service Interface WSDL Message Module
    Description: This module contains all the mTOP TerminationPointControl Service Interface WSDL message definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:types>
    <xsd:schema xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/rp/wsdl/tpc/v1-0" xmlns:tpc="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=20"/>
    </xsd:schema>
  </WL5G3N0:types>
  <WL5G3N0:message name="createFloatingTerminationPointRequest">
    <WL5G3N0:documentation>The createFloatingTerminationPoint request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:createFloatingTerminationPointRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="createFloatingTerminationPointResponse">
    <WL5G3N0:documentation>The createFloatingTerminationPoint response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:createFloatingTerminationPointResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="createFloatingTerminationPointException">
    <WL5G3N0:documentation>The createFloatingTerminationPoint exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:createFloatingTerminationPointException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="createGroupTerminationPointRequest">
    <WL5G3N0:documentation>The createGroupTerminationPoint request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:createGroupTerminationPointRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="createGroupTerminationPointResponse">
    <WL5G3N0:documentation>The createGroupTerminationPoint response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:createGroupTerminationPointResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="createGroupTerminationPointException">
    <WL5G3N0:documentation>The createGroupTerminationPoint exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:createGroupTerminationPointException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="createTerminationPointPoolRequest">
    <WL5G3N0:documentation>The createTerminationPointPool request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:createTerminationPointPoolRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="createTerminationPointPoolResponse">
    <WL5G3N0:documentation>The createTerminationPointPool response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:createTerminationPointPoolResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="createTerminationPointPoolException">
    <WL5G3N0:documentation>The createTerminationPointPool exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:createTerminationPointPoolException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="deleteFloatingTerminationPointRequest">
    <WL5G3N0:documentation>The deleteFloatingTerminationPoint request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:deleteFloatingTerminationPointRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="deleteFloatingTerminationPointResponse">
    <WL5G3N0:documentation>The deleteFloatingTerminationPoint response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:deleteFloatingTerminationPointResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="deleteFloatingTerminationPointException">
    <WL5G3N0:documentation>The deleteFloatingTerminationPoint exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:deleteFloatingTerminationPointException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="deleteGroupTerminationPointRequest">
    <WL5G3N0:documentation>The deleteGroupTerminationPoint request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:deleteGroupTerminationPointRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="deleteGroupTerminationPointResponse">
    <WL5G3N0:documentation>The deleteGroupTerminationPoint response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:deleteGroupTerminationPointResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="deleteGroupTerminationPointException">
    <WL5G3N0:documentation>The deleteGroupTerminationPoint exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:deleteGroupTerminationPointException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="deleteTerminationPointPoolRequest">
    <WL5G3N0:documentation>The deleteTerminationPointPool request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:deleteTerminationPointPoolRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="deleteTerminationPointPoolResponse">
    <WL5G3N0:documentation>The deleteTerminationPointPool response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:deleteTerminationPointPoolResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="deleteTerminationPointPoolException">
    <WL5G3N0:documentation>The deleteTerminationPointPool exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:deleteTerminationPointPoolException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="modifyGroupTerminationPointRequest">
    <WL5G3N0:documentation>The modifyGroupTerminationPoint request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:modifyGroupTerminationPointRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="modifyGroupTerminationPointResponse">
    <WL5G3N0:documentation>The modifyGroupTerminationPoint response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:modifyGroupTerminationPointResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="modifyGroupTerminationPointException">
    <WL5G3N0:documentation>The modifyGroupTerminationPoint exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:modifyGroupTerminationPointException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="modifyTerminationPointPoolRequest">
    <WL5G3N0:documentation>The modifyTerminationPointPool request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:modifyTerminationPointPoolRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="modifyTerminationPointPoolResponse">
    <WL5G3N0:documentation>The modifyTerminationPointPool response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:modifyTerminationPointPoolResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="modifyTerminationPointPoolException">
    <WL5G3N0:documentation>The modifyTerminationPointPool exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:modifyTerminationPointPoolException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="setTerminationPointDataRequest">
    <WL5G3N0:documentation>The setTerminationPointData request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:setTerminationPointDataRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="setTerminationPointDataResponse">
    <WL5G3N0:documentation>The setTerminationPointData response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:setTerminationPointDataResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="setTerminationPointDataException">
    <WL5G3N0:documentation>The setTerminationPointData exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:setTerminationPointDataException" name="mtopBody"/>
  </WL5G3N0:message>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=20</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:crcd="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:ftp="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:gtp="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:mlsn="http://www.tmforum.org/mtop/nrf/xsd/mlsn/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:tp="http://www.tmforum.org/mtop/nrf/xsd/tp/v1" xmlns:tpdata="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:tppool="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: ResourceProvisioning</p>
      <p>Module:  Message XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP TerminationPointControl SI
                XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=16"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=18"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=21"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=8"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=10"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/mlsn/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=17"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=23"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=22"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=4"/>
  <!--================-->
  <xsd:element name="createFloatingTerminationPointRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    createFloatingTerminationPoint operation</p>
        <p>This operation allows an NMS requests from the EMS
                    the creation of an FTP given the parameters passed
                    in the method.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="createData" type="tns:FloatingTerminationPointCreateDataType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Structure describing the floating
                                termination point structure to be created.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="tpDataListToModify" type="tpdata:TerminationPointDataListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The list of TPs with associated
                                parameters to be applied.
                                Applying transmission parameters is
                                best-effort (where not stated
                                otherwise) and the resulting values of
                                the transmission parameters are
                                provided in the updated
                                tpDataListToModify parameter. If the
                                parameter is "not              best
                                effort" then the whole operation
                                will be rejected and the appropriate
                                exception thrown (see exceptions below).</p>
              <p>This parameter may be used by the NMS to
                                determine             the number of
                                server layer CTPs to create for the
                                specified FTP.             An empty list
                                means that the number of server layer
                                CTPs              is determined by the EMS.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="createFloatingTerminationPointResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    createFloatingTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="tpDataListToModify" type="tpdata:TerminationPointDataListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The list of TPs with associated
                                parameters to be applied.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="theFtp" type="ftp:FloatingTerminationPointType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The new floating termination point. The
                                EMS is responsible for guaranteeing
                                uniqueness of the name of the FTP. The
                                name may be specified             by the
                                NMS in the createData.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="errorReason" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Specifies the creation error(s) if any.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="createFloatingTerminationPointException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    createFloatingTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:capacityExceeded"/>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:unableToComply"/>
            <xsd:element ref="msg:userlabelInUse"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="createGroupTerminationPointRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    createGroupTerminationPoint operation</p>
        <p>The NMS uses this operation to request the creation
                    of a GTP see SD1-3_BundledSNC.pdf     for further
                    information on GTP usage). The NMS can either
                    specify the list    of CTPs comprising the GTP (the
                    list is placed in the listOfTPs parameter)     or,
                    in the case of contiguous CTPs of the same
                    layerRate, the NMS may list     the first CTP (in
                    the initialCTPname parameter) and the number of
                    following CTPs (in the numberOfCTPs parameter). The
                    NMS     may also provide the EMS with the
                    flexibility to decide the list of CTPs      by using
                    the gtpEffort parameter. In this flexible mode the
                    EMS uses the     listOfTPs parameter or the
                    initialCTPname/ numberOfCTPs parameters to
                    determine the total requested bandwidth but it may
                    return a GTP (newGTP     parameter) with a different
                    set of CTPs than those indicated in the     original
                    createGTP request. Note that this mode allows for
                    the GTP     components to be instantiated at a later
                    time by the ME (e.g., upon     detection of user's
                    signal). Therefore the operation may successfully
                    return a newGTP with an empty listOfTPs attribute
                    (to be updated at a     later time once the
                    component CTPs are created in the ME).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="createData" type="tns:GroupTerminationPointCreateDataType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Structure describing the group
                                termination point structure to be created.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="createGroupTerminationPointResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    createGroupTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="newGtp" type="gtp:GroupTerminationPointType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This output parameter contains the newly
                                created GTP.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="createGroupTerminationPointException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    createGroupTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:unableToComply"/>
            <xsd:element ref="msg:userlabelInUse"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="createTerminationPointPoolRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    createTerminationPointPool operation</p>
        <p>This operation .</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="createData" type="tns:TerminationPointPoolCreateDataType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Structure describing the termination
                                point pool structure to be created.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="createTerminationPointPoolResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    createTerminationPointPool operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="newTpPool" type="tppool:TerminationPointPoolType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter contains the newly created TPPool.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="createTerminationPointPoolException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    createTerminationPointPool operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:capacityExceeded"/>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:unableToComply"/>
            <xsd:element ref="msg:userlabelInUse"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="deleteFloatingTerminationPointRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    deleteFloatingTerminationPoint operation</p>
        <p>This operation allows an NMS to request the deletion
                    of a floating termination point from the EMS. The
                    operation may be used to delete "CPTP" FTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="ftpName" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the termination point to be deleted.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="tpDataListToModify" type="tpdata:TerminationPointDataListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The list of TPs with associated
                                parameters to be applied.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deleteFloatingTerminationPointResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    deleteFloatingTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="tpDataListToModify" type="tpdata:TerminationPointDataListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The list of TPs with associated
                                parameters to be applied.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="errorReason" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>In case a "best effort"
                                parameter could not be set
                                an indication of the fault reason is
                                provided by the EMS.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deleteFloatingTerminationPointException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    deleteFloatingTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="deleteGroupTerminationPointRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    deleteGroupTerminationPoint operation</p>
        <p>This operation is used to delete a GTP (see SD1-3
                    Bundled SNC overview for further information on GTP
                    usage). An attempt to delete a GTP that is involved
                    in a cross connection or SNC should be rejected by
                    the EMS. This operation is idempotent. If the
                    service is called with the name of a non-existent
                    GTP, it will succeed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="gtpName" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>name of GTP to be deleted.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deleteGroupTerminationPointResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    deleteGroupTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType/>
  </xsd:element>
  <xsd:element name="deleteGroupTerminationPointException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    deleteGroupTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:objectInUse"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="deleteTerminationPointPoolRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    deleteTerminationPointPool operation</p>
        <p>The delete TPPool operation is used to delete a
                    TPPool. This operation is idempotent.  If the
                    service is called with the name of a non-existent
                    TPPool, it will succeed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="tpPoolName" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the TPPool to be deleted.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deleteTerminationPointPoolResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    deleteTerminationPointPool operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType/>
  </xsd:element>
  <xsd:element name="deleteTerminationPointPoolException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    deleteTerminationPointPool operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="modifyGroupTerminationPointRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    modifyGroupTerminationPoint operation</p>
        <p>This operation is used to add TPs to or delete TPs
                    from a GTP (see SD1-3_BundledSNC.pdf  for further
                    information on GTP usage). For a given request, the
                    NMS can only add or delete CTPs, not both. It is not
                    possible to add a CTP that is already involved in a
                    cross  connection or SNC, or that is part of another
                    GTP. Attempts to modify a GTP  that is involved in a
                    cross connection (or SNC) should be rejected by the
                    EMS. The operation is best-effort, i.e., the EMS
                    will add or delete as many of the identified CTPs as
                    possible. If the service is called with the name of
                    a non-existent GTP or CTP, it will fail.</p>
        <p>If the NMS created a GTP with gtpEffort equal to
                    EFFORT_SAME, this also implies that the EMS will not
                    modify on its own, i.e., the EMS will only modify
                    the GTP if requested by the NMS via the modifyGTP operation.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="gtpName" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the GTP to be modified.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="tpRefList" type="nam:NamingAttributeListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>names of the CTPs to be added or deleted.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="actionType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>an indication of whether the listed TPs
                                are to be added or deleted. Two values
                                are possible "add" or "delete".</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="modifyGroupTerminationPointResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    modifyGroupTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="modifiedGtp" type="gtp:GroupTerminationPointType">
          <xsd:annotation>
            <xsd:documentation>
              <p>the structure for the modified GTP.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="modifyGroupTerminationPointException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    modifyGroupTerminationPoint operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="modifyTerminationPointPoolRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    modifyTerminationPointPool operation</p>
        <p>The modify TPPool operation is used to add TPs/GTPs
                    to or delete TPs/GTPs from a TPPool.  For a given
                    request, the NMS can only add TPs/GTPs or delete
                    TPs/GTPs, not both.  When TPs/GTPs are to be added,
                    all the specified TPs/GTPs shall be contained in MEs
                    of the TPPool's Subnetwork.  It is not possible to
                    add a TP/GTP that is part of another TPPool or GTP.
                    The operation is best-effort, i.e., the EMS will add
                    or delete as many of the identified TPs as possible.
                    If the service is called with the name of a
                    non-existent TPPool or TP or GTP, it will fail.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="tpPoolName" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the TPPool to be modified.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="containedMembersRefList" type="nam:NamingAttributeListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The names of the TPs or GTPs to be added
                                or deleted.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="actionType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>an indication of whether the listed TPs
                                or GTPs are to be added or deleted. Two
                                values are possible "add" or "delete".</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="modifyTerminationPointPoolResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    modifyTerminationPointPool operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="modifiedTpPool" type="tppool:TerminationPointPoolType">
          <xsd:annotation>
            <xsd:documentation>
              <p>the structure for the modified TPPool.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="modifyTerminationPointPoolException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    modifyTerminationPointPool operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:capacityExceeded"/>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:objectInUse"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="setTerminationPointDataRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    setTerminationPointData operation</p>
        <p>This operation allows the NMS to set parameters on a
                    specified Termination Point (CTP, PTP or FTP). See
                    SD1-16_LayeredParameters.pdf  for further information.</p>
        <p>This operation is best effort (except where specified
                    otherwise for a     particular parameter). The
                    results of the operation are returned    so that the
                    NMS is aware of what modifications succeeded.</p>
        <p>If the source TP of a broadcast system is used as
                    input, then    the entire multipoint system will be
                    affected based on the new    parameter values for
                    the source TP.</p>
        <p>The tpMappingMode may be set with this operation.
                    When the mode is    set to
                    TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING, the EMS
                    will terminate the    specified CTP. In this case
                    the EMS must create the specified CTP on     the NE
                    if it does not actually exist.     Setting the
                    tpMappingMode of an ATM VP or VC CTP can only be
                    done if    the CTP has been created. Note that the
                    tpMappingMode can be set    only on the ingress and
                    egress CTPs of an ATM SNC since they are the only
                    ones which may not be cross-connected.</p>
        <p>No change to tpMappingMode or trafficDescriptors will
                    take place if    there is any active cross connect
                    (NE cross connect)    using the CTP passed in parameter.</p>
        <p>The transmissionParams is a "delta" list
                    that needs to be    applied to the specified TP,
                    i.e. only a subset of the    parameters may be
                    specified in the list, in which case only those
                    should be applied in the NE. Transmission parameters
                    are used to associate     a TCA profile with a TP
                    using this service. In this case there are
                    potentially additional failure modes (see exceptions).</p>
        <p>The assignment of a Transmission Descriptor (TMD) to
                    a Termination Point (TP)     as egress or ingress
                    TMD by using the TMD's name amounts to an
                    overwriting     of the layered transmission
                    parameters of the TP by the layered transmission
                    parameters of the TMD, and to an overwriting of the
                    additional info parameters    of the TP by the
                    "additional TP information" parameters of
                    the TMD.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="tpInfo" type="tpdata:TerminationPointDataType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Details of modifications required..</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setTerminationPointDataResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    setTerminationPointData operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="modifiedTp" type="tp:TerminationPointType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Result of modification.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setTerminationPointDataException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    setTerminationPointData operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--Types-->
  <xsd:simpleType name="GroupTerminationPointEffortType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The GTP effort is a statement of the requirement of
                    the list of CTPs    that a new GTP. If EFFORT_SAME
                    is specified then the EMS must create the     GTP
                    with the exact same list of CTPs as provided with
                    the GTP creation     request. Further, if the NMS
                    uses EFFORT_SAME, it is assume that the EMS     will
                    not modify the CTP list comprising the GTP at some
                    later point (unless     requested by the NMS via the
                    modifyGTP operation). If EFFORT_WHATEVER is
                    specified then the EMS may comply with the total
                    bandwidth requirement by     using a different set
                    of CTPs.</p>
        <p>If the NMS requests a GTP with gtpEffort equal to
                    EFFORT_SAME, this also     implies that the EMS will
                    not modify on its own, i.e., the EMS will only
                    modify the GTP if requested by the NMS via the
                    modifyGTP operation.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EFFORT_WHATEVER"/>
      <xsd:enumeration value="EFFORT_SAME"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="FloatingTerminationPointCreateDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The read/write attributes required for the creation
                    of a         floating termination point on the EMS
                    are packed together in an          FTPCreateData
                    structure which the NMS will pass to the EMS at
                    FTP creation time.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="crcd:CommonResourceCreateDataType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="equipmentRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>The name of the equipment
                                containing the FTP.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ingressTmdRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The FTP may have an optional
                                    reference to an ingress (incoming)
                                    Transmission Descriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The FTP may have an optional
                                    reference to an egress (outgoing)
                                    Transmission Descriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="tpMappingMode" type="com:TerminationModeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Within the facade definition, the
                                    CTP/FTP can act as an      aggregate
                                    of associated G.805 TCPs, G.805
                                    Termination Functions and G.805
                                    CPs at one or more LayerRates. The
                                    CTP is contained within a PTP or FTP.</p>
                <p>The TerminationMode attribute
                                    indicates and controls the
                                    connection of     the named CP at a
                                    specified LayerRate to the dedicated
                                    G.805 TCP and      associated G.805
                                    Termination Function at the same
                                    LayerRate within the      CTP/FTP.</p>
                <p>The TerminationMode is used, for
                                    example, to control the Termination
                                    and     mapping to VT1.5 of an STS1
                                    Trail within an OC3 port. This
                                    capability     could potentially be
                                    used to terminate an STS1 backbone
                                    Trail within      a lower order mux
                                    that has the capability to
                                    alternatively      cross-connect the
                                    STS1 unterminated. The same
                                    capability is used in SDH     and is
                                    potentially applicable to any LayerRate.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="direction" type="com:DirectionalityType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The direction of the termination point.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of layer rates on which
                                    connectivity can be established in
                                    the     flow domain together with a
                                    set of connectionless technology
                                    parameters for      each layer rate.
                                    Refer to chapter
                                    "Connectionless Technology
                                    Parameters" of the
                                    supporting document
                                    LayeredParameters.pdf for details of
                                    the currently defined
                                    connectionless parameters.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="GroupTerminationPointCreateDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="crcd:CommonResourceCreateDataType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="containingMeRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>The name of the Managed
                                Element containing the GTP</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="tpRefList" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>the list of CTPs that comprise the GTP.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="initialCtpRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>in cases where the CTPs are
                                    contiguous and of the same
                                    layerRate, this parameter is used to
                                    indicate the first CTP in the group.
                                    This parameter is used in lieu of
                                    the listOfTPs parameter.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="numberOfCtp" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                <p>This parameter is used in conjunction
                                    with the initialCTPname parameter.
                                    It indicates the number of
                                    contiguous CTPs that follow the
                                    initial CTP. It equals 1 minus the
                                    total number of CTPs in the GTP.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="gtpEffort" type="tns:GroupTerminationPointEffortType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This parameter is used to indicate if
                                    the GTP bandwidth specification can
                                    be met with a different list of CTPs.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isReportingAlarms" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Provides an indication whether alarm
                                    reporting for this instance is
                                    active or not.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This is a container for all vendor extensions.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TerminationPointPoolCreateDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="crcd:CommonResourceCreateDataType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="userLabel" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>the userLabel for the TpPool.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="forceUniqueness" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Specifies whether uniqueness of the
                                    userLabel is required amongst
                                    TpPools of the MLSN.  The operation
                                    will fail if userLabel is already in use.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="owner" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>the owner of the TpPool.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="containingMlsnRef" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The subnetwork that shall contain the
                                    TPPool to be created.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="containedMembersRefList" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The list of TPs or GTPs that shall
                                    comprise the TPPool.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>The common layers and transmission
                                    parameters the above-specified
                                    Contained TPs, or TPs contained in
                                    Contained GTPs, are required to have
                                    (e.g., ATM VP layer with prescribed
                                    traffic characteristics).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="descriptionOfUse" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                <p>A description of the specific use of
                                    the TP pool, in particular how its
                                    members are collected and
                                    administered. It could include, for
                                    example, the name of a TP with the
                                    meaning that all TP pool members
                                    have to be collected from the set of
                                    potential client CTPs of this TP.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This is a container for all vendor extensions.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of generic mTOP simple data types.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="NameAndStringValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvsList" type="tns:NameAndValueStringListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndValueStringListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndStringValue</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nvs" type="tns:NameAndStringValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:any minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvList" type="tns:NameAndAnyValueListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndAnyValueType</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nv" type="tns:NameAndAnyValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AliasNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    contains the list of aliases for the network entity.
                    The attribute is a name-value list. The name refers
                    to the type of alias (e.g., nativeEMSname) and the
                    value component holds the alias itself</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alias">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="aliasName" type="xsd:string"/>
            <xsd:element name="aliasValue" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AnyListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A generic list of any type of elements. Used for
                    vendor Extensions or loose element encapsulation
                    from other namespaces.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="DiscoveredNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the name of the object when
                    its existence is first published on the CCV but only
                    in the case where the OS that publishes the object
                    on the CCV is not the naming OS. If the naming OS
                    first publishes the object on the CCV, this
                    attribute may be left empty.</p>
        <p>The discovered name is assumed to be unique from the
                    perspective of the publishing OS.</p>
        <p>The discovered name published on the CCV does not
                    necessarily need to be the name of the object as
                    discovered by the OS from the subtending network.</p>
        <p>There are no specific rules concerning the
                    relationship between the "name" and
                    "discovered name" of the object. They
                    could be set to the same value or they could be different.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ManufactureDateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type identifies the production date of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="MultiEventInventoryAttributesType">
    <xsd:annotation>
      <xsd:documentation>This attribute is used when a object
                instance is embedded in the inventory    layout payload
                of a Multi-Event Inventory (MEI) notification.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="neTime" nillable="true" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the time at which the NE detected the
                            inventory change (if available)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventIndication" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is an indication of the type of
                            inventory update.</p>
            <p>Possible values are Object Creation (OC),
                            Object Discovery (ODsc), Object Deletion
                            (OD),        Attribute Value Change (AVC),
                            State Change (SC) and AVC_SC_and_Childern.
                            Only the acronym (e.g., OC)        is used
                            in the actual attribute value. The following
                            conventions apply:</p>
            <p>If an object creation or object discovery
                            indicator is applied to a parent object,
                            it implicitly applies to all the children,
                            i.e., the OS sending the notification only
                            needs       to set the indicator attribute
                            in the parent object.</p>
            <p>If an object deletion is applied to a parent
                            object, it is assumed that all the children
                            are also deleted. The childern should not be listed.</p>
            <p>The AVC_SC_and_Childern indication may be
                            applied to a parent object to imply that
                            there       may be AVC or SC changes to the
                            parent and some or all of the children.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="NetworkAccessDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A free-format string used to associate a resource to
                    a Network Access Domain.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="NotificationIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the notification ID.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="NotificationIdentifierListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of notification IDs  (free string). Also,  the
                    value found in notificationId field of the event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="notificationId" type="tns:NotificationIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of all the object types. It is
                    left as a string for maximum compatibility with
                    future supported object types.</p>
        <p>Refer to the SD2-7 ObjectNaming for the list of all
                    supported values.</p>
        <p>Otherwise, one can also refer to the
                    ObjectEnumTypedefined in CommonResourceInfo (see NRB
                    DDP), which is provided as XML Schema enumerations
                    solely as a helper (not used in any messaging validation).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enumeration of all the supported query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI">
      <xsd:enumeration value="ANSI-92"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath20/"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The loose definition of all the supported query
                    dialect types.</p>
        <p>Refer to QueryDialectEnumType definition to the
                    enumeration of recommended query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The generic schema datatype definition for the query
                    expression used in most filters.</p>
        <p>This definition is borrowed from WS-Notification v1.3.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="tns:QueryDialectTypeType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          <p>The dialect of the given query expression</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=16</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9"/>
  <!--==============-->
  <xsd:complexType abstract="false" name="BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The (abstract) base type definition of all exception messages.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="hdr:header">
        <xsd:annotation>
          <xsd:documentation>The mTOP header as it cannot be
                        part of the SOAP Header in a SOAP v1.1 Fault message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="reason" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>A string indicating further details about the
                            exception. It is a free format string filled
                            by the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The extension for specific vendor exception information.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:element name="notImplemented" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised by OS for an optional operation that is not implemented</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="internalError" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised in case of non-specific OS internal failure</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidInput" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters are invalid</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tooManyOpenIterators" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when data retrieval iterator capacity is full</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="entityNotFound" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters do not refer to an existing object</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="commLoss" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when communication to an entity (needed to
                    help fulfill the request) is lost</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedCompressionFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given data compression format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedPackingFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given file packing format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidFilterDefinition" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the filter is invalid.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="objectInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tpInvalidEndPoint" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="timeslotInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="protectionEffortNotMet" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notInValidState" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unableToComply" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="capacityExceeded" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="accessDenied" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedRoutingConstraints" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="userlabelInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidTopic" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the topic is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notificationServiceProblem" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when there is a failure with the Broker.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AllExceptionsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reference to all supported exception types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="tns:accessDenied"/>
      <xsd:element ref="tns:capacityExceeded"/>
      <xsd:element ref="tns:commLoss"/>
      <xsd:element ref="tns:entityNotFound"/>
      <xsd:element ref="tns:internalError"/>
      <xsd:element ref="tns:invalidFilterDefinition"/>
      <xsd:element ref="tns:invalidInput"/>
      <xsd:element ref="tns:invalidTopic"/>
      <xsd:element ref="tns:notificationServiceProblem"/>
      <xsd:element ref="tns:notImplemented"/>
      <xsd:element ref="tns:notInValidState"/>
      <xsd:element ref="tns:objectInUse"/>
      <xsd:element ref="tns:protectionEffortNotMet"/>
      <xsd:element ref="tns:timeslotInUse"/>
      <xsd:element ref="tns:tooManyOpenIterators"/>
      <xsd:element ref="tns:tpInvalidEndPoint"/>
      <xsd:element ref="tns:unableToComply"/>
      <xsd:element ref="tns:unsupportedCompressionFormat"/>
      <xsd:element ref="tns:unsupportedPackingFormat"/>
      <xsd:element ref="tns:unsupportedRoutingConstraints"/>
      <xsd:element ref="tns:userlabelInUse"/>
    </xsd:choice>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Profile of exception types supported by all mTOP
                    iterator operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="tns:AllExceptionsType">
        <xsd:choice>
          <xsd:element ref="tns:commLoss"/>
          <xsd:element ref="tns:internalError"/>
          <xsd:element ref="tns:invalidInput"/>
          <xsd:element ref="tns:notImplemented"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Generic request message structure for all data
                    iterator operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=11</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML header.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9"/>
  <!--==============-->
  <xsd:simpleType name="ActivityStatusEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies the high-level response status for an
                    activity.  Required for response messages, including
                    error responses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="WARNING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="ActivityStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Add to the initial enumerations the Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ActivityStatusEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="MessageTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type of the message that is being exchanged as
                    part of an activity.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REQUEST"/>
      <xsd:enumeration value="RESPONSE"/>
      <xsd:enumeration value="NOTIFICATION"/>
      <xsd:enumeration value="ERROR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationPatternType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Styles supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SimpleResponse"/>
      <xsd:enumeration value="MultipleBatchResponse"/>
      <xsd:enumeration value="BulkResponse"/>
      <xsd:enumeration value="Notification"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationStyleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Style supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MSG"/>
      <xsd:enumeration value="RPC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="CompressionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if compression is to be performed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:CompressionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CompressionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported compressions. All extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_COMPRESSION"/>
      <xsd:enumeration value="GZIP"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PackingTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if the output file(s) are to be packed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:PackingEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PackingEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported packing/packaging. All
                    extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PACKING"/>
      <xsd:enumeration value="ZIP"/>
      <xsd:enumeration value="TAR"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="header">
    <xsd:annotation>
      <xsd:documentation>
        <p>MTOSI Standard Header.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="activityName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the business
                                transaction activity for the message
                                being exchanged.       The value is
                                usually the name of the mTOP operation,
                                e.g. getInventory.       This value
                                corresponds to the “operation” in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the message (or
                                contract) that is being exchanged as
                                part of an activity. E.g.
                                getInventoryResponse. This field
                                corresponds to the message name in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgType" type="tns:MessageTypeType"/>
        <xsd:element minOccurs="0" name="senderURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application sending this message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="destinationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the final destination of the
                                message (the OS that will process the
                                content of the message). This field may
                                point to a logical end point or abstract
                                topic name to be resolved by the
                                communication transport middleware in
                                order to deliver the message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="replyToURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used by request messages to specify
                                destination for response message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="originatorURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the originating application of
                                the message that resulted in this
                                response or notification message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="failureReplytoURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application receiving the
                                potential error notification message.
                                Required for all response messages and
                                notifications which are triggered by
                                request/response. If not specified the
                                replyToURI is used. If the replyToURI is
                                also not specified, senderURI endpoint
                                is used to send back the failure response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="activityStatus" type="tns:ActivityStatusType"/>
        <xsd:element minOccurs="0" name="correlationId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>An identifier that could be set by the
                                originator of an asynchronous request
                                that will allow it to correlate the
                                response to the request.  If this field
                                is set, it should be reflected in the
                                header of the response message.  Not
                                required for notification headers.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="security" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Provides credential nformation for use by
                                a security service for identification,
                                authentication, or authorization.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="securityType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the type of credential
                                contained in the security element.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="priority">
          <xsd:annotation>
            <xsd:documentation>
              <p>Indicates message-handling priority for
                                asynchronous messages.  It must be in
                                the range 0-9 (lowest-highest). Default: 4</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string"/>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgSpecificProperties">
          <xsd:annotation>
            <xsd:documentation>
              <p>Conditionally required for request,
                                response, and notification messages as
                                identified by the documentation for a
                                specific interface message.  The
                                communications infrastructure or the
                                receiving application can use this value
                                for routing or filtering messages.</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" minOccurs="0" name="property">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="propName" type="xsd:string"/>
                    <xsd:element name="propValue" type="xsd:string"/>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="communicationPattern" type="tns:CommunicationPatternType"/>
        <xsd:element minOccurs="0" name="communicationStyle" type="tns:CommunicationStyleType"/>
        <xsd:element minOccurs="0" name="requestedBatchSize" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>The RequestedBatchSize parameter provides
                                the control for the batch segmentation
                                of the full set of output data generated
                                by a coarse-grained operation such as
                                getInventory or getActiveAlarms. The
                                unit is any of the MTOSI objects. And,
                                it defines the maximum number of MTOSI
                                objects that can be included in all the
                                batches of data sent as part of a
                                multiple responses MEP.</p>
              <p>However, they are cases where a batch may
                                exceed the number of objects defined in
                                the RequestedBatchSize parameter. This
                                is true if the granularity of a response
                                atomic data representation is greater
                                than just one object. This is true for
                                the getInventory response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceNumber" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm. Pattern
                                to identify the batch seq number in a sequence.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceEndOfReply" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm.
                                Pattern, true if it is the last result
                                batch in a sequence</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="iteratorReferenceURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Mandatory for all SIT (iterators) MEP to
                                allow description of the data retrieval iterator.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="fileLocationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used for file retrieval. Specify the base
                                name of the file(s) to be generated and
                                the remote destination.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="compressionType" type="tns:CompressionTypeType"/>
        <xsd:element minOccurs="0" name="packingType" type="tns:PackingTypeType"/>
        <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>Message originating timestamp</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Location for all vendor extensions to the
                                MTOSI standard header.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=18</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML naming structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9"/>
  <!--=================-->
  <xsd:complexType name="RelativeDistinguishNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of relative distinguish
                    name (RDN) data structure used in all object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="type" type="gen:ObjectTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN object type acronym.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of the MTOSI object name
                    data structure as a sequence of RDNs, which
                    represents a unique identifier for the MTOSI object
                    on the CCV. Once set by the naming OS, the name is
                    invariant for the life of the object and should be
                    used when referring to the object over the CCV. Name
                    attribute of an object instance shall always be
                    assigned a value, unless the object instance is
                    first discovered by an OS that is not the naming OS
                    for the object instance. In such a case, the
                    discovering OS shall provide a value for the
                    Discovered Name attribute of the object. The naming
                    OS shall provide a value for the Name attribute of
                    the object once it becomes aware of the new object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="rdn" type="tns:RelativeDistinguishNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition for the list of MTOSI object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="name" nillable="true" type="tns:NamingAttributeType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=15</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:lr="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--==============-->
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP XML LayeredParameters structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=18"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=14"/>
  <!--==============-->
  <xsd:element name="transmissionParametersList" nillable="true" type="tns:LayeredParametersListType"/>
  <!--==============-->
  <xsd:complexType name="LayeredParametersListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is used in the TP definition and as a
                    consequence is available for use in a connection
                    specification where a TP is specified.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:transmissionParameters"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--==============-->
  <xsd:element name="transmissionParameters" nillable="true" type="tns:LayeredParametersType"/>
  <!--==============-->
  <xsd:complexType name="LayeredParametersType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is a structure that includes the layer rate with
                    the applicable list of transmissions parameters</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="layerRate" type="lr:LayerRateType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the layer to which the parameters apply.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="parameterList" type="gen:NameAndValueStringListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of tranmission parameters as a
                            generic pair of name and value strings.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The specific containment for vendor
                            extensions of the list of tranmission parameters.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=14</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP layer rates.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:element name="layerRateListType" type="tns:LayerRateListType"/>
  <!--================-->
  <xsd:complexType name="LayerRateListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of LayerRates</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="layerRate" nillable="true" type="tns:LayerRateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="LayerRateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          The LayerRateType value is used to identify:
          <li>the Layer of a PTP/CTP,</li>
          <li>the characteristic information of a PTP/FTP,</li>
          <li>the Layer/Rate of a connection.</li>
        </p>
        <p>Each LayerRateType may be used in conjunction with a
                    CTP/PTP/FTP of that layer. In the SDH definitions,
                    the G.805 CP and G.805 Termination Function layer
                    names differ, for example TU12 is used for the G.805
                    CP and VC12 for the corresponding G.805 Termination
                    Function. In this interface definition the TU and VC
                    definitions have been combined into a single
                    composite layer and this has been named to include
                    the equivalent SONET layer, e.g. LR_VT2_andTypeU12_VC12.</p>
        <p>
          For more details refer to the following supporting
                    document:
          <li>layering documentfor
                        all layering concepts</li>
          <li>LayerRates document for information about
                        recognized values in MTOSI</li>
        </p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:LayerRateEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="LayerRateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="LR_DS0_64K"/>
      <xsd:enumeration value="LR_DSL"/>
      <xsd:enumeration value="LR_Not_Applicable"/>
      <xsd:enumeration value="LR_Async_FOTS_150M"/>
      <xsd:enumeration value="LR_Async_FOTS_417M"/>
      <xsd:enumeration value="LR_Async_FOTS_560M"/>
      <xsd:enumeration value="LR_Async_FOTS_565M"/>
      <xsd:enumeration value="LR_Async_FOTS_1130M"/>
      <xsd:enumeration value="LR_Async_FOTS_1G7"/>
      <xsd:enumeration value="LR_Async_FOTS_1G8"/>
      <xsd:enumeration value="LR_ATM_NI"/>
      <xsd:enumeration value="LR_ATM_VC"/>
      <xsd:enumeration value="LR_ATM_VP"/>
      <xsd:enumeration value="LR_D1_Video"/>
      <xsd:enumeration value="LR_DIGITAL_SIGNAL_RATE"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_DSR_1_5M"/>
      <xsd:enumeration value="LR_DSR_2M"/>
      <xsd:enumeration value="LR_DSR_4M"/>
      <xsd:enumeration value="LR_DSR_6M"/>
      <xsd:enumeration value="LR_DSR_8M"/>
      <xsd:enumeration value="LR_DSR_16M"/>
      <xsd:enumeration value="LR_DSR_34M"/>
      <xsd:enumeration value="LR_E2_8M"/>
      <xsd:enumeration value="LR_E5_565M"/>
      <xsd:enumeration value="LR_Encapsulation"/>
      <xsd:enumeration value="LR_Fragment"/>
      <xsd:enumeration value="LR_DSR_45M"/>
      <xsd:enumeration value="LR_DSR_140M"/>
      <xsd:enumeration value="LR_DSR_565M"/>
      <xsd:enumeration value="LR_DSR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_DSR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OC1_STM0"/>
      <xsd:enumeration value="LR_DSR_OC3_STM1"/>
      <xsd:enumeration value="LR_DSR_2xSTM1"/>
      <xsd:enumeration value="LR_DSR_OC12_STM4"/>
      <xsd:enumeration value="LR_DSR_OC24_STM8"/>
      <xsd:enumeration value="LR_DSR_OC48_and_STM16"/>
      <xsd:enumeration value="LR_DSR_OC192_and_STM64"/>
      <xsd:enumeration value="LR_DSR_OC768_and_STM256"/>
      <xsd:enumeration value="LR_DSR_OTU1"/>
      <xsd:enumeration value="LR_DSR_OTU2"/>
      <xsd:enumeration value="LR_DSR_OTU3"/>
      <xsd:enumeration value="LR_E1_2M"/>
      <xsd:enumeration value="LR_E20_2x2M"/>
      <xsd:enumeration value="LR_E30_8x2M"/>
      <xsd:enumeration value="LR_E3_34M"/>
      <xsd:enumeration value="LR_E4_140M"/>
      <xsd:enumeration value="LR_ESCON"/>
      <xsd:enumeration value="LR_Ethernet"/>
      <xsd:enumeration value="LR_ETR"/>
      <xsd:enumeration value="LR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_FC_12_133M"/>
      <xsd:enumeration value="LR_FC_25_266M"/>
      <xsd:enumeration value="LR_FC_50_531M"/>
      <xsd:enumeration value="LR_FC_100_1063M"/>
      <xsd:enumeration value="LR_FDDI"/>
      <xsd:enumeration value="LR_FICON"/>
      <xsd:enumeration value="LR_FR_IF"/>
      <xsd:enumeration value="LR_FR_PVC"/>
      <xsd:enumeration value="LR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_ISDN_BRI"/>
      <xsd:enumeration value="LR_Line_OC1_STS1_and_MS_STM0"/>
      <xsd:enumeration value="LR_Line_OC3_STS3_and_MS_STM1"/>
      <xsd:enumeration value="LR_Line_OC12_STS12_and_MS_STM4"/>
      <xsd:enumeration value="LR_Line_OC24_STS24_and_MS_STM8"/>
      <xsd:enumeration value="LR_Line_OC48_STS48_and_MS_STM16"/>
      <xsd:enumeration value="LR_Line_OC192_STS192_and_MS_STM64"/>
      <xsd:enumeration value="LR_Line_OC768_STS768_and_MS_STM256"/>
      <xsd:enumeration value="LR_Low_Order_TU3_VC3"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3"/>
      <xsd:enumeration value="LR_STS3c_and_AU4_VC4"/>
      <xsd:enumeration value="LR_STS4c_and_VC3_4c"/>
      <xsd:enumeration value="LR_STS5c_and_VC3_5c"/>
      <xsd:enumeration value="LR_STS6c_and_VC4_2c"/>
      <xsd:enumeration value="LR_STS7c_and_VC3_7c"/>
      <xsd:enumeration value="LR_STS8c_and_VC3_8c"/>
      <xsd:enumeration value="LR_STS9c_and_VC4_3c"/>
      <xsd:enumeration value="LR_Optical_Channel"/>
      <xsd:enumeration value="LR_Optical_Multiplex_Section"/>
      <xsd:enumeration value="LR_OPTICAL_SECTION"/>
      <xsd:enumeration value="LR_Optical_Transmission_Section"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_PHYSICAL_MEDIALESS"/>
      <xsd:enumeration value="LR_PHYSICAL_OPTICAL"/>
      <xsd:enumeration value="LR_POTS"/>
      <xsd:enumeration value="LR_Section_OC1_STS1_and_RS_STM0"/>
      <xsd:enumeration value="LR_Section_OC3_STS3_and_RS_STM1"/>
      <xsd:enumeration value="LR_Section_OC12_STS12_and_RS_STM4"/>
      <xsd:enumeration value="LR_Section_OC24_STS24_and_RS_STM8"/>
      <xsd:enumeration value="LR_Section_OC48_STS48_and_RS_STM16"/>
      <xsd:enumeration value="LR_Section_OC192_STS192_and_RS_STM64"/>
      <xsd:enumeration value="LR_Section_OC768_STS768_and_RS_STM256"/>
      <xsd:enumeration value="LR_STS1_and_AU3_High_Order_VC3"/>
      <xsd:enumeration value="LR_STS2c_and_VC3_2c"/>
      <xsd:enumeration value="LR_STS10c_and_VC3_10c"/>
      <xsd:enumeration value="LR_STS11c_and_VC3_11c"/>
      <xsd:enumeration value="LR_STS12c_and_VC4_4c"/>
      <xsd:enumeration value="LR_STS13c_and_VC3_13c"/>
      <xsd:enumeration value="LR_STS14c_and_VC3_14c"/>
      <xsd:enumeration value="LR_STS15c_and_VC4_5c"/>
      <xsd:enumeration value="LR_STS16c_and_VC3_16c"/>
      <xsd:enumeration value="LR_STS17c_and_VC3_17c"/>
      <xsd:enumeration value="LR_STS18c_and_VC4_6c"/>
      <xsd:enumeration value="LR_STS19c_and_VC3_19c"/>
      <xsd:enumeration value="LR_STS20c_and_VC3_20c"/>
      <xsd:enumeration value="LR_STS21c_and_VC4_7c"/>
      <xsd:enumeration value="LR_STS22c_and_VC3_22c"/>
      <xsd:enumeration value="LR_STS23c_and_VC3_23c"/>
      <xsd:enumeration value="LR_STS24c_and_VC4_8c"/>
      <xsd:enumeration value="LR_STS25c_and_VC3_25c"/>
      <xsd:enumeration value="LR_STS26c_and_VC3_26c"/>
      <xsd:enumeration value="LR_STS27c_and_VC4_9c"/>
      <xsd:enumeration value="LR_STS28c_and_VC3_28c"/>
      <xsd:enumeration value="LR_STS29c_and_VC3_29c"/>
      <xsd:enumeration value="LR_STS30c_and_VC4_10c"/>
      <xsd:enumeration value="LR_STS31c_and_VC3_31c"/>
      <xsd:enumeration value="LR_STS32c_and_VC3_32c"/>
      <xsd:enumeration value="LR_STS33c_and_VC4_11c"/>
      <xsd:enumeration value="LR_STS34c_and_VC3_34c"/>
      <xsd:enumeration value="LR_STS35c_and_VC3_35c"/>
      <xsd:enumeration value="LR_STS36c_and_VC4_12c"/>
      <xsd:enumeration value="LR_STS37c_and_VC3_37c"/>
      <xsd:enumeration value="LR_STS38c_and_VC3_38c"/>
      <xsd:enumeration value="LR_STS39c_and_VC4_13c"/>
      <xsd:enumeration value="LR_STS40c_and_VC3_40c"/>
      <xsd:enumeration value="LR_STS41c_and_VC3_41c"/>
      <xsd:enumeration value="LR_STS42c_and_VC4_14c"/>
      <xsd:enumeration value="LR_STS43c_and_VC3_43c"/>
      <xsd:enumeration value="LR_STS44c_and_VC3_44c"/>
      <xsd:enumeration value="LR_STS45c_and_VC4_15c"/>
      <xsd:enumeration value="LR_STS46c_and_VC3_46c"/>
      <xsd:enumeration value="LR_STS47c_and_VC3_47c"/>
      <xsd:enumeration value="LR_STS48c_and_VC4_16c"/>
      <xsd:enumeration value="LR_STS49c_and_VC3_49c"/>
      <xsd:enumeration value="LR_STS50c_and_VC3_50c"/>
      <xsd:enumeration value="LR_STS51c_and_VC4_17c"/>
      <xsd:enumeration value="LR_STS52c_and_VC3_52c"/>
      <xsd:enumeration value="LR_STS53c_and_VC3_53c"/>
      <xsd:enumeration value="LR_STS54c_and_VC4_18c"/>
      <xsd:enumeration value="LR_STS55c_and_VC3_55c"/>
      <xsd:enumeration value="LR_STS56c_and_VC3_56c"/>
      <xsd:enumeration value="LR_STS57c_and_VC4_19c"/>
      <xsd:enumeration value="LR_STS58c_and_VC3_58c"/>
      <xsd:enumeration value="LR_STS59c_and_VC3_59c"/>
      <xsd:enumeration value="LR_STS60c_and_VC4_20c"/>
      <xsd:enumeration value="LR_STS61c_and_VC3_61c"/>
      <xsd:enumeration value="LR_STS62c_and_VC3_62c"/>
      <xsd:enumeration value="LR_STS63c_and_VC4_21c"/>
      <xsd:enumeration value="LR_STS64c_and_VC3_64c"/>
      <xsd:enumeration value="LR_STS65c_and_VC3_65c"/>
      <xsd:enumeration value="LR_STS66c_and_VC4_22c"/>
      <xsd:enumeration value="LR_STS67c_and_VC3_67c"/>
      <xsd:enumeration value="LR_STS68c_and_VC3_68c"/>
      <xsd:enumeration value="LR_STS69c_and_VC4_23c"/>
      <xsd:enumeration value="LR_STS70c_and_VC3_70c"/>
      <xsd:enumeration value="LR_STS71c_and_VC3_71c"/>
      <xsd:enumeration value="LR_STS72c_and_VC4_24c"/>
      <xsd:enumeration value="LR_STS73c_and_VC3_73c"/>
      <xsd:enumeration value="LR_STS74c_and_VC3_74c"/>
      <xsd:enumeration value="LR_STS75c_and_VC4_25c"/>
      <xsd:enumeration value="LR_STS76c_and_VC3_76c"/>
      <xsd:enumeration value="LR_STS77c_and_VC3_77c"/>
      <xsd:enumeration value="LR_STS78c_and_VC4_26c"/>
      <xsd:enumeration value="LR_STS79c_and_VC3_79c"/>
      <xsd:enumeration value="LR_STS80c_and_VC3_80c"/>
      <xsd:enumeration value="LR_STS81c_and_VC4_27c"/>
      <xsd:enumeration value="LR_STS82c_and_VC3_82c"/>
      <xsd:enumeration value="LR_STS83c_and_VC3_83c"/>
      <xsd:enumeration value="LR_STS84c_and_VC4_28c"/>
      <xsd:enumeration value="LR_STS85c_and_VC3_85c"/>
      <xsd:enumeration value="LR_STS86c_and_VC3_86c"/>
      <xsd:enumeration value="LR_STS87c_and_VC4_29c"/>
      <xsd:enumeration value="LR_STS88c_and_VC3_88c"/>
      <xsd:enumeration value="LR_STS89c_and_VC3_89c"/>
      <xsd:enumeration value="LR_STS90c_and_VC4_30c"/>
      <xsd:enumeration value="LR_STS91c_and_VC3_91c"/>
      <xsd:enumeration value="LR_STS92c_and_VC3_92c"/>
      <xsd:enumeration value="LR_STS93c_and_VC4_31c"/>
      <xsd:enumeration value="LR_STS94c_and_VC3_94c"/>
      <xsd:enumeration value="LR_STS95c_and_VC3_95c"/>
      <xsd:enumeration value="LR_STS96c_and_VC4_32c"/>
      <xsd:enumeration value="LR_STS97c_and_VC3_97c"/>
      <xsd:enumeration value="LR_STS98c_and_VC3_98c"/>
      <xsd:enumeration value="LR_STS99c_and_VC4_33c"/>
      <xsd:enumeration value="LR_STS100c_and_VC3_100c"/>
      <xsd:enumeration value="LR_STS101c_and_VC3_101c"/>
      <xsd:enumeration value="LR_STS102c_and_VC4_34c"/>
      <xsd:enumeration value="LR_STS103c_and_VC3_103c"/>
      <xsd:enumeration value="LR_STS104c_and_VC3_104c"/>
      <xsd:enumeration value="LR_STS105c_and_VC4_35c"/>
      <xsd:enumeration value="LR_STS106c_and_VC3_106c"/>
      <xsd:enumeration value="LR_STS107c_and_VC3_107c"/>
      <xsd:enumeration value="LR_STS108c_and_VC4_36c"/>
      <xsd:enumeration value="LR_STS109c_and_VC3_109c"/>
      <xsd:enumeration value="LR_STS110c_and_VC3_110c"/>
      <xsd:enumeration value="LR_STS111c_and_VC4_37c"/>
      <xsd:enumeration value="LR_STS112c_and_VC3_112c"/>
      <xsd:enumeration value="LR_STS113c_and_VC3_113c"/>
      <xsd:enumeration value="LR_STS114c_and_VC4_38c"/>
      <xsd:enumeration value="LR_STS115c_and_VC3_115c"/>
      <xsd:enumeration value="LR_STS116c_and_VC3_116c"/>
      <xsd:enumeration value="LR_STS117c_and_VC4_39c"/>
      <xsd:enumeration value="LR_STS118c_and_VC3_118c"/>
      <xsd:enumeration value="LR_STS119c_and_VC3_119c"/>
      <xsd:enumeration value="LR_STS120c_and_VC4_40c"/>
      <xsd:enumeration value="LR_STS121c_and_VC3_121c"/>
      <xsd:enumeration value="LR_STS122c_and_VC3_122c"/>
      <xsd:enumeration value="LR_STS123c_and_VC4_41c"/>
      <xsd:enumeration value="LR_STS124c_and_VC3_124c"/>
      <xsd:enumeration value="LR_STS125c_and_VC3_125c"/>
      <xsd:enumeration value="LR_STS126c_and_VC4_42c"/>
      <xsd:enumeration value="LR_STS127c_and_VC3_127c"/>
      <xsd:enumeration value="LR_STS128c_and_VC3_128c"/>
      <xsd:enumeration value="LR_STS129c_and_VC4_43c"/>
      <xsd:enumeration value="LR_STS130c_and_VC3_130c"/>
      <xsd:enumeration value="LR_STS131c_and_VC3_131c"/>
      <xsd:enumeration value="LR_STS132c_and_VC4_44c"/>
      <xsd:enumeration value="LR_STS133c_and_VC3_133c"/>
      <xsd:enumeration value="LR_STS134c_and_VC3_134c"/>
      <xsd:enumeration value="LR_STS135c_and_VC4_45c"/>
      <xsd:enumeration value="LR_STS136c_and_VC3_136c"/>
      <xsd:enumeration value="LR_STS137c_and_VC3_137c"/>
      <xsd:enumeration value="LR_STS138c_and_VC4_46c"/>
      <xsd:enumeration value="LR_STS139c_and_VC3_139c"/>
      <xsd:enumeration value="LR_STS140c_and_VC3_140c"/>
      <xsd:enumeration value="LR_STS141c_and_VC4_47c"/>
      <xsd:enumeration value="LR_STS142c_and_VC3_142c"/>
      <xsd:enumeration value="LR_STS143c_and_VC3_143c"/>
      <xsd:enumeration value="LR_STS144c_and_VC4_48c"/>
      <xsd:enumeration value="LR_STS145c_and_VC3_145c"/>
      <xsd:enumeration value="LR_STS146c_and_VC3_146c"/>
      <xsd:enumeration value="LR_STS147c_and_VC4_49c"/>
      <xsd:enumeration value="LR_STS148c_and_VC3_148c"/>
      <xsd:enumeration value="LR_STS149c_and_VC3_149c"/>
      <xsd:enumeration value="LR_STS150c_and_VC4_50c"/>
      <xsd:enumeration value="LR_STS151c_and_VC3_151c"/>
      <xsd:enumeration value="LR_STS152c_and_VC3_152c"/>
      <xsd:enumeration value="LR_STS153c_and_VC4_51c"/>
      <xsd:enumeration value="LR_STS154c_and_VC3_154c"/>
      <xsd:enumeration value="LR_STS155c_and_VC3_155c"/>
      <xsd:enumeration value="LR_STS156c_and_VC4_52c"/>
      <xsd:enumeration value="LR_STS157c_and_VC3_157c"/>
      <xsd:enumeration value="LR_STS158c_and_VC3_158c"/>
      <xsd:enumeration value="LR_STS159c_and_VC4_53c"/>
      <xsd:enumeration value="LR_STS160c_and_VC3_160c"/>
      <xsd:enumeration value="LR_STS161c_and_VC3_161c"/>
      <xsd:enumeration value="LR_STS162c_and_VC4_54c"/>
      <xsd:enumeration value="LR_STS163c_and_VC3_163c"/>
      <xsd:enumeration value="LR_STS164c_and_VC3_164c"/>
      <xsd:enumeration value="LR_STS165c_and_VC4_55c"/>
      <xsd:enumeration value="LR_STS166c_and_VC3_166c"/>
      <xsd:enumeration value="LR_STS167c_and_VC3_167c"/>
      <xsd:enumeration value="LR_STS168c_and_VC4_56c"/>
      <xsd:enumeration value="LR_STS169c_and_VC3_169c"/>
      <xsd:enumeration value="LR_STS170c_and_VC3_170c"/>
      <xsd:enumeration value="LR_STS171c_and_VC4_57c"/>
      <xsd:enumeration value="LR_STS172c_and_VC3_172c"/>
      <xsd:enumeration value="LR_STS173c_and_VC3_173c"/>
      <xsd:enumeration value="LR_STS174c_and_VC4_58c"/>
      <xsd:enumeration value="LR_STS175c_and_VC3_175c"/>
      <xsd:enumeration value="LR_STS176c_and_VC3_176c"/>
      <xsd:enumeration value="LR_STS177c_and_VC4_59c"/>
      <xsd:enumeration value="LR_STS178c_and_VC3_178c"/>
      <xsd:enumeration value="LR_STS179c_and_VC3_179c"/>
      <xsd:enumeration value="LR_STS180c_and_VC4_60c"/>
      <xsd:enumeration value="LR_STS181c_and_VC3_181c"/>
      <xsd:enumeration value="LR_STS182c_and_VC3_182c"/>
      <xsd:enumeration value="LR_STS183c_and_VC4_61c"/>
      <xsd:enumeration value="LR_STS184c_and_VC3_184c"/>
      <xsd:enumeration value="LR_STS185c_and_VC3_185c"/>
      <xsd:enumeration value="LR_STS186c_and_VC4_62c"/>
      <xsd:enumeration value="LR_STS187c_and_VC3_187c"/>
      <xsd:enumeration value="LR_STS188c_and_VC3_188c"/>
      <xsd:enumeration value="LR_STS189c_and_VC4_63c"/>
      <xsd:enumeration value="LR_STS190c_and_VC3_190c"/>
      <xsd:enumeration value="LR_STS191c_and_VC3_191c"/>
      <xsd:enumeration value="LR_STS192c_and_VC4_64c"/>
      <xsd:enumeration value="LR_STS768c_and_VC4_256c"/>
      <xsd:enumeration value="LR_T1_and_DS1_1_5M"/>
      <xsd:enumeration value="LR_T2_and_DS2_6M"/>
      <xsd:enumeration value="LR_T3_and_DS3_45M"/>
      <xsd:enumeration value="LR_VT1_5_and_TU11_VC11"/>
      <xsd:enumeration value="LR_VT2_and_TU12_VC12"/>
      <xsd:enumeration value="LR_VT6_and_TU2_VC2"/>
      <!--The ones below were added in the MTOSI 2.1 release-->
      <xsd:enumeration value="LR_LAG_Fragment"/>
      <xsd:enumeration value="LR_DSR_10Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2.5Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10.7Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_11.1Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_LAN"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_WAN"/>
      <xsd:enumeration value="LR_DSR_40Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OTU2e"/>
      <xsd:enumeration value="LR_DSR_OTU3e1"/>
      <xsd:enumeration value="LR_DSR_OTU3e2"/>
      <xsd:enumeration value="LR_DSR_OTU4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_0"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_Flexible"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_4"/>
      <xsd:enumeration value="LR_Optical_Physical_Section"/>
      <xsd:enumeration value="LR_Optical_Physical_Section_Multilane"/>
      <xsd:enumeration value="LR_Section_OC3072_STS3072_and_RS_STM1024"/>
      <xsd:enumeration value="LR_Line_OC3072_STS3072_and_MS_STM1024"/>
      <xsd:enumeration value="LR_DSR_OC3072_and_STM1024"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=6</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common
                type definitions used in some the mTOP XML Resource objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:simpleType name="CommunicationStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This state reflects a communication state between the
                    EMS and its ManagedElement.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CS_AVAILABLE"/>
      <xsd:enumeration value="CS_UNAVAILABLE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="ConnectionDirectionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction of a subnetwork connection, cross-connects,
                    or topological link. For a detailed description of
                    the use of this attribute see SNC Types supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CD_UNI">
        <xsd:annotation>
          <xsd:documentation>
            <p>UNIdirectional, i.e. source TP to sink TP.
                            Note: creation of unidirectional connections
                            is supported even when CTPs/FTPs are
                            modelled as bidirectional.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CD_BI">
        <xsd:annotation>
          <xsd:documentation>
            <p>BIdirectional, i.e. bidirectional TP to
                            bidirectional TP, a.k.a. two-way.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ConnectionlessPortTerminationPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This parameter shall identify the role in the flow
                    domain of         the requested CPTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CPTPR_FD_EDGE">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Edge CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_FD_INTERNAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Internal CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_ALL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return all CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="DirectionalityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction for a TerminationPoint:</p>
        <p>The directionality of PTPs is defined from an
                    external point of view, while the directionality of
                    CTPs is defined from an internal point of view.
                    Consequently, sink PTPs generate source CTPs, and
                    sink CTPs form source PTPs. Refer to SNC Types and
                    to layers for further information on termination
                    point and connection directionality.</p>
        <p>Note that ATM termination points (LR_ATM_NI,
                    LR_ATM_VP and LR_ATM_VC) are always bi-directional
                    even though the traffic may be asymmetric (and
                    eventually null in one of the two directions).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="D_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>Used when the directionality specification is
                            not necessary.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_BIDIRECTIONAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>source and sink (transmit and receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SOURCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>source (transmit).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SINK">
        <xsd:annotation>
          <xsd:documentation>
            <p>sink (receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="FlowDomainFragmentTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          This (read-only) attribute provides an indication of
                    the type of the matrix flow domain fragment. It may
                    have one of the following values:
          <ul>
            <li>"FDFRT_POINT_TO_POINT": the FDFr
                            is between exactly two points</li>
            <li>"FDFRT_POINT_TO_MULTIPOINT": (E-tree)</li>
            <li>"FDFRT_MULTIPOINT": the FDFr is
                            between at least two points</li>
          </ul>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="GradesOfImpactType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Grades of maximum tolerable disruption to traffic as
                    a result of the operation that this parameter is describing.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="GOI_HITLESS"/>
      <xsd:enumeration value="GOI_MINOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Less or equal to 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GOI_MAJOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Greater than 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="HolderStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Holder State Type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMPTY">
        <xsd:annotation>
          <xsd:documentation>
            <p>no equipment is installed and no expected
                            equipment has been identified</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected and currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EXPECTED_AND_NOT_INSTALLED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected but not currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_NOT_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>physically inserted in the ME but not expected</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MISMATCH_OF_INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>there is an inconsistency between the
                            expected equipment and the installed equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNAVAILABLE">
        <xsd:annotation>
          <xsd:documentation>
            <p>this holder cannot accept the installation or
                            provisioning of equipment (this is typically
                            caused by a double width card installed next
                            to this slot)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>
            <p>the OS does not know the state of the equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentHolderTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The EquipmentHolder with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentHolderEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentHolderEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Equipment holder type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="rack"/>
      <xsd:enumeration value="shelf"/>
      <xsd:enumeration value="sub_shelf"/>
      <xsd:enumeration value="slot"/>
      <xsd:enumeration value="sub_slot"/>
      <xsd:enumeration value="remote_unit"/>
      <xsd:enumeration value="remote_slots"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="EquipmentObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Type of equipment object in equipment holder. Values
                    are vendor-specific.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledPartNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the resource part number (PN) of the
                    installed equipment. If not available (or there is
                    no installed equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledSerialNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the serial number of the installed equipment.
                    If not available (or there is no installed
                    equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Firmware version of the installed equipment. If not
                    available (or there is no installed equipment), an
                    empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRoutedType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Network routed, indicates if the route must be or is
                    computed and implemented at the network level.
                    NR_YES indicates that the route must be / is
                    computed at the network. NR_NO indicates that the
                    route must not be / is not computed at the network.
                    NR_NA indicates that the route can be computed anywhere.</p>
        <p>If rerouting is allowed, this attribute will indicate
                    who last rerouted the SNC, the network (NR_YES) or
                    the EMS (NR_NO).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NR_NA"/>
      <xsd:enumeration value="NR_NO"/>
      <xsd:enumeration value="NR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Indicates if the reroute of an SNC (if allowed)
                    should be computed by the network, by the EMS, or if
                    it does not matter.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_SET"/>
      <xsd:enumeration value="NO"/>
      <xsd:enumeration value="YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="FreedomLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the NMS-specified EMS level of freedom when
                    performing SNC operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMSFL_CC_AT_SNC_LAYER"/>
      <xsd:enumeration value="EMSFL_TERMINATE_AND_MAP"/>
      <xsd:enumeration value="EMSFL_HIGHER_ORDER_SNCS"/>
      <xsd:enumeration value="EMSFL_RECONFIGURATION"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ModifyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute specifies the class of SNC
                    modification; i.e. rerouting or add/remove protection.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ADD_REMOVE_PROTECTION"/>
      <xsd:enumeration value="REROUTING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="PotentialFutureSetupIndicatorType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Refers to the aEnd and is used to convey the likely
                    future (or current) configuration of the SNC (see SD1-16_layeredParameters.pdf).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RSU_POINT_TO_POINT"/>
      <xsd:enumeration value="RSU_BROADCAST"/>
      <xsd:enumeration value="RSU_ANY_CONFIG"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProtectionEffortType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection effort is a statement of the
                    requirement of the static protection level. For
                    example if EFFORT_SAME_OR_WORSE is specified for a
                    3-ended FULLY_PROTECTED connection, a 3-ended
                    PARTIALLY_PROTECTED connection is acceptable, but a
                    2-ended connection (ST_SIMPLE) is not acceptable
                    i.e. ProtectionEffort does not have any bearing on
                    the externaly visible shape of the SNC.
                    EFFORT_WHATEVER indicates that the specified static
                    protection level is preferred, but that any other
                    level is acceptable.</p>
        <p>For a detailed description of the use of this
                    attribute see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EFFORT_WHATEVER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_BETTER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_WORSE"/>
      <xsd:enumeration value="EFFORT_SAME "/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionRole with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionRoleEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionRoleEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Protection role type.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="NA"/>
      <xsd:enumeration value="PRIMARY"/>
      <xsd:enumeration value="BACKUP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="RerouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The RerouteType type indicates if the EMS/MEs are
                    allowed and/or required to reroute this SNC if there
                    is a failure on this SNC, periodically to optimize
                    the routes, of for any other reason.It is an EMS/ME
                    implementation whether this is done using network
                    routing protocols or if the EMS/MEs detect the
                    failure and take appropriate action to attempt to
                    fix the SNC.</p>
        T
        <p>he RR_NO value means
                    that the EMS/MEs are not allowed to reroute the SNC.
                    The RR_YES value means that the EMS/MEs are allowed
                    to reroute the SNC and required to attempt to
                    reroute it upon failure. The RR_NA value is used
                    when the NMS does not want to specify the exact EMS
                    behaviour. In this case it is left up to the EMS to
                    decide whether rerouting will be provided. It is
                    also used if the EMS/MEs are allowed to reroute the
                    SNC but not required to attempt to reroute it upon failure.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RR_NA"/>
      <xsd:enumeration value="RR_NO"/>
      <xsd:enumeration value="RR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ResourceFulfillmentStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IN_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been put into operation and is
                            operating as provisioned (completely or partially).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity is entirely not capable of
                            performing its provisioned functions and is
                            not restricted by administrative actions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE_BY_MAINTENANCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been taken intentionally out
                            of service by a management action.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SERV_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>The service state is not applicable.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceFulfillmentStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This object attribute indicates basic administration
                    state of equipment and OS objects.       Also, this
                    object attribute accepts Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceFulfillmentStateEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNCState enum is used to represent the various
                    states that an SNC may take.</p>
        <p>The following states may be supported by the EMS,
                    depending on the SNC management mode of operation
                    used by the EMS. See SNC Management Modes Of
                    Operation for details.</p>
        <p>SNCS_PENDING: the SNC has been created by an NMS and
                    has not been activated by any NMS; or the SNC has
                    been successfully deactivated by an NMS. That state
                    has no relationship with the network state of the
                    cross- connects of the SNC. It is allowable for an
                    EMS to not support the SNCS_PENDING state and to
                    reject any operation that attempts to put an SNC
                    into SNCS_PENDING state.</p>
        <p>SNCS_ACTIVE: the SNC is not in pending state, a route
                    has been assigned to the SNC and all cross-connects
                    for the SNC are active in the network.</p>
        <p>SNCS_PARTIAL: the SNC is not in pending state, and
                    either a route has not been assigned to the SNC, or
                    not all of the cross-connects of the SNC are active
                    in the network. This may or may not include
                    activated SNCs for which there are currently no
                    active cross- connects in the network, depending on
                    the SNC management mode of operation.It is possible
                    that, in some EMSes, this state be unreachable.</p>
        <p>SNCS_NONEXISTENT: this is not an SNC state per se, as
                    it applies to "non-existent SNCs". It is
                    used in the interface to report SNCs that have been
                    deleted.</p>
        <p>See SNCState state diagram for details on valid transitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SNCS_NONEXISTENT"/>
      <xsd:enumeration value="SNCS_PENDING"/>
      <xsd:enumeration value="SNCS_ACTIVE"/>
      <xsd:enumeration value="SNCS_PARTIAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNC Type describes the connection based on the
                    signal flows.  For a detailed description of the use
                    of this attribute see SNC Types. In case of an ATM
                    SNC (VP or VC), ST_SIMPLE is used to specify a
                    'plain' (hard or regular) PVC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ST_SIMPLE"/>
      <xsd:enumeration value="ST_ADD_DROP_A"/>
      <xsd:enumeration value="ST_ADD_DROP_Z"/>
      <xsd:enumeration value="ST_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_ADD_DROP"/>
      <xsd:enumeration value="ST_OPEN_ADD_DROP"/>
      <xsd:enumeration value="ST_EXPLICIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SoftwareVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The OS product software version</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="StaticProtectionLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The StaticProtectionLevel with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:StaticProtectionLevelEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="StaticProtectionLevelEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The static protection level is a statement of the
                    internal resiliency of the SNC (internal to the
                    subnetwork). The more resilient an SNC is, the more
                    bandwidth it will consume.</p>
        <p>The protection level does not have any bearing on the
                    externally visible shape and traffic flows of the
                    SNC (in non-failure cases). For a detailed
                    description of the use of this attribute, see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="PREEMPTIBLE"/>
      <xsd:enumeration value="UNPROTECTED"/>
      <xsd:enumeration value="PARTIALLY_PROTECTED"/>
      <xsd:enumeration value="FULLY_PROTECTED"/>
      <xsd:enumeration value="HIGHLY_PROTECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationModeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Within the facade definition, the CTP/FTP can act as
                    an aggregate of associated G.805 TCPs, G.805
                    Termination Functions and G.805 CPs at one or more
                    LayerRates. The CTP is contained within a PTP or FTP.</p>
        <p>The TerminationMode attribute indicates and controls
                    the connection of the named CP at a specified
                    LayerRate to the dedicated G.805 TCP and associated
                    G.805 Termination Function at the same LayerRate
                    within the CTP/FTP.</p>
        <p>The TerminationMode is used, for example, to control
                    the Termination and mapping to VT1.5 of an STS1
                    Trail within an OC3 port. This capability could
                    potentially be used to terminate an STS1 backbone
                    Trail within a lower order mux that has the
                    capability to alternatively cross-connect the STS1
                    unterminated. The same capability is used in SDH and
                    is potentially applicable to any LayerRate.</p>
        <p>TerminationMode has the following values</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TM_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can not be mapped (i.e., it has
                            no contained potential CTPs). This indicates
                            that an SNC/crossconnect can be used to
                            connect the G.805 TCP of the CTP to the
                            connection point of another CTP/FTP. This
                            only applies to CTPs that connect on their
                            server side and are related to the
                            containing PTP/FTP on their client side.</p>
            <p>FTP: The FTP can not be mapped on the server
                            side (i.e., it has no contained potential
                            CTPs on the server side). This indicates
                            that an SNC/crossconnect can be used to
                            connect the G.805 TCP of the FTP to the
                            connection point of another CTP/FTP. This
                            only applies to FTPs that connect on their
                            server side and do not support IM (Inverse
                            Multiplexing).</p>
            <p>PTP: This is the only legal value for a PTP</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_NEITHER_TERMINATED_NOR_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped and currently is
                            (i.e., it has contained actual CTPs). This
                            indicates that the G.805 CPs adapted from
                            the corresponding G.805 Termination Function
                            within the CTP aggregate are available to
                            provide client layer capacity (e.g. STS1
                            terminated and mapped to VT1.5 i.e.
                            channelized). In this state the TCP will be
                            sourcing and sinking traffic. This is only a
                            valid value for CTPs that support client
                            adaptation.</p>
            <p>FTP: The FTP can be mapped on the server side
                            and currently is (i.e., it has contained
                            actual CTPs on the server side). This
                            indicates that the FTP supports IM (Inverse
                            Multiplexing) and the server side contained
                            CTPs (if any) are available for connection
                            as the FTP is actively assembling the
                            fragments of the IM. This value is not valid
                            for an FTP that does not support IM. (see
                            layering for more details).</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped but currently is
                            not (i.e., it does have contained potential
                            CTPs, but currently has no contained actual
                            CTPs). This indicates that the G.805 CP
                            aggregated in the CTP is not connected to a
                            TCP (that would be aggregated in the same
                            CTP) and therefore the CTP is available for
                            SNC/crossconnect connectivity (e.g. STS1 not
                            terminated and not mapped to VT1.5i.e. not
                            channelized).</p>
            <p>FTP: The FTP can be mapped on the server side
                            but currently is not (i.e., it does have
                            contained potential CTPs on the server side,
                            but currently has no contained actual CTPs
                            on the server side). This indicates that the
                            FTP supports IM (Inverse Multiplexing) but
                            the IM function is not active and the TCP
                            within the FTP is available for external
                            SNC/crossconnect connectivity.</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TransmissionDescriptorStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Contains the state of consistency between a TP and
                    its associated TransmissionDescriptor.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TMD_MISSING"/>
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="APPLIED"/>
      <xsd:enumeration value="MISMATCH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="TopologyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The Topology with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:TopologyEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="TopologyEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>TopologyType is used to describe the subnetwork
                    configuration. The EMS shall be capable of providing
                    a SubNetwork Connection through any physical
                    termination point of any managed element that
                    belongs to the Subnetwork.</p>
        <p>Composite subnetworks (i.e. containing other
                    Subnetworks) are not supported in this release of
                    the interface</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="TOPO_SINGLETON">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SINGLETON, which is used for a single NE
                            (of any type) that is managed independently
                            of its Topological Link connectivity to
                            other NEs. It may for example be a member of
                            a ring that is managed by a number of EMSes.
                            It is acceptable for an EMS to represent all
                            NEs as being in Singleton subnetworks
                            regardless of the actual network
                            configuration. A singleton subnetwork does
                            not contain internal topological links.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_CHAIN">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_CHAIN, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a chain.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_PSR, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a ring that is capable of
                            supporting subnetwork connection protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_PSR, which is used to cover the
                            case where two or more NEs of a PS ring (but
                            not the entire ring) are managed by the same EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SPRING, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a complete ring that supports
                            Shared Line Protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_SPRING, which is used to cover
                            cases where two or more NEs of an SP ring
                            (but not the entire ring) are managed by one EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_MESH">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_MESH, which is used to cover an
                            arbitrary set of two or more NEs not covered
                            by any other type.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A CTP/FTP may be involved in zero, one, or many
                    connections. The value TPConnectionState indicates
                    the degree to which a CTP/FTP is used. The values
                    TPCS_SOURCE_CONNECTED and TPCS_SINK_CONNECTED
                    reflect the presence of a one way connection. The
                    value TPCS_BI_CONNECTED means that the TP is both
                    sink and source connected.</p>
        <p>If an EMS cannot report whether the source of the TP
                    is connected or the sink is connected,
                    TPCS_BI_CONNECTED may be reported by that EMS.</p>
        <p>The value TPCS_NA is used for PTPs and TPPools.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPCS_NA"/>
      <xsd:enumeration value="TPCS_SOURCE_CONNECTED"/>
      <xsd:enumeration value="TPCS_SINK_CONNECTED"/>
      <xsd:enumeration value="TPCS_BI_CONNECTED"/>
      <xsd:enumeration value="TPCS_NOT_CONNECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointProtectionAssociationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>tpProtectionAssociation expresses constraints on
                    PTPs/CTPs/FTPs for PSR connection management.</p>
        <p>In a multi-layer subnetwork, say 'a', 'b', 'c' are
                    edge points. Suppose, for example, a three-ended
                    connection is sought from 'a' to 'b', where 'b' is
                    one of the endpoints. If 'c' is the constrained
                    choice for 'b' as the other end of the three- ended
                    connection,then 'b' and 'c' are said to be
                    associated by a ] protectionAssociation. The
                    tpProtectionAssociation is set to TPPA_PSR_RELATED
                    in 'b' and 'c', and getAssociatedTP(b) returns c and
                    getAssociatedTP(c) returns b.</p>
        <p>In all other cases, tpProtectionAssociation is set to TPPA_NA.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPPA_NA"/>
      <xsd:enumeration value="TPPA_PSR_RELATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:simpleType name="TerminationPointRole">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the enumeration of all possible end point
                    roles of a TP of an SNC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CM_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a connection matrix (CM) end point the
                            span of the SNC starts at a G.805 CP with a
                            fixed or flexible connection through the ME
                            at the SNC layer, i.e. the connectable layer
                            of the end point.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="LC_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a link connection (LC) end point
                            connectivity is adapted from a server layer
                            and the span of the SNC starts with a G.805
                            TCP with mapping mode set to TM_TERMINATED_ AND_AVAILABLE_FOR_MAPPING.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of EndPointRoles.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="role" type="tns:EndPointRoleType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type indicates the end point role of an end
                    TP. See R_TMF518_NRF_I_0026.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="role" type="tns:TerminationPointRole">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the role of the end
                            TP specified by the tpIndex.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tpIndex" type="xsd:unsignedInt">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the index of the end
                            TP within the end list.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="VersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The active software version of the ManagedElement</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=21</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/tp/v1" version="1.0" xmlns:ctp="http://www.tmforum.org/mtop/nrf/xsd/ctp/v1" xmlns:ftp="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" xmlns:ptp="http://www.tmforum.org/mtop/nrf/xsd/ptp/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/tp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP TP XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/ptp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=19"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=8"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/ctp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=7"/>
  <!--=================-->
  <xsd:complexType name="TerminationPointType">
    <xsd:sequence>
      <xsd:choice>
        <xsd:annotation>
          <xsd:documentation>
            <p>A union containment of all forms of
                            TerminationPoints (PTP, FTP, and CTP).</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:element ref="ptp:ptp"/>
        <xsd:element ref="ftp:ftp"/>
        <xsd:element ref="ctp:ctp"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A heterogeneous list of TerminationPoints (PTPs,
                    FTPs, and CTPs) with no particular order.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="tp" type="tns:TerminationPointType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=19</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/ptp/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/ptp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PTP XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=18"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=5"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=12"/>
  <!--=================-->
  <xsd:element name="ptp" type="tns:PhysicalTerminationPointType"/>
  <!--=================-->
  <xsd:complexType name="PhysicalTerminationPointType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the PhysicalTerminationPoint
                    mTOP network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="direction" nillable="true" type="com:DirectionalityType"/>
          <xsd:element minOccurs="0" name="tpProtectionAssociation" nillable="true" type="com:TerminationPointProtectionAssociationType"/>
          <xsd:element minOccurs="0" name="isEdgePoint" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the TP is an edge point
                                    of at least one subnetwork, i.e. if
                                    it is an end point of a potential
                                    inter-subnetwork topological link.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isEquipmentProtected" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The attribute indicates whether or
                                    not the TP is supported by a
                                    protected equipment.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    egress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ingressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    eingress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ingressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Physical Termination
                                    Point may have an optional reference
                                    to an ingress (incoming)
                                    Transmission Descriptor. The
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Ingress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Egress Descriptor name should either
                                    be that of a Transmission Descriptor
                                    or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Physical Termination
                                    Point may have an optional reference
                                    to an egress (outgoing) Transmission
                                    Descriptor. The Transmission
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Egress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Ingress Descriptor name should
                                    either be that of a Transmission
                                    Descriptor or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of transmission parameters
                                    which can be set and/or retrieved on
                                    the TP at a specified layer. This
                                    attribute must contain the complete
                                    set of layer rates represented by a
                                    PTP - even if they have no
                                    parameters associated with them. The
                                    layerRates are listed in the order
                                    of their client-server relationship
                                    (see layering for more details).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this TP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="PhysicalTerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PhysicalTerminationPoints.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:ptp"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=5</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" version="1.0" xmlns:coi="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:itu="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP XML CommonResourceInfo structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=13"/>
  <!--=================-->
  <xsd:element name="commonResourceInfo" substitutionGroup="coi:commonObjectInfo" type="tns:CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition for common resource info</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines attributes common to all mTOP
                    resource objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="coi:CommonObjectInfoType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="source" nillable="true" type="tns:SourceType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the object was
                                    discovered or entered in OS inventory.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="networkAccessDomain" nillable="true" type="gen:NetworkAccessDomainType"/>
          <xsd:element minOccurs="0" name="meiAttributes" nillable="true" type="gen:MultiEventInventoryAttributesType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is used when a object
                                    instance is embedded in the
                                    inventory      layout payload of a
                                    Multi-Event Inventory (MEI)
                                    notification. It provides the
                                    time at which the NE detected the
                                    inventory change (if available) and
                                    an indication      of the type of
                                    inventory update, e.g., Object Creation.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="resourceState" nillable="true" type="tns:ResourceStateType"/>
          <xsd:element name="ituStateAndStatusList" type="itu:ItuStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates whether the object was discovered from the
                    network, or was entered into the OS's inventory.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:SourceEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SourceEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NETWORK_ME">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered directly from the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was entered into an OS on the CCV,
                            e.g., OS GUI or file transfer to the OS from
                            some other system.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NETWORK_EMS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered from an EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates the state of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceStateEnumType">
        <xsd:attribute name="overlap" type="xsd:string" use="optional"/>
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ResourceStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="INSTALLING"/>
      <xsd:enumeration value="INSTALLING_ACCEPTED"/>
      <xsd:enumeration value="INSTALLING_COMMISSIONED"/>
      <xsd:enumeration value="INSTALLING_DELIVERED"/>
      <xsd:enumeration value="INSTALLING_INSTALLED"/>
      <xsd:enumeration value="INSTALLING_INTEGRATED"/>
      <xsd:enumeration value="INSTALLING_REJECTED"/>
      <xsd:enumeration value="NON_WORKING"/>
      <xsd:enumeration value="PLANNING"/>
      <xsd:enumeration value="PLANNING_INITIAL_PLAN"/>
      <xsd:enumeration value="PLANNING_ORDERED"/>
      <xsd:enumeration value="PLANNING_PLANNED"/>
      <xsd:enumeration value="RETIRING"/>
      <xsd:enumeration value="RETIRING_DECOMMISSIONED"/>
      <xsd:enumeration value="RETIRING_DEINSTALLED"/>
      <xsd:enumeration value="RETIRING_DEINTEGRATED"/>
      <xsd:enumeration value="RETIRING_RECOVERED"/>
      <xsd:enumeration value="RETIRING_STORED"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_ACTIVE"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_UNAVAILABLE"/>
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="WORKING"/>
      <xsd:enumeration value="WORKING_ACTIVATED"/>
      <xsd:enumeration value="WORKING_DEACTIVATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ObjectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the enumeration of all the known object type
                    short names related to resources (at the time of
                    this module definition). It is only provided as an
                    implementation helper. For details of all object
                    types and their naming refer to SD2-7 ObjectNaming
                    (FMW DDP).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AID">
        <xsd:annotation>
          <xsd:documentation>Alarm IDentifier (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASA">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASAP">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment Profile (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CTP">
        <xsd:annotation>
          <xsd:documentation>Connection Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EH">
        <xsd:annotation>
          <xsd:documentation>Equipment Holder (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EPG">
        <xsd:annotation>
          <xsd:documentation>Equipment Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EQ">
        <xsd:annotation>
          <xsd:documentation>Equipment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FD">
        <xsd:annotation>
          <xsd:documentation>Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FDFR">
        <xsd:annotation>
          <xsd:documentation>Flow Domain Fragment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FTP">
        <xsd:annotation>
          <xsd:documentation>Flow Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GTP">
        <xsd:annotation>
          <xsd:documentation>Group Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MD">
        <xsd:annotation>
          <xsd:documentation>Management Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ME">
        <xsd:annotation>
          <xsd:documentation>Managed Element (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MFD">
        <xsd:annotation>
          <xsd:documentation>Matrix Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MLSN">
        <xsd:annotation>
          <xsd:documentation>Multi Layer Subnetwork (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>Operations System (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PG">
        <xsd:annotation>
          <xsd:documentation>Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PMP">
        <xsd:annotation>
          <xsd:documentation>Performance Monitoring Point (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PTP">
        <xsd:annotation>
          <xsd:documentation>Physical Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SNC">
        <xsd:annotation>
          <xsd:documentation>Subnetwork Connection (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCPROFILE">
        <xsd:annotation>
          <xsd:documentation>Traffic Condifitioning Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCAPP">
        <xsd:annotation>
          <xsd:documentation>Threshold Crossing Alert
                        Parameter Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TL">
        <xsd:annotation>
          <xsd:documentation>Topological Link (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TMD">
        <xsd:annotation>
          <xsd:documentation>Transmission Descriptor (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TPPOOL">
        <xsd:annotation>
          <xsd:documentation>Termination Point Pool (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common object information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=18"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9"/>
  <!--==============-->
  <xsd:element name="commonObjectInfo" type="tns:CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute represents a unique
                            name/identifier for the object on the CCV.
                            Consult the SD2-7 about object naming for
                            additional normative references.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="userLabel" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="discoveredName" type="gen:DiscoveredNameType"/>
      <xsd:element minOccurs="0" name="namingOs" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the object attribute definition to
                            identify the name of the OS that provided
                            the unique MTOSI name for the object. It is
                            assumed that each object (that is published
                            on the CCV) has a unique naming OS. This
                            attribute is optional in a point to point
                            NMS-EMS paradigm.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="owner" nillable="true" type="gen:OwnerType"/>
      <xsd:element minOccurs="0" name="aliasNameList" nillable="true" type="gen:AliasNameListType"/>
      <xsd:element minOccurs="0" name="vendorExtensions" nillable="true" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=13</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T state or status
                parameters supported in mTOP</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="x721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="x721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="x721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="x721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="x721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="m3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="m3100.CircuitPackType" type="tns:M3100.CircuitPackTypeType"/>
      <xsd:element minOccurs="0" name="x721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:element minOccurs="0" name="x721.State" type="tns:X721.StateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="X721.OperationalStateType">
    <xsd:annotation>
      <xsd:documentation>Oper[ational] State parameter from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DISABLED"/>
      <xsd:enumeration value="UNABLED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AdministrativeStateType">
    <xsd:annotation>
      <xsd:documentation>Admin[istrative] State parameter from
                ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="LOCKED"/>
      <xsd:enumeration value="UNLOCKED"/>
      <xsd:enumeration value="SHUTTING_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UsageStateType">
    <xsd:annotation>
      <xsd:documentation>Usage State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IDLE"/>
      <xsd:enumeration value="ACTIVE"/>
      <xsd:enumeration value="BUSY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AvailabilityStatusType">
    <xsd:annotation>
      <xsd:documentation>Avail[ability] Status based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="INTypeEST"/>
      <xsd:enumeration value="FAILED"/>
      <xsd:enumeration value="POWER_OFF"/>
      <xsd:enumeration value="OFF_LINE"/>
      <xsd:enumeration value="OFF_DUTY"/>
      <xsd:enumeration value="DEPENDENCY"/>
      <xsd:enumeration value="DEGRADED"/>
      <xsd:enumeration value="NOT_INSTALLED"/>
      <xsd:enumeration value="LOG_FULL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.ControlStatusType">
    <xsd:annotation>
      <xsd:documentation>Control Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="SUBJECTTypeOTypeEST"/>
      <xsd:enumeration value="PART_OF_SERVICES_LOCKED"/>
      <xsd:enumeration value="RESERVED_FORTypeEST"/>
      <xsd:enumeration value="SUSPENDED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.HolderStatusType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HOLDER_EMPTY"/>
      <xsd:enumeration value="INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="NOT_INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="UNKNOWNTypeYPE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.CircuitPackTypeType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UnkownstatusType">
    <xsd:annotation>
      <xsd:documentation>Unknown Status parameter based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="X721.StateType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="X721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="X721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="X721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="X721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="X721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="M3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="X721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=12</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported Alarm ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuArcStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T Alarm Reporting
                Control (ARC) state or status parameters supported in
                mTOP;    Each element of the list identifies a state or
                status and provides its relevant value.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="m3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="m3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="m3100.NALMTIInterval" type="tns:M3100.NALMTIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.NALMQIInterval" type="tns:M3100.NALMQIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
      <xsd:element minOccurs="0" name="m3100.State" type="tns:M3100.ArcStateListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="M3100.AlarmStatusType">
    <xsd:annotation>
      <xsd:documentation>Alarm Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CLEARED"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="CRITICAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcStateType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ALM"/>
      <xsd:enumeration value="NALM"/>
      <xsd:enumeration value="NALMTypeIMED_INHIBIT"/>
      <xsd:enumeration value="NALM_QUALIFIED_INHIBIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMTIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMQIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcQIStatusType">
    <xsd:annotation>
      <xsd:documentation>ARC QI Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="NALM_NOT_READY"/>
      <xsd:enumeration value="NALM_COUNT_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="M3100.ArcStateListType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="M3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="M3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="M3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=8</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP FTP XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=18"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=5"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=12"/>
  <!--=================-->
  <xsd:element name="ftp" type="tns:FloatingTerminationPointType"/>
  <!--=================-->
  <xsd:complexType name="FloatingTerminationPointType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the FloatingTerminationPoint
                    mTOP network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="direction" nillable="true" type="com:DirectionalityType"/>
          <xsd:element minOccurs="0" name="tpProtectionAssociation" nillable="true" type="com:TerminationPointProtectionAssociationType"/>
          <xsd:element minOccurs="0" name="isEdgePoint" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the TP is an edge point
                                    of at least one subnetwork, i.e. if
                                    it is an end point of a potential
                                    inter-subnetwork topological link.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isEquipmentProtected" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The attribute indicates whether or
                                    not the TP is supported by a
                                    protected equipment.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    egress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ingressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    eingress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionState" nillable="true" type="com:TerminationPointConnectionStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is only applicable to
                                    CTPs and FTPs. If the source is
                                    connected to one entity and the sink
                                    is connected to another entity then
                                    the value of this attribute is TPCS_BI_CONNECTED.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="tpMappingMode" nillable="true" type="com:TerminationModeType"/>
          <xsd:element minOccurs="0" name="ingressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Floating Termination
                                    Point may have an optional reference
                                    to an ingress (incoming)
                                    Transmission Descriptor. The
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Ingress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Egress Descriptor name should either
                                    be that of a Transmission Descriptor
                                    or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Floating Termination
                                    Point may have an optional reference
                                    to an egress (outgoing) Transmission
                                    Descriptor. The Transmission
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Egress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Ingress Descriptor name should
                                    either be that of a Transmission
                                    Descriptor or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of transmission parameters
                                    which can be set and/or retrieved on
                                    the TP at a specified layer. This
                                    attribute must contain the complete
                                    set of layer rates represented by a
                                    FTP - even if they have no
                                    parameters associated with them. The
                                    layerRates are listed in the order
                                    of their client-server relationship
                                    (see layering for more details).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this TP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="FloatingTerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of FloatinglTerminationPoints.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:ftp"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=7</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/ctp/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/ctp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP CTP XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=18"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=5"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=12"/>
  <!--=================-->
  <xsd:element name="ctp" type="tns:ConnectionTerminationPointType"/>
  <!--=================-->
  <xsd:complexType name="ConnectionTerminationPointType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the ConnectionTerminationPoint
                    mTOP network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="direction" nillable="true" type="com:DirectionalityType"/>
          <xsd:element minOccurs="0" name="tpProtectionAssociation" nillable="true" type="com:TerminationPointProtectionAssociationType"/>
          <xsd:element minOccurs="0" name="isEdgePoint" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates if the TP is an edge point
                                    of at least one subnetwork, i.e. if
                                    it is an end point of a potential
                                    inter-subnetwork topological link.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="isEquipmentProtected" nillable="true" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                <p>The attribute indicates whether or
                                    not the TP is supported by a
                                    protected equipment.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    egress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ingressTmdState" nillable="true" type="com:TransmissionDescriptorStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Contains the state of consistency
                                    between a TP and its associated
                                    eingress TransmissionDescriptor.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionState" nillable="true" type="com:TerminationPointConnectionStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is only applicable to
                                    CTPs and FTPs. If the source is
                                    connected to one entity and the sink
                                    is connected to another entity then
                                    the value of this attribute is TPCS_BI_CONNECTED.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="tpMappingMode" nillable="true" type="com:TerminationModeType"/>
          <xsd:element minOccurs="0" name="ingressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Connection Termination
                                    Point may have an optional reference
                                    to an ingress (incoming)
                                    Transmission Descriptor. The
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Ingress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Egress Descriptor name should either
                                    be that of a Transmission Descriptor
                                    or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="egressTmdRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>A connection Connection Termination
                                    Point may have an optional reference
                                    to an egress (outgoing) Transmission
                                    Descriptor. The Transmission
                                    Descriptor name will be empty if
                                    there is no associated Descriptor.
                                    It is expected that Transmission
                                    Descriptors are not mixed on a
                                    single TP. Therefore if the Egress
                                    Descriptor name is that of a
                                    Transmission Descriptor then the
                                    Ingress Descriptor name should
                                    either be that of a Transmission
                                    Descriptor or a null value.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of transmission parameters
                                    which can be set and/or retrieved on
                                    the TP at a specified layer. This
                                    attribute must contain the complete
                                    set of layer rates represented by a
                                    CTP - even if they have no
                                    parameters associated with them. The
                                    layerRates are listed in the order
                                    of their client-server relationship
                                    (see layering for more details).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this TP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="ConnectionTerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of ConnectionTerminationPoints.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:ctp"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=10</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP GTP XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=18"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=5"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=12"/>
  <!--=================-->
  <xsd:element name="gtp" type="tns:GroupTerminationPointType"/>
  <!--=================-->
  <xsd:complexType name="GroupTerminationPointType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Group TerminationPoint
                    mTOP network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="isReportingAlarms" nillable="true" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="containedTpRefList" nillable="true" type="nam:NamingAttributeListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute represents an ordered
                                    list of contained CTP names.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="connectionState" nillable="true" type="com:TerminationPointConnectionStateType"/>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this GTP object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="GroupTerminationPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of GTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:gtp"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=17</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/mlsn/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/mlsn/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP MLSN XML structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=14"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=5"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=12"/>
  <!--=================-->
  <xsd:element name="mlsn" type="tns:MultiLayerSubnetworkType"/>
  <!--=================-->
  <xsd:complexType name="MultiLayerSubnetworkType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Manage Domain mTOP network
                    resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="subnetworkType" nillable="true" type="com:TopologyType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The subnetworkType gives a coarse
                                    view of the topology of the
                                    subnetwork. It is a readonly attribute.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="supportedRateList" nillable="true" type="lay:LayerRateListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is a list (possibly
                                    empty) of potential Cross Connection
                                    Rates at which it is possible to
                                    make SNCs within the subnetwork. It
                                    is a readonly attribute.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="MultiLayerSubnetworkListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of MultiLayerSubnetworks</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:mlsn"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=23</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" version="1.0" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Fulfillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML TpPool structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=5"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=15"/>
  <!--=================-->
  <xsd:element name="tpPool" type="tns:TerminationPointPoolType"/>
  <!--=================-->
  <xsd:complexType name="TerminationPointPoolType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the TP Pool mTOP network
                    resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="numberOfMembers" nillable="true" type="tns:NumberOfMembersType"/>
          <xsd:element minOccurs="0" name="numberOfIdleMembers" nillable="true" type="tns:NumberOfIdleMembersType"/>
          <xsd:element minOccurs="0" name="descriptionOfUse" nillable="true" type="tns:DescriptionOfUseType"/>
          <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
            <xsd:annotation>
              <xsd:documentation>
                <p>A list of transmission parameters
                                    which can be set and/or retrieved on
                                    the TP at a specified layer. This
                                    attribute must contain the complete
                                    set of layer rates represented by a
                                    TPPool - even if they have no
                                    parameters associated with them. The
                                    layerRates are listed in the order
                                    of their client-server relationship
                                    (see layering for more details).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="containedMemberList" nillable="true">
            <xsd:annotation>
              <xsd:documentation>
                <p>Refers to the indexed members list of
                                    the TPPool.  It is only used within
                                    AVC notifications.  Use
                                    getTerminationPointGroupingRelationships()
                                    with tpName = TPPool to read the
                                    names of the TPPool members.  Use
                                    getTerminationPointGroupingRelationships()
                                    with tpName = PTP/CTP/FTP/GTP to
                                    read the TPPool the TP or GTP is a
                                    member of.  For full name
                                    qualification consider use of the
                                    two attributes;
                                    MemberContainingMeList and MemberContainingTpList.</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" name="containedMember" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>
                      <p>value of TP or GTP (RDN)
                                    name component of TP or
                                    GTP name.</p>
                    </xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="memberContainingMeList" nillable="true">
            <xsd:annotation>
              <xsd:documentation>
                <p>Refers to the indexed list of members
                                    of the TPPool (i.e., a TP or a GTP).
                                    It is only used within AVC
                                    notifications.  Use
                                    getTerminationPointGroupingRelationships()
                                    with tpName = TPPool to read the
                                    names of the TPPool members.</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" name="memberContainingMe" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>
                      <p>value of ME (RDN) name
                                    component of ME name.</p>
                    </xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="memberContainingTpList" nillable="true">
            <xsd:annotation>
              <xsd:documentation>
                <p>Refers to the indexed list member of
                                    the TPPool when this is a CTP.  It
                                    is only used within AVC
                                    notifications.  Use
                                    getTerminationPointGroupingRelationships()
                                    with tpName = TPPool to read the
                                    names of the TPPool members.</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" name="memberContainingTp" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>
                      <p>value of PTP/FTP (RDN)
                                    name component of
                                    PTP/FTP name.</p>
                    </xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TerminationPointPoolListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of TPPools</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:tpPool"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="DescriptionOfUseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A description of the specific use of the TP pool, in
                    particular how its members are collected and
                    administered. It could include, for example, the
                    name of a TP (e.g., an ATM NI CTP) such that all TP
                    pool members have to be collected from the set of
                    potential client CTPs of this TP. The description of
                    use of an ATM VP TP pool would be
                    "VirtualUNI", if all its VP CTPs are
                    contained in the same real user network interface
                    (UNI) (i.e., a tributary ATM NI CTP) that is
                    partitioned into virtual UNIs (i.e., VP TP pools).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NumberOfIdleMembersType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Identifies the number of currently contained idle TPs
                    that are free to be used for the intended management purpose.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedInt"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NumberOfMembersType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Identifies the total number of TPs currently
                    contained in the TPPool.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedInt"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=22</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Fulfillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML TpData structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=18"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=15"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=6"/>
  <!--=================-->
  <xsd:complexType name="TerminationPointDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines a set of attributes associated
                    with a TP.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="tpRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Specifies a termination point.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tpMappingMode" nillable="true" type="com:TerminationModeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The mapping mode to put the TP in.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" ref="lp:transmissionParametersList">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute contains the layered
                            Transmission Parameters associated with the
                            Termination Point.             Refer to the
                            attached supporting document
                            SD1-16_LayeredParameters for details of the
                            currently defined Transmission Parameters.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ingressTmdRef" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>A connection termination point may have an
                            optional reference to an ingress
                            (incoming)Transmission Descriptor. The
                            Descriptor name will be empty if there is no
                            associated Descriptor.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="egressTmdRef" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>A connection termination point may have an
                            optional reference to an egress
                            (outgoing)Transmission Descriptor. The
                            Transmission Descriptor name will be empty
                            if there is no associated Descriptor.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="TerminationPointDataListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of TerminationPointDataType elements.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="tpData" type="tns:TerminationPointDataType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=4</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" version="1.0" xmlns:cocd="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: ResourceProvisioning</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the common resource attributes that
                can be set at the time of the object creation.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=1"/>
  <!--==============-->
  <xsd:element name="commonResourceCreateData" type="tns:CommonResourceCreateDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of all common resource
                    attributes that can be set at the time of the object creation.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonResourceCreateDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common resource attributes that
                    can be set at the time of the object creation.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cocd:CommonObjectCreateDataType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="networkAccessDomain" nillable="true" type="gen:NetworkAccessDomainType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The value to be set to the
                                    networkAccessDomain attribute at
                                    creation of an object.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" version="1.0" xmlns:cosd="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the common object attributes that can
                be set at the time of the object creation.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=18"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=3"/>
  <!--==============-->
  <xsd:element name="commonObjectCreateData" type="tns:CommonObjectCreateDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of all common object
                    attributes that can be set at the time of the object creation.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonObjectCreateDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes that
                    can be set at the time of the object creation.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cosd:CommonObjectSetDataType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="name" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The value to be set to the name
                                    attribute at creation of an object.
                                    This attribute represents a unique
                                    name/identifier for the object on
                                    the CCV. Consult the SD about object
                                    naming for additional normative references.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=3</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the common object attributes that can
                set by Client OS (at creation of the object or modified after).</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rp/TerminationPointControl/TerminationPointControlHttp?xsd=9"/>
  <!--==============-->
  <xsd:element name="commonObjectSetData" type="tns:CommonObjectSetDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition of all common object
                    attributes that that set by Client OS (at creation
                    of the object or modified after).</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonObjectSetDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes that
                    can be set by Client OS (at creation of the object
                    or modified after).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="userLabel" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>Value to be set to the userLabel attribute of
                            an object. The userLabel is owned by the
                            NMSes. It is a string assigned by an NMS to
                            an object. The difference between the
                            userLabel and the NamingAttributes name is
                            that the userLabel is an attribute of the
                            objects that may be "set" by the
                            NMS through well defined interfaces (setUserLabel).</p>
            <p>When an object is created by an NMS, the NMS
                            specifies the userLabel for the object.</p>
            <p>When an object is created by the EMS, the EMS
                            sets the userLabel to the nativeEMSName.</p>
            <p>Once an object is created, the userLabel may
                            only be changed by an NMS through the
                            setUserLabel operation.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="isForceUniqueness" nillable="true" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
            <p>Specifies whether or not userLabel should be
                            checked for uniqueness amongst objects of
                            the same class within the EMS. If true, then
                            the operation will fail if userLabel is
                            already in use</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="owner" nillable="true" type="gen:OwnerType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Value to be set to the owner attribute of an object.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="aliasNameList" nillable="true" type="gen:AliasNameListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Multiple alias names with values to be set to
                            the aliasNameList attribute of an object.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" nillable="true" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the containment for all vendor
                            extensions to be set as vendorExtension of
                            the given object.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint></con:endpoints><con:operation isOneWay="false" action="createFloatingTerminationPoint" name="createFloatingTerminationPoint" bindingOperationName="createFloatingTerminationPoint" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v16="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:v17="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v18="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:createFloatingTerminationPointRequest>
         <!--Optional:-->
         <v11:createData>
            <!--Optional:-->
            <v12:userLabel>?</v12:userLabel>
            <!--Optional:-->
            <v12:isForceUniqueness>?</v12:isForceUniqueness>
            <!--Optional:-->
            <v12:owner>?</v12:owner>
            <!--Optional:-->
            <v12:aliasNameList>
               <!--Zero or more repetitions:-->
               <v13:alias>
                  <v13:aliasName>?</v13:aliasName>
                  <v13:aliasValue>?</v13:aliasValue>
               </v13:alias>
            </v12:aliasNameList>
            <!--Optional:-->
            <v12:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v12:vendorExtensions>
            <!--Optional:-->
            <v14:name>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v14:name>
            <!--Optional:-->
            <v16:networkAccessDomain>?</v16:networkAccessDomain>
            <!--Optional:-->
            <v11:equipmentRef>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v11:equipmentRef>
            <!--Optional:-->
            <v11:ingressTmdRef>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v11:ingressTmdRef>
            <!--Optional:-->
            <v11:egressTmdRef>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v11:egressTmdRef>
            <!--Optional:-->
            <v11:tpMappingMode>?</v11:tpMappingMode>
            <!--Optional:-->
            <v11:direction>?</v11:direction>
            <!--Optional:-->
            <v17:transmissionParametersList>
               <!--Zero or more repetitions:-->
               <v17:transmissionParameters>
                  <!--Optional:-->
                  <v17:layerRate extension="?">?</v17:layerRate>
                  <!--Optional:-->
                  <v17:parameterList>
                     <!--Zero or more repetitions:-->
                     <v13:nvs>
                        <v13:name>?</v13:name>
                        <v13:value>?</v13:value>
                     </v13:nvs>
                  </v17:parameterList>
                  <!--Optional:-->
                  <v17:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v17:vendorExtensions>
               </v17:transmissionParameters>
            </v17:transmissionParametersList>
         </v11:createData>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v18:tpData>
               <v18:tpRef>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v18:tpRef>
               <!--Optional:-->
               <v18:tpMappingMode>?</v18:tpMappingMode>
               <!--Optional:-->
               <v17:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v17:transmissionParameters>
                     <!--Optional:-->
                     <v17:layerRate extension="?">?</v17:layerRate>
                     <!--Optional:-->
                     <v17:parameterList>
                        <!--Zero or more repetitions:-->
                        <v13:nvs>
                           <v13:name>?</v13:name>
                           <v13:value>?</v13:value>
                        </v13:nvs>
                     </v17:parameterList>
                     <!--Optional:-->
                     <v17:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v17:vendorExtensions>
                  </v17:transmissionParameters>
               </v17:transmissionParametersList>
               <!--Optional:-->
               <v18:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v18:ingressTmdRef>
               <!--Optional:-->
               <v18:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v18:egressTmdRef>
            </v18:tpData>
         </v11:tpDataListToModify>
      </v11:createFloatingTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="createFloatingTerminationPoint"/></con:call></con:operation><con:operation isOneWay="false" action="createGroupTerminationPoint" name="createGroupTerminationPoint" bindingOperationName="createGroupTerminationPoint" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v16="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:createGroupTerminationPointRequest>
         <!--Optional:-->
         <v11:createData>
            <!--Optional:-->
            <v12:userLabel>?</v12:userLabel>
            <!--Optional:-->
            <v12:isForceUniqueness>?</v12:isForceUniqueness>
            <!--Optional:-->
            <v12:owner>?</v12:owner>
            <!--Optional:-->
            <v12:aliasNameList>
               <!--Zero or more repetitions:-->
               <v13:alias>
                  <v13:aliasName>?</v13:aliasName>
                  <v13:aliasValue>?</v13:aliasValue>
               </v13:alias>
            </v12:aliasNameList>
            <!--Optional:-->
            <v12:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v12:vendorExtensions>
            <!--Optional:-->
            <v14:name>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v14:name>
            <!--Optional:-->
            <v16:networkAccessDomain>?</v16:networkAccessDomain>
            <!--Optional:-->
            <v11:containingMeRef>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v11:containingMeRef>
            <!--Optional:-->
            <v11:tpRefList>
               <!--Zero or more repetitions:-->
               <v15:name>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v15:name>
            </v11:tpRefList>
            <!--Optional:-->
            <v11:initialCtpRef>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v11:initialCtpRef>
            <!--Optional:-->
            <v11:numberOfCtp>?</v11:numberOfCtp>
            <!--Optional:-->
            <v11:gtpEffort>?</v11:gtpEffort>
            <!--Optional:-->
            <v11:isReportingAlarms>?</v11:isReportingAlarms>
            <!--Optional:-->
            <v11:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v11:vendorExtensions>
         </v11:createData>
      </v11:createGroupTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="createGroupTerminationPoint"/></con:call></con:operation><con:operation isOneWay="false" action="createTerminationPointPool" name="createTerminationPointPool" bindingOperationName="createTerminationPointPool" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v16="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:v17="http://www.tmforum.org/mtop/nrb/xsd/lp/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:createTerminationPointPoolRequest>
         <!--Optional:-->
         <v11:createData>
            <!--Optional:-->
            <v12:userLabel>?</v12:userLabel>
            <!--Optional:-->
            <v12:isForceUniqueness>?</v12:isForceUniqueness>
            <!--Optional:-->
            <v12:owner>?</v12:owner>
            <!--Optional:-->
            <v12:aliasNameList>
               <!--Zero or more repetitions:-->
               <v13:alias>
                  <v13:aliasName>?</v13:aliasName>
                  <v13:aliasValue>?</v13:aliasValue>
               </v13:alias>
            </v12:aliasNameList>
            <!--Optional:-->
            <v12:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v12:vendorExtensions>
            <!--Optional:-->
            <v14:name>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v14:name>
            <!--Optional:-->
            <v16:networkAccessDomain>?</v16:networkAccessDomain>
            <!--Optional:-->
            <v11:userLabel>?</v11:userLabel>
            <!--Optional:-->
            <v11:forceUniqueness>?</v11:forceUniqueness>
            <!--Optional:-->
            <v11:owner>?</v11:owner>
            <!--Optional:-->
            <v11:containingMlsnRef>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v11:containingMlsnRef>
            <!--Optional:-->
            <v11:containedMembersRefList>
               <!--Zero or more repetitions:-->
               <v15:name>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v15:name>
            </v11:containedMembersRefList>
            <!--Optional:-->
            <v17:transmissionParametersList>
               <!--Zero or more repetitions:-->
               <v17:transmissionParameters>
                  <!--Optional:-->
                  <v17:layerRate extension="?">?</v17:layerRate>
                  <!--Optional:-->
                  <v17:parameterList>
                     <!--Zero or more repetitions:-->
                     <v13:nvs>
                        <v13:name>?</v13:name>
                        <v13:value>?</v13:value>
                     </v13:nvs>
                  </v17:parameterList>
                  <!--Optional:-->
                  <v17:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v17:vendorExtensions>
               </v17:transmissionParameters>
            </v17:transmissionParametersList>
            <!--Optional:-->
            <v11:descriptionOfUse>?</v11:descriptionOfUse>
            <!--Optional:-->
            <v11:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v11:vendorExtensions>
         </v11:createData>
      </v11:createTerminationPointPoolRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="createTerminationPointPool"/></con:call></con:operation><con:operation isOneWay="false" action="deleteFloatingTerminationPoint" name="deleteFloatingTerminationPoint" bindingOperationName="deleteFloatingTerminationPoint" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:deleteFloatingTerminationPointRequest>
         <!--Optional:-->
         <v11:ftpName>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:ftpName>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v13:tpData>
               <v13:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:tpRef>
               <!--Optional:-->
               <v13:tpMappingMode>?</v13:tpMappingMode>
               <!--Optional:-->
               <v14:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v14:transmissionParameters>
                     <!--Optional:-->
                     <v14:layerRate extension="?">?</v14:layerRate>
                     <!--Optional:-->
                     <v14:parameterList>
                        <!--Zero or more repetitions:-->
                        <v15:nvs>
                           <v15:name>?</v15:name>
                           <v15:value>?</v15:value>
                        </v15:nvs>
                     </v14:parameterList>
                     <!--Optional:-->
                     <v14:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v14:vendorExtensions>
                  </v14:transmissionParameters>
               </v14:transmissionParametersList>
               <!--Optional:-->
               <v13:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:ingressTmdRef>
               <!--Optional:-->
               <v13:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:egressTmdRef>
            </v13:tpData>
         </v11:tpDataListToModify>
      </v11:deleteFloatingTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="deleteFloatingTerminationPoint"/></con:call></con:operation><con:operation isOneWay="false" action="deleteGroupTerminationPoint" name="deleteGroupTerminationPoint" bindingOperationName="deleteGroupTerminationPoint" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:deleteGroupTerminationPointRequest>
         <!--Optional:-->
         <v11:gtpName>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:gtpName>
      </v11:deleteGroupTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="deleteGroupTerminationPoint"/></con:call></con:operation><con:operation isOneWay="false" action="deleteTerminationPointPool" name="deleteTerminationPointPool" bindingOperationName="deleteTerminationPointPool" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:deleteTerminationPointPoolRequest>
         <!--Optional:-->
         <v11:tpPoolName>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpPoolName>
      </v11:deleteTerminationPointPoolRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="deleteTerminationPointPool"/></con:call></con:operation><con:operation isOneWay="false" action="modifyGroupTerminationPoint" name="modifyGroupTerminationPoint" bindingOperationName="modifyGroupTerminationPoint" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:modifyGroupTerminationPointRequest>
         <!--Optional:-->
         <v11:gtpName>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:gtpName>
         <!--Optional:-->
         <v11:tpRefList>
            <!--Zero or more repetitions:-->
            <v12:name>
               <!--1 or more repetitions:-->
               <v12:rdn>
                  <v12:type>?</v12:type>
                  <v12:value>?</v12:value>
               </v12:rdn>
            </v12:name>
         </v11:tpRefList>
         <!--Optional:-->
         <v11:actionType>?</v11:actionType>
      </v11:modifyGroupTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="modifyGroupTerminationPoint"/></con:call></con:operation><con:operation isOneWay="false" action="modifyTerminationPointPool" name="modifyTerminationPointPool" bindingOperationName="modifyTerminationPointPool" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:modifyTerminationPointPoolRequest>
         <!--Optional:-->
         <v11:tpPoolName>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpPoolName>
         <!--Optional:-->
         <v11:containedMembersRefList>
            <!--Zero or more repetitions:-->
            <v12:name>
               <!--1 or more repetitions:-->
               <v12:rdn>
                  <v12:type>?</v12:type>
                  <v12:value>?</v12:value>
               </v12:rdn>
            </v12:name>
         </v11:containedMembersRefList>
         <!--Optional:-->
         <v11:actionType>?</v11:actionType>
      </v11:modifyTerminationPointPoolRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="modifyTerminationPointPool"/></con:call></con:operation><con:operation isOneWay="false" action="setTerminationPointData" name="setTerminationPointData" bindingOperationName="setTerminationPointData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:setTerminationPointDataRequest>
         <!--Optional:-->
         <v11:tpInfo>
            <v12:tpRef>
               <!--1 or more repetitions:-->
               <v13:rdn>
                  <v13:type>?</v13:type>
                  <v13:value>?</v13:value>
               </v13:rdn>
            </v12:tpRef>
            <!--Optional:-->
            <v12:tpMappingMode>?</v12:tpMappingMode>
            <!--Optional:-->
            <v14:transmissionParametersList>
               <!--Zero or more repetitions:-->
               <v14:transmissionParameters>
                  <!--Optional:-->
                  <v14:layerRate extension="?">?</v14:layerRate>
                  <!--Optional:-->
                  <v14:parameterList>
                     <!--Zero or more repetitions:-->
                     <v15:nvs>
                        <v15:name>?</v15:name>
                        <v15:value>?</v15:value>
                     </v15:nvs>
                  </v14:parameterList>
                  <!--Optional:-->
                  <v14:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v14:vendorExtensions>
               </v14:transmissionParameters>
            </v14:transmissionParametersList>
            <!--Optional:-->
            <v12:ingressTmdRef>
               <!--1 or more repetitions:-->
               <v13:rdn>
                  <v13:type>?</v13:type>
                  <v13:value>?</v13:value>
               </v13:rdn>
            </v12:ingressTmdRef>
            <!--Optional:-->
            <v12:egressTmdRef>
               <!--1 or more repetitions:-->
               <v13:rdn>
                  <v13:type>?</v13:type>
                  <v13:value>?</v13:value>
               </v13:rdn>
            </v12:egressTmdRef>
         </v11:tpInfo>
      </v11:setTerminationPointDataRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="setTerminationPointData"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="PerformanceManagementRetrievalSoapHttpBinding" type="wsdl" bindingName="{http://www.tmforum.org/mtop/rpm/wsdl/pmr/v1-0}PerformanceManagementRetrievalSoapHttpBinding" soapVersion="1_1" anonymous="optional" definition="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp.wsdl?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp.wsdl?WSDL"><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp.wsdl?WSDL</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-PerformanceManagementRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/rpm/wsdl/pmr/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/rpm/wsdl/pmr/v1-0" xmlns:WL5G3N2="http://schemas.xmlsoap.org/wsdl/soap/">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?wsdl=2" namespace="http://www.tmforum.org/mtop/rpm/wsdl/pmr/v1-0"/>
  <WL5G3N0:documentation>DDP: ResourcePerformanceManagement
    Module: PerformanceManagementRetrieval Service Interface WSDL HTTP Module
    Description: This module contains all the mTOP PerformanceManagementRetrieval Service Interface WSDL definitions for the Web Service deployment profile with SOAP/HTTP binding.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:binding name="PerformanceManagementRetrievalSoapHttpBinding" type="WL5G3N1:PerformanceManagementRetrieval">
    <WL5G3N0:documentation>SOAP HTTP binding definitions of the operations of the PerformanceManagementRetrieval portType (interface)</WL5G3N0:documentation>
    <WL5G3N2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <WL5G3N0:operation name="getAllCurrentPerformanceMonitoringData">
      <WL5G3N2:operation soapAction="getAllCurrentPerformanceMonitoringData" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllCurrentPerformanceMonitoringDataRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllCurrentPerformanceMonitoringDataResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllCurrentPerformanceMonitoringDataException">
        <WL5G3N2:fault name="getAllCurrentPerformanceMonitoringDataException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllPerformanceMonitoringPoints">
      <WL5G3N2:operation soapAction="getAllPerformanceMonitoringPoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllPerformanceMonitoringPointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllPerformanceMonitoringPointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllPerformanceMonitoringPointsException">
        <WL5G3N2:fault name="getAllPerformanceMonitoringPointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getHistoryPerformanceMonitoringData">
      <WL5G3N2:operation soapAction="getHistoryPerformanceMonitoringData" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getHistoryPerformanceMonitoringDataRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getHistoryPerformanceMonitoringDataResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getHistoryPerformanceMonitoringDataException">
        <WL5G3N2:fault name="getHistoryPerformanceMonitoringDataException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getHoldingTime">
      <WL5G3N2:operation soapAction="getHoldingTime" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getHoldingTimeRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getHoldingTimeResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getHoldingTimeException">
        <WL5G3N2:fault name="getHoldingTimeException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getMePerformanceMonitoringCapabilities">
      <WL5G3N2:operation soapAction="getMePerformanceMonitoringCapabilities" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getMePerformanceMonitoringCapabilitiesRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getMePerformanceMonitoringCapabilitiesResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getMePerformanceMonitoringCapabilitiesException">
        <WL5G3N2:fault name="getMePerformanceMonitoringCapabilitiesException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getProfileAssociatedTerminationPoints">
      <WL5G3N2:operation soapAction="getProfileAssociatedTerminationPoints" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getProfileAssociatedTerminationPointsRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getProfileAssociatedTerminationPointsResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getProfileAssociatedTerminationPointsException">
        <WL5G3N2:fault name="getProfileAssociatedTerminationPointsException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getPerformanceMonitoringDataIterator">
      <WL5G3N2:operation soapAction="getPerformanceMonitoringDataIterator" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getPerformanceMonitoringDataIteratorRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getPerformanceMonitoringDataIteratorResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getPerformanceMonitoringDataIteratorException">
        <WL5G3N2:fault name="getPerformanceMonitoringDataIteratorException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getPerformanceMonitoringPointsIterator">
      <WL5G3N2:operation soapAction="getPerformanceMonitoringPointsIterator" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getPerformanceMonitoringPointsIteratorRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getPerformanceMonitoringPointsIteratorResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getPerformanceMonitoringPointsIteratorException">
        <WL5G3N2:fault name="getPerformanceMonitoringPointsIteratorException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
  </WL5G3N0:binding>
  <WL5G3N0:service name="PerformanceManagementRetrievalHttp">
    <WL5G3N0:documentation>Example of the PerformanceManagementRetrieval WSDL Service definition as a deployment example of this mTOP Service Interface. It is expected to be modified to match the specific deployment configuration in a service provider's CCV.</WL5G3N0:documentation>
    <WL5G3N0:port binding="WL5G3N1:PerformanceManagementRetrievalSoapHttpBinding" name="PerformanceManagementRetrievalSoapHttp">
      <WL5G3N2:address location="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp"/>
    </WL5G3N0:port>
  </WL5G3N0:service>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?wsdl=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-PerformanceManagementRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/rpm/wsdl/pmr/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/rpm/wsdl/pmr/v1-0">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?wsdl=1" namespace="http://www.tmforum.org/mtop/rpm/wsdl/pmr/v1-0"/>
  <WL5G3N0:documentation>DDP: ResourcePerformanceManagement
    Module: PerformanceManagementRetrieval Service Interface WSDL PortType Module
    Description: This module contains all the mTOP PerformanceManagementRetrieval Service Interface PortType WSDL definitions common to both Web Service deployment profiles; SOAP/HTTP and SOAP/JMS.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:portType name="PerformanceManagementRetrieval">
    <WL5G3N0:documentation>The PerformanceManagementRetrieval porttype (interface) common to both RPC (synchronous) and MSG (asynchronous) based client/server communication patterns.</WL5G3N0:documentation>
    <WL5G3N0:operation name="getAllCurrentPerformanceMonitoringData">
      <WL5G3N0:input message="WL5G3N1:getAllCurrentPerformanceMonitoringDataRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllCurrentPerformanceMonitoringDataResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllCurrentPerformanceMonitoringDataException" name="getAllCurrentPerformanceMonitoringDataException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllPerformanceMonitoringPoints">
      <WL5G3N0:input message="WL5G3N1:getAllPerformanceMonitoringPointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllPerformanceMonitoringPointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllPerformanceMonitoringPointsException" name="getAllPerformanceMonitoringPointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getHistoryPerformanceMonitoringData">
      <WL5G3N0:input message="WL5G3N1:getHistoryPerformanceMonitoringDataRequest"/>
      <WL5G3N0:output message="WL5G3N1:getHistoryPerformanceMonitoringDataResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getHistoryPerformanceMonitoringDataException" name="getHistoryPerformanceMonitoringDataException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getHoldingTime">
      <WL5G3N0:input message="WL5G3N1:getHoldingTimeRequest"/>
      <WL5G3N0:output message="WL5G3N1:getHoldingTimeResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getHoldingTimeException" name="getHoldingTimeException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getMePerformanceMonitoringCapabilities">
      <WL5G3N0:input message="WL5G3N1:getMePerformanceMonitoringCapabilitiesRequest"/>
      <WL5G3N0:output message="WL5G3N1:getMePerformanceMonitoringCapabilitiesResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getMePerformanceMonitoringCapabilitiesException" name="getMePerformanceMonitoringCapabilitiesException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getProfileAssociatedTerminationPoints">
      <WL5G3N0:input message="WL5G3N1:getProfileAssociatedTerminationPointsRequest"/>
      <WL5G3N0:output message="WL5G3N1:getProfileAssociatedTerminationPointsResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getProfileAssociatedTerminationPointsException" name="getProfileAssociatedTerminationPointsException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getPerformanceMonitoringDataIterator">
      <WL5G3N0:input message="WL5G3N1:getPerformanceMonitoringDataIteratorRequest"/>
      <WL5G3N0:output message="WL5G3N1:getPerformanceMonitoringDataIteratorResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getPerformanceMonitoringDataIteratorException" name="getPerformanceMonitoringDataIteratorException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getPerformanceMonitoringPointsIterator">
      <WL5G3N0:input message="WL5G3N1:getPerformanceMonitoringPointsIteratorRequest"/>
      <WL5G3N0:output message="WL5G3N1:getPerformanceMonitoringPointsIteratorResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getPerformanceMonitoringPointsIteratorException" name="getPerformanceMonitoringPointsIteratorException"/>
    </WL5G3N0:operation>
  </WL5G3N0:portType>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?wsdl=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-PerformanceManagementRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/rpm/wsdl/pmr/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:WL5G3N2="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1">
  <WL5G3N0:documentation>DDP: ResourcePerformanceManagement
    Module: PerformanceManagementRetrieval Service Interface WSDL Message Module
    Description: This module contains all the mTOP PerformanceManagementRetrieval Service Interface WSDL message definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:types>
    <xsd:schema xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:pmr="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:tns="http://www.tmforum.org/mtop/rpm/wsdl/pmr/v1-0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=9"/>
    </xsd:schema>
  </WL5G3N0:types>
  <WL5G3N0:message name="getAllCurrentPerformanceMonitoringDataRequest">
    <WL5G3N0:documentation>The getAllCurrentPerformanceMonitoringData request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllCurrentPerformanceMonitoringDataRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllCurrentPerformanceMonitoringDataResponse">
    <WL5G3N0:documentation>The getAllCurrentPerformanceMonitoringData response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllCurrentPerformanceMonitoringDataResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllCurrentPerformanceMonitoringDataException">
    <WL5G3N0:documentation>The getAllCurrentPerformanceMonitoringData exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllCurrentPerformanceMonitoringDataException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllPerformanceMonitoringPointsRequest">
    <WL5G3N0:documentation>The getAllPerformanceMonitoringPoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllPerformanceMonitoringPointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllPerformanceMonitoringPointsResponse">
    <WL5G3N0:documentation>The getAllPerformanceMonitoringPoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllPerformanceMonitoringPointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllPerformanceMonitoringPointsException">
    <WL5G3N0:documentation>The getAllPerformanceMonitoringPoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllPerformanceMonitoringPointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getHistoryPerformanceMonitoringDataRequest">
    <WL5G3N0:documentation>The getHistoryPerformanceMonitoringData request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getHistoryPerformanceMonitoringDataRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getHistoryPerformanceMonitoringDataResponse">
    <WL5G3N0:documentation>The getHistoryPerformanceMonitoringData response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getHistoryPerformanceMonitoringDataResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getHistoryPerformanceMonitoringDataException">
    <WL5G3N0:documentation>The getHistoryPerformanceMonitoringData exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getHistoryPerformanceMonitoringDataException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getHoldingTimeRequest">
    <WL5G3N0:documentation>The getHoldingTime request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getHoldingTimeRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getHoldingTimeResponse">
    <WL5G3N0:documentation>The getHoldingTime response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getHoldingTimeResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getHoldingTimeException">
    <WL5G3N0:documentation>The getHoldingTime exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getHoldingTimeException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getMePerformanceMonitoringCapabilitiesRequest">
    <WL5G3N0:documentation>The getMePerformanceMonitoringCapabilities request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getMePerformanceMonitoringCapabilitiesRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getMePerformanceMonitoringCapabilitiesResponse">
    <WL5G3N0:documentation>The getMePerformanceMonitoringCapabilities response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getMePerformanceMonitoringCapabilitiesResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getMePerformanceMonitoringCapabilitiesException">
    <WL5G3N0:documentation>The getMePerformanceMonitoringCapabilities exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getMePerformanceMonitoringCapabilitiesException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getProfileAssociatedTerminationPointsRequest">
    <WL5G3N0:documentation>The getProfileAssociatedTerminationPoints request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getProfileAssociatedTerminationPointsRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getProfileAssociatedTerminationPointsResponse">
    <WL5G3N0:documentation>The getProfileAssociatedTerminationPoints response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getProfileAssociatedTerminationPointsResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getProfileAssociatedTerminationPointsException">
    <WL5G3N0:documentation>The getProfileAssociatedTerminationPoints exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getProfileAssociatedTerminationPointsException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getPerformanceMonitoringDataIteratorRequest">
    <WL5G3N0:documentation>The getPerformanceMonitoringDataIterator request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getPerformanceMonitoringDataIteratorRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getPerformanceMonitoringDataIteratorResponse">
    <WL5G3N0:documentation>The getPerformanceMonitoringDataIterator response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getPerformanceMonitoringDataIteratorResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getPerformanceMonitoringDataIteratorException">
    <WL5G3N0:documentation>The getPerformanceMonitoringDataIterator exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getPerformanceMonitoringDataIteratorException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getPerformanceMonitoringPointsIteratorRequest">
    <WL5G3N0:documentation>The getPerformanceMonitoringPointsIterator request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getPerformanceMonitoringPointsIteratorRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getPerformanceMonitoringPointsIteratorResponse">
    <WL5G3N0:documentation>The getPerformanceMonitoringPointsIterator response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getPerformanceMonitoringPointsIteratorResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getPerformanceMonitoringPointsIteratorException">
    <WL5G3N0:documentation>The getPerformanceMonitoringPointsIterator exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getPerformanceMonitoringPointsIteratorException" name="mtopBody"/>
  </WL5G3N0:message>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=9</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" version="1.0" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:pm="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:pmdata="http://www.tmforum.org/mtop/nra/xsd/pmdata/v1" xmlns:pmp="http://www.tmforum.org/mtop/nra/xsd/pmp/v1" xmlns:pmpar="http://www.tmforum.org/mtop/nra/xsd/pmpar/v1" xmlns:pmtgt="http://www.tmforum.org/mtop/nra/xsd/pmtgt/v1" xmlns:tns="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: ResourcePerformanceManagement</p>
      <p>Module:  Message XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP
                PerformanceManagementRetrieval SI XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=7"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=8"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pmtgt/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pmdata/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=10"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pmp/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=16"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pmpar/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=14"/>
  <!--================-->
  <xsd:element name="getAllCurrentPerformanceMonitoringDataRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllCurrentPerformanceMonitoringData operation</p>
        <p>This operation allows requesting a filtered set
                    (scoped by the input parameter pmParameters) of the
                    current PM data for a list of TP measurement points.
                    Within the request for each measurement point,
                    granularity (15min, 24h, NA, etc.) and location
                    (nearEnd and/or farEnd and/or bidirectional) may be specified.</p>
        <p>The operation mode is best effort. Current data will
                    generally be marked as incomplete, as the current
                    bin is not completed. If no PM data are available as
                    specified, an empty list is returned.</p>
        <p>Depending on the MEP used, this operation instructs
                    the Performance Management OSS to either return all
                    current PM data in one or more
                    getAllCurrentPerformanceMonitoringData responses
                    (using an iterator), or to the store current PM data
                    into a file, and to send that file by FTP (File
                    Transfer Protocol) to the location specified in the
                    appropriate request header attribute.</p>
        <p>Performance Monitoring Data transfer normally
                    involves huge amounts of data. The capability to
                    send PM data to a controlled destination allows for
                    flexibility in the choice of the PM data file
                    format, the particular file transfer protocol
                    (including the possibility to apply data compression
                    techniques) and the destination machine so as to
                    make optimal use of the available data network
                    capacity. The file transfer protocol to transfer PM
                    data is the FTP protocol.</p>
        <p>This operation is asynchrounous and is not required
                    to wait until the PM data is extracted or until the
                    FTP transfer is over before it returns.
                    Notifications can be generated to inform of the
                    progress of the transfer. See Framework DDP
                    SD2-5_Communication_Styles for details.</p>
        <p>Performance monitoring data on multiple TPs of
                    multiple MEs is transferred in one data file. This
                    PM data file has the following format: SD1-30 PM
                    File Format Definition.</p>
        <p>NOTE: The required FTP location of the PM data file
                    must be specified in the MTOSI Header in the
                    attribute: LocationURI</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="pmObjectSelectList" type="pmtgt:PerformanceMonitoringObjectSelectListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This attribute contains a list of
                                measurement points for which to get the
                                PM data.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="pmParameterList" type="pm:PerformanceMonitoringParameterNameListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This attribute specifies which PM
                                parameters within the scope of the
                                pmTPSelectList shall be returned. An
                                empty list means to return all supported
                                parameters. The returned parameters are
                                best effort, i.e. among the parameters
                                specified only the subset of supported
                                parameters will be returned.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllCurrentPerformanceMonitoringDataResponse" type="tns:MultiplePerformanceMonitoringDataObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllCurrentPerformanceMonitoringData operation. In
                    the case where the request indicated that the data
                    is to be returned via FTP, no list will be present
                    in this reponse.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllCurrentPerformanceMonitoringDataException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllCurrentPerformanceMonitoringData operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
            <xsd:element ref="msg:unsupportedCompressionFormat"/>
            <xsd:element ref="msg:unsupportedPackingFormat"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllPerformanceMonitoringPointsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>This operation allows an OSS to retrieve all PMPs
                    contained in a specified TP or ME.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="tpOrMeName" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the object to which this
                                selection applies. This may be:</p>
              <p>
                <br>ManagedElement: The selection
                                    applies to all termination points
                                    contained within the ManagedElement.</br>
                <br>TerminationPoint: The selection
                                    applies only to the named TP. Unlike
                                    the case for Managed Element, the
                                    operation will not apply to any
                                    contained TPs.</br>
              </p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllPerformanceMonitoringPointsResponse" type="tns:MultiplePerformanceMonitoringPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllPerformanceMonitoringPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getAllPerformanceMonitoringPointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllPerformanceMonitoringPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getHistoryPerformanceMonitoringDataRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getHistoryPerformanceMonitoringData operation</p>
        <p>This operation returns the PM history data on a
                    specified list of TPs.</p>
        <p>Depending on the MEP used, this operation instructs
                    the Performance Management OSS to either return
                    history PM data in one or more
                    getHistoryPerformanceMonitoringData responses (using
                    an iterator), or to the store history PM data into a
                    file, and to send that file by FTP (File Transfer
                    Protocol) to the location specified in the
                    appropriate request header attribute.</p>
        <p>Within the request a list of TP/layerRate measurement
                    points and a time frame are specified. For each
                    measurement point, the granularity (15min, 24h, NA,
                    etc) and location (nearEnd and/or farEnd and/or
                    bidirectional) may be specified. A filtered set
                    (scoped by the input parameter pmParameters) of PM
                    parameters collected for a particular TP/layerRate
                    measurement point for the granularity, location and
                    time window specified is made available.</p>
        <p>Measurement intervals and the given time frame are
                    considered as half open intervals to the right, i.e.
                    startTime &lt;= t &lt; endTime.</p>
        <p>A particular historic measurement interval (of
                    duration 15 min resp. 24 h) is defined to be covered
                    by the specified time frame if there is a non empty
                    intersection between the measurement interval and
                    the given time frame, i.e. endTime[PM record] >
                    startTime[request parameter] AND startTime[PM
                    record] &lt; endTime[request parameter] PM data are
                    returned for all covered measurement intervals.</p>
        <p>For records partly included in the time frame
                    specified, PM data will be returned. In case a
                    history bin has incomplete PM measurement data (for
                    instance because PM data collection was disabled for
                    some time period(s) within the bin's time span), the
                    particular measurement period will be marked as incomplete.</p>
        <p>If the forceUpload parameter is true, the OSS is to
                    upload the data for all the specified collection
                    periods (provided they do exist in the MEs) and
                    provide the entire PM data requested. If the
                    forceUpload parameter is false, measurement
                    intervals within the specified time frame for which
                    PM data has been collected in the ME but not yet
                    uploaded will be included in the PM file with status
                    "Unavailable", however without valid PM data.</p>
        <p>Performance Monitoring Data transfer normally
                    involves huge amounts of data. The capability to
                    send PM data to a controlled destination allows for
                    flexibility in the choice of the PM data file
                    format, the particular file transfer protocol
                    (including the possibility to apply data compression
                    techniques) and the destination machine so as to
                    make optimal use of the available data network
                    capacity. The file transfer protocol to transfer PM
                    data is the FTP protocol.</p>
        <p>This operation is asynchrounous and is not required
                    to wait until the PM data is extracted or until the
                    FTP transfer is over before it returns.
                    Notifications can be generated to inform of the
                    progress of the transfer. See Framework DDP
                    SD2-5_Communication_Styles for details.</p>
        <p>Performance monitoring data on multiple TPs of
                    multiple MEs is transferred in one data file. This
                    PM data file has the following format: SD1-30 PM
                    File Format Definition.</p>
        <p>NOTE: The required FTP location of the PM data file
                    must be specified in the MTOSI Header in the
                    attribute: LocationURI</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="userName" type="xsd:string"/>
        <xsd:element name="password" type="xsd:string"/>
        <xsd:element name="destination" type="xsd:string"/>
        <xsd:element minOccurs="0" name="pmObjectSelectList" type="pmtgt:PerformanceMonitoringObjectSelectListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter identifies the objects
                                which are in scope of the operation. If
                                no objects are provided, PM history data
                                for all monitored TPs of all Managed
                                Elements managed by the target OS (all
                                layer rates, all granularities) are
                                returned in the file.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="pmParameterList" type="pm:PerformanceMonitoringParameterNameListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter specifies which PM
                                parameters within the scope of the
                                pmTpSelectList shall be contained in the
                                file. An empty list means to store all
                                supported parameters. The returned
                                parameters are best effort, i.e. among
                                the parameters specified only the subset
                                of supported parameters will be stored.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="startTime" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>Specifies the start of the time window
                                for collection (included).</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="endTime" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>Specifies the end of the time window for
                                collection (excluded).</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="mustForceUpload" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Specifies if the Performance Management
                                OSS must upload all available PM data
                                requested from the MEs.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getHistoryPerformanceMonitoringDataResponse" type="tns:MultiplePerformanceMonitoringDataObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getHistoryPerformanceMonitoringData operation. In
                    the case where the request indicated that the data
                    is to be returned via FTP, no list will be present
                    in this reponse.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getHistoryPerformanceMonitoringDataException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getHistoryPerformanceMonitoringData operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
            <xsd:element ref="msg:unsupportedCompressionFormat"/>
            <xsd:element ref="msg:unsupportedPackingFormat"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getHoldingTimeRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getHoldingTime operation</p>
        <p>This operation returns how many hours PM data records
                    are held in the target OS (worst case time). If the
                    target OS does not store PM data it is the time
                    supported in the NE (minimum time of all managed NEs).</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getHoldingTimeResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getHoldingTime operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="holdingTime" type="pm:HoldingTimeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Contains the time period in hours within
                                which 24h PM data records and 15min PM
                                data records may be retrieved.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getHoldingTimeException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getHoldingTime operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getMePerformanceMonitoringCapabilitiesRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getMePerformanceMonitoringCapabilities operation</p>
        <p>This operation allows requesting the set of PM
                    parameters supported by a particular Managed Element
                    at a specific layer.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="meRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Contains the name of the managed element.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="layerRate" type="lay:LayerRateType">
          <xsd:annotation>
            <xsd:documentation>
              <p>The specified layer for which to gather
                                PM parameters.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getMePerformanceMonitoringCapabilitiesResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getMePerformanceMonitoringCapabilities operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="pmParameterList" type="pmpar:PerformanceMonitoringParameterListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Contains the set of PM parameters that
                                are supported by the ME referred to.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getMePerformanceMonitoringCapabilitiesException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getMePerformanceMonitoringCapabilities operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getProfileAssociatedTerminationPointsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getProfileAssociatedTerminationPoints operation</p>
        <p>This operation gets the set of TPs that are
                    associated with a TCA parameter profile.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="profileRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Contains the name gives the name of the
                                TCA parameter profile.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getProfileAssociatedTerminationPointsResponse" type="tns:MultipleProfileAssociatedTerminationPointObjectNamesResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getProfileAssociatedTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getProfileAssociatedTerminationPointsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getProfileAssociatedTerminationPoints operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--=================-->
  <!--Definitions of Iterator messages for Object and Object Name retrievals-->
  <!--=================-->
  <xsd:element name="getPerformanceMonitoringDataIteratorRequest" type="msg:GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getPerformanceMonitoringDataIterator operation</p>
        <p>This is the iterator request to return the next batch
                    of PM data from the OS to which an PM data retrieval
                    request was initially sent.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getPerformanceMonitoringDataIteratorResponse" type="tns:MultiplePerformanceMonitoringDataObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getPerformanceMonitoringDataIteratorRequest operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getPerformanceMonitoringDataIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getManagedElementsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--=================-->
  <xsd:element name="getPerformanceMonitoringPointsIteratorRequest" type="msg:GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getPerformanceMonitoringPointsIterator operation</p>
        <p>This is the iterator request to return the next batch
                    of PMP objects from the OS to which a PMP retrieval
                    request was initially sent.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getPerformanceMonitoringPointsIteratorResponse" type="tns:MultiplePerformanceMonitoringPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getPerformanceMonitoringPointsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getPerformanceMonitoringPointsIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getPerformanceMonitoringPointsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--=================-->
  <!--Local Data Type Definitions of various messages-->
  <!--==================-->
  <xsd:complexType name="MultiplePerformanceMonitoringDataObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for a set of
                    PerformanceMonitoringData objects</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="pmDataList" type="pmdata:PerformanceMonitoringDataListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>List of pmData objects</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="MultiplePerformanceMonitoringPointObjectNamesResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for a set of
                    PerformanceMonitoringPoint object names</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="nameList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of PerformanceMonitoringPoint names</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="MultiplePerformanceMonitoringPointObjectsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure for a set of
                    PerformanceMonitoringPoint objects</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="pmpList" type="pmp:PerformanceMonitoringPointListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The list of PerformanceMonitoringPoint objects</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
  <!--TODO Check should this be imported from TerminationPointRetrieval?-->
  <xsd:complexType name="MultipleProfileAssociatedTerminationPointObjectNamesResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response to GetProfileAssociatedTPsRequestType.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="nameList" type="nam:NamingAttributeListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Provides the set of TPs associated with the
                            profile provided.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=7</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=3"/>
  <!--==============-->
  <xsd:complexType abstract="false" name="BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The (abstract) base type definition of all exception messages.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="hdr:header">
        <xsd:annotation>
          <xsd:documentation>The mTOP header as it cannot be
                        part of the SOAP Header in a SOAP v1.1 Fault message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="reason" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>A string indicating further details about the
                            exception. It is a free format string filled
                            by the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The extension for specific vendor exception information.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:element name="notImplemented" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised by OS for an optional operation that is not implemented</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="internalError" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised in case of non-specific OS internal failure</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidInput" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters are invalid</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tooManyOpenIterators" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when data retrieval iterator capacity is full</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="entityNotFound" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters do not refer to an existing object</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="commLoss" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when communication to an entity (needed to
                    help fulfill the request) is lost</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedCompressionFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given data compression format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedPackingFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given file packing format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidFilterDefinition" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the filter is invalid.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="objectInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tpInvalidEndPoint" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="timeslotInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="protectionEffortNotMet" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notInValidState" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unableToComply" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="capacityExceeded" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="accessDenied" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedRoutingConstraints" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="userlabelInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidTopic" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the topic is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notificationServiceProblem" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when there is a failure with the Broker.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AllExceptionsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reference to all supported exception types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="tns:accessDenied"/>
      <xsd:element ref="tns:capacityExceeded"/>
      <xsd:element ref="tns:commLoss"/>
      <xsd:element ref="tns:entityNotFound"/>
      <xsd:element ref="tns:internalError"/>
      <xsd:element ref="tns:invalidFilterDefinition"/>
      <xsd:element ref="tns:invalidInput"/>
      <xsd:element ref="tns:invalidTopic"/>
      <xsd:element ref="tns:notificationServiceProblem"/>
      <xsd:element ref="tns:notImplemented"/>
      <xsd:element ref="tns:notInValidState"/>
      <xsd:element ref="tns:objectInUse"/>
      <xsd:element ref="tns:protectionEffortNotMet"/>
      <xsd:element ref="tns:timeslotInUse"/>
      <xsd:element ref="tns:tooManyOpenIterators"/>
      <xsd:element ref="tns:tpInvalidEndPoint"/>
      <xsd:element ref="tns:unableToComply"/>
      <xsd:element ref="tns:unsupportedCompressionFormat"/>
      <xsd:element ref="tns:unsupportedPackingFormat"/>
      <xsd:element ref="tns:unsupportedRoutingConstraints"/>
      <xsd:element ref="tns:userlabelInUse"/>
    </xsd:choice>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Profile of exception types supported by all mTOP
                    iterator operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="tns:AllExceptionsType">
        <xsd:choice>
          <xsd:element ref="tns:commLoss"/>
          <xsd:element ref="tns:internalError"/>
          <xsd:element ref="tns:invalidInput"/>
          <xsd:element ref="tns:notImplemented"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Generic request message structure for all data
                    iterator operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=4</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML header.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=3"/>
  <!--==============-->
  <xsd:simpleType name="ActivityStatusEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies the high-level response status for an
                    activity.  Required for response messages, including
                    error responses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="WARNING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="ActivityStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Add to the initial enumerations the Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ActivityStatusEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="MessageTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type of the message that is being exchanged as
                    part of an activity.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REQUEST"/>
      <xsd:enumeration value="RESPONSE"/>
      <xsd:enumeration value="NOTIFICATION"/>
      <xsd:enumeration value="ERROR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationPatternType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Styles supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SimpleResponse"/>
      <xsd:enumeration value="MultipleBatchResponse"/>
      <xsd:enumeration value="BulkResponse"/>
      <xsd:enumeration value="Notification"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationStyleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Style supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MSG"/>
      <xsd:enumeration value="RPC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="CompressionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if compression is to be performed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:CompressionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CompressionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported compressions. All extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_COMPRESSION"/>
      <xsd:enumeration value="GZIP"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PackingTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if the output file(s) are to be packed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:PackingEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PackingEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported packing/packaging. All
                    extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PACKING"/>
      <xsd:enumeration value="ZIP"/>
      <xsd:enumeration value="TAR"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="header">
    <xsd:annotation>
      <xsd:documentation>
        <p>MTOSI Standard Header.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="activityName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the business
                                transaction activity for the message
                                being exchanged.       The value is
                                usually the name of the mTOP operation,
                                e.g. getInventory.       This value
                                corresponds to the “operation” in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the message (or
                                contract) that is being exchanged as
                                part of an activity. E.g.
                                getInventoryResponse. This field
                                corresponds to the message name in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgType" type="tns:MessageTypeType"/>
        <xsd:element minOccurs="0" name="senderURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application sending this message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="destinationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the final destination of the
                                message (the OS that will process the
                                content of the message). This field may
                                point to a logical end point or abstract
                                topic name to be resolved by the
                                communication transport middleware in
                                order to deliver the message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="replyToURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used by request messages to specify
                                destination for response message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="originatorURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the originating application of
                                the message that resulted in this
                                response or notification message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="failureReplytoURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application receiving the
                                potential error notification message.
                                Required for all response messages and
                                notifications which are triggered by
                                request/response. If not specified the
                                replyToURI is used. If the replyToURI is
                                also not specified, senderURI endpoint
                                is used to send back the failure response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="activityStatus" type="tns:ActivityStatusType"/>
        <xsd:element minOccurs="0" name="correlationId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>An identifier that could be set by the
                                originator of an asynchronous request
                                that will allow it to correlate the
                                response to the request.  If this field
                                is set, it should be reflected in the
                                header of the response message.  Not
                                required for notification headers.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="security" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Provides credential nformation for use by
                                a security service for identification,
                                authentication, or authorization.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="securityType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the type of credential
                                contained in the security element.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="priority">
          <xsd:annotation>
            <xsd:documentation>
              <p>Indicates message-handling priority for
                                asynchronous messages.  It must be in
                                the range 0-9 (lowest-highest). Default: 4</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string"/>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgSpecificProperties">
          <xsd:annotation>
            <xsd:documentation>
              <p>Conditionally required for request,
                                response, and notification messages as
                                identified by the documentation for a
                                specific interface message.  The
                                communications infrastructure or the
                                receiving application can use this value
                                for routing or filtering messages.</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" minOccurs="0" name="property">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="propName" type="xsd:string"/>
                    <xsd:element name="propValue" type="xsd:string"/>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="communicationPattern" type="tns:CommunicationPatternType"/>
        <xsd:element minOccurs="0" name="communicationStyle" type="tns:CommunicationStyleType"/>
        <xsd:element minOccurs="0" name="requestedBatchSize" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>The RequestedBatchSize parameter provides
                                the control for the batch segmentation
                                of the full set of output data generated
                                by a coarse-grained operation such as
                                getInventory or getActiveAlarms. The
                                unit is any of the MTOSI objects. And,
                                it defines the maximum number of MTOSI
                                objects that can be included in all the
                                batches of data sent as part of a
                                multiple responses MEP.</p>
              <p>However, they are cases where a batch may
                                exceed the number of objects defined in
                                the RequestedBatchSize parameter. This
                                is true if the granularity of a response
                                atomic data representation is greater
                                than just one object. This is true for
                                the getInventory response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceNumber" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm. Pattern
                                to identify the batch seq number in a sequence.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceEndOfReply" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm.
                                Pattern, true if it is the last result
                                batch in a sequence</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="iteratorReferenceURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Mandatory for all SIT (iterators) MEP to
                                allow description of the data retrieval iterator.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="fileLocationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used for file retrieval. Specify the base
                                name of the file(s) to be generated and
                                the remote destination.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="compressionType" type="tns:CompressionTypeType"/>
        <xsd:element minOccurs="0" name="packingType" type="tns:PackingTypeType"/>
        <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>Message originating timestamp</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Location for all vendor extensions to the
                                MTOSI standard header.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=3</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of generic mTOP simple data types.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="NameAndStringValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvsList" type="tns:NameAndValueStringListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndValueStringListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndStringValue</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nvs" type="tns:NameAndStringValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:any minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvList" type="tns:NameAndAnyValueListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndAnyValueType</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nv" type="tns:NameAndAnyValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AliasNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    contains the list of aliases for the network entity.
                    The attribute is a name-value list. The name refers
                    to the type of alias (e.g., nativeEMSname) and the
                    value component holds the alias itself</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alias">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="aliasName" type="xsd:string"/>
            <xsd:element name="aliasValue" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AnyListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A generic list of any type of elements. Used for
                    vendor Extensions or loose element encapsulation
                    from other namespaces.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="DiscoveredNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the name of the object when
                    its existence is first published on the CCV but only
                    in the case where the OS that publishes the object
                    on the CCV is not the naming OS. If the naming OS
                    first publishes the object on the CCV, this
                    attribute may be left empty.</p>
        <p>The discovered name is assumed to be unique from the
                    perspective of the publishing OS.</p>
        <p>The discovered name published on the CCV does not
                    necessarily need to be the name of the object as
                    discovered by the OS from the subtending network.</p>
        <p>There are no specific rules concerning the
                    relationship between the "name" and
                    "discovered name" of the object. They
                    could be set to the same value or they could be different.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ManufactureDateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type identifies the production date of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="MultiEventInventoryAttributesType">
    <xsd:annotation>
      <xsd:documentation>This attribute is used when a object
                instance is embedded in the inventory    layout payload
                of a Multi-Event Inventory (MEI) notification.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="neTime" nillable="true" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the time at which the NE detected the
                            inventory change (if available)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventIndication" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is an indication of the type of
                            inventory update.</p>
            <p>Possible values are Object Creation (OC),
                            Object Discovery (ODsc), Object Deletion
                            (OD),        Attribute Value Change (AVC),
                            State Change (SC) and AVC_SC_and_Childern.
                            Only the acronym (e.g., OC)        is used
                            in the actual attribute value. The following
                            conventions apply:</p>
            <p>If an object creation or object discovery
                            indicator is applied to a parent object,
                            it implicitly applies to all the children,
                            i.e., the OS sending the notification only
                            needs       to set the indicator attribute
                            in the parent object.</p>
            <p>If an object deletion is applied to a parent
                            object, it is assumed that all the children
                            are also deleted. The childern should not be listed.</p>
            <p>The AVC_SC_and_Childern indication may be
                            applied to a parent object to imply that
                            there       may be AVC or SC changes to the
                            parent and some or all of the children.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="NetworkAccessDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A free-format string used to associate a resource to
                    a Network Access Domain.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="NotificationIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the notification ID.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="NotificationIdentifierListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of notification IDs  (free string). Also,  the
                    value found in notificationId field of the event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="notificationId" type="tns:NotificationIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of all the object types. It is
                    left as a string for maximum compatibility with
                    future supported object types.</p>
        <p>Refer to the SD2-7 ObjectNaming for the list of all
                    supported values.</p>
        <p>Otherwise, one can also refer to the
                    ObjectEnumTypedefined in CommonResourceInfo (see NRB
                    DDP), which is provided as XML Schema enumerations
                    solely as a helper (not used in any messaging validation).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enumeration of all the supported query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI">
      <xsd:enumeration value="ANSI-92"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath20/"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The loose definition of all the supported query
                    dialect types.</p>
        <p>Refer to QueryDialectEnumType definition to the
                    enumeration of recommended query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The generic schema datatype definition for the query
                    expression used in most filters.</p>
        <p>This definition is borrowed from WS-Notification v1.3.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="tns:QueryDialectTypeType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          <p>The dialect of the given query expression</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=8</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML naming structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=3"/>
  <!--=================-->
  <xsd:complexType name="RelativeDistinguishNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of relative distinguish
                    name (RDN) data structure used in all object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="type" type="gen:ObjectTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN object type acronym.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of the MTOSI object name
                    data structure as a sequence of RDNs, which
                    represents a unique identifier for the MTOSI object
                    on the CCV. Once set by the naming OS, the name is
                    invariant for the life of the object and should be
                    used when referring to the object over the CCV. Name
                    attribute of an object instance shall always be
                    assigned a value, unless the object instance is
                    first discovered by an OS that is not the naming OS
                    for the object instance. In such a case, the
                    discovering OS shall provide a value for the
                    Discovered Name attribute of the object. The naming
                    OS shall provide a value for the Name attribute of
                    the object once it becomes aware of the new object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="rdn" type="tns:RelativeDistinguishNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition for the list of MTOSI object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="name" nillable="true" type="tns:NamingAttributeType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=13</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/pmtgt/v1" version="1.0" xmlns:lr="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:pm="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/pmtgt/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP basic PM ObjectSelect (Target)
                XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=8"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=11"/>
  <!--=================-->
  <xsd:element name="pmObjectSelect" type="tns:PerformanceMonitoringObjectSelectType"/>
  <!--=================-->
  <xsd:complexType name="PerformanceMonitoringObjectSelectType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is used to specify the scope/target for a PM operation.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The name of the object to which this
                            selection applies. (i.e. the target of the
                            PM operation). This may be:</p>
            <p>
              <br>Managed Element: The selection applies
                                to all termination points contained
                                within the ManagedElement.</br>
              <br>Termination Point: The selection applies
                                only to the named TP. Unlike the case
                                for Managed Element, the operation will
                                not apply to any "contained" TPs.</br>
              <br>Management Domain: The selection applies
                                to all TPs contained within the
                                Management Domain.</br>
              <br>Subnetwork Connection (SNC): The
                                selection applies to all TPs along the
                                SNC at the same layerRate as the SNC.</br>
              <br>Subnetwork: The selection applies to all
                                TPs within all the managed elements in
                                the Subnetwork.</br>
              <br>OS: The selection applies to all TPs
                                within all the managed elements
                                associated with the OS.</br>
            </p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="layerRateList" nillable="true" type="lr:LayerRateListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute contains the set of layers to
                            which the selection applies. An empty list
                            means all layers supported by the addressed objects.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="pmLocationList" nillable="true" type="pm:PerformanceMonitoringLocationListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute contains the set of PM measure
                            locations to which the selection applies. An
                            empty list means all locations supported by
                            the addressed objects.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="granularityList" nillable="true" type="pm:PerformanceMonitoringGranularityListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute contains the set of PM
                            register granularities to which the
                            selection applies. An empty list means all
                            granularities supported by the addressed objects.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringObjectSelectListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PerformanceMonitoringObjectSelectType</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmObjectSelect" type="tns:PerformanceMonitoringObjectSelectType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=6</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP layer rates.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:element name="layerRateListType" type="tns:LayerRateListType"/>
  <!--================-->
  <xsd:complexType name="LayerRateListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of LayerRates</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="layerRate" nillable="true" type="tns:LayerRateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=====================-->
  <xsd:complexType name="LayerRateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          The LayerRateType value is used to identify:
          <li>the Layer of a PTP/CTP,</li>
          <li>the characteristic information of a PTP/FTP,</li>
          <li>the Layer/Rate of a connection.</li>
        </p>
        <p>Each LayerRateType may be used in conjunction with a
                    CTP/PTP/FTP of that layer. In the SDH definitions,
                    the G.805 CP and G.805 Termination Function layer
                    names differ, for example TU12 is used for the G.805
                    CP and VC12 for the corresponding G.805 Termination
                    Function. In this interface definition the TU and VC
                    definitions have been combined into a single
                    composite layer and this has been named to include
                    the equivalent SONET layer, e.g. LR_VT2_andTypeU12_VC12.</p>
        <p>
          For more details refer to the following supporting
                    document:
          <li>layering documentfor
                        all layering concepts</li>
          <li>LayerRates document for information about
                        recognized values in MTOSI</li>
        </p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:LayerRateEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=====================-->
  <xsd:simpleType name="LayerRateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="LR_DS0_64K"/>
      <xsd:enumeration value="LR_DSL"/>
      <xsd:enumeration value="LR_Not_Applicable"/>
      <xsd:enumeration value="LR_Async_FOTS_150M"/>
      <xsd:enumeration value="LR_Async_FOTS_417M"/>
      <xsd:enumeration value="LR_Async_FOTS_560M"/>
      <xsd:enumeration value="LR_Async_FOTS_565M"/>
      <xsd:enumeration value="LR_Async_FOTS_1130M"/>
      <xsd:enumeration value="LR_Async_FOTS_1G7"/>
      <xsd:enumeration value="LR_Async_FOTS_1G8"/>
      <xsd:enumeration value="LR_ATM_NI"/>
      <xsd:enumeration value="LR_ATM_VC"/>
      <xsd:enumeration value="LR_ATM_VP"/>
      <xsd:enumeration value="LR_D1_Video"/>
      <xsd:enumeration value="LR_DIGITAL_SIGNAL_RATE"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_DSR_1_5M"/>
      <xsd:enumeration value="LR_DSR_2M"/>
      <xsd:enumeration value="LR_DSR_4M"/>
      <xsd:enumeration value="LR_DSR_6M"/>
      <xsd:enumeration value="LR_DSR_8M"/>
      <xsd:enumeration value="LR_DSR_16M"/>
      <xsd:enumeration value="LR_DSR_34M"/>
      <xsd:enumeration value="LR_E2_8M"/>
      <xsd:enumeration value="LR_E5_565M"/>
      <xsd:enumeration value="LR_Encapsulation"/>
      <xsd:enumeration value="LR_Fragment"/>
      <xsd:enumeration value="LR_DSR_45M"/>
      <xsd:enumeration value="LR_DSR_140M"/>
      <xsd:enumeration value="LR_DSR_565M"/>
      <xsd:enumeration value="LR_DSR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_DSR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OC1_STM0"/>
      <xsd:enumeration value="LR_DSR_OC3_STM1"/>
      <xsd:enumeration value="LR_DSR_2xSTM1"/>
      <xsd:enumeration value="LR_DSR_OC12_STM4"/>
      <xsd:enumeration value="LR_DSR_OC24_STM8"/>
      <xsd:enumeration value="LR_DSR_OC48_and_STM16"/>
      <xsd:enumeration value="LR_DSR_OC192_and_STM64"/>
      <xsd:enumeration value="LR_DSR_OC768_and_STM256"/>
      <xsd:enumeration value="LR_DSR_OTU1"/>
      <xsd:enumeration value="LR_DSR_OTU2"/>
      <xsd:enumeration value="LR_DSR_OTU3"/>
      <xsd:enumeration value="LR_E1_2M"/>
      <xsd:enumeration value="LR_E20_2x2M"/>
      <xsd:enumeration value="LR_E30_8x2M"/>
      <xsd:enumeration value="LR_E3_34M"/>
      <xsd:enumeration value="LR_E4_140M"/>
      <xsd:enumeration value="LR_ESCON"/>
      <xsd:enumeration value="LR_Ethernet"/>
      <xsd:enumeration value="LR_ETR"/>
      <xsd:enumeration value="LR_Fast_Ethernet"/>
      <xsd:enumeration value="LR_FC_12_133M"/>
      <xsd:enumeration value="LR_FC_25_266M"/>
      <xsd:enumeration value="LR_FC_50_531M"/>
      <xsd:enumeration value="LR_FC_100_1063M"/>
      <xsd:enumeration value="LR_FDDI"/>
      <xsd:enumeration value="LR_FICON"/>
      <xsd:enumeration value="LR_FR_IF"/>
      <xsd:enumeration value="LR_FR_PVC"/>
      <xsd:enumeration value="LR_Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_ISDN_BRI"/>
      <xsd:enumeration value="LR_Line_OC1_STS1_and_MS_STM0"/>
      <xsd:enumeration value="LR_Line_OC3_STS3_and_MS_STM1"/>
      <xsd:enumeration value="LR_Line_OC12_STS12_and_MS_STM4"/>
      <xsd:enumeration value="LR_Line_OC24_STS24_and_MS_STM8"/>
      <xsd:enumeration value="LR_Line_OC48_STS48_and_MS_STM16"/>
      <xsd:enumeration value="LR_Line_OC192_STS192_and_MS_STM64"/>
      <xsd:enumeration value="LR_Line_OC768_STS768_and_MS_STM256"/>
      <xsd:enumeration value="LR_Low_Order_TU3_VC3"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3"/>
      <xsd:enumeration value="LR_STS3c_and_AU4_VC4"/>
      <xsd:enumeration value="LR_STS4c_and_VC3_4c"/>
      <xsd:enumeration value="LR_STS5c_and_VC3_5c"/>
      <xsd:enumeration value="LR_STS6c_and_VC4_2c"/>
      <xsd:enumeration value="LR_STS7c_and_VC3_7c"/>
      <xsd:enumeration value="LR_STS8c_and_VC3_8c"/>
      <xsd:enumeration value="LR_STS9c_and_VC4_3c"/>
      <xsd:enumeration value="LR_Optical_Channel"/>
      <xsd:enumeration value="LR_Optical_Multiplex_Section"/>
      <xsd:enumeration value="LR_OPTICAL_SECTION"/>
      <xsd:enumeration value="LR_Optical_Transmission_Section"/>
      <xsd:enumeration value="LR_PHYSICAL_ELECTRICAL"/>
      <xsd:enumeration value="LR_PHYSICAL_MEDIALESS"/>
      <xsd:enumeration value="LR_PHYSICAL_OPTICAL"/>
      <xsd:enumeration value="LR_POTS"/>
      <xsd:enumeration value="LR_Section_OC1_STS1_and_RS_STM0"/>
      <xsd:enumeration value="LR_Section_OC3_STS3_and_RS_STM1"/>
      <xsd:enumeration value="LR_Section_OC12_STS12_and_RS_STM4"/>
      <xsd:enumeration value="LR_Section_OC24_STS24_and_RS_STM8"/>
      <xsd:enumeration value="LR_Section_OC48_STS48_and_RS_STM16"/>
      <xsd:enumeration value="LR_Section_OC192_STS192_and_RS_STM64"/>
      <xsd:enumeration value="LR_Section_OC768_STS768_and_RS_STM256"/>
      <xsd:enumeration value="LR_STS1_and_AU3_High_Order_VC3"/>
      <xsd:enumeration value="LR_STS2c_and_VC3_2c"/>
      <xsd:enumeration value="LR_STS10c_and_VC3_10c"/>
      <xsd:enumeration value="LR_STS11c_and_VC3_11c"/>
      <xsd:enumeration value="LR_STS12c_and_VC4_4c"/>
      <xsd:enumeration value="LR_STS13c_and_VC3_13c"/>
      <xsd:enumeration value="LR_STS14c_and_VC3_14c"/>
      <xsd:enumeration value="LR_STS15c_and_VC4_5c"/>
      <xsd:enumeration value="LR_STS16c_and_VC3_16c"/>
      <xsd:enumeration value="LR_STS17c_and_VC3_17c"/>
      <xsd:enumeration value="LR_STS18c_and_VC4_6c"/>
      <xsd:enumeration value="LR_STS19c_and_VC3_19c"/>
      <xsd:enumeration value="LR_STS20c_and_VC3_20c"/>
      <xsd:enumeration value="LR_STS21c_and_VC4_7c"/>
      <xsd:enumeration value="LR_STS22c_and_VC3_22c"/>
      <xsd:enumeration value="LR_STS23c_and_VC3_23c"/>
      <xsd:enumeration value="LR_STS24c_and_VC4_8c"/>
      <xsd:enumeration value="LR_STS25c_and_VC3_25c"/>
      <xsd:enumeration value="LR_STS26c_and_VC3_26c"/>
      <xsd:enumeration value="LR_STS27c_and_VC4_9c"/>
      <xsd:enumeration value="LR_STS28c_and_VC3_28c"/>
      <xsd:enumeration value="LR_STS29c_and_VC3_29c"/>
      <xsd:enumeration value="LR_STS30c_and_VC4_10c"/>
      <xsd:enumeration value="LR_STS31c_and_VC3_31c"/>
      <xsd:enumeration value="LR_STS32c_and_VC3_32c"/>
      <xsd:enumeration value="LR_STS33c_and_VC4_11c"/>
      <xsd:enumeration value="LR_STS34c_and_VC3_34c"/>
      <xsd:enumeration value="LR_STS35c_and_VC3_35c"/>
      <xsd:enumeration value="LR_STS36c_and_VC4_12c"/>
      <xsd:enumeration value="LR_STS37c_and_VC3_37c"/>
      <xsd:enumeration value="LR_STS38c_and_VC3_38c"/>
      <xsd:enumeration value="LR_STS39c_and_VC4_13c"/>
      <xsd:enumeration value="LR_STS40c_and_VC3_40c"/>
      <xsd:enumeration value="LR_STS41c_and_VC3_41c"/>
      <xsd:enumeration value="LR_STS42c_and_VC4_14c"/>
      <xsd:enumeration value="LR_STS43c_and_VC3_43c"/>
      <xsd:enumeration value="LR_STS44c_and_VC3_44c"/>
      <xsd:enumeration value="LR_STS45c_and_VC4_15c"/>
      <xsd:enumeration value="LR_STS46c_and_VC3_46c"/>
      <xsd:enumeration value="LR_STS47c_and_VC3_47c"/>
      <xsd:enumeration value="LR_STS48c_and_VC4_16c"/>
      <xsd:enumeration value="LR_STS49c_and_VC3_49c"/>
      <xsd:enumeration value="LR_STS50c_and_VC3_50c"/>
      <xsd:enumeration value="LR_STS51c_and_VC4_17c"/>
      <xsd:enumeration value="LR_STS52c_and_VC3_52c"/>
      <xsd:enumeration value="LR_STS53c_and_VC3_53c"/>
      <xsd:enumeration value="LR_STS54c_and_VC4_18c"/>
      <xsd:enumeration value="LR_STS55c_and_VC3_55c"/>
      <xsd:enumeration value="LR_STS56c_and_VC3_56c"/>
      <xsd:enumeration value="LR_STS57c_and_VC4_19c"/>
      <xsd:enumeration value="LR_STS58c_and_VC3_58c"/>
      <xsd:enumeration value="LR_STS59c_and_VC3_59c"/>
      <xsd:enumeration value="LR_STS60c_and_VC4_20c"/>
      <xsd:enumeration value="LR_STS61c_and_VC3_61c"/>
      <xsd:enumeration value="LR_STS62c_and_VC3_62c"/>
      <xsd:enumeration value="LR_STS63c_and_VC4_21c"/>
      <xsd:enumeration value="LR_STS64c_and_VC3_64c"/>
      <xsd:enumeration value="LR_STS65c_and_VC3_65c"/>
      <xsd:enumeration value="LR_STS66c_and_VC4_22c"/>
      <xsd:enumeration value="LR_STS67c_and_VC3_67c"/>
      <xsd:enumeration value="LR_STS68c_and_VC3_68c"/>
      <xsd:enumeration value="LR_STS69c_and_VC4_23c"/>
      <xsd:enumeration value="LR_STS70c_and_VC3_70c"/>
      <xsd:enumeration value="LR_STS71c_and_VC3_71c"/>
      <xsd:enumeration value="LR_STS72c_and_VC4_24c"/>
      <xsd:enumeration value="LR_STS73c_and_VC3_73c"/>
      <xsd:enumeration value="LR_STS74c_and_VC3_74c"/>
      <xsd:enumeration value="LR_STS75c_and_VC4_25c"/>
      <xsd:enumeration value="LR_STS76c_and_VC3_76c"/>
      <xsd:enumeration value="LR_STS77c_and_VC3_77c"/>
      <xsd:enumeration value="LR_STS78c_and_VC4_26c"/>
      <xsd:enumeration value="LR_STS79c_and_VC3_79c"/>
      <xsd:enumeration value="LR_STS80c_and_VC3_80c"/>
      <xsd:enumeration value="LR_STS81c_and_VC4_27c"/>
      <xsd:enumeration value="LR_STS82c_and_VC3_82c"/>
      <xsd:enumeration value="LR_STS83c_and_VC3_83c"/>
      <xsd:enumeration value="LR_STS84c_and_VC4_28c"/>
      <xsd:enumeration value="LR_STS85c_and_VC3_85c"/>
      <xsd:enumeration value="LR_STS86c_and_VC3_86c"/>
      <xsd:enumeration value="LR_STS87c_and_VC4_29c"/>
      <xsd:enumeration value="LR_STS88c_and_VC3_88c"/>
      <xsd:enumeration value="LR_STS89c_and_VC3_89c"/>
      <xsd:enumeration value="LR_STS90c_and_VC4_30c"/>
      <xsd:enumeration value="LR_STS91c_and_VC3_91c"/>
      <xsd:enumeration value="LR_STS92c_and_VC3_92c"/>
      <xsd:enumeration value="LR_STS93c_and_VC4_31c"/>
      <xsd:enumeration value="LR_STS94c_and_VC3_94c"/>
      <xsd:enumeration value="LR_STS95c_and_VC3_95c"/>
      <xsd:enumeration value="LR_STS96c_and_VC4_32c"/>
      <xsd:enumeration value="LR_STS97c_and_VC3_97c"/>
      <xsd:enumeration value="LR_STS98c_and_VC3_98c"/>
      <xsd:enumeration value="LR_STS99c_and_VC4_33c"/>
      <xsd:enumeration value="LR_STS100c_and_VC3_100c"/>
      <xsd:enumeration value="LR_STS101c_and_VC3_101c"/>
      <xsd:enumeration value="LR_STS102c_and_VC4_34c"/>
      <xsd:enumeration value="LR_STS103c_and_VC3_103c"/>
      <xsd:enumeration value="LR_STS104c_and_VC3_104c"/>
      <xsd:enumeration value="LR_STS105c_and_VC4_35c"/>
      <xsd:enumeration value="LR_STS106c_and_VC3_106c"/>
      <xsd:enumeration value="LR_STS107c_and_VC3_107c"/>
      <xsd:enumeration value="LR_STS108c_and_VC4_36c"/>
      <xsd:enumeration value="LR_STS109c_and_VC3_109c"/>
      <xsd:enumeration value="LR_STS110c_and_VC3_110c"/>
      <xsd:enumeration value="LR_STS111c_and_VC4_37c"/>
      <xsd:enumeration value="LR_STS112c_and_VC3_112c"/>
      <xsd:enumeration value="LR_STS113c_and_VC3_113c"/>
      <xsd:enumeration value="LR_STS114c_and_VC4_38c"/>
      <xsd:enumeration value="LR_STS115c_and_VC3_115c"/>
      <xsd:enumeration value="LR_STS116c_and_VC3_116c"/>
      <xsd:enumeration value="LR_STS117c_and_VC4_39c"/>
      <xsd:enumeration value="LR_STS118c_and_VC3_118c"/>
      <xsd:enumeration value="LR_STS119c_and_VC3_119c"/>
      <xsd:enumeration value="LR_STS120c_and_VC4_40c"/>
      <xsd:enumeration value="LR_STS121c_and_VC3_121c"/>
      <xsd:enumeration value="LR_STS122c_and_VC3_122c"/>
      <xsd:enumeration value="LR_STS123c_and_VC4_41c"/>
      <xsd:enumeration value="LR_STS124c_and_VC3_124c"/>
      <xsd:enumeration value="LR_STS125c_and_VC3_125c"/>
      <xsd:enumeration value="LR_STS126c_and_VC4_42c"/>
      <xsd:enumeration value="LR_STS127c_and_VC3_127c"/>
      <xsd:enumeration value="LR_STS128c_and_VC3_128c"/>
      <xsd:enumeration value="LR_STS129c_and_VC4_43c"/>
      <xsd:enumeration value="LR_STS130c_and_VC3_130c"/>
      <xsd:enumeration value="LR_STS131c_and_VC3_131c"/>
      <xsd:enumeration value="LR_STS132c_and_VC4_44c"/>
      <xsd:enumeration value="LR_STS133c_and_VC3_133c"/>
      <xsd:enumeration value="LR_STS134c_and_VC3_134c"/>
      <xsd:enumeration value="LR_STS135c_and_VC4_45c"/>
      <xsd:enumeration value="LR_STS136c_and_VC3_136c"/>
      <xsd:enumeration value="LR_STS137c_and_VC3_137c"/>
      <xsd:enumeration value="LR_STS138c_and_VC4_46c"/>
      <xsd:enumeration value="LR_STS139c_and_VC3_139c"/>
      <xsd:enumeration value="LR_STS140c_and_VC3_140c"/>
      <xsd:enumeration value="LR_STS141c_and_VC4_47c"/>
      <xsd:enumeration value="LR_STS142c_and_VC3_142c"/>
      <xsd:enumeration value="LR_STS143c_and_VC3_143c"/>
      <xsd:enumeration value="LR_STS144c_and_VC4_48c"/>
      <xsd:enumeration value="LR_STS145c_and_VC3_145c"/>
      <xsd:enumeration value="LR_STS146c_and_VC3_146c"/>
      <xsd:enumeration value="LR_STS147c_and_VC4_49c"/>
      <xsd:enumeration value="LR_STS148c_and_VC3_148c"/>
      <xsd:enumeration value="LR_STS149c_and_VC3_149c"/>
      <xsd:enumeration value="LR_STS150c_and_VC4_50c"/>
      <xsd:enumeration value="LR_STS151c_and_VC3_151c"/>
      <xsd:enumeration value="LR_STS152c_and_VC3_152c"/>
      <xsd:enumeration value="LR_STS153c_and_VC4_51c"/>
      <xsd:enumeration value="LR_STS154c_and_VC3_154c"/>
      <xsd:enumeration value="LR_STS155c_and_VC3_155c"/>
      <xsd:enumeration value="LR_STS156c_and_VC4_52c"/>
      <xsd:enumeration value="LR_STS157c_and_VC3_157c"/>
      <xsd:enumeration value="LR_STS158c_and_VC3_158c"/>
      <xsd:enumeration value="LR_STS159c_and_VC4_53c"/>
      <xsd:enumeration value="LR_STS160c_and_VC3_160c"/>
      <xsd:enumeration value="LR_STS161c_and_VC3_161c"/>
      <xsd:enumeration value="LR_STS162c_and_VC4_54c"/>
      <xsd:enumeration value="LR_STS163c_and_VC3_163c"/>
      <xsd:enumeration value="LR_STS164c_and_VC3_164c"/>
      <xsd:enumeration value="LR_STS165c_and_VC4_55c"/>
      <xsd:enumeration value="LR_STS166c_and_VC3_166c"/>
      <xsd:enumeration value="LR_STS167c_and_VC3_167c"/>
      <xsd:enumeration value="LR_STS168c_and_VC4_56c"/>
      <xsd:enumeration value="LR_STS169c_and_VC3_169c"/>
      <xsd:enumeration value="LR_STS170c_and_VC3_170c"/>
      <xsd:enumeration value="LR_STS171c_and_VC4_57c"/>
      <xsd:enumeration value="LR_STS172c_and_VC3_172c"/>
      <xsd:enumeration value="LR_STS173c_and_VC3_173c"/>
      <xsd:enumeration value="LR_STS174c_and_VC4_58c"/>
      <xsd:enumeration value="LR_STS175c_and_VC3_175c"/>
      <xsd:enumeration value="LR_STS176c_and_VC3_176c"/>
      <xsd:enumeration value="LR_STS177c_and_VC4_59c"/>
      <xsd:enumeration value="LR_STS178c_and_VC3_178c"/>
      <xsd:enumeration value="LR_STS179c_and_VC3_179c"/>
      <xsd:enumeration value="LR_STS180c_and_VC4_60c"/>
      <xsd:enumeration value="LR_STS181c_and_VC3_181c"/>
      <xsd:enumeration value="LR_STS182c_and_VC3_182c"/>
      <xsd:enumeration value="LR_STS183c_and_VC4_61c"/>
      <xsd:enumeration value="LR_STS184c_and_VC3_184c"/>
      <xsd:enumeration value="LR_STS185c_and_VC3_185c"/>
      <xsd:enumeration value="LR_STS186c_and_VC4_62c"/>
      <xsd:enumeration value="LR_STS187c_and_VC3_187c"/>
      <xsd:enumeration value="LR_STS188c_and_VC3_188c"/>
      <xsd:enumeration value="LR_STS189c_and_VC4_63c"/>
      <xsd:enumeration value="LR_STS190c_and_VC3_190c"/>
      <xsd:enumeration value="LR_STS191c_and_VC3_191c"/>
      <xsd:enumeration value="LR_STS192c_and_VC4_64c"/>
      <xsd:enumeration value="LR_STS768c_and_VC4_256c"/>
      <xsd:enumeration value="LR_T1_and_DS1_1_5M"/>
      <xsd:enumeration value="LR_T2_and_DS2_6M"/>
      <xsd:enumeration value="LR_T3_and_DS3_45M"/>
      <xsd:enumeration value="LR_VT1_5_and_TU11_VC11"/>
      <xsd:enumeration value="LR_VT2_and_TU12_VC12"/>
      <xsd:enumeration value="LR_VT6_and_TU2_VC2"/>
      <!--The ones below were added in the MTOSI 2.1 release-->
      <xsd:enumeration value="LR_LAG_Fragment"/>
      <xsd:enumeration value="LR_DSR_10Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Megabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_2.5Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10.7Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_11.1Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_LAN"/>
      <xsd:enumeration value="LR_DSR_10Gigabit_Ethernet_WAN"/>
      <xsd:enumeration value="LR_DSR_40Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_100Gigabit_Ethernet"/>
      <xsd:enumeration value="LR_DSR_OTU2e"/>
      <xsd:enumeration value="LR_DSR_OTU3e1"/>
      <xsd:enumeration value="LR_DSR_OTU3e2"/>
      <xsd:enumeration value="LR_DSR_OTU4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_0"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_4"/>
      <xsd:enumeration value="LR_OCH_Data_Unit_Flexible"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_2e"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e1"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_3e2"/>
      <xsd:enumeration value="LR_OCH_Transport_Unit_4"/>
      <xsd:enumeration value="LR_Optical_Physical_Section"/>
      <xsd:enumeration value="LR_Optical_Physical_Section_Multilane"/>
      <xsd:enumeration value="LR_Section_OC3072_STS3072_and_RS_STM1024"/>
      <xsd:enumeration value="LR_Line_OC3072_STS3072_and_MS_STM1024"/>
      <xsd:enumeration value="LR_DSR_OC3072_and_STM1024"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=11</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PM ParameterName XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:element name="pmParameterName" type="tns:PerformanceMonitoringParameterNameType"/>
  <!--=================-->
  <!--TODO Should this be changed to a structure like in layers, where all possibilites are listed?-->
  <xsd:simpleType name="PerformanceMonitoringParameterNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Holds the name of Performance Measurements. It has
                    been defined as a string to accommodate backward
                    compatibility and proprietary extension.</p>
        <p>For currently standardized values see Performance
                    Parameters.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringParameterNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PerformanceMonitoringParameterName</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmParameterName" type="tns:PerformanceMonitoringParameterNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="PerformanceMonitoringThresholdTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes threshold types (watermark levels) for TCA
                    parameters. The TWM_HIGH and TWM_HIGHEST types are
                    used for TCAs</p>
        <p>that are raised when the measured value goes above
                    the threshold. The TWM_LOW and TWM_LOWEST types are
                    used for TCAs that</p>
        <p>are raised when the measured value goes below the
                    threshold (only apply to gauges).</p>
        <p/>
        <p>When there is only one level of TCA trigger, only
                    TWM_HIGH and/or TWM_LOW are used. When there are two
                    levels of TCA triggers,</p>
        <p>TWM_HIGHEST and/or TWM_LOWEST are used in addition.</p>
        <p>See SD1-37 PM Threshold Types for information on how
                    water mark levels are used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TWM_HIGHEST"/>
      <xsd:enumeration value="TWM_HIGH"/>
      <xsd:enumeration value="TWM_LOW"/>
      <xsd:enumeration value="TWM_LOWEST"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringGranularityListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PMGranularity</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmGranularity" type="tns:PerformanceMonitoringGranularityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="PerformanceMonitoringGranularityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Count period (interval) for which PM data may be
                    collected (and subsequently retrieved).</p>
        <p>
          <br>The value is one of:</br>
          <br>"15min" (15 minute interval collection)</br>
          <br>"24h" (24 hour interval collection)</br>
          <br>"NA" (for current instantaneous measurements)</br>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="15min"/>
      <xsd:enumeration value="24h"/>
      <xsd:enumeration value="NA"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="PerformanceMonitoringIntervalStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The following string values, to indicate the
                    relationship of measurement value and measurement interval</p>
        <p>
          <br>The value is one of:</br>
          <br>PMIS_Valid - Valid data.</br>
          <br>PMIS_Incomplete - Data not available for the
                        complete interval.</br>
          <br>PMIS_Invalid - Data available but marked as
                        invalid for the interval (can not distinguish
                        incomplete measurements from invalid measurements.</br>
          <br>PMIS_Unavailable - No data available at all for
                        this interval.</br>
          <br>PMIS_ZeroSuppressed - Zero-suppressed intervals.</br>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PMIS_Valid"/>
      <xsd:enumeration value="PMIS_Incomplete"/>
      <xsd:enumeration value="PMIS_Invalid"/>
      <xsd:enumeration value="PMIS_Unavailable"/>
      <xsd:enumeration value="PMIS_ZeroSuppressed"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringLocationListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PMLocation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmLocation" type="tns:PerformanceMonitoringLocationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="PerformanceMonitoringLocationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specification of PM location. For further details,
                    see supporting documentation: Location Identification).</p>
        <p>PM parameters may relate to measurements taken on
                    receive or transmit traffic either at the named TP
                    (PML_NEAR_END_Rx/Tx) or at the TP at the far end of
                    the trail (circuit/path) connected to the named TP
                    (PML_FAR_END_Rx/Tx). Alternatively, the PM
                    parameters may be bidirectional (PML_BIDIRECTIONAL)
                    e.g. resulting from a second by second summation and
                    evaluation of both far and near TPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PML_NEAR_END_Rx"/>
      <xsd:enumeration value="PML_FAR_END_Rx"/>
      <xsd:enumeration value="PML_FAR_ENDTypex"/>
      <xsd:enumeration value="PML_BIDIRECTIONAL"/>
      <xsd:enumeration value="PML_CONTRA_NEAR_END_Rx"/>
      <xsd:enumeration value="PML_CONTRA_FAR_END_Rx"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="HoldingTimeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type contains the minimum time the 24h PM
                    data records and 15min PM data records can hold the
                    data. This minimum time refers to the time after the
                    particular collection bins are closed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="storeTime24hr"/>
      <xsd:enumeration value="storeTime15min"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="TriggerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This type is used to indicate whether a threshold
                    type shall trigger a “raise” or a “clear” TCA</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="raise"/>
      <xsd:enumeration value="clear"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=10</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/pmdata/v1" version="1.0" xmlns:lr="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:pm="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:pmmsrt="http://www.tmforum.org/mtop/nra/xsd/pmmsrt/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/pmdata/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PM Data XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=8"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pmmsrt/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=12"/>
  <!--=================-->
  <xsd:element name="pmData" type="tns:PerformanceMonitoringDataType"/>
  <!--=================-->
  <xsd:complexType name="PerformanceMonitoringDataType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type contains TP related performance
                    measurements and some service related data.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="tpName" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute contains the name of the
                            object to which the performance measurements
                            belong to.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="layerRate" nillable="true" type="lr:LayerRateType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the layer rate of the Layer of the
                            collected PM data.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="granularity" nillable="true" type="pm:PerformanceMonitoringGranularityType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute identifies the granularity of
                            the data.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="retrievalTime" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>
            <p>The time provided by the NE. In a case where
                            the NE does not report time, this field is
                            optional or an empty string can be reported.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="pmMeasurementList" nillable="true" type="pmmsrt:PerformanceMonitoringMeasurementListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute identifies the PM measurement values.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringDataListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PerformanceMonitoringData</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmData" type="tns:PerformanceMonitoringDataType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=12</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/pmmsrt/v1" version="1.0" xmlns:pm="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/pmmsrt/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PM Measurment XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=11"/>
  <!--=================-->
  <xsd:element name="pmMeasurement" type="tns:PerformanceMonitoringMeasurementType"/>
  <!--=================-->
  <xsd:complexType name="PerformanceMonitoringMeasurementType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Holds a PM measurement and description of validity.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="pmParameterName" nillable="true" type="pm:PerformanceMonitoringParameterNameType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the name of the PM Measure.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="pmLocation" nillable="true" type="pm:PerformanceMonitoringLocationType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the location of the PM Measure.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="value" nillable="true" type="xsd:float">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute identifies the value of the PM
                            Measurement (real used to incorporate gauge
                            PM parameters).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="measurementUnits" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute identifies the unit of the PM
                            Measurement in a free format string.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="pmIntervalStatus" nillable="true" type="pm:PerformanceMonitoringIntervalStatusType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the relationship of measurement
                            value and measurement interval.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringMeasurementListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PerformanceMonitoringMeasurements</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmMeasurement" type="tns:PerformanceMonitoringMeasurementType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=16</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/pmp/v1" version="1.0" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:itu="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:pm="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:pmth="http://www.tmforum.org/mtop/nra/xsd/pmth/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/pmp/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP Pmp XML structure.</p>
      TODO: Why are the object attributes different than in MTNM
            v3.5?
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=5"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=11"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pmth/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=15"/>
  <!--=================-->
  <xsd:complexType name="PerformanceMonitoringPointType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This object represents one performance monitoring
                    point (PMP). It is determined by the containing
                    TerminationPoint (TP) and by the layer rate, the PM
                    location and the granularity the monitoring is done
                    for. PMP objects are contained in TPs and represent
                    the PM capabilities of their containing TP(s).</p>
        <p>Activation and deactivation of Performance Monitoring
                    respectively Performance Threshold Supervision is
                    achieved by changing the Monitoring      State or
                    Supervision State of the related PMP.</p>
        <p>
          The monitoring state of a PMP is set to:
          <ul>
            <li>unlocked using the operation enablePMData,
                            (activate Performance Monitoring)</li>
            <li>locked using the operation disablePMData,
                            (deactivate Performance Monitoring)</li>
          </ul>
        </p>
        <p>
          The supervision state of a PMP is set to:
          <ul>
            <li>
              <b>unlocked</b>
              by using the operation
                            enableTCA, (activate Performance Threshold
                            Supervision),
            </li>
            <li>
              <b>locked</b>
              by using the operation
                            disableTCA, (deactivate Performance
                            Threshold Supervision).
            </li>
          </ul>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="layerRate" nillable="true" type="lay:LayerRateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Represents the layer rate of the PMP.
                                    The layer specified must be
                                    supported by the containing TP.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="pmLocation" nillable="true" type="pm:PerformanceMonitoringLocationType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Represents the location of the
                                    performance monitoring measurement.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="granularity" nillable="true" type="pm:PerformanceMonitoringGranularityType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Represents the time granularity of
                                    the PMP, either 15 minutes or 24
                                    hours. This attribute is not
                                    applicable for instantaneous
                                    measurements (i.e. gauge type measurements).</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="supervisionState" nillable="true" type="itu:X721.AdministrativeStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Represents whether threshold
                                    supervision is enabled or disabled.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="monitoringState" nillable="true" type="itu:X721.AdministrativeStateType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Represents performance monitoring is
                                    enabled or disabled.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="pmParameterList" nillable="true" type="pm:PerformanceMonitoringParameterNameListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Represents a list of the names of the
                                    PM parameter associated with the
                                    PMP. Refer to supporting document
                                    SD1-28 (PerformanceParameters) for
                                    the list of currently defined
                                    performance parameters.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="pmThresholdList" nillable="true" type="pmth:PerformanceMonitoringThresholdListType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Represents a list of the names of the
                                    thresholds associated with each PM parameter.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringPointListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PerformanceMonitoringPoint</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmp" type="tns:PerformanceMonitoringPointType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" version="1.0" xmlns:coi="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:itu="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP XML CommonResourceInfo structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=5"/>
  <!--=================-->
  <xsd:element name="commonResourceInfo" substitutionGroup="coi:commonObjectInfo" type="tns:CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition for common resource info</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines attributes common to all mTOP
                    resource objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="coi:CommonObjectInfoType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="source" nillable="true" type="tns:SourceType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the object was
                                    discovered or entered in OS inventory.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="networkAccessDomain" nillable="true" type="gen:NetworkAccessDomainType"/>
          <xsd:element minOccurs="0" name="meiAttributes" nillable="true" type="gen:MultiEventInventoryAttributesType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is used when a object
                                    instance is embedded in the
                                    inventory      layout payload of a
                                    Multi-Event Inventory (MEI)
                                    notification. It provides the
                                    time at which the NE detected the
                                    inventory change (if available) and
                                    an indication      of the type of
                                    inventory update, e.g., Object Creation.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="resourceState" nillable="true" type="tns:ResourceStateType"/>
          <xsd:element name="ituStateAndStatusList" type="itu:ItuStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates whether the object was discovered from the
                    network, or was entered into the OS's inventory.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:SourceEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SourceEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NETWORK_ME">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered directly from the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was entered into an OS on the CCV,
                            e.g., OS GUI or file transfer to the OS from
                            some other system.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NETWORK_EMS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered from an EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates the state of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceStateEnumType">
        <xsd:attribute name="overlap" type="xsd:string" use="optional"/>
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ResourceStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="INSTALLING"/>
      <xsd:enumeration value="INSTALLING_ACCEPTED"/>
      <xsd:enumeration value="INSTALLING_COMMISSIONED"/>
      <xsd:enumeration value="INSTALLING_DELIVERED"/>
      <xsd:enumeration value="INSTALLING_INSTALLED"/>
      <xsd:enumeration value="INSTALLING_INTEGRATED"/>
      <xsd:enumeration value="INSTALLING_REJECTED"/>
      <xsd:enumeration value="NON_WORKING"/>
      <xsd:enumeration value="PLANNING"/>
      <xsd:enumeration value="PLANNING_INITIAL_PLAN"/>
      <xsd:enumeration value="PLANNING_ORDERED"/>
      <xsd:enumeration value="PLANNING_PLANNED"/>
      <xsd:enumeration value="RETIRING"/>
      <xsd:enumeration value="RETIRING_DECOMMISSIONED"/>
      <xsd:enumeration value="RETIRING_DEINSTALLED"/>
      <xsd:enumeration value="RETIRING_DEINTEGRATED"/>
      <xsd:enumeration value="RETIRING_RECOVERED"/>
      <xsd:enumeration value="RETIRING_STORED"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_ACTIVE"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_UNAVAILABLE"/>
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="WORKING"/>
      <xsd:enumeration value="WORKING_ACTIVATED"/>
      <xsd:enumeration value="WORKING_DEACTIVATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ObjectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the enumeration of all the known object type
                    short names related to resources (at the time of
                    this module definition). It is only provided as an
                    implementation helper. For details of all object
                    types and their naming refer to SD2-7 ObjectNaming
                    (FMW DDP).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AID">
        <xsd:annotation>
          <xsd:documentation>Alarm IDentifier (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASA">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASAP">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment Profile (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CTP">
        <xsd:annotation>
          <xsd:documentation>Connection Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EH">
        <xsd:annotation>
          <xsd:documentation>Equipment Holder (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EPG">
        <xsd:annotation>
          <xsd:documentation>Equipment Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EQ">
        <xsd:annotation>
          <xsd:documentation>Equipment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FD">
        <xsd:annotation>
          <xsd:documentation>Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FDFR">
        <xsd:annotation>
          <xsd:documentation>Flow Domain Fragment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FTP">
        <xsd:annotation>
          <xsd:documentation>Flow Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GTP">
        <xsd:annotation>
          <xsd:documentation>Group Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MD">
        <xsd:annotation>
          <xsd:documentation>Management Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ME">
        <xsd:annotation>
          <xsd:documentation>Managed Element (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MFD">
        <xsd:annotation>
          <xsd:documentation>Matrix Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MLSN">
        <xsd:annotation>
          <xsd:documentation>Multi Layer Subnetwork (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>Operations System (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PG">
        <xsd:annotation>
          <xsd:documentation>Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PMP">
        <xsd:annotation>
          <xsd:documentation>Performance Monitoring Point (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PTP">
        <xsd:annotation>
          <xsd:documentation>Physical Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SNC">
        <xsd:annotation>
          <xsd:documentation>Subnetwork Connection (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCPROFILE">
        <xsd:annotation>
          <xsd:documentation>Traffic Condifitioning Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCAPP">
        <xsd:annotation>
          <xsd:documentation>Threshold Crossing Alert
                        Parameter Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TL">
        <xsd:annotation>
          <xsd:documentation>Topological Link (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TMD">
        <xsd:annotation>
          <xsd:documentation>Transmission Descriptor (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TPPOOL">
        <xsd:annotation>
          <xsd:documentation>Termination Point Pool (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common object information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=8"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=3"/>
  <!--==============-->
  <xsd:element name="commonObjectInfo" type="tns:CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute represents a unique
                            name/identifier for the object on the CCV.
                            Consult the SD2-7 about object naming for
                            additional normative references.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="userLabel" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="discoveredName" type="gen:DiscoveredNameType"/>
      <xsd:element minOccurs="0" name="namingOs" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the object attribute definition to
                            identify the name of the OS that provided
                            the unique MTOSI name for the object. It is
                            assumed that each object (that is published
                            on the CCV) has a unique naming OS. This
                            attribute is optional in a point to point
                            NMS-EMS paradigm.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="owner" nillable="true" type="gen:OwnerType"/>
      <xsd:element minOccurs="0" name="aliasNameList" nillable="true" type="gen:AliasNameListType"/>
      <xsd:element minOccurs="0" name="vendorExtensions" nillable="true" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=5</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T state or status
                parameters supported in mTOP</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="x721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="x721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="x721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="x721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="x721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="m3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="m3100.CircuitPackType" type="tns:M3100.CircuitPackTypeType"/>
      <xsd:element minOccurs="0" name="x721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:element minOccurs="0" name="x721.State" type="tns:X721.StateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="X721.OperationalStateType">
    <xsd:annotation>
      <xsd:documentation>Oper[ational] State parameter from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DISABLED"/>
      <xsd:enumeration value="UNABLED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AdministrativeStateType">
    <xsd:annotation>
      <xsd:documentation>Admin[istrative] State parameter from
                ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="LOCKED"/>
      <xsd:enumeration value="UNLOCKED"/>
      <xsd:enumeration value="SHUTTING_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UsageStateType">
    <xsd:annotation>
      <xsd:documentation>Usage State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IDLE"/>
      <xsd:enumeration value="ACTIVE"/>
      <xsd:enumeration value="BUSY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AvailabilityStatusType">
    <xsd:annotation>
      <xsd:documentation>Avail[ability] Status based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="INTypeEST"/>
      <xsd:enumeration value="FAILED"/>
      <xsd:enumeration value="POWER_OFF"/>
      <xsd:enumeration value="OFF_LINE"/>
      <xsd:enumeration value="OFF_DUTY"/>
      <xsd:enumeration value="DEPENDENCY"/>
      <xsd:enumeration value="DEGRADED"/>
      <xsd:enumeration value="NOT_INSTALLED"/>
      <xsd:enumeration value="LOG_FULL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.ControlStatusType">
    <xsd:annotation>
      <xsd:documentation>Control Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="SUBJECTTypeOTypeEST"/>
      <xsd:enumeration value="PART_OF_SERVICES_LOCKED"/>
      <xsd:enumeration value="RESERVED_FORTypeEST"/>
      <xsd:enumeration value="SUSPENDED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.HolderStatusType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HOLDER_EMPTY"/>
      <xsd:enumeration value="INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="NOT_INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="UNKNOWNTypeYPE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.CircuitPackTypeType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UnkownstatusType">
    <xsd:annotation>
      <xsd:documentation>Unknown Status parameter based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="X721.StateType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="X721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="X721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="X721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="X721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="X721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="M3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="X721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=15</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/pmth/v1" version="1.0" xmlns:pm="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/pmth/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PM Thrhold XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=11"/>
  <!--=================-->
  <xsd:element name="pmThreshold" type="tns:PerformanceMonitoringThresholdType"/>
  <!--=================-->
  <xsd:complexType name="PerformanceMonitoringThresholdType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This structure represents a Performance Monitoring
                    Threshold.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="thresholdType" nillable="true" type="pm:PerformanceMonitoringThresholdTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the type of threshold value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="trigger" nillable="true" type="pm:TriggerType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Indicates if the threshold triggers an raise
                            or clear alert</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="thresholdValue" nillable="true" type="xsd:float">
        <xsd:annotation>
          <xsd:documentation>
            <p>Threshold value (float used to incorporate
                            gauge PM parameters).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="thresholdUnit" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>Free format string describing the units for
                            the threshold value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringThresholdListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PM Thresholds</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmThreshold" type="tns:PerformanceMonitoringThresholdType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=14</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/pmpar/v1" version="1.0" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:pm="http://www.tmforum.org/mtop/nra/xsd/pm/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/pmpar/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP PM Parameter XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/pm/v1" schemaLocation="http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval/PerformanceManagementRetrievalHttp?xsd=11"/>
  <!--=================-->
  <xsd:element name="pmParameter" type="tns:PerformanceMonitoringParameterType"/>
  <!--=================-->
  <xsd:complexType name="PerformanceMonitoringParameterType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Used to represent the PM parameter name of the PM
                    measure qualified by its location.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmParameter" type="pm:PerformanceMonitoringParameterNameType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the name of the PM Measurement.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmLocation" type="pm:PerformanceMonitoringLocationType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the location of the PM Measure.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="PerformanceMonitoringParameterListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of PerformanceMonitoringParameter</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="pmParameter" type="tns:PerformanceMonitoringParameterType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Represents the name of the PM Measure.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint></con:endpoints><con:operation isOneWay="false" action="getAllCurrentPerformanceMonitoringData" name="getAllCurrentPerformanceMonitoringData" bindingOperationName="getAllCurrentPerformanceMonitoringData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:v12="http://www.tmforum.org/mtop/nra/xsd/pmtgt/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:v15="http://www.tmforum.org/mtop/nra/xsd/pm/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllCurrentPerformanceMonitoringDataRequest>
         <!--Optional:-->
         <v11:pmObjectSelectList>
            <!--Zero or more repetitions:-->
            <v12:pmObjectSelect>
               <!--Optional:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v13:rdn>
                     <v13:type>?</v13:type>
                     <v13:value>?</v13:value>
                  </v13:rdn>
               </v12:name>
               <!--Optional:-->
               <v12:layerRateList>
                  <!--Zero or more repetitions:-->
                  <v14:layerRate extension="?">?</v14:layerRate>
               </v12:layerRateList>
               <!--Optional:-->
               <v12:pmLocationList>
                  <!--Zero or more repetitions:-->
                  <v15:pmLocation>?</v15:pmLocation>
               </v12:pmLocationList>
               <!--Optional:-->
               <v12:granularityList>
                  <!--Zero or more repetitions:-->
                  <v15:pmGranularity>?</v15:pmGranularity>
               </v12:granularityList>
            </v12:pmObjectSelect>
         </v11:pmObjectSelectList>
         <!--Optional:-->
         <v11:pmParameterList>
            <!--Zero or more repetitions:-->
            <v15:pmParameterName>?</v15:pmParameterName>
         </v11:pmParameterList>
      </v11:getAllCurrentPerformanceMonitoringDataRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllCurrentPerformanceMonitoringData"/></con:call></con:operation><con:operation isOneWay="false" action="getAllPerformanceMonitoringPoints" name="getAllPerformanceMonitoringPoints" bindingOperationName="getAllPerformanceMonitoringPoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllPerformanceMonitoringPointsRequest>
         <!--Optional:-->
         <v11:tpOrMeName>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpOrMeName>
      </v11:getAllPerformanceMonitoringPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllPerformanceMonitoringPoints"/></con:call></con:operation><con:operation isOneWay="false" action="getHistoryPerformanceMonitoringData" name="getHistoryPerformanceMonitoringData" bindingOperationName="getHistoryPerformanceMonitoringData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:v12="http://www.tmforum.org/mtop/nra/xsd/pmtgt/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:v15="http://www.tmforum.org/mtop/nra/xsd/pm/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getHistoryPerformanceMonitoringDataRequest>
         <v11:userName>?</v11:userName>
         <v11:password>?</v11:password>
         <v11:destination>?</v11:destination>
         <!--Optional:-->
         <v11:pmObjectSelectList>
            <!--Zero or more repetitions:-->
            <v12:pmObjectSelect>
               <!--Optional:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v13:rdn>
                     <v13:type>?</v13:type>
                     <v13:value>?</v13:value>
                  </v13:rdn>
               </v12:name>
               <!--Optional:-->
               <v12:layerRateList>
                  <!--Zero or more repetitions:-->
                  <v14:layerRate extension="?">?</v14:layerRate>
               </v12:layerRateList>
               <!--Optional:-->
               <v12:pmLocationList>
                  <!--Zero or more repetitions:-->
                  <v15:pmLocation>?</v15:pmLocation>
               </v12:pmLocationList>
               <!--Optional:-->
               <v12:granularityList>
                  <!--Zero or more repetitions:-->
                  <v15:pmGranularity>?</v15:pmGranularity>
               </v12:granularityList>
            </v12:pmObjectSelect>
         </v11:pmObjectSelectList>
         <!--Optional:-->
         <v11:pmParameterList>
            <!--Zero or more repetitions:-->
            <v15:pmParameterName>?</v15:pmParameterName>
         </v11:pmParameterList>
         <!--Optional:-->
         <v11:startTime>?</v11:startTime>
         <!--Optional:-->
         <v11:endTime>?</v11:endTime>
         <!--Optional:-->
         <v11:mustForceUpload>?</v11:mustForceUpload>
      </v11:getHistoryPerformanceMonitoringDataRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getHistoryPerformanceMonitoringData"/></con:call></con:operation><con:operation isOneWay="false" action="getHoldingTime" name="getHoldingTime" bindingOperationName="getHoldingTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getHoldingTimeRequest>?</v11:getHoldingTimeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getHoldingTime"/></con:call></con:operation><con:operation isOneWay="false" action="getMePerformanceMonitoringCapabilities" name="getMePerformanceMonitoringCapabilities" bindingOperationName="getMePerformanceMonitoringCapabilities" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getMePerformanceMonitoringCapabilitiesRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:layerRate extension="?">?</v11:layerRate>
      </v11:getMePerformanceMonitoringCapabilitiesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getMePerformanceMonitoringCapabilities"/></con:call></con:operation><con:operation isOneWay="false" action="getPerformanceMonitoringDataIterator" name="getPerformanceMonitoringDataIterator" bindingOperationName="getPerformanceMonitoringDataIterator" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getPerformanceMonitoringDataIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getPerformanceMonitoringDataIterator"/></con:call></con:operation><con:operation isOneWay="false" action="getPerformanceMonitoringPointsIterator" name="getPerformanceMonitoringPointsIterator" bindingOperationName="getPerformanceMonitoringPointsIterator" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getPerformanceMonitoringPointsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getPerformanceMonitoringPointsIterator"/></con:call></con:operation><con:operation isOneWay="false" action="getProfileAssociatedTerminationPoints" name="getProfileAssociatedTerminationPoints" bindingOperationName="getProfileAssociatedTerminationPoints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getProfileAssociatedTerminationPointsRequest>
         <!--Optional:-->
         <v11:profileRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:profileRef>
      </v11:getProfileAssociatedTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getProfileAssociatedTerminationPoints"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="EquipmentInventoryRetrievalSoapHttpBinding" type="wsdl" bindingName="{http://www.tmforum.org/mtop/mri/wsdl/eir/v1-0}EquipmentInventoryRetrievalSoapHttpBinding" soapVersion="1_1" anonymous="optional" definition="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp.wsdl?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp.wsdl?wsdl"><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp.wsdl?wsdl</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-EquipmentInventoryRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/mri/wsdl/eir/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/mri/wsdl/eir/v1-0" xmlns:WL5G3N2="http://schemas.xmlsoap.org/wsdl/soap/">
  <WL5G3N0:import location="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?wsdl=1" namespace="http://www.tmforum.org/mtop/mri/wsdl/eir/v1-0"/>
  <WL5G3N0:documentation>DDP: ManageResourceInventory
    Module: EquipmentInventoryRetrieval Service Interface WSDL HTTP Module
    Description: This module contains all the mTOP EquipmentInventoryRetrieval Service Interface WSDL definitions for the Web Service deployment profile with SOAP/HTTP binding.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:portType name="EquipmentInventoryRetrieval_RPC">
    <WL5G3N0:documentation>The EquipmentInventoryRetrieval porttype (interface) for RPC (synchronous) based client/server communication patterns. All SIT operations use the specific get"ObjectType"Iterator operation to handle multiple responses.</WL5G3N0:documentation>
    <WL5G3N0:operation name="getAllEquipment">
      <WL5G3N0:input message="WL5G3N1:getAllEquipmentRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllEquipmentResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllEquipmentException" name="getAllEquipmentException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllSupportingEquipment">
      <WL5G3N0:input message="WL5G3N1:getAllSupportingEquipmentRequest"/>
      <WL5G3N0:output message="WL5G3N1:getAllSupportingEquipmentResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getAllSupportingEquipmentException" name="getAllSupportingEquipmentException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getContainedEquipment">
      <WL5G3N0:input message="WL5G3N1:getContainedEquipmentRequest"/>
      <WL5G3N0:output message="WL5G3N1:getContainedEquipmentResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getContainedEquipmentException" name="getContainedEquipmentException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getEquipment">
      <WL5G3N0:input message="WL5G3N1:getEquipmentRequest"/>
      <WL5G3N0:output message="WL5G3N1:getEquipmentResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getEquipmentException" name="getEquipmentException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSupportedEquipment">
      <WL5G3N0:input message="WL5G3N1:getSupportedEquipmentRequest"/>
      <WL5G3N0:output message="WL5G3N1:getSupportedEquipmentResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getSupportedEquipmentException" name="getSupportedEquipmentException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSupportingEquipment">
      <WL5G3N0:input message="WL5G3N1:getSupportingEquipmentRequest"/>
      <WL5G3N0:output message="WL5G3N1:getSupportingEquipmentResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getSupportingEquipmentException" name="getSupportingEquipmentException"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getEquipmentIterator">
      <WL5G3N0:input message="WL5G3N1:getEquipmentIteratorRequest"/>
      <WL5G3N0:output message="WL5G3N1:getEquipmentIteratorResponse"/>
      <WL5G3N0:fault message="WL5G3N1:getEquipmentIteratorException" name="getEquipmentIteratorException"/>
    </WL5G3N0:operation>
  </WL5G3N0:portType>
  <WL5G3N0:binding name="EquipmentInventoryRetrievalSoapHttpBinding" type="WL5G3N1:EquipmentInventoryRetrieval_RPC">
    <WL5G3N0:documentation>SOAP HTTP binding definitions of the operations of the EquipmentInventoryRetrieval RPC portType (interface)</WL5G3N0:documentation>
    <WL5G3N2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <WL5G3N0:operation name="getAllEquipment">
      <WL5G3N2:operation soapAction="getAllEquipment" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllEquipmentRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllEquipmentResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllEquipmentException">
        <WL5G3N2:fault name="getAllEquipmentException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getAllSupportingEquipment">
      <WL5G3N2:operation soapAction="getAllSupportingEquipment" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getAllSupportingEquipmentRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getAllSupportingEquipmentResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getAllSupportingEquipmentException">
        <WL5G3N2:fault name="getAllSupportingEquipmentException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getContainedEquipment">
      <WL5G3N2:operation soapAction="getContainedEquipment" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getContainedEquipmentRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getContainedEquipmentResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getContainedEquipmentException">
        <WL5G3N2:fault name="getContainedEquipmentException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getEquipment">
      <WL5G3N2:operation soapAction="getEquipment" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getEquipmentRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getEquipmentResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getEquipmentException">
        <WL5G3N2:fault name="getEquipmentException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSupportedEquipment">
      <WL5G3N2:operation soapAction="getSupportedEquipment" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getSupportedEquipmentRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getSupportedEquipmentResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getSupportedEquipmentException">
        <WL5G3N2:fault name="getSupportedEquipmentException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getSupportingEquipment">
      <WL5G3N2:operation soapAction="getSupportingEquipment" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getSupportingEquipmentRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getSupportingEquipmentResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getSupportingEquipmentException">
        <WL5G3N2:fault name="getSupportingEquipmentException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="getEquipmentIterator">
      <WL5G3N2:operation soapAction="getEquipmentIterator" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:header message="WL5G3N1:getEquipmentIteratorRequest" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:header message="WL5G3N1:getEquipmentIteratorResponse" part="mtopHeader" use="literal"/>
        <WL5G3N2:body parts="mtopBody" use="literal"/>
      </WL5G3N0:output>
      <WL5G3N0:fault name="getEquipmentIteratorException">
        <WL5G3N2:fault name="getEquipmentIteratorException" use="literal"/>
      </WL5G3N0:fault>
    </WL5G3N0:operation>
  </WL5G3N0:binding>
  <WL5G3N0:service name="EquipmentInventoryRetrievalHttp">
    <WL5G3N0:documentation>Example of the EquipmentInventoryRetrieval WSDL Service definition as a deployment example of this mTOP Service Interface. It is expected to be modified to match the specific deployment configuration in a service provider's CCV.</WL5G3N0:documentation>
    <WL5G3N0:port binding="WL5G3N1:EquipmentInventoryRetrievalSoapHttpBinding" name="EquipmentInventoryRetrievalSoapHttp">
      <WL5G3N2:address location="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp"/>
    </WL5G3N0:port>
  </WL5G3N0:service>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?wsdl=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<WL5G3N0:definitions name="mTOP-EquipmentInventoryRetrievalV1-0" targetNamespace="http://www.tmforum.org/mtop/mri/wsdl/eir/v1-0" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:WL5G3N2="http://www.tmforum.org/mtop/mri/xsd/eir/v1">
  <WL5G3N0:documentation>DDP: ManageResourceInventory
    Module: EquipmentInventoryRetrieval Service Interface WSDL Message Module
    Description: This module contains all the mTOP EquipmentInventoryRetrieval Service Interface WSDL message definitions.
    Version: 1.0</WL5G3N0:documentation>
  <WL5G3N0:types>
    <xsd:schema xmlns:eir="http://www.tmforum.org/mtop/mri/xsd/eir/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/mri/wsdl/eir/v1-0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.tmforum.org/mtop/mri/xsd/eir/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=8"/>
    </xsd:schema>
  </WL5G3N0:types>
  <WL5G3N0:message name="getAllEquipmentRequest">
    <WL5G3N0:documentation>The getAllEquipment request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllEquipmentRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllEquipmentResponse">
    <WL5G3N0:documentation>The getAllEquipment response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllEquipmentResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllEquipmentException">
    <WL5G3N0:documentation>The getAllEquipment exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllEquipmentException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllSupportingEquipmentRequest">
    <WL5G3N0:documentation>The getAllSupportingEquipment request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllSupportingEquipmentRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllSupportingEquipmentResponse">
    <WL5G3N0:documentation>The getAllSupportingEquipment response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getAllSupportingEquipmentResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getAllSupportingEquipmentException">
    <WL5G3N0:documentation>The getAllSupportingEquipment exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getAllSupportingEquipmentException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainedEquipmentRequest">
    <WL5G3N0:documentation>The getContainedEquipment request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getContainedEquipmentRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainedEquipmentResponse">
    <WL5G3N0:documentation>The getContainedEquipment response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getContainedEquipmentResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getContainedEquipmentException">
    <WL5G3N0:documentation>The getContainedEquipment exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getContainedEquipmentException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getEquipmentRequest">
    <WL5G3N0:documentation>The getEquipment request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getEquipmentRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getEquipmentResponse">
    <WL5G3N0:documentation>The getEquipment response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getEquipmentResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getEquipmentException">
    <WL5G3N0:documentation>The getEquipment exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getEquipmentException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSupportedEquipmentRequest">
    <WL5G3N0:documentation>The getSupportedEquipment request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSupportedEquipmentRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSupportedEquipmentResponse">
    <WL5G3N0:documentation>The getSupportedEquipment response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSupportedEquipmentResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSupportedEquipmentException">
    <WL5G3N0:documentation>The getSupportedEquipment exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getSupportedEquipmentException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSupportingEquipmentRequest">
    <WL5G3N0:documentation>The getSupportingEquipment request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSupportingEquipmentRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSupportingEquipmentResponse">
    <WL5G3N0:documentation>The getSupportingEquipment response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getSupportingEquipmentResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getSupportingEquipmentException">
    <WL5G3N0:documentation>The getSupportingEquipment exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getSupportingEquipmentException" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getEquipmentIteratorRequest">
    <WL5G3N0:documentation>The getEquipmentIterator request message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getEquipmentIteratorRequest" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getEquipmentIteratorResponse">
    <WL5G3N0:documentation>The getEquipmentIterator response message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N1:header" name="mtopHeader"/>
    <WL5G3N0:part element="WL5G3N2:getEquipmentIteratorResponse" name="mtopBody"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getEquipmentIteratorException">
    <WL5G3N0:documentation>The getEquipmentIterator exception message.</WL5G3N0:documentation>
    <WL5G3N0:part element="WL5G3N2:getEquipmentIteratorException" name="mtopBody"/>
  </WL5G3N0:message>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=8</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/mri/xsd/eir/v1" version="1.0" xmlns:eh="http://www.tmforum.org/mtop/nrf/xsd/eh/v1" xmlns:ei="http://www.tmforum.org/mtop/nrf/xsd/eq-inv/v1" xmlns:eq="http://www.tmforum.org/mtop/nrf/xsd/eq/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/mri/xsd/eir/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Manage Resource Inventory</p>
      <p>Module:  Message XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the mTOP EquipmentInventoryRetrieval
                SI XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=13"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=14"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/eq/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/eh/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=5"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/eq-inv/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=7"/>
  <!--================-->
  <xsd:element name="getAllEquipmentRequest" type="tns:GetAllEquipmentRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getAllEquipment operation</p>
        <p>This operation returns all Equipment and Equipment
                    Holders that are contained in a provided Managed
                    Element or Equipment Holder.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllEquipmentResponse" type="ei:EquipmentOrEquipmentHolderListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getAllEquipment operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllEquipmentException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getAllEquipment operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllSupportingEquipmentRequest" type="tns:GetAllEquipmentWithPtpRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllSupportingEquipment operation</p>
        <p>This operation returns all Equipment that supports a
                    provided Physical Termination Point (PTP) or
                    Floating Termination Point (FTP).</p>
        <p>For a PTP, the Equipment that are returned are those
                    which support the physical layer of the PTP (i.e.
                    implements the port or are connected by a fibre,
                    wire, etc.).</p>
        <p>For an FTP, the Equipment returned are those which
                    support the physical circuitry implementing the FTP
                    and will include the Equipment from which the FTP is
                    named (the FTPs will depend upon the presence of
                    that Equipment for their most basic operation). For
                    a particular PTP/FTP the Tx port/function and Rx
                    port/function may be on different cards and in this
                    case both should be returned. Equipment that are
                    used by the PTPs/FTPs, but that do not support them
                    directly (such as a shared DEMUX card) are not reported.</p>
        <p>In case of Equipment Protection, the operation
                    reports the primary Equipment only; i.e., the
                    protecting Equipment will not be returned.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="getAllSupportingEquipmentResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getAllSupportingEquipment operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" name="eq" type="eq:EquipmentType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getAllSupportingEquipmentException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getAllSupportingEquipment operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getContainedEquipmentRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getContainedEquipment operation</p>
        <p>This operation returns the Equipment and Equipment
                    Holders directly contained by a provided Equipment
                    Holder. The operation differs from getAllEquipment()
                    in that it only looks at the next level of the
                    containment hierachy.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="ehRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter provides the name of the
                                Equipment Holder for which to retrieve
                                the directly contained Equipment and
                                Equipment Holders.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getContainedEquipmentResponse" type="ei:EquipmentOrEquipmentHolderListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getContainedEquipment operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getContainedEquipmentException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getContainedEquipment operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getEquipmentRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getEquipment operation</p>
        <p>This operation returns an Equipment or Equipment
                    Holder object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="equipmentOrEhRef" type="nam:NamingAttributeType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter provides the name of the
                                Equipment or Equipment Holder to be retrieved.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getEquipmentResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getContainedEquipment operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="equipmentOrEhList" type="ei:EquipmentOrEquipmentHolderType">
          <xsd:annotation>
            <xsd:documentation>
              <p>This parameter returns the list of all
                                Equipment and/or Equipment Holder objects.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getEquipmentException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getContainedEquipment operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getSupportedEquipmentRequest" type="tns:GetSupportEquipmentRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getSupportedEquipment operation</p>
        <p>This operation returns all Equipment that are
                    supported by the provided Equipment, e.g., a power
                    pack might support many circuit packs.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="getSupportedEquipmentResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getSupportedEquipment operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" name="eq" type="eq:EquipmentType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getSupportedEquipmentException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getSupportedEquipment operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getSupportingEquipmentRequest" type="tns:GetSupportEquipmentRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getSupportingEquipment operation</p>
        <p>This operation returns all Equipment that supports
                    the provided Equipment, e.g., the power pack and
                    synchronization card that support a given piece of Equipment.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="getSupportingEquipmentResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getSupportingEquipment operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" name="eq" type="eq:EquipmentType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getSupportingEquipmentException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getSupportingEquipment operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <xsd:element name="getEquipmentIteratorRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getEquipmentIterator operation</p>
        <p>This operation allows an NMS to request iteratively
                    all the batches of equipments and equipment holders
                    based on an initial specific request.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="getEquipmentIteratorResponse" type="ei:EquipmentOrEquipmentHolderListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the
                    getEquipmentIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--==================-->
  <xsd:element name="getEquipmentIteratorException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the
                    getEquipmentIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!--================-->
  <!--== Local Data Types ==-->
  <!--================-->
  <xsd:complexType name="GetSupportEquipmentRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getSupportEquipment(Names) operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="equipmentRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>the name of the equipment for which to
                            retrieve the supported/supporting equipment list.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllEquipmentRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllEquipment(Names) operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="meOrEhRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This parameter provides the name of the
                            Managed Element or Equipment Holder for
                            which to retrieve the contained Equipment
                            and Equipment Holders.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllEquipmentWithPtpRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the
                    getAllEquipment(Names) operations wrt PTP</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ptpRef" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This parameter provides the name of the
                            PTP/FTP for which to retrieve the supporting
                            Equipment. The Termination Point name must
                            be explicit (a generic endpoint
                            specification may not be used in this case).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--==================-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=13</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:hdr="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=10"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=9"/>
  <!--==============-->
  <xsd:complexType abstract="false" name="BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The (abstract) base type definition of all exception messages.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="hdr:header">
        <xsd:annotation>
          <xsd:documentation>The mTOP header as it cannot be
                        part of the SOAP Header in a SOAP v1.1 Fault message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="reason" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>A string indicating further details about the
                            exception. It is a free format string filled
                            by the OS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>The extension for specific vendor exception information.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:element name="notImplemented" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised by OS for an optional operation that is not implemented</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="internalError" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised in case of non-specific OS internal failure</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidInput" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters are invalid</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tooManyOpenIterators" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when data retrieval iterator capacity is full</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="entityNotFound" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when one or many operation input (request)
                    parameters do not refer to an existing object</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="commLoss" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when communication to an entity (needed to
                    help fulfill the request) is lost</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedCompressionFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given data compression format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedPackingFormat" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the given file packing format is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidFilterDefinition" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the filter is invalid.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="objectInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="tpInvalidEndPoint" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="timeslotInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="protectionEffortNotMet" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notInValidState" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unableToComply" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="capacityExceeded" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="accessDenied" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="unsupportedRoutingConstraints" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="userlabelInUse" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="invalidTopic" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when the topic is not supported.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:element name="notificationServiceProblem" type="tns:BaseExceptionMessageType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Raised when there is a failure with the Broker.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType name="AllExceptionsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Reference to all supported exception types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="tns:accessDenied"/>
      <xsd:element ref="tns:capacityExceeded"/>
      <xsd:element ref="tns:commLoss"/>
      <xsd:element ref="tns:entityNotFound"/>
      <xsd:element ref="tns:internalError"/>
      <xsd:element ref="tns:invalidFilterDefinition"/>
      <xsd:element ref="tns:invalidInput"/>
      <xsd:element ref="tns:invalidTopic"/>
      <xsd:element ref="tns:notificationServiceProblem"/>
      <xsd:element ref="tns:notImplemented"/>
      <xsd:element ref="tns:notInValidState"/>
      <xsd:element ref="tns:objectInUse"/>
      <xsd:element ref="tns:protectionEffortNotMet"/>
      <xsd:element ref="tns:timeslotInUse"/>
      <xsd:element ref="tns:tooManyOpenIterators"/>
      <xsd:element ref="tns:tpInvalidEndPoint"/>
      <xsd:element ref="tns:unableToComply"/>
      <xsd:element ref="tns:unsupportedCompressionFormat"/>
      <xsd:element ref="tns:unsupportedPackingFormat"/>
      <xsd:element ref="tns:unsupportedRoutingConstraints"/>
      <xsd:element ref="tns:userlabelInUse"/>
    </xsd:choice>
  </xsd:complexType>
  <!--================-->
  <xsd:complexType name="GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Profile of exception types supported by all mTOP
                    iterator operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="tns:AllExceptionsType">
        <xsd:choice>
          <xsd:element ref="tns:commLoss"/>
          <xsd:element ref="tns:internalError"/>
          <xsd:element ref="tns:invalidInput"/>
          <xsd:element ref="tns:notImplemented"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <!--==================-->
  <xsd:complexType name="GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Generic request message structure for all data
                    iterator operations</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=10</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the mTOP XML header.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=9"/>
  <!--==============-->
  <xsd:simpleType name="ActivityStatusEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies the high-level response status for an
                    activity.  Required for response messages, including
                    error responses.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="WARNING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="ActivityStatusType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Add to the initial enumerations the Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ActivityStatusEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--==============-->
  <xsd:simpleType name="MessageTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type of the message that is being exchanged as
                    part of an activity.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REQUEST"/>
      <xsd:enumeration value="RESPONSE"/>
      <xsd:enumeration value="NOTIFICATION"/>
      <xsd:enumeration value="ERROR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationPatternType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Styles supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SimpleResponse"/>
      <xsd:enumeration value="MultipleBatchResponse"/>
      <xsd:enumeration value="BulkResponse"/>
      <xsd:enumeration value="Notification"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="CommunicationStyleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>See Communication Style supporting document</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MSG"/>
      <xsd:enumeration value="RPC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="CompressionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if compression is to be performed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:CompressionEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="CompressionEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported compressions. All extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_COMPRESSION"/>
      <xsd:enumeration value="GZIP"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="PackingTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specify if the output file(s) are to be packed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:PackingEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="PackingEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Enumeration of supported packing/packaging. All
                    extensions allowed.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NO_PACKING"/>
      <xsd:enumeration value="ZIP"/>
      <xsd:enumeration value="TAR"/>
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:element name="header">
    <xsd:annotation>
      <xsd:documentation>
        <p>MTOSI Standard Header.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="activityName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the business
                                transaction activity for the message
                                being exchanged.       The value is
                                usually the name of the mTOP operation,
                                e.g. getInventory.       This value
                                corresponds to the “operation” in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the name of the message (or
                                contract) that is being exchanged as
                                part of an activity. E.g.
                                getInventoryResponse. This field
                                corresponds to the message name in the WSDL.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgType" type="tns:MessageTypeType"/>
        <xsd:element minOccurs="0" name="senderURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application sending this message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="destinationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the final destination of the
                                message (the OS that will process the
                                content of the message). This field may
                                point to a logical end point or abstract
                                topic name to be resolved by the
                                communication transport middleware in
                                order to deliver the message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="replyToURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used by request messages to specify
                                destination for response message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="originatorURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the originating application of
                                the message that resulted in this
                                response or notification message.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="failureReplytoURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the application receiving the
                                potential error notification message.
                                Required for all response messages and
                                notifications which are triggered by
                                request/response. If not specified the
                                replyToURI is used. If the replyToURI is
                                also not specified, senderURI endpoint
                                is used to send back the failure response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="activityStatus" type="tns:ActivityStatusType"/>
        <xsd:element minOccurs="0" name="correlationId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>An identifier that could be set by the
                                originator of an asynchronous request
                                that will allow it to correlate the
                                response to the request.  If this field
                                is set, it should be reflected in the
                                header of the response message.  Not
                                required for notification headers.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="security" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Provides credential nformation for use by
                                a security service for identification,
                                authentication, or authorization.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="securityType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              <p>Identifies the type of credential
                                contained in the security element.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="priority">
          <xsd:annotation>
            <xsd:documentation>
              <p>Indicates message-handling priority for
                                asynchronous messages.  It must be in
                                the range 0-9 (lowest-highest). Default: 4</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string"/>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="msgSpecificProperties">
          <xsd:annotation>
            <xsd:documentation>
              <p>Conditionally required for request,
                                response, and notification messages as
                                identified by the documentation for a
                                specific interface message.  The
                                communications infrastructure or the
                                receiving application can use this value
                                for routing or filtering messages.</p>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" minOccurs="0" name="property">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="propName" type="xsd:string"/>
                    <xsd:element name="propValue" type="xsd:string"/>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="communicationPattern" type="tns:CommunicationPatternType"/>
        <xsd:element minOccurs="0" name="communicationStyle" type="tns:CommunicationStyleType"/>
        <xsd:element minOccurs="0" name="requestedBatchSize" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>The RequestedBatchSize parameter provides
                                the control for the batch segmentation
                                of the full set of output data generated
                                by a coarse-grained operation such as
                                getInventory or getActiveAlarms. The
                                unit is any of the MTOSI objects. And,
                                it defines the maximum number of MTOSI
                                objects that can be included in all the
                                batches of data sent as part of a
                                multiple responses MEP.</p>
              <p>However, they are cases where a batch may
                                exceed the number of objects defined in
                                the RequestedBatchSize parameter. This
                                is true if the granularity of a response
                                atomic data representation is greater
                                than just one object. This is true for
                                the getInventory response.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceNumber" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm. Pattern
                                to identify the batch seq number in a sequence.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="batchSequenceEndOfReply" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used in a multiple response Comm.
                                Pattern, true if it is the last result
                                batch in a sequence</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="iteratorReferenceURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Mandatory for all SIT (iterators) MEP to
                                allow description of the data retrieval iterator.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="fileLocationURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>
              <p>Used for file retrieval. Specify the base
                                name of the file(s) to be generated and
                                the remote destination.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="compressionType" type="tns:CompressionTypeType"/>
        <xsd:element minOccurs="0" name="packingType" type="tns:PackingTypeType"/>
        <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>
              <p>Message originating timestamp</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="vendorExtensions" type="gen:AnyListType">
          <xsd:annotation>
            <xsd:documentation>
              <p>Location for all vendor extensions to the
                                MTOSI standard header.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--==============-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=9</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema
                definitions of generic mTOP simple data types.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="NameAndStringValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvsList" type="tns:NameAndValueStringListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndValueStringListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndStringValue</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nvs" type="tns:NameAndStringValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Specifies a generic name and value pair</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:any minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:element name="nvList" type="tns:NameAndAnyValueListType"/>
  <!--=================-->
  <xsd:complexType name="NameAndAnyValueListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A list of NameAndAnyValueType</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="nv" type="tns:NameAndAnyValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AliasNameListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    contains the list of aliases for the network entity.
                    The attribute is a name-value list. The name refers
                    to the type of alias (e.g., nativeEMSname) and the
                    value component holds the alias itself</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="alias">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="aliasName" type="xsd:string"/>
            <xsd:element name="aliasValue" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="AnyListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A generic list of any type of elements. Used for
                    vendor Extensions or loose element encapsulation
                    from other namespaces.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--================-->
  <xsd:simpleType name="DiscoveredNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the name of the object when
                    its existence is first published on the CCV but only
                    in the case where the OS that publishes the object
                    on the CCV is not the naming OS. If the naming OS
                    first publishes the object on the CCV, this
                    attribute may be left empty.</p>
        <p>The discovered name is assumed to be unique from the
                    perspective of the publishing OS.</p>
        <p>The discovered name published on the CCV does not
                    necessarily need to be the name of the object as
                    discovered by the OS from the subtending network.</p>
        <p>There are no specific rules concerning the
                    relationship between the "name" and
                    "discovered name" of the object. They
                    could be set to the same value or they could be different.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ManufactureDateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type identifies the production date of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="MultiEventInventoryAttributesType">
    <xsd:annotation>
      <xsd:documentation>This attribute is used when a object
                instance is embedded in the inventory    layout payload
                of a Multi-Event Inventory (MEI) notification.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="neTime" nillable="true" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the time at which the NE detected the
                            inventory change (if available)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventIndication" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is an indication of the type of
                            inventory update.</p>
            <p>Possible values are Object Creation (OC),
                            Object Discovery (ODsc), Object Deletion
                            (OD),        Attribute Value Change (AVC),
                            State Change (SC) and AVC_SC_and_Childern.
                            Only the acronym (e.g., OC)        is used
                            in the actual attribute value. The following
                            conventions apply:</p>
            <p>If an object creation or object discovery
                            indicator is applied to a parent object,
                            it implicitly applies to all the children,
                            i.e., the OS sending the notification only
                            needs       to set the indicator attribute
                            in the parent object.</p>
            <p>If an object deletion is applied to a parent
                            object, it is assumed that all the children
                            are also deleted. The childern should not be listed.</p>
            <p>The AVC_SC_and_Childern indication may be
                            applied to a parent object to imply that
                            there       may be AVC or SC changes to the
                            parent and some or all of the children.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="NetworkAccessDomainType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A free-format string used to associate a resource to
                    a Network Access Domain.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="NotificationIdentifierType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The type definition of the notification ID.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="NotificationIdentifierListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of notification IDs  (free string). Also,  the
                    value found in notificationId field of the event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="notificationId" type="tns:NotificationIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of all the object types. It is
                    left as a string for maximum compatibility with
                    future supported object types.</p>
        <p>Refer to the SD2-7 ObjectNaming for the list of all
                    supported values.</p>
        <p>Otherwise, one can also refer to the
                    ObjectEnumTypedefined in CommonResourceInfo (see NRB
                    DDP), which is provided as XML Schema enumerations
                    solely as a helper (not used in any messaging validation).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enumeration of all the supported query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI">
      <xsd:enumeration value="ANSI-92"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath"/>
      <xsd:enumeration value="http://www.w3.org/TR/xpath20/"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="QueryDialectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The loose definition of all the supported query
                    dialect types.</p>
        <p>Refer to QueryDialectEnumType definition to the
                    enumeration of recommended query dialect types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The generic schema datatype definition for the query
                    expression used in most filters.</p>
        <p>This definition is borrowed from WS-Notification v1.3.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="tns:QueryDialectTypeType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          <p>The dialect of the given query expression</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=14</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of all the generic mTOP XML naming structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=9"/>
  <!--=================-->
  <xsd:complexType name="RelativeDistinguishNameType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of relative distinguish
                    name (RDN) data structure used in all object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="type" type="gen:ObjectTypeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN object type acronym.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>the RDN value.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the type definition of the MTOSI object name
                    data structure as a sequence of RDNs, which
                    represents a unique identifier for the MTOSI object
                    on the CCV. Once set by the naming OS, the name is
                    invariant for the life of the object and should be
                    used when referring to the object over the CCV. Name
                    attribute of an object instance shall always be
                    assigned a value, unless the object instance is
                    first discovered by an OS that is not the naming OS
                    for the object instance. In such a case, the
                    discovering OS shall provide a value for the
                    Discovered Name attribute of the object. The naming
                    OS shall provide a value for the Name attribute of
                    the object once it becomes aware of the new object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="rdn" type="tns:RelativeDistinguishNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="NamingAttributeListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition for the list of MTOSI object names.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="name" nillable="true" type="tns:NamingAttributeType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=6</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/eq/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:nrb.com="http://www.tmforum.org/mtop/nrb/xsd/com/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/eq/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP EQ XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=14"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=3"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=11"/>
  <!--=================-->
  <xsd:element name="eq" type="tns:EquipmentType"/>
  <!--=================-->
  <xsd:complexType name="EquipmentType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Equipment mTOP network
                    resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="isReportingAlarms" nillable="true" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="expectedEquipmentObjectType" nillable="true" type="com:EquipmentObjectTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Defines the type of expected
                                    equipment. This is an empty string
                                    if there is no expected equipment.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="installedEquipmentObjectType" nillable="true" type="com:EquipmentObjectTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Defines the type of installed
                                    equipment. This is an empty string
                                    if there is no installed equipment.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="installedPartNumber" nillable="true" type="com:InstalledPartNumberType"/>
          <xsd:element minOccurs="0" name="installedSerialNumber" nillable="true" type="com:InstalledSerialNumberType"/>
          <xsd:element minOccurs="0" name="resourceFulfillmentState" nillable="true" type="com:ResourceFulfillmentStateEnumType"/>
          <xsd:element minOccurs="0" name="installedVersion" nillable="true" type="com:InstalledVersionType"/>
          <xsd:element minOccurs="0" name="manufacturer" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="protectionRole" nillable="true" type="com:ProtectionRoleType"/>
          <xsd:element minOccurs="0" name="protectionSchemeState" nillable="true" type="nrb.com:ProtectionSchemeStateType"/>
          <xsd:element minOccurs="0" name="manufactureDate" nillable="true" type="gen:ManufactureDateType"/>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this EQ object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=2</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" version="1.0" xmlns:coi="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:itu="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP XML CommonResourceInfo structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=1"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=12"/>
  <!--=================-->
  <xsd:element name="commonResourceInfo" substitutionGroup="coi:commonObjectInfo" type="tns:CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The element definition for common resource info</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="CommonResourceInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines attributes common to all mTOP
                    resource objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="coi:CommonObjectInfoType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="source" nillable="true" type="tns:SourceType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates whether the object was
                                    discovered or entered in OS inventory.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="networkAccessDomain" nillable="true" type="gen:NetworkAccessDomainType"/>
          <xsd:element minOccurs="0" name="meiAttributes" nillable="true" type="gen:MultiEventInventoryAttributesType">
            <xsd:annotation>
              <xsd:documentation>
                <p>This attribute is used when a object
                                    instance is embedded in the
                                    inventory      layout payload of a
                                    Multi-Event Inventory (MEI)
                                    notification. It provides the
                                    time at which the NE detected the
                                    inventory change (if available) and
                                    an indication      of the type of
                                    inventory update, e.g., Object Creation.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="resourceState" nillable="true" type="tns:ResourceStateType"/>
          <xsd:element name="ituStateAndStatusList" type="itu:ItuStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates whether the object was discovered from the
                    network, or was entered into the OS's inventory.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:SourceEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SourceEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NETWORK_ME">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered directly from the ME.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was entered into an OS on the CCV,
                            e.g., OS GUI or file transfer to the OS from
                            some other system.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NETWORK_EMS">
        <xsd:annotation>
          <xsd:documentation>
            <p>the object was discovered from an EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    indicates the state of the resource.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceStateEnumType">
        <xsd:attribute name="overlap" type="xsd:string" use="optional"/>
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ResourceStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VENDOR_EXT"/>
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="INSTALLING"/>
      <xsd:enumeration value="INSTALLING_ACCEPTED"/>
      <xsd:enumeration value="INSTALLING_COMMISSIONED"/>
      <xsd:enumeration value="INSTALLING_DELIVERED"/>
      <xsd:enumeration value="INSTALLING_INSTALLED"/>
      <xsd:enumeration value="INSTALLING_INTEGRATED"/>
      <xsd:enumeration value="INSTALLING_REJECTED"/>
      <xsd:enumeration value="NON_WORKING"/>
      <xsd:enumeration value="PLANNING"/>
      <xsd:enumeration value="PLANNING_INITIAL_PLAN"/>
      <xsd:enumeration value="PLANNING_ORDERED"/>
      <xsd:enumeration value="PLANNING_PLANNED"/>
      <xsd:enumeration value="RETIRING"/>
      <xsd:enumeration value="RETIRING_DECOMMISSIONED"/>
      <xsd:enumeration value="RETIRING_DEINSTALLED"/>
      <xsd:enumeration value="RETIRING_DEINTEGRATED"/>
      <xsd:enumeration value="RETIRING_RECOVERED"/>
      <xsd:enumeration value="RETIRING_STORED"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_ACTIVE"/>
      <xsd:enumeration value="RETIRING_WITHDRAWN_UNAVAILABLE"/>
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="WORKING"/>
      <xsd:enumeration value="WORKING_ACTIVATED"/>
      <xsd:enumeration value="WORKING_DEACTIVATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ObjectEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the enumeration of all the known object type
                    short names related to resources (at the time of
                    this module definition). It is only provided as an
                    implementation helper. For details of all object
                    types and their naming refer to SD2-7 ObjectNaming
                    (FMW DDP).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AID">
        <xsd:annotation>
          <xsd:documentation>Alarm IDentifier (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASA">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ASAP">
        <xsd:annotation>
          <xsd:documentation>Alarm Severity Assignment Profile (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CTP">
        <xsd:annotation>
          <xsd:documentation>Connection Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EH">
        <xsd:annotation>
          <xsd:documentation>Equipment Holder (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EPG">
        <xsd:annotation>
          <xsd:documentation>Equipment Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EQ">
        <xsd:annotation>
          <xsd:documentation>Equipment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FD">
        <xsd:annotation>
          <xsd:documentation>Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FDFR">
        <xsd:annotation>
          <xsd:documentation>Flow Domain Fragment (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FTP">
        <xsd:annotation>
          <xsd:documentation>Flow Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GTP">
        <xsd:annotation>
          <xsd:documentation>Group Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MD">
        <xsd:annotation>
          <xsd:documentation>Management Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ME">
        <xsd:annotation>
          <xsd:documentation>Managed Element (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MFD">
        <xsd:annotation>
          <xsd:documentation>Matrix Flow Domain (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MLSN">
        <xsd:annotation>
          <xsd:documentation>Multi Layer Subnetwork (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OS">
        <xsd:annotation>
          <xsd:documentation>Operations System (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PG">
        <xsd:annotation>
          <xsd:documentation>Protection Group (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PMP">
        <xsd:annotation>
          <xsd:documentation>Performance Monitoring Point (NRA)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PTP">
        <xsd:annotation>
          <xsd:documentation>Physical Termination Point (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SNC">
        <xsd:annotation>
          <xsd:documentation>Subnetwork Connection (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCPROFILE">
        <xsd:annotation>
          <xsd:documentation>Traffic Condifitioning Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TCAPP">
        <xsd:annotation>
          <xsd:documentation>Threshold Crossing Alert
                        Parameter Profile (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TL">
        <xsd:annotation>
          <xsd:documentation>Topological Link (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TMD">
        <xsd:annotation>
          <xsd:documentation>Transmission Descriptor (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TPPOOL">
        <xsd:annotation>
          <xsd:documentation>Termination Point Pool (NRF)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=1</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" version="1.0" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Framework</p>
      <p>Module: XSD Aggregate Module</p>
      <p>Description: This module contains the XML Schema
                definitions of the common object information.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--================-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=14"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=9"/>
  <!--==============-->
  <xsd:element name="commonObjectInfo" type="tns:CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>.</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--================-->
  <xsd:complexType abstract="true" name="CommonObjectInfoType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The aggregate of all common object attributes.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="nam:NamingAttributeType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute represents a unique
                            name/identifier for the object on the CCV.
                            Consult the SD2-7 about object naming for
                            additional normative references.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="userLabel" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="discoveredName" type="gen:DiscoveredNameType"/>
      <xsd:element minOccurs="0" name="namingOs" nillable="true" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is the object attribute definition to
                            identify the name of the OS that provided
                            the unique MTOSI name for the object. It is
                            assumed that each object (that is published
                            on the CCV) has a unique naming OS. This
                            attribute is optional in a point to point
                            NMS-EMS paradigm.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="owner" nillable="true" type="gen:OwnerType"/>
      <xsd:element minOccurs="0" name="aliasNameList" nillable="true" type="gen:AliasNameListType"/>
      <xsd:element minOccurs="0" name="vendorExtensions" nillable="true" type="gen:AnyListType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This is a container for all vendor extensions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=12</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T state or status
                parameters supported in mTOP</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="x721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="x721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="x721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="x721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="x721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="m3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="m3100.CircuitPackType" type="tns:M3100.CircuitPackTypeType"/>
      <xsd:element minOccurs="0" name="x721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:element minOccurs="0" name="x721.State" type="tns:X721.StateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="X721.OperationalStateType">
    <xsd:annotation>
      <xsd:documentation>Oper[ational] State parameter from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DISABLED"/>
      <xsd:enumeration value="UNABLED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AdministrativeStateType">
    <xsd:annotation>
      <xsd:documentation>Admin[istrative] State parameter from
                ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="LOCKED"/>
      <xsd:enumeration value="UNLOCKED"/>
      <xsd:enumeration value="SHUTTING_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UsageStateType">
    <xsd:annotation>
      <xsd:documentation>Usage State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IDLE"/>
      <xsd:enumeration value="ACTIVE"/>
      <xsd:enumeration value="BUSY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.AvailabilityStatusType">
    <xsd:annotation>
      <xsd:documentation>Avail[ability] Status based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="INTypeEST"/>
      <xsd:enumeration value="FAILED"/>
      <xsd:enumeration value="POWER_OFF"/>
      <xsd:enumeration value="OFF_LINE"/>
      <xsd:enumeration value="OFF_DUTY"/>
      <xsd:enumeration value="DEPENDENCY"/>
      <xsd:enumeration value="DEGRADED"/>
      <xsd:enumeration value="NOT_INSTALLED"/>
      <xsd:enumeration value="LOG_FULL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.ControlStatusType">
    <xsd:annotation>
      <xsd:documentation>Control Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value=""/>
      <xsd:enumeration value="SUBJECTTypeOTypeEST"/>
      <xsd:enumeration value="PART_OF_SERVICES_LOCKED"/>
      <xsd:enumeration value="RESERVED_FORTypeEST"/>
      <xsd:enumeration value="SUSPENDED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.HolderStatusType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HOLDER_EMPTY"/>
      <xsd:enumeration value="INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="NOT_INTypeHE_ACCEPTABLE_LIST"/>
      <xsd:enumeration value="UNKNOWNTypeYPE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.CircuitPackTypeType">
    <xsd:annotation>
      <xsd:documentation>Holder Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="X721.UnkownstatusType">
    <xsd:annotation>
      <xsd:documentation>Unknown Status parameter based from ITU-T
                state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="X721.StateType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="X721.OperationalState" type="tns:X721.OperationalStateType"/>
      <xsd:element minOccurs="0" name="X721.AdministrativeState" type="tns:X721.AdministrativeStateType"/>
      <xsd:element minOccurs="0" name="X721.UsageState" type="tns:X721.UsageStateType"/>
      <xsd:element minOccurs="0" name="X721.AvailabilityStatus" type="tns:X721.AvailabilityStatusType"/>
      <xsd:element minOccurs="0" name="X721.ControlStatus" type="tns:X721.ControlStatusType"/>
      <xsd:element minOccurs="0" name="M3100.HolderStatus" type="tns:M3100.HolderStatusType"/>
      <xsd:element minOccurs="0" name="X721.Unkownstatus" type="tns:X721.UnkownstatusType"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=3</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrb/xsd/com/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrb/xsd/com/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common
                type definitions used in some the mTOP XML Network
                Resource objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ProtectionSchemeStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionSchemeState with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionSchemeStateEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionSchemeStateEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection scheme state identifies the state in
                    which the protection scheme is in. Individual locks
                    can be reported through transmission parameters on
                    the appropriate TPs or equipment instances.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="PSS_UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>
            <p>Protection scheme state is unknown by the system.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PSS_AUTOMATIC">
        <xsd:annotation>
          <xsd:documentation>
            <p>It indicates partial locking of the entire group.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PSS_FORCED_OR_LOCKED_OUT">
        <xsd:annotation>
          <xsd:documentation>
            <p>It indicates that the entire group is locked.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=4</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Basic</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common
                type definitions used in some the mTOP XML Resource objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:simpleType name="CommunicationStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This state reflects a communication state between the
                    EMS and its ManagedElement.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CS_AVAILABLE"/>
      <xsd:enumeration value="CS_UNAVAILABLE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--================-->
  <xsd:simpleType name="ConnectionDirectionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction of a subnetwork connection, cross-connects,
                    or topological link. For a detailed description of
                    the use of this attribute see SNC Types supporting document.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CD_UNI">
        <xsd:annotation>
          <xsd:documentation>
            <p>UNIdirectional, i.e. source TP to sink TP.
                            Note: creation of unidirectional connections
                            is supported even when CTPs/FTPs are
                            modelled as bidirectional.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CD_BI">
        <xsd:annotation>
          <xsd:documentation>
            <p>BIdirectional, i.e. bidirectional TP to
                            bidirectional TP, a.k.a. two-way.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ConnectionlessPortTerminationPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This parameter shall identify the role in the flow
                    domain of         the requested CPTPs.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CPTPR_FD_EDGE">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Edge CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_FD_INTERNAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return Flow Domain Internal CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CPTPR_ALL">
        <xsd:annotation>
          <xsd:documentation>
            <p>Return all CPTPs.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="DirectionalityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Direction for a TerminationPoint:</p>
        <p>The directionality of PTPs is defined from an
                    external point of view, while the directionality of
                    CTPs is defined from an internal point of view.
                    Consequently, sink PTPs generate source CTPs, and
                    sink CTPs form source PTPs. Refer to SNC Types and
                    to layers for further information on termination
                    point and connection directionality.</p>
        <p>Note that ATM termination points (LR_ATM_NI,
                    LR_ATM_VP and LR_ATM_VC) are always bi-directional
                    even though the traffic may be asymmetric (and
                    eventually null in one of the two directions).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="D_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>Used when the directionality specification is
                            not necessary.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_BIDIRECTIONAL">
        <xsd:annotation>
          <xsd:documentation>
            <p>source and sink (transmit and receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SOURCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>source (transmit).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="D_SINK">
        <xsd:annotation>
          <xsd:documentation>
            <p>sink (receive).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="FlowDomainFragmentTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>
          This (read-only) attribute provides an indication of
                    the type of the matrix flow domain fragment. It may
                    have one of the following values:
          <ul>
            <li>"FDFRT_POINT_TO_POINT": the FDFr
                            is between exactly two points</li>
            <li>"FDFRT_POINT_TO_MULTIPOINT": (E-tree)</li>
            <li>"FDFRT_MULTIPOINT": the FDFr is
                            between at least two points</li>
          </ul>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="GradesOfImpactType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Grades of maximum tolerable disruption to traffic as
                    a result of the operation that this parameter is describing.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="GOI_HITLESS"/>
      <xsd:enumeration value="GOI_MINOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Less or equal to 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GOI_MAJOR_IMPACT">
        <xsd:annotation>
          <xsd:documentation>Greater than 50ms</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="HolderStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Holder State Type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMPTY">
        <xsd:annotation>
          <xsd:documentation>
            <p>no equipment is installed and no expected
                            equipment has been identified</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected and currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="EXPECTED_AND_NOT_INSTALLED">
        <xsd:annotation>
          <xsd:documentation>
            <p>expected but not currently installed</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INSTALLED_AND_NOT_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>physically inserted in the ME but not expected</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MISMATCH_OF_INSTALLED_AND_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>
            <p>there is an inconsistency between the
                            expected equipment and the installed equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNAVAILABLE">
        <xsd:annotation>
          <xsd:documentation>
            <p>this holder cannot accept the installation or
                            provisioning of equipment (this is typically
                            caused by a double width card installed next
                            to this slot)</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>
            <p>the OS does not know the state of the equipment</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="EquipmentHolderTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The EquipmentHolder with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:EquipmentHolderEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="EquipmentHolderEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Equipment holder type</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="rack"/>
      <xsd:enumeration value="shelf"/>
      <xsd:enumeration value="sub_shelf"/>
      <xsd:enumeration value="slot"/>
      <xsd:enumeration value="sub_slot"/>
      <xsd:enumeration value="remote_unit"/>
      <xsd:enumeration value="remote_slots"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="EquipmentObjectTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Type of equipment object in equipment holder. Values
                    are vendor-specific.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledPartNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the resource part number (PN) of the
                    installed equipment. If not available (or there is
                    no installed equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledSerialNumberType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the serial number of the installed equipment.
                    If not available (or there is no installed
                    equipment), an empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="InstalledVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Firmware version of the installed equipment. If not
                    available (or there is no installed equipment), an
                    empty string shall be used.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRoutedType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Network routed, indicates if the route must be or is
                    computed and implemented at the network level.
                    NR_YES indicates that the route must be / is
                    computed at the network. NR_NO indicates that the
                    route must not be / is not computed at the network.
                    NR_NA indicates that the route can be computed anywhere.</p>
        <p>If rerouting is allowed, this attribute will indicate
                    who last rerouted the SNC, the network (NR_YES) or
                    the EMS (NR_NO).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NR_NA"/>
      <xsd:enumeration value="NR_NO"/>
      <xsd:enumeration value="NR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="NetworkRouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Indicates if the reroute of an SNC (if allowed)
                    should be computed by the network, by the EMS, or if
                    it does not matter.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_SET"/>
      <xsd:enumeration value="NO"/>
      <xsd:enumeration value="YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="FreedomLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the NMS-specified EMS level of freedom when
                    performing SNC operations.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EMSFL_CC_AT_SNC_LAYER"/>
      <xsd:enumeration value="EMSFL_TERMINATE_AND_MAP"/>
      <xsd:enumeration value="EMSFL_HIGHER_ORDER_SNCS"/>
      <xsd:enumeration value="EMSFL_RECONFIGURATION"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ModifyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This attribute specifies the class of SNC
                    modification; i.e. rerouting or add/remove protection.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ADD_REMOVE_PROTECTION"/>
      <xsd:enumeration value="REROUTING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="OwnerType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This is the definition of the object attribute that
                    represents an identifier for the owner of the object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="PotentialFutureSetupIndicatorType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Refers to the aEnd and is used to convey the likely
                    future (or current) configuration of the SNC (see SD1-16_layeredParameters.pdf).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RSU_POINT_TO_POINT"/>
      <xsd:enumeration value="RSU_BROADCAST"/>
      <xsd:enumeration value="RSU_ANY_CONFIG"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ProtectionEffortType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection effort is a statement of the
                    requirement of the static protection level. For
                    example if EFFORT_SAME_OR_WORSE is specified for a
                    3-ended FULLY_PROTECTED connection, a 3-ended
                    PARTIALLY_PROTECTED connection is acceptable, but a
                    2-ended connection (ST_SIMPLE) is not acceptable
                    i.e. ProtectionEffort does not have any bearing on
                    the externaly visible shape of the SNC.
                    EFFORT_WHATEVER indicates that the specified static
                    protection level is preferred, but that any other
                    level is acceptable.</p>
        <p>For a detailed description of the use of this
                    attribute see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EFFORT_WHATEVER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_BETTER"/>
      <xsd:enumeration value="EFFORT_SAME_OR_WORSE"/>
      <xsd:enumeration value="EFFORT_SAME "/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ProtectionRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The ProtectionRole with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ProtectionRoleEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="ProtectionRoleEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Protection role type.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="NA"/>
      <xsd:enumeration value="PRIMARY"/>
      <xsd:enumeration value="BACKUP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="RerouteType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The RerouteType type indicates if the EMS/MEs are
                    allowed and/or required to reroute this SNC if there
                    is a failure on this SNC, periodically to optimize
                    the routes, of for any other reason.It is an EMS/ME
                    implementation whether this is done using network
                    routing protocols or if the EMS/MEs detect the
                    failure and take appropriate action to attempt to
                    fix the SNC.</p>
        T
        <p>he RR_NO value means
                    that the EMS/MEs are not allowed to reroute the SNC.
                    The RR_YES value means that the EMS/MEs are allowed
                    to reroute the SNC and required to attempt to
                    reroute it upon failure. The RR_NA value is used
                    when the NMS does not want to specify the exact EMS
                    behaviour. In this case it is left up to the EMS to
                    decide whether rerouting will be provided. It is
                    also used if the EMS/MEs are allowed to reroute the
                    SNC but not required to attempt to reroute it upon failure.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RR_NA"/>
      <xsd:enumeration value="RR_NO"/>
      <xsd:enumeration value="RR_YES"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="ResourceFulfillmentStateEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IN_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been put into operation and is
                            operating as provisioned (completely or partially).</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity is entirely not capable of
                            performing its provisioned functions and is
                            not restricted by administrative actions.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OUT_OF_SERVICE_BY_MAINTENANCE">
        <xsd:annotation>
          <xsd:documentation>
            <p>The entity has been taken intentionally out
                            of service by a management action.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SERV_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>The service state is not applicable.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="ResourceFulfillmentStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This object attribute indicates basic administration
                    state of equipment and OS objects.       Also, this
                    object attribute accepts Qualifiable extension.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:ResourceFulfillmentStateEnumType">
        <xsd:attribute name="qualifier" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNCState enum is used to represent the various
                    states that an SNC may take.</p>
        <p>The following states may be supported by the EMS,
                    depending on the SNC management mode of operation
                    used by the EMS. See SNC Management Modes Of
                    Operation for details.</p>
        <p>SNCS_PENDING: the SNC has been created by an NMS and
                    has not been activated by any NMS; or the SNC has
                    been successfully deactivated by an NMS. That state
                    has no relationship with the network state of the
                    cross- connects of the SNC. It is allowable for an
                    EMS to not support the SNCS_PENDING state and to
                    reject any operation that attempts to put an SNC
                    into SNCS_PENDING state.</p>
        <p>SNCS_ACTIVE: the SNC is not in pending state, a route
                    has been assigned to the SNC and all cross-connects
                    for the SNC are active in the network.</p>
        <p>SNCS_PARTIAL: the SNC is not in pending state, and
                    either a route has not been assigned to the SNC, or
                    not all of the cross-connects of the SNC are active
                    in the network. This may or may not include
                    activated SNCs for which there are currently no
                    active cross- connects in the network, depending on
                    the SNC management mode of operation.It is possible
                    that, in some EMSes, this state be unreachable.</p>
        <p>SNCS_NONEXISTENT: this is not an SNC state per se, as
                    it applies to "non-existent SNCs". It is
                    used in the interface to report SNCs that have been
                    deleted.</p>
        <p>See SNCState state diagram for details on valid transitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SNCS_NONEXISTENT"/>
      <xsd:enumeration value="SNCS_PENDING"/>
      <xsd:enumeration value="SNCS_ACTIVE"/>
      <xsd:enumeration value="SNCS_PARTIAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SubnetworkConnectionTypeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The SNC Type describes the connection based on the
                    signal flows.  For a detailed description of the use
                    of this attribute see SNC Types. In case of an ATM
                    SNC (VP or VC), ST_SIMPLE is used to specify a
                    'plain' (hard or regular) PVC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ST_SIMPLE"/>
      <xsd:enumeration value="ST_ADD_DROP_A"/>
      <xsd:enumeration value="ST_ADD_DROP_Z"/>
      <xsd:enumeration value="ST_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_INTERCONNECT"/>
      <xsd:enumeration value="ST_DOUBLE_ADD_DROP"/>
      <xsd:enumeration value="ST_OPEN_ADD_DROP"/>
      <xsd:enumeration value="ST_EXPLICIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="SoftwareVersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The OS product software version</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="StaticProtectionLevelType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The StaticProtectionLevel with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:StaticProtectionLevelEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="StaticProtectionLevelEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The static protection level is a statement of the
                    internal resiliency of the SNC (internal to the
                    subnetwork). The more resilient an SNC is, the more
                    bandwidth it will consume.</p>
        <p>The protection level does not have any bearing on the
                    externally visible shape and traffic flows of the
                    SNC (in non-failure cases). For a detailed
                    description of the use of this attribute, see SNC Types.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="PREEMPTIBLE"/>
      <xsd:enumeration value="UNPROTECTED"/>
      <xsd:enumeration value="PARTIALLY_PROTECTED"/>
      <xsd:enumeration value="FULLY_PROTECTED"/>
      <xsd:enumeration value="HIGHLY_PROTECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationModeType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Within the facade definition, the CTP/FTP can act as
                    an aggregate of associated G.805 TCPs, G.805
                    Termination Functions and G.805 CPs at one or more
                    LayerRates. The CTP is contained within a PTP or FTP.</p>
        <p>The TerminationMode attribute indicates and controls
                    the connection of the named CP at a specified
                    LayerRate to the dedicated G.805 TCP and associated
                    G.805 Termination Function at the same LayerRate
                    within the CTP/FTP.</p>
        <p>The TerminationMode is used, for example, to control
                    the Termination and mapping to VT1.5 of an STS1
                    Trail within an OC3 port. This capability could
                    potentially be used to terminate an STS1 backbone
                    Trail within a lower order mux that has the
                    capability to alternatively cross-connect the STS1
                    unterminated. The same capability is used in SDH and
                    is potentially applicable to any LayerRate.</p>
        <p>TerminationMode has the following values</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TM_NA">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can not be mapped (i.e., it has
                            no contained potential CTPs). This indicates
                            that an SNC/crossconnect can be used to
                            connect the G.805 TCP of the CTP to the
                            connection point of another CTP/FTP. This
                            only applies to CTPs that connect on their
                            server side and are related to the
                            containing PTP/FTP on their client side.</p>
            <p>FTP: The FTP can not be mapped on the server
                            side (i.e., it has no contained potential
                            CTPs on the server side). This indicates
                            that an SNC/crossconnect can be used to
                            connect the G.805 TCP of the FTP to the
                            connection point of another CTP/FTP. This
                            only applies to FTPs that connect on their
                            server side and do not support IM (Inverse
                            Multiplexing).</p>
            <p>PTP: This is the only legal value for a PTP</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_NEITHER_TERMINATED_NOR_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped and currently is
                            (i.e., it has contained actual CTPs). This
                            indicates that the G.805 CPs adapted from
                            the corresponding G.805 Termination Function
                            within the CTP aggregate are available to
                            provide client layer capacity (e.g. STS1
                            terminated and mapped to VT1.5 i.e.
                            channelized). In this state the TCP will be
                            sourcing and sinking traffic. This is only a
                            valid value for CTPs that support client
                            adaptation.</p>
            <p>FTP: The FTP can be mapped on the server side
                            and currently is (i.e., it has contained
                            actual CTPs on the server side). This
                            indicates that the FTP supports IM (Inverse
                            Multiplexing) and the server side contained
                            CTPs (if any) are available for connection
                            as the FTP is actively assembling the
                            fragments of the IM. This value is not valid
                            for an FTP that does not support IM. (see
                            layering for more details).</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING">
        <xsd:annotation>
          <xsd:documentation>
            <p>CTP: The CTP can be mapped but currently is
                            not (i.e., it does have contained potential
                            CTPs, but currently has no contained actual
                            CTPs). This indicates that the G.805 CP
                            aggregated in the CTP is not connected to a
                            TCP (that would be aggregated in the same
                            CTP) and therefore the CTP is available for
                            SNC/crossconnect connectivity (e.g. STS1 not
                            terminated and not mapped to VT1.5i.e. not
                            channelized).</p>
            <p>FTP: The FTP can be mapped on the server side
                            but currently is not (i.e., it does have
                            contained potential CTPs on the server side,
                            but currently has no contained actual CTPs
                            on the server side). This indicates that the
                            FTP supports IM (Inverse Multiplexing) but
                            the IM function is not active and the TCP
                            within the FTP is available for external
                            SNC/crossconnect connectivity.</p>
            <p>PTP: This value is not valid for a PTP.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TransmissionDescriptorStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Contains the state of consistency between a TP and
                    its associated TransmissionDescriptor.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TMD_MISSING"/>
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="APPLIED"/>
      <xsd:enumeration value="MISMATCH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:complexType name="TopologyType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The Topology with MTOSI minor version extensions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:TopologyEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="TopologyEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>TopologyType is used to describe the subnetwork
                    configuration. The EMS shall be capable of providing
                    a SubNetwork Connection through any physical
                    termination point of any managed element that
                    belongs to the Subnetwork.</p>
        <p>Composite subnetworks (i.e. containing other
                    Subnetworks) are not supported in this release of
                    the interface</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MINOR_EXT"/>
      <xsd:enumeration value="TOPO_SINGLETON">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SINGLETON, which is used for a single NE
                            (of any type) that is managed independently
                            of its Topological Link connectivity to
                            other NEs. It may for example be a member of
                            a ring that is managed by a number of EMSes.
                            It is acceptable for an EMS to represent all
                            NEs as being in Singleton subnetworks
                            regardless of the actual network
                            configuration. A singleton subnetwork does
                            not contain internal topological links.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_CHAIN">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_CHAIN, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a chain.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_PSR, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a ring that is capable of
                            supporting subnetwork connection protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_PSR">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_PSR, which is used to cover the
                            case where two or more NEs of a PS ring (but
                            not the entire ring) are managed by the same EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_SPRING, which is used to cover the case
                            where two or more NEs are managed by the
                            same EMS and are connected by Topological
                            Links in a complete ring that supports
                            Shared Line Protection.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_OPEN_SPRING">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_OPEN_SPRING, which is used to cover
                            cases where two or more NEs of an SP ring
                            (but not the entire ring) are managed by one EMS.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOPO_MESH">
        <xsd:annotation>
          <xsd:documentation>
            <p>TOPO_MESH, which is used to cover an
                            arbitrary set of two or more NEs not covered
                            by any other type.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointConnectionStateType">
    <xsd:annotation>
      <xsd:documentation>
        <p>A CTP/FTP may be involved in zero, one, or many
                    connections. The value TPConnectionState indicates
                    the degree to which a CTP/FTP is used. The values
                    TPCS_SOURCE_CONNECTED and TPCS_SINK_CONNECTED
                    reflect the presence of a one way connection. The
                    value TPCS_BI_CONNECTED means that the TP is both
                    sink and source connected.</p>
        <p>If an EMS cannot report whether the source of the TP
                    is connected or the sink is connected,
                    TPCS_BI_CONNECTED may be reported by that EMS.</p>
        <p>The value TPCS_NA is used for PTPs and TPPools.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPCS_NA"/>
      <xsd:enumeration value="TPCS_SOURCE_CONNECTED"/>
      <xsd:enumeration value="TPCS_SINK_CONNECTED"/>
      <xsd:enumeration value="TPCS_BI_CONNECTED"/>
      <xsd:enumeration value="TPCS_NOT_CONNECTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--=================-->
  <xsd:simpleType name="TerminationPointProtectionAssociationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>tpProtectionAssociation expresses constraints on
                    PTPs/CTPs/FTPs for PSR connection management.</p>
        <p>In a multi-layer subnetwork, say 'a', 'b', 'c' are
                    edge points. Suppose, for example, a three-ended
                    connection is sought from 'a' to 'b', where 'b' is
                    one of the endpoints. If 'c' is the constrained
                    choice for 'b' as the other end of the three- ended
                    connection,then 'b' and 'c' are said to be
                    associated by a ] protectionAssociation. The
                    tpProtectionAssociation is set to TPPA_PSR_RELATED
                    in 'b' and 'c', and getAssociatedTP(b) returns c and
                    getAssociatedTP(c) returns b.</p>
        <p>In all other cases, tpProtectionAssociation is set to TPPA_NA.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TPPA_NA"/>
      <xsd:enumeration value="TPPA_PSR_RELATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:simpleType name="TerminationPointRole">
    <xsd:annotation>
      <xsd:documentation>
        <p>Defines the enumeration of all possible end point
                    roles of a TP of an SNC.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CM_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a connection matrix (CM) end point the
                            span of the SNC starts at a G.805 CP with a
                            fixed or flexible connection through the ME
                            at the SNC layer, i.e. the connectable layer
                            of the end point.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="LC_END_POINT">
        <xsd:annotation>
          <xsd:documentation>
            <p>At a link connection (LC) end point
                            connectivity is adapted from a server layer
                            and the span of the SNC starts with a G.805
                            TCP with mapping mode set to TM_TERMINATED_ AND_AVAILABLE_FOR_MAPPING.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The list of EndPointRoles.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="role" type="tns:EndPointRoleType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--====================-->
  <xsd:complexType name="EndPointRoleType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type indicates the end point role of an end
                    TP. See R_TMF518_NRF_I_0026.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="role" type="tns:TerminationPointRole">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the role of the end
                            TP specified by the tpIndex.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="tpIndex" type="xsd:unsignedInt">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute indicates the index of the end
                            TP within the end list.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="VersionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The active software version of the ManagedElement</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=11</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" version="1.0" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definitions of all the supported Alarm ITU-T parameters.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--=================-->
  <xsd:complexType name="ItuArcStateAndStatusList">
    <xsd:annotation>
      <xsd:documentation>Containment of all ITU-T Alarm Reporting
                Control (ARC) state or status parameters supported in
                mTOP;    Each element of the list identifies a state or
                status and provides its relevant value.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="m3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="m3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="m3100.NALMTIInterval" type="tns:M3100.NALMTIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.NALMQIInterval" type="tns:M3100.NALMQIIntervalType"/>
      <xsd:element minOccurs="0" name="m3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
      <xsd:element minOccurs="0" name="m3100.State" type="tns:M3100.ArcStateListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=================-->
  <xsd:simpleType name="M3100.AlarmStatusType">
    <xsd:annotation>
      <xsd:documentation>Alarm Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CLEARED"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="CRITICAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcStateType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ALM"/>
      <xsd:enumeration value="NALM"/>
      <xsd:enumeration value="NALMTypeIMED_INHIBIT"/>
      <xsd:enumeration value="NALM_QUALIFIED_INHIBIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMTIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.NALMQIIntervalType">
    <xsd:annotation>
      <xsd:documentation>ARC State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_ADJUSTMENT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:positiveInteger">
          <xsd:maxInclusive value="5940"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!--==============-->
  <xsd:simpleType name="M3100.ArcQIStatusType">
    <xsd:annotation>
      <xsd:documentation>ARC QI Status parameter from ITU-T state
                or status</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="NALM_NOT_READY"/>
      <xsd:enumeration value="NALM_COUNT_DOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--==============-->
  <xsd:complexType name="M3100.ArcStateListType">
    <xsd:annotation>
      <xsd:documentation>State parameter from ITU-T state or status</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="M3100.AlarmStatus" type="tns:M3100.AlarmStatusType"/>
      <xsd:element minOccurs="0" name="M3100.ArcState" type="tns:M3100.ArcStateType"/>
      <xsd:element minOccurs="0" name="M3100.ArcQIStatus" type="tns:M3100.ArcQIStatusType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=5</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/eh/v1" version="1.0" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:cri="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/eh/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource FulFillment</p>
      <p>Module: Aggregate XSD Module</p>
      <p>Description: This module contains the XML Schema type
                definition of the mTOP EH XML structure.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=9"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=14"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/cri/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=2"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=4"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=11"/>
  <!--=================-->
  <xsd:element name="eh" type="tns:EquipmentHolderType"/>
  <!--=================-->
  <xsd:complexType name="EquipmentHolderType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This aggregate defines the Equipment Holder mTOP
                    network resource object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="cri:CommonResourceInfoType">
        <xsd:annotation>
          <xsd:documentation>
            <p>This element entails the attributes common to
                            all mTOP network resource objects.</p>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="isReportingAlarms" nillable="true" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="holderType" nillable="true" type="com:EquipmentHolderTypeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the type of equipment holder.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="acceptableEquipmentTypeList" nillable="true">
            <xsd:annotation>
              <xsd:documentation>
                <p>Represents the types of equipment
                                    objects that can be supported
                                    directly by the equipment holder.
                                    This is an empty list if the
                                    equipment holder can only contain
                                    other equipment holders.</p>
              </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" name="acceptableEquipmentType" type="com:EquipmentObjectTypeType">
                  <xsd:annotation>
                    <xsd:documentation>
                      <p>Type of equipment object
                                    in equipment holder.</p>
                    </xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="expectedOrInstalledEquipmentRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>The equipment object expected or
                                    installed in the equipment holder,
                                    if any. NULL if the equipment holder
                                    is empty or if it only contains
                                    other equipment holders.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="holderState" nillable="true" type="com:HolderStateType"/>
          <xsd:element minOccurs="0" name="location" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="manufacturer" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="manufactureDate" nillable="true" type="gen:ManufactureDateType"/>
          <xsd:element minOccurs="0" name="asapRef" nillable="true" type="nam:NamingAttributeType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Indicates the assignment of an ASAP
                                    to this EH object. Value is of the
                                    ASAP name.</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ituArcStateAndStatusList" type="ituArc:ItuArcStateAndStatusList"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=7</con:url><con:content><![CDATA[<!--Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Oracle JAX-WS 2.1.5.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.tmforum.org/mtop/nrf/xsd/eq-inv/v1" version="1.0" xmlns:eh="http://www.tmforum.org/mtop/nrf/xsd/eh/v1" xmlns:eq="http://www.tmforum.org/mtop/nrf/xsd/eq/v1" xmlns:tns="http://www.tmforum.org/mtop/nrf/xsd/eq-inv/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--==============-->
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/eq/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=6"/>
  <xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/eh/v1" schemaLocation="http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp?xsd=5"/>
  <!--=================-->
  <xsd:complexType name="EquipmentOrEquipmentHolderType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This data type contains either an Equipment or an
                    Equipment Holder object.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="eq:eq"/>
      <xsd:element ref="eh:eh"/>
    </xsd:choice>
  </xsd:complexType>
  <!--=================-->
  <xsd:complexType name="EquipmentOrEquipmentHolderListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of EquipmentOrEquipmentHolder elements</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="eoh" type="tns:EquipmentOrEquipmentHolderType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp</con:endpoint></con:endpoints><con:operation isOneWay="false" action="getAllEquipment" name="getAllEquipment" bindingOperationName="getAllEquipment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/eir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllEquipmentRequest>
         <!--Optional:-->
         <v11:meOrEhRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meOrEhRef>
      </v11:getAllEquipmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllEquipment"/></con:call></con:operation><con:operation isOneWay="false" action="getAllSupportingEquipment" name="getAllSupportingEquipment" bindingOperationName="getAllSupportingEquipment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/eir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllSupportingEquipmentRequest>
         <!--Optional:-->
         <v11:ptpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:ptpRef>
      </v11:getAllSupportingEquipmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAllSupportingEquipment"/></con:call></con:operation><con:operation isOneWay="false" action="getContainedEquipment" name="getContainedEquipment" bindingOperationName="getContainedEquipment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/eir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getContainedEquipmentRequest>
         <!--Optional:-->
         <v11:ehRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:ehRef>
      </v11:getContainedEquipmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getContainedEquipment"/></con:call></con:operation><con:operation isOneWay="false" action="getEquipment" name="getEquipment" bindingOperationName="getEquipment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/eir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getEquipmentRequest>
         <!--Optional:-->
         <v11:equipmentOrEhRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:equipmentOrEhRef>
      </v11:getEquipmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getEquipment"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="getEquipmentIterator" name="getEquipmentIterator" bindingOperationName="getEquipmentIterator" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/eir/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getEquipmentIteratorRequest>?</v11:getEquipmentIteratorRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getEquipmentIterator"/></con:call></con:operation><con:operation isOneWay="false" action="getSupportedEquipment" name="getSupportedEquipment" bindingOperationName="getSupportedEquipment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/eir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getSupportedEquipmentRequest>
         <!--Optional:-->
         <v11:equipmentRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:equipmentRef>
      </v11:getSupportedEquipmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getSupportedEquipment"/></con:call></con:operation><con:operation isOneWay="false" action="getSupportingEquipment" name="getSupportingEquipment" bindingOperationName="getSupportingEquipment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/eir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:activityName>?</v1:activityName>
         <!--Optional:-->
         <v1:msgName>?</v1:msgName>
         <!--Optional:-->
         <v1:msgType>?</v1:msgType>
         <!--Optional:-->
         <v1:senderURI>?</v1:senderURI>
         <!--Optional:-->
         <v1:destinationURI>?</v1:destinationURI>
         <!--Optional:-->
         <v1:replyToURI>?</v1:replyToURI>
         <!--Optional:-->
         <v1:originatorURI>?</v1:originatorURI>
         <!--Optional:-->
         <v1:failureReplytoURI>?</v1:failureReplytoURI>
         <!--Optional:-->
         <v1:activityStatus qualifier="?">?</v1:activityStatus>
         <!--Optional:-->
         <v1:correlationId>?</v1:correlationId>
         <!--Optional:-->
         <v1:security>?</v1:security>
         <!--Optional:-->
         <v1:securityType>?</v1:securityType>
         <!--Optional:-->
         <v1:priority>?</v1:priority>
         <!--Optional:-->
         <v1:msgSpecificProperties>
            <!--Zero or more repetitions:-->
            <v1:property>
               <v1:propName>?</v1:propName>
               <v1:propValue>?</v1:propValue>
            </v1:property>
         </v1:msgSpecificProperties>
         <!--Optional:-->
         <v1:communicationPattern>?</v1:communicationPattern>
         <!--Optional:-->
         <v1:communicationStyle>?</v1:communicationStyle>
         <!--Optional:-->
         <v1:requestedBatchSize>?</v1:requestedBatchSize>
         <!--Optional:-->
         <v1:batchSequenceNumber>?</v1:batchSequenceNumber>
         <!--Optional:-->
         <v1:batchSequenceEndOfReply>?</v1:batchSequenceEndOfReply>
         <!--Optional:-->
         <v1:iteratorReferenceURI>?</v1:iteratorReferenceURI>
         <!--Optional:-->
         <v1:fileLocationURI>?</v1:fileLocationURI>
         <!--Optional:-->
         <v1:compressionType extension="?">?</v1:compressionType>
         <!--Optional:-->
         <v1:packingType extension="?">?</v1:packingType>
         <!--Optional:-->
         <v1:timestamp>?</v1:timestamp>
         <!--Optional:-->
         <v1:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v1:vendorExtensions>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getSupportingEquipmentRequest>
         <!--Optional:-->
         <v11:equipmentRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:equipmentRef>
      </v11:getSupportingEquipmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getSupportingEquipment"/></con:call></con:operation></con:interface><con:testSuite name="Mtosi Header"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Empty" searchProperties="true" id="84f29a3d-4e68-4356-8c5b-f5d6381b7e3c"><con:settings/><con:testStep type="request" name="getActiveAlarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header><v1:header/></soapenv:Header>      
   <soapenv:Body>
      <v11:getActiveAlarmsRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Basic Request Header" searchProperties="true" id="559aef7f-293b-42b7-96a0-7d0dc30fbc70"><con:settings/><con:testStep type="request" name="getActiveAlarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>1000</v1:requestedBatchSize>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:msgType>REQUEST</v1:msgType>
       </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Bulk Response" searchProperties="true" id="8fafda6e-b39b-4584-81a9-c1633aca4273"><con:settings/><con:testStep type="request" name="getActiveAlarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:communicationPattern>BulkResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Multiple Batch Response - Missing field" searchProperties="true" id="b3fb353c-7d78-444e-99e9-20199112bfe9"><con:settings/><con:testStep type="request" name="getActiveAlarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Activity Name - empty" searchProperties="true" id="ea54ff63-1fd7-4b2c-9d79-4571865259c2"><con:settings/><con:testStep type="request" name="getActiveAlarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>1000</v1:requestedBatchSize>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName></v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Message Type - Response" searchProperties="true" id="f1dfb9ab-e7bc-41d5-88db-49b03118f867"><con:settings/><con:testStep type="request" name="getActiveAlarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
        <v1:communicationPattern><SimpleResponse/></v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:msgType>RESPONSE</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Communication Style - MSG" searchProperties="true" id="07a82197-d484-40b8-9cab-f1a44c3a6069"><con:settings/><con:testStep type="request" name="getActiveAlarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>1000</v1:requestedBatchSize>
         <v1:communicationStyle>MSG</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:msgType>REQUEST</v1:msgType>
       </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>>SUCESS&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Fix up activityName" searchProperties="true" id="a2e5949e-fbe7-4dd0-a937-fe306f84250e"><con:settings/><con:testStep type="request" name="getActiveAlarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>1000</v1:requestedBatchSize>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>notTheRightActivityName</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:msgType>REQUEST</v1:msgType>
       </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Multiple Batch Response - Valid" searchProperties="true" id="1b63463e-b19b-434b-8d0f-d3941fc4a9f7"><con:settings/><con:testStep type="request" name="getActiveAlarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:requestedBatchSize>2</v1:requestedBatchSize>
         <v1:iteratorReferenceURI>http://62.190.191.48:9009/mtosi/something/activeAlarms</v1:iteratorReferenceURI>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>SUCCESS&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Whitespaces" searchProperties="true" id="37f95abb-ae18-4d90-8a6b-bfdea697da4c"><con:settings/><con:testStep type="request" name="Whitespace in Header"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Whitespace in Header"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>          MultipleBatchResponse 

</v1:communicationPattern>
	 <v1:requestedBatchSize>
1000           </v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
            <v11:getActiveAlarmsRequest>
        <v11:filter>
           <v11:source>EXTERNAL</v11:source>
        </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Whitespace in Body"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Whitespace in Body"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>1000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
            <v11:getActiveAlarmsRequest>
        <v11:filter>
           <v11:source>             EXTERNAL

        </v11:source>
        </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Alarm Retrieval"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms" searchProperties="true" id="15a1df25-956b-4d9a-badc-9391fb73f73b"><con:settings/><con:testStep type="request" name="getActiveAlarms - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - Request 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - Single ME" searchProperties="true" id="6c0c2b3a-0260-413f-977d-20032beddbf8"><con:settings/><con:testStep type="request" name="Get All Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get All Alarms"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
            <v11:getActiveAlarmsRequest>
        <v11:filter>
           <v11:source>EXTERNAL</v11:source>
        </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>transfer MD</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Get All Alarms</con:sourceStep><con:sourcePath>declare namespace ns6='http://www.tmforum.org/mtop/nra/xsd/alm/v1';
declare namespace ns16='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace ns5='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/ei/v1';
//ns16:getActiveAlarmsResponse[1]/ns6:alarm[1]/ns4:objectName[1]/ns5:rdn[1]/ns5:value[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Get Alarms for single ME</con:targetStep><con:targetPath>declare namespace v11='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
//v11:getActiveAlarmsRequest[1]/v11:filter[1]/v11:scope[1]/v12:name[1]/v12:rdn[1]/v12:value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>transfer ME</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Get All Alarms</con:sourceStep><con:sourcePath>declare namespace ns6='http://www.tmforum.org/mtop/nra/xsd/alm/v1';
declare namespace ns16='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace ns5='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/ei/v1';
//ns16:getActiveAlarmsResponse[1]/ns6:alarm[1]/ns4:objectName[1]/ns5:rdn[2]/ns5:value[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Get Alarms for single ME</con:targetStep><con:targetPath>declare namespace v11='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
//v11:getActiveAlarmsRequest[1]/v11:filter[1]/v11:scope[1]/v12:name[1]/v12:rdn[2]/v12:value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>transfer MD type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Get All Alarms</con:sourceStep><con:sourcePath>declare namespace ns6='http://www.tmforum.org/mtop/nra/xsd/alm/v1';
declare namespace ns16='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace ns5='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/ei/v1';
//ns16:getActiveAlarmsResponse[1]/ns6:alarm[1]/ns4:objectName[1]/ns5:rdn[1]/ns5:type[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Get Alarms for single ME</con:targetStep><con:targetPath>declare namespace v11='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
//v11:getActiveAlarmsRequest[1]/v11:filter[1]/v11:scope[1]/v12:name[1]/v12:rdn[1]/v12:type[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>transfer ME type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Get All Alarms</con:sourceStep><con:sourcePath>declare namespace ns6='http://www.tmforum.org/mtop/nra/xsd/alm/v1';
declare namespace ns16='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace ns5='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/ei/v1';
//ns16:getActiveAlarmsResponse[1]/ns6:alarm[1]/ns4:objectName[1]/ns5:rdn[2]/ns5:type[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Get Alarms for single ME</con:targetStep><con:targetPath>declare namespace v11='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
//v11:getActiveAlarmsRequest[1]/v11:filter[1]/v11:scope[1]/v12:name[1]/v12:rdn[2]/v12:type[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="Get Alarms for single ME"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Alarms for single ME" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>
           <v11:scope>
           <v12:name>
               <v12:rdn>
                  <v12:type>OS</v12:type>
                  <v12:value>CIENA/OneControl</v12:value>
               </v12:rdn>
               <v12:rdn>
                  <v12:type/>
                  <v12:value/>
               </v12:rdn>
            </v12:name>
         </v11:scope>
         </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - Validate" searchProperties="true" id="0b3954b6-cf3c-4ac2-a2be-d00918c8e118"><con:settings/><con:testStep type="request" name="getActiveAlarms - acknowledgeIndication - acknowladged"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - acknowledgeIndication - acknowladged" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - acknowledgeIndication - unacknolwedged"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - acknowledgeIndication - unacknolwedged" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>NOT_APPLICABLE</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - acknowledgeIndication - not applicable"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - acknowledgeIndication - not applicable" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>UNACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - acknowledgeIndication - empty"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - acknowledgeIndication - empty" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <!-- this is expected to be successfuls as it is not one of the 3 possible values -->
            <v11:acknowledgeIndication></v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - probableCauseList"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - probableCauseList" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:probableCauseList>
               <v14:prc extension="VENDOR_EXT" qualifier="A">
                  <v14:probableCause>AIS</v14:probableCause>
               </v14:prc>
            </v11:probableCauseList> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Probable Cause List</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - probableCauseList empty"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - probableCauseList empty" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
         	  <v11:probableCauseList>
            <!-- empty list should work -->
            </v11:probableCauseList> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - queryExpression"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - queryExpression" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:queryExpression Dialect="?">
               e
               <!--You may enter ANY elements at this point-->
               gero
            </v11:queryExpression>   
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Query Expression</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - queryExpression - empty"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - queryExpression - empty" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:queryExpression Dialect="?"></v11:queryExpression>   
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - probableCause, queryExpression"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - probableCause, queryExpression" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:queryExpression Dialect="?">
               e
               <!--You may enter ANY elements at this point-->
               gero
            </v11:queryExpression> 
            <v11:probableCauseList>
               <v14:prc extension="VENDOR_EXT" qualifier="A">
                  <v14:probableCause>AIS</v14:probableCause>
               </v14:prc>
            </v11:probableCauseList> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Probable Cause List and Query Expression</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - acknowledgeIndication, probableCause, queryExpression"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - acknowledgeIndication, probableCause, queryExpression" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:queryExpression Dialect="?">
               e
               <!--You may enter ANY elements at this point-->
               gero
            </v11:queryExpression> 
            <v11:probableCauseList>
               <v14:prc extension="VENDOR_EXT" qualifier="A">
                  <v14:probableCause>AIS</v14:probableCause>
               </v14:prc>
            </v11:probableCauseList> 
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication>
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator, Probable Cause List and Query Expression</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - acknowledgeIndication and queryExpression"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - acknowledgeIndication and queryExpression" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:queryExpression Dialect="?">
               e
               <!--You may enter ANY elements at this point-->
               gero
            </v11:queryExpression> 
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication>
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator and Query Expression</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - Validate Iterators" searchProperties="true" id="59dccf82-318e-460b-870f-64af6986794c"><con:description>Tests that the iterator count is not exceeded on exceptions.</con:description><con:settings/><con:testStep type="request" name="getActiveAlarms - exception 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 3" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 4" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 5" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 6" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 7" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 8" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 9" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 10"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 10" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 11"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 11" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 12"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 12" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 13"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 13" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 14"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 14" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getActiveAlarms - exception 15"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - exception 15" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
         <v11:filter>
            <v11:acknowledgeIndication>ACKNOWLEDGED</v11:acknowledgeIndication> 
         </v11:filter>
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Acknowledge Indicator</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAlarmCount" searchProperties="true" id="0ecc4e9b-ae08-4fb7-9b28-180be680d534"><con:settings/><con:testStep type="request" name="getActiveAlarmsCount - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarmsCount - Request 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarmsCount</v1:activityName>
         <v1:msgName>GetActiveAlarmsCountRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsCountRequest/>   
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarmCount - No Matches" searchProperties="true" id="ecab2e25-298e-49d3-8ec8-2fdc4cb18b80"><con:settings/><con:testStep type="request" name="getActiveAlarmsCount - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarmsCount - Request 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarmsCount</v1:activityName>
         <v1:msgName>GetActiveAlarmsCountRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsCountRequest>
      <v11:filter>
           <v11:scope>
           <v12:name>
            <v12:rdn>
               <v12:type>ME</v12:type>
               <v12:value>Not a valid ME</v12:value>
            </v12:rdn>
            </v12:name>
         </v11:scope>
        </v11:filter>
      </v11:getActiveAlarmsCountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>activeAlarmCount>0&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarmsCount - Single ME" searchProperties="true" id="c68d1079-4ca6-4381-9afa-841e3945d610"><con:settings/><con:testStep type="request" name="Get All Alarms - external"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get All Alarms - external"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>1000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>
           <v11:source>EXTERNAL</v11:source>
        </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false"><con:name>transfer MD</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Get All Alarms - external</con:sourceStep><con:sourcePath>declare namespace ns6='http://www.tmforum.org/mtop/nra/xsd/alm/v1';
declare namespace ns16='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace ns5='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/ei/v1';
//ns16:getActiveAlarmsResponse[1]/ns6:alarm[1]/ns4:objectName[1]/ns5:rdn[1]/ns5:value[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Get Alarms for single ME</con:targetStep><con:targetPath>declare namespace v11='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
//v11:getActiveAlarmsCountRequest[1]/v11:filter[1]/v11:scope[1]/v12:name[1]/v12:rdn[1]/v12:value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>transfer MD type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Get All Alarms - external</con:sourceStep><con:sourcePath>declare namespace ns6='http://www.tmforum.org/mtop/nra/xsd/alm/v1';
declare namespace ns16='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace ns5='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/ei/v1';
//ns16:getActiveAlarmsResponse[1]/ns6:alarm[1]/ns4:objectName[1]/ns5:rdn[1]/ns5:type[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Get Alarms for single ME</con:targetStep><con:targetPath>declare namespace v11='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
//v11:getActiveAlarmsCountRequest[1]/v11:filter[1]/v11:scope[1]/v12:name[1]/v12:rdn[1]/v12:type[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>transfer ME</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Get All Alarms - external</con:sourceStep><con:sourcePath>declare namespace ns6='http://www.tmforum.org/mtop/nra/xsd/alm/v1';
declare namespace ns16='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace ns5='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/ei/v1';
//ns16:getActiveAlarmsResponse[1]/ns6:alarm[1]/ns4:objectName[1]/ns5:rdn[2]/ns5:value[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Get Alarms for single ME</con:targetStep><con:targetPath>declare namespace v11='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
//v11:getActiveAlarmsCountRequest[1]/v11:filter[1]/v11:scope[1]/v12:name[1]/v12:rdn[2]/v12:value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>transfer ME type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Get All Alarms - external</con:sourceStep><con:sourcePath>declare namespace ns6='http://www.tmforum.org/mtop/nra/xsd/alm/v1';
declare namespace ns16='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace ns5='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/ei/v1';
//ns16:getActiveAlarmsResponse[1]/ns6:alarm[1]/ns4:objectName[1]/ns5:rdn[2]/ns5:type[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Get Alarms for single ME</con:targetStep><con:targetPath>declare namespace v11='http://www.tmforum.org/mtop/rtm/xsd/ar/v1';
declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
//v11:getActiveAlarmsCountRequest[1]/v11:filter[1]/v11:scope[1]/v12:name[1]/v12:rdn[2]/v12:type[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="Get Alarms for single ME"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Alarms for single ME" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>1000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsCountRequest>
        <v11:filter>
           <v11:scope>
           <v12:name>
               <v12:rdn>
                  <v12:type>MD</v12:type>
                  <v12:value>CIENA/OneControl</v12:value>
               </v12:rdn>
               <v12:rdn>
                  <v12:type>ME</v12:type>
                  <v12:value>OME0276</v12:value>
               </v12:rdn>
            </v12:name>
         </v11:scope>
         </v11:filter> 
      </v11:getActiveAlarmsCountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getActiveAlarms - MultiResponse" searchProperties="true" id="b2b772d6-b19b-47ff-be77-3d0165b58257"><con:settings/><con:testStep type="request" name="getActiveAlarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:requestedBatchSize>10</v1:requestedBatchSize>
        <v1:msgType>REQUEST</v1:msgType>
       </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>iteratorUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getActiveAlarms</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>GetActiveAlarmsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>requestedBatchSize</con:name><con:sourceType>Request</con:sourceType><con:sourceStep>getActiveAlarms</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>GetActiveAlarmsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="GetActiveAlarmsIterator"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarmsIterator</con:operation><con:request name="GetActiveAlarmsIterator"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1">
   <soapenv:Header>
      <v1:header>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarmsIterator</v1:activityName>
         <v1:msgName>GetActiveAlarmsIteratorRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:requestedBatchSize>10</v1:requestedBatchSize>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:iteratorReferenceURI>http://onx-dsellars-02:9006/mtosi/rtm/AlarmRetrieval/getActiveAlarms/8</v1:iteratorReferenceURI>
       </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains SUCCESS"><con:configuration><token>&lt;activityStatus>SUCCESS&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Conditional Goto"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Not End of Reply</con:name><con:type>XPATH</con:type><con:expression>declare namespace soapenv = "http://schemas.xmlsoap.org/soap/envelope/"
declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:batchSequenceEndOfReply = "false"</con:expression><con:targetStep>GetActiveAlarmsIterator</con:targetStep></con:condition></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - Cleared" searchProperties="true" id="2e8f3754-5240-48e4-bb7c-59b1817dd9ec"><con:settings/><con:testStep type="request" name="Get Clear Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Clear Alarms" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>           
            <v11:perceivedSeverityList>
             
                 <v13:perceivedSeverity>CLEARED</v13:perceivedSeverity>
            </v11:perceivedSeverityList>
         </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="status not failed"><con:configuration><token>>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="contains critical severity"><con:configuration><token>perceivedSeverity>CLEARED&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes"><con:configuration><codes>perceivedSeverity>MAJOR&lt;</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="No major severity"><con:configuration><token>perceivedSeverity>MAJOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains minor severity"><con:configuration><token>perceivedSeverity>MINOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains warning severity"><con:configuration><token>perceivedSeverity>WARNING&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains major severity"><con:configuration><token>perceivedSeverity>CRITICAL&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - Critical" searchProperties="true" id="2a7559af-74c0-4c4a-b137-2621ece682c7"><con:settings/><con:testStep type="request" name="Get Critical Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Critical Alarms" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>           
            <v11:perceivedSeverityList>
               <!--Zero or more repetitions:-->                
                 <v13:perceivedSeverity>CRITICAL</v13:perceivedSeverity>
            </v11:perceivedSeverityList>
         </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="status not failed"><con:configuration><token>>FAILED&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="contains critical severity"><con:configuration><token>perceivedSeverity>CRITICAL&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes"><con:configuration><codes>perceivedSeverity>MAJOR&lt;</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="No major severity"><con:configuration><token>perceivedSeverity>MAJOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains minor severity"><con:configuration><token>perceivedSeverity>MINOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains warning severity"><con:configuration><token>perceivedSeverity>WARNING&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains clear severity"><con:configuration><token>perceivedSeverity>CLEAR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - Indeterminate" searchProperties="true" id="260ca7b3-b217-4306-8d0d-88d741f494c3"><con:settings/><con:testStep type="request" name="Get Indeterminate Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Indeterminate Alarms" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>           
            <v11:perceivedSeverityList>
               <!--Zero or more repetitions:-->                
                 <v13:perceivedSeverity>INDETERMINATE</v13:perceivedSeverity>
            </v11:perceivedSeverityList>
         </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="status not failed"><con:configuration><token>>FAILED&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="contains indeterminate severity"><con:configuration><token>perceivedSeverity>INDETERMINATE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes"><con:configuration><codes>perceivedSeverity>MAJOR&lt;</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="No major severity"><con:configuration><token>perceivedSeverity>MAJOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains minor severity"><con:configuration><token>perceivedSeverity>MINOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains critical severity"><con:configuration><token>perceivedSeverity>CRITICAL&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains clear severity"><con:configuration><token>perceivedSeverity>CLEAR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains warning severity"><con:configuration><token>perceivedSeverity>WARNING&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - Minor" searchProperties="true" id="32538b37-2e21-416b-9665-6cbdbc260604"><con:settings/><con:testStep type="request" name="Get Minor Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Minor Alarms" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>           
            <v11:perceivedSeverityList>
               <!--Zero or more repetitions:-->                
                 <v13:perceivedSeverity>MINOR</v13:perceivedSeverity>
            </v11:perceivedSeverityList>
         </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="status not failed"><con:configuration><token>>FAILED&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="contains minor severity"><con:configuration><token>perceivedSeverity>MINOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes"><con:configuration><codes>perceivedSeverity>MAJOR&lt;</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="No major severity"><con:configuration><token>perceivedSeverity>MAJOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains critical severity"><con:configuration><token>perceivedSeverity>CRITICAL&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains warning severity"><con:configuration><token>perceivedSeverity>WARNING&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains clear severity"><con:configuration><token>perceivedSeverity>CLEAR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - Major" searchProperties="true" id="3118e98e-97ed-4f6d-ab7b-7f0549ea0b0e"><con:settings/><con:testStep type="request" name="Get Major Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Major Alarms" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>           
            <v11:perceivedSeverityList>
               <!--Zero or more repetitions:-->                
                 <v13:perceivedSeverity>MAJOR</v13:perceivedSeverity>
            </v11:perceivedSeverityList>
         </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="status not failed"><con:configuration><token>>FAILED&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="contains major severity"><con:configuration><token>perceivedSeverity>MAJOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes"><con:configuration><codes>perceivedSeverity>MAJOR&lt;</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="No indeterminate severity"><con:configuration><token>perceivedSeverity>INDETERMINATE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains critical severity"><con:configuration><token>perceivedSeverity>CRITICAL&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains warning severity"><con:configuration><token>perceivedSeverity>WARNING&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains clear severity"><con:configuration><token>perceivedSeverity>CLEAR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains minor severity"><con:configuration><token>perceivedSeverity>MINOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - Warning" searchProperties="true" id="43c6c75f-71d9-4029-93ea-e8df494de67c"><con:settings/><con:testStep type="request" name="Get Warning Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Warning Alarms" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>           
            <v11:perceivedSeverityList>
               <!--Zero or more repetitions:-->                
                 <v13:perceivedSeverity>WARNING</v13:perceivedSeverity>
            </v11:perceivedSeverityList>
         </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="status not failed"><con:configuration><token>>FAILED&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="contains warning severity"><con:configuration><token>perceivedSeverity>WARNING&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes"><con:configuration><codes>perceivedSeverity>MAJOR&lt;</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="No major severity"><con:configuration><token>perceivedSeverity>MAJOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains minor severity"><con:configuration><token>perceivedSeverity>MINOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains critical severity"><con:configuration><token>perceivedSeverity>CRITICAL&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains clear severity"><con:configuration><token>perceivedSeverity>CLEAR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - Critical &amp; Major" searchProperties="true" id="b1172aa5-a9fb-41bd-8356-ba61b86c4918"><con:settings/><con:testStep type="request" name="Get Critical &amp; Major Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Critical &amp; Major Alarms" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>           
            <v11:perceivedSeverityList>
               <!--Zero or more repetitions:-->                
                 <v13:perceivedSeverity>CRITICAL</v13:perceivedSeverity>
                 <v13:perceivedSeverity>MAJOR</v13:perceivedSeverity>
            </v11:perceivedSeverityList>
         </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="status not failed"><con:configuration><token>>FAILED&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="contains critical severity"><con:configuration><token>>CRITICAL&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes"><con:configuration><codes>perceivedSeverity>MAJOR&lt;</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains minor severity"><con:configuration><token>perceivedSeverity>MINOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains warning severity"><con:configuration><token>perceivedSeverity>WARNING&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains clear severity"><con:configuration><token>perceivedSeverity>CLEAR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>>MAJOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="contains major severity"><con:configuration><token>>MAJOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - Critical &amp; CLEAR" searchProperties="true" id="1f19ba35-d208-452a-a9be-7b3c417a9ce2"><con:settings/><con:testStep type="request" name="Get Critical &amp; Clear Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Critical &amp; Clear Alarms" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>           
            <v11:perceivedSeverityList>
               <!--Zero or more repetitions:-->                
                 <v13:perceivedSeverity>CRITICAL</v13:perceivedSeverity>
                 <v13:perceivedSeverity>CLEARED</v13:perceivedSeverity>
            </v11:perceivedSeverityList>
         </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: vendorExtension: nativeEMSFormat"><con:configuration><token>>nativeEMSFormat&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: vendorExtension: equipmentType"><con:configuration><token>>equipmentType&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="status not failed"><con:configuration><token>>FAILED&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="contains critical severity"><con:configuration><token>perceivedSeverity>CRITICAL&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes"><con:configuration><codes>perceivedSeverity>MAJOR&lt;</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains minor severity"><con:configuration><token>perceivedSeverity>MINOR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains warning severity"><con:configuration><token>perceivedSeverity>WARNING&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>>CLEARED&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - acknowledge indication" searchProperties="true" id="93b3c3b1-c685-487a-9470-f609ae723e59"><con:settings/><con:testStep type="request" name="Get Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Alarms" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>
        <v11:acknowledgeIndication>NOT_ACKNOWLEDGED</v11:acknowledgeIndication>
        </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - probable cause (not supported)" searchProperties="true" id="9179b7b7-f21e-429b-9814-81abf67a5fad" disabled="true"><con:settings/><con:testStep type="request" name="Get Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Alarms" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>1000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>
        <v11:probableCauseList>
           <v11:probableCause>OS</v11:probableCause>
        </v11:probableCauseList>
        </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - source external" searchProperties="true" id="3814bad4-6798-44d0-ad71-30b00cddee07"><con:settings/><con:testStep type="request" name="Get Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Alarms" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>
           <v11:source>EXTERNAL</v11:source>
        </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>>SUCESS&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - source internal" searchProperties="true" id="d4fe4133-de21-4eb0-9927-0c6cdaeac1a2"><con:settings/><con:testStep type="request" name="Get Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Alarms" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>
           <v11:source>INTERNAL</v11:source>
        </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>>SUCESS&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="No Equipment"><con:configuration><token>objectType>EQ&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="No Equipment Holder"><con:configuration><token>objectType>EH&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields: vendorExtension: nativeEMSFormat" disabled="true"><con:configuration><token>>nativeEMSFormat&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - source not_applicable" searchProperties="true" id="a6a7bd2c-e832-41de-86e5-e1db5e5b5d15"><con:settings/><con:testStep type="request" name="Get Alarms"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="Get Alarms" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>11000</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest>
        <v11:filter>
           <v11:source>NOT_APPLICABLE</v11:source>
        </v11:filter> 
      </v11:getActiveAlarmsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Simple Contains" name="mandatory response fields:additionalText"><con:configuration><token>additionalText></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:isClearable"><con:configuration><token>isClearable></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:layerRate" disabled="true"><con:configuration><token>layerRate></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:nativeProbablyCause"><con:configuration><token>nativeProbableCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:perceivedSeverity"><con:configuration><token>perceivedSeverity></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:probableCause" disabled="true"><con:configuration><token>probablyCause></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response fields:serviceAffecting"><con:configuration><token>serviceAffecting></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: notificationId"><con:configuration><token>:notificationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: sourceTime"><con:configuration><token>:sourceTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectName"><con:configuration><token>:objectName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: objectType"><con:configuration><token>:objectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory respose fields: osTime"><con:configuration><token>:osTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>>SUCESS&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetActiveAlarms - Invalid comm pattern" searchProperties="true" id="dfe0ebdb-2348-40bf-9313-1bf4a8c64faf"><con:settings/><con:testStep type="request" name="getActiveAlarms - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AlarmRetrievalSoapHttpBinding</con:interface><con:operation>getActiveAlarms</con:operation><con:request name="getActiveAlarms - Request 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:v14="http://www.tmforum.org/mtop/nra/xsd/prc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rtm/AlarmRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getActiveAlarms</v1:activityName>
         <v1:msgName>GetActiveAlarmsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getActiveAlarmsRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Header Error - comm pattern not valid"><con:configuration><token>&lt;message>Mtosi Header: The following communication pattern is unsupported for this operation: SIMPLE_RESPONSE&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getActiveAlarms"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Managed Equipment Retrieval" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getManagedElement -Empty ME" searchProperties="true" id="9d9cca8b-0c9b-4758-b708-cf156f65792f"><con:settings/><con:testStep type="request" name="getManagedElement"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManagedElementRetrievalSoapHttpBinding</con:interface><con:operation>getManagedElement</con:operation><con:request name="getManagedElement"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
        <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</v1:destinationURI>
          <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getManagedElementt</v1:activityName>
         <v1:msgName>getManagedElementRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getManagedElementRequest>
       
      </v11:getManagedElementRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>>FAILURE&lt;/activityStatus></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getManagedElement" searchProperties="true" id="ec012161-e62e-4de8-a8f5-2ede07039714"><con:settings/><con:testStep type="request" name="getManagedElement"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManagedElementRetrievalSoapHttpBinding</con:interface><con:operation>getManagedElement</con:operation><con:request name="getManagedElement"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getManagedElement</v1:activityName>
         <v1:msgName>getManagedElementRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getManagedElementRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>MD</v12:type>
               <v12:value>ciena</v12:value>
            </v12:rdn>
            <v12:rdn>
               <v12:type>ME</v12:type>
               <v12:value>CN4200RS_115</v12:value>
            </v12:rdn>
            <!--1 or more repetitions:-->

         </v11:meRef>
      </v11:getManagedElementRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="SOAP Fault Assertion"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllManagedElements - Empty Header" searchProperties="true" id="ef360ad0-bce8-4f91-8a76-9c58f895a6f4"><con:settings/><con:testStep type="request" name="GetAllManagedElements"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManagedElementRetrievalSoapHttpBinding</con:interface><con:operation>getAllManagedElements</con:operation><con:request name="GetAllManagedElements"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
        <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</v1:destinationURI>
          <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllManagedElements</v1:activityName>
         <v1:msgName>getAllManagedElementsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllManagedElementsRequest>
         <!-- this current doesn't work -->
         <v11:MdOrMlsnRef_0020>
            <v12:rdn>
               <v12:type>MD</v12:type>
               <v12:value>8270141110525301140</v12:value>
            </v12:rdn>
         </v11:MdOrMlsnRef_0020>
         <v11:mdName>
            <v12:rdn>
               <v12:type>ME</v12:type>
               <v12:value>bob</v12:value>
            </v12:rdn>
            <v12:rdn>
               <v12:type>MD</v12:type>
               <v12:value>8270141110525301140</v12:value>
            </v12:rdn>
         </v11:mdName>       
      </v11:getAllManagedElementsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllManagedElements - random input" searchProperties="true" id="3b0fbfa4-a5b5-40e1-aa63-5460112d14a6"><con:settings/><con:testStep type="request" name="GetAllManagedElements"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManagedElementRetrievalSoapHttpBinding</con:interface><con:operation>getAllManagedElements</con:operation><con:request name="GetAllManagedElements"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
        <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</v1:destinationURI>
          <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllManagedElements</v1:activityName>
         <v1:msgName>getAllManagedElementsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>       
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllManagedElementsRequest>
         <v11:mdOrMlsnRef>
            <v12:rdn>
               <v12:type>MD</v12:type>
               <v12:value>ciena</v12:value>
            </v12:rdn>
            <v12:rdn>
               <v12:type>Name</v12:type>
               <v12:value>Fred</v12:value>
            </v12:rdn>
         </v11:mdOrMlsnRef>
      </v11:getAllManagedElementsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getManagedElementsIterator - Simple Header with Filter" searchProperties="true" id="448611a1-3c1d-4e4e-b6b9-7d7ec444514b"><con:settings/><con:testStep type="request" name="getManagedElement"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManagedElementRetrievalSoapHttpBinding</con:interface><con:operation>getManagedElement</con:operation><con:request name="getManagedElement"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <!--Optional:-->
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getManagedElement</v1:activityName>
         <v1:msgName>getManagedElementRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getManagedElementRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>MD</v12:type>
               <v12:value>ciena</v12:value>
            </v12:rdn>
            <v12:rdn>
               <v12:type>ME</v12:type>
               <v12:value>CN4200RS_115</v12:value>
            </v12:rdn>
            <!--1 or more repetitions:-->
         </v11:meRef>
      </v11:getManagedElementRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>&lt;iteratorReferenceURI></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>iteratorUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getManagedElement</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getManagedElementsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferToAll="false"><con:name>batchSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getManagedElement</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getManagedElementsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getManagedElementsIterator"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManagedElementRetrievalSoapHttpBinding</con:interface><con:operation>getManagedElementsIterator</con:operation><con:request name="getManagedElementsIterator"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getManagedElementsIterator</v1:activityName>
         <v1:msgName>getManagedElementsIteratorRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
	 <v1:iteratorReferenceURI>http://62.190.191.48:9001/mtosi/mri/ManagedElementRetrieval/4</v1:iteratorReferenceURI>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getManagedElementsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllManagedElementsWrtOs" searchProperties="true" id="68517451-a6ea-408f-8b76-fd9bdb7ceaad"><con:settings/><con:testStep type="request" name="getAllManagedElementsWrtOs"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManagedElementRetrievalSoapHttpBinding</con:interface><con:operation>getAllManagedElementsWrtOs</con:operation><con:request name="getAllManagedElementsWrtOs"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
            <v1:header>
        <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</v1:destinationURI>
          <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllManagedElementsWrtOs</v1:activityName>
         <v1:msgName>getAllManagedElementsWrtOsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
        </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllManagedElementsWrtOsRequest>
         <!--Optional:-->
         <v11:osRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>ipAddress</v12:type>
               <v12:value>10.128.110.186</v12:value>
            </v12:rdn>
         </v11:osRef>
      </v11:getAllManagedElementsWrtOsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllManagedElementsFilter" searchProperties="true" id="f65a3eca-46a1-4e5b-8781-f2be9526303e"><con:settings/><con:testStep type="request" name="getManagedElemetnsFilter"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManagedElementRetrievalSoapHttpBinding</con:interface><con:operation>getAllManagedElementsPassingFilter</con:operation><con:request name="getManagedElemetnsFilter"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
                 <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</v1:destinationURI>
          <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllManagedElements</v1:activityName>
         <v1:msgName>getAllManagedElementsPassingFilterRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllManagedElementsPassingFilterRequest>
         <!--Optional:-->
         <v11:filter>           
            <v11:productName>CN_5430</v11:productName>
           </v11:filter>
      </v11:getAllManagedElementsPassingFilterRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllManagedElementsPassingFilter" searchProperties="true" id="ee67a785-fff9-40dc-a458-ee1790d24fdb"><con:settings/><con:testStep type="request" name="getAllManagedElementsPassingFilter"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManagedElementRetrievalSoapHttpBinding</con:interface><con:operation>getAllManagedElementsPassingFilter</con:operation><con:request name="getAllManagedElementsPassingFilter"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/mer/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
            <v1:header>
        <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ManagedElementRetrieval</v1:destinationURI>
          <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllManagedElementsPassingFilter</v1:activityName>
         <v1:msgName>getAllManagedElementsPassingFilterRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
        </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllManagedElementsPassingFilterRequest>

      </v11:getAllManagedElementsPassingFilterRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Notifications"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Subscribe" searchProperties="true" id="4c2c17b6-697c-4e4b-8803-a88daf8c622c"><con:settings/><con:testStep type="request" name="subscribe - success"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NotificationProducerSoapHttpBinding</con:interface><con:operation>subscribe</con:operation><con:request name="subscribe - success"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1">
   <soapenv:Header>
      <v1:header>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>subscribe</v1:activityName>
         <v1:msgName>subscribeRequest</v1:msgName>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/fmw/notificationProducer</v1:destinationURI>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:subscribeRequest>
         <v11:consumerEpr>http://62.190.191.48:9009/mtosi/fmw/NotificationConsumer</v11:consumerEpr>
         <v11:topic>fault</v11:topic>
      </v11:subscribeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>activityStatus>SUCCESS&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: subscriptionID"><con:configuration><token>subscriptionID></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Unsubscribe" searchProperties="true" id="cf7d6741-0f16-4d46-8743-4142a3e3c991"><con:settings/><con:testStep type="request" name="unsubscribe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NotificationProducerSoapHttpBinding</con:interface><con:operation>unsubscribe</con:operation><con:request name="unsubscribe"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1">
   <soapenv:Header>
      <v1:header>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>unsubscribe</v1:activityName>
         <v1:msgName>unsubscribeRequest</v1:msgName>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/notificationProducer</v1:destinationURI>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:unsubscribeRequest>
         <v11:subscriptionID>0</v11:subscriptionID>
         <v11:topic>fault</v11:topic>
      </v11:unsubscribeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Send SOAPui Notification" searchProperties="true" id="01624c38-e691-49bd-9118-e3c51a34fb99"><con:settings/><con:testStep type="request" name="Send Notification"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NotificationConsumerSoapHttpBinding</con:interface><con:operation>notify</con:operation><con:request name="Send Notification"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumer</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/cei/v1">
   <soapenv:Header>
      <v1:header>
        <v1:destinationURI>http://62.190.191.48:9006/mtosi/fmw/NotificationConsumerHttp</v1:destinationURI>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>notify</v1:activityName>
         <v1:msgName>notify</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>NOTIFICATION</v1:msgType>
         <v1:communicationPattern>Notification</v1:communicationPattern>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:notify>
         <v11:topic>fault</v11:topic>
         <v11:message>
            <!--1 or more repetitions:-->
            <v12:commonEventInformation>
               <!--Optional:-->
               <v12:notificationId>999882</v12:notificationId>
               <!--Optional:-->
               <v12:sourceTime>32423322</v12:sourceTime>
               <!--Optional:-->
               <v12:vendorExtensions>
                  <!--You may enter ANY elements at this point-->
               </v12:vendorExtensions>
            </v12:commonEventInformation>
         </v11:message>
      </v11:notify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: notificationId"><con:configuration><token>notificationId></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: sourceTime" disabled="true"><con:configuration><token>sourceTime></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Subscribe - Unsubscribe" searchProperties="true" id="f7a52af5-6833-49e3-a564-516413ec0ec6"><con:settings/><con:testStep type="request" name="Subscribe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NotificationProducerSoapHttpBinding</con:interface><con:operation>subscribe</con:operation><con:request name="Subscribe"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1">
   <soapenv:Header>
      <v1:header>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>subscribe</v1:activityName>
         <v1:msgName>subscribeRequest</v1:msgName>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/fmw/notificationProducer</v1:destinationURI>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:subscribeRequest>
         !-- Nothing is listening at this address, but chose it to be unique to this test case-->
         <v11:consumerEpr>http://62.190.191.48:9009/mtosi/fmw/NotificationConsumerTest</v11:consumerEpr>
         <v11:replyToURI>http://62.190.191.48:9009/NotificationConsumerTest</v11:replyToURI>
         <v11:activityName>subscribe</v11:activityName>
         <v11:topic>fault</v11:topic>
      </v11:subscribeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>>SUCCESS&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: subscriptionId"><con:configuration><token>subscriptionID></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>consumerUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Subscribe</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1"
//v1:subscriptionID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Unsubscribe</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1"
//v1:subscriptionID</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="Unsubscribe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NotificationProducerSoapHttpBinding</con:interface><con:operation>unsubscribe</con:operation><con:request name="Unsubscribe"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1">
   <soapenv:Header>
      <v1:header>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>unsubscribe</v1:activityName>
         <v1:msgName>unsubscribeRequest</v1:msgName>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/notificationProducer</v1:destinationURI>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:unsubscribeRequest>
         <v11:subscriptionID>1326307878211</v11:subscriptionID>
         <v11:topic>fault</v11:topic>
      </v11:unsubscribeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>>SUCCESS&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Subscribe - validation" searchProperties="true" id="8259b499-139d-405f-ab6d-f20b1060b496"><con:settings/><con:testStep type="request" name="subscribe - includes selector"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NotificationProducerSoapHttpBinding</con:interface><con:operation>subscribe</con:operation><con:request name="subscribe - includes selector"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1">
   <soapenv:Header>
      <v1:header>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>subscribe</v1:activityName>
         <v1:msgName>subscribeRequest</v1:msgName>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/fmw/notificationProducer</v1:destinationURI>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:subscribeRequest>
         <v11:consumerEpr>http://62.190.191.48:9009/mtosi/fmw/NotificationConsumer</v11:consumerEpr>
         <v11:topic>fault</v11:topic>
         <v11:selector Dialect="?">
            e
            <!--You may enter ANY elements at this point-->
            gero
         </v11:selector>
      </v11:subscribeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Input parameter not supported - Selector</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="subscribe - missing field"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NotificationProducerSoapHttpBinding</con:interface><con:operation>subscribe</con:operation><con:request name="subscribe - missing field"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1">
   <soapenv:Header>
      <v1:header>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>subscribe</v1:activityName>
         <v1:msgName>subscribeRequest</v1:msgName>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/fmw/notificationProducer</v1:destinationURI>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:subscribeRequest>
      </v11:subscribeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>>ERROR&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Correct Fault String"><con:configuration><token>&lt;message>No consumerEpr provided&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="subscribe - invalid topic"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NotificationProducerSoapHttpBinding</con:interface><con:operation>subscribe</con:operation><con:request name="subscribe - invalid topic"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/fmw/NotificationProducer</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/fmw/xsd/notmsg/v1">
   <soapenv:Header>
      <v1:header>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>subscribe</v1:activityName>
         <v1:msgName>subscribeRequest</v1:msgName>
         <v1:msgType>REQUEST</v1:msgType>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/fmw/notificationProducer</v1:destinationURI>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:subscribeRequest>
         <v11:consumerEpr>http://62.190.191.48:9009/mtosi/fmw/NotificationConsumer</v11:consumerEpr>
         <v11:topic>mars</v11:topic>
      </v11:subscribeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid topic</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Termination Point Retrieval"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllAssignableConnectionlessPortTerminationPoints TestCase" searchProperties="true" id="ecf6a6ed-44d7-4093-992e-f08c3d054702"><con:settings/><con:testStep type="request" name="getAllAssignableConnectionlessPortTerminationPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getAllAssignableConnectionlessPortTerminationPoints</con:operation><con:request name="getAllAssignableConnectionlessPortTerminationPoints"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllAssignableConnectionlessPortTerminationPoints</v1:activityName>
         <v1:msgName>getAllAssignableConnectionlessPortTerminationPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllAssignableConnectionlessPortTerminationPointsRequest>
         <!--Optional:-->
         <v11:mfdRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mfdRef>
      </v11:getAllAssignableConnectionlessPortTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllAssignableConnectionlessPortTerminationPoints" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllAssignedConnectionlessPortTerminationPoints TestCase" searchProperties="true" id="88a2af30-031b-4927-97de-f7b9b80b2a52"><con:settings/><con:testStep type="request" name="getAllAssignedConnectionlessPortTerminationPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getAllAssignedConnectionlessPortTerminationPoints</con:operation><con:request name="getAllAssignedConnectionlessPortTerminationPoints"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllAssignedConnectionlessPortTerminationPoints</v1:activityName>
         <v1:msgName>getAllAssignedConnectionlessPortTerminationPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllAssignedConnectionlessPortTerminationPointsRequest>
         <!--Optional:-->
         <v11:mfdRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mfdRef>
      </v11:getAllAssignedConnectionlessPortTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllAssignedConnectionlessPortTerminationPoints" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllConnectionlessPortTerminationPoints TestCase" searchProperties="true" id="0c03382b-96bc-485a-bc26-806f2ec07892"><con:settings/><con:testStep type="request" name="getAllConnectionlessPortTerminationPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getAllConnectionlessPortTerminationPoints</con:operation><con:request name="getAllConnectionlessPortTerminationPoints"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllConnectionlessPortTerminationPoints</v1:activityName>
         <v1:msgName>getAllConnectionlessPortTerminationPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllConnectionlessPortTerminationPointsRequest>
         <!--Optional:-->
         <v11:fdRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:fdRef>
         <!--Optional:-->
         <v11:cptpRole>?</v11:cptpRole>
      </v11:getAllConnectionlessPortTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllConnectionlessPortTerminationPoints" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllEdgePoints TestCase" searchProperties="true" id="c1405195-006d-4bbb-98fa-a316c675f30d"><con:settings/><con:testStep type="request" name="getAllEdgePoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getAllEdgePoints</con:operation><con:request name="getAllEdgePoints"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllEdgePoints</v1:activityName>
         <v1:msgName>getAllEdgePointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllEdgePointsRequest>
         <!--Optional:-->
         <v11:mlsnRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mlsnRef>
         <!--Optional:-->
         <v11:tpLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:tpLayerRateList>
         <!--Optional:-->
         <v11:connectionLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionLayerRateList>
      </v11:getAllEdgePointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:wsaConfig action="getAllEdgePoints"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllFloatingTerminationPoints TestCase" searchProperties="true" id="fef58bf4-85bc-4a26-93e5-444b27b57219"><con:settings/><con:testStep type="request" name="getAllFloatingTerminationPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getAllFloatingTerminationPoints</con:operation><con:request name="getAllFloatingTerminationPoints"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllFloatingTerminationPoints</v1:activityName>
         <v1:msgName>getAllFloatingTerminationPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllFloatingTerminationPointsRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:tpLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:tpLayerRateList>
         <!--Optional:-->
         <v11:connectionLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionLayerRateList>
      </v11:getAllFloatingTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:wsaConfig action="getAllFloatingTerminationPoints"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllGroupTerminationPoints TestCase" searchProperties="true" id="b5de3a14-7048-4c02-a93a-7a583cae0ca8"><con:settings/><con:testStep type="request" name="getAllGroupTerminationPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getAllGroupTerminationPoints</con:operation><con:request name="getAllGroupTerminationPoints"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllGroupTerminationPoints</v1:activityName>
         <v1:msgName>getAllGroupTerminationPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllGroupTerminationPointsRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:tpLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:tpLayerRateList>
      </v11:getAllGroupTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:wsaConfig action="getAllGroupTerminationPoints"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllPhysicalTerminationPoints TestCase" searchProperties="true" id="5e49355d-1ef9-4bbb-94b1-ab12fd35fe5f"><con:settings/><con:testStep type="request" name="getAllPhysicalTerminationPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getAllPhysicalTerminationPoints</con:operation><con:request name="getAllPhysicalTerminationPoints"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllPhysicalTerminationPoints</v1:activityName>
         <v1:msgName>getAllPhysicalTerminationPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllPhysicalTerminationPointsRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:tpLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:tpLayerRateList>
         <!--Optional:-->
         <v11:connectionLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionLayerRateList>
      </v11:getAllPhysicalTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllPhysicalTerminationPoints" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllPhysicalTerminationPointsWithoutFtps TestCase" searchProperties="true" id="0db9adab-0a9d-4170-a737-794c958bcf1f"><con:settings/><con:testStep type="request" name="getAllPhysicalTerminationPointsWithoutFtps"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getAllPhysicalTerminationPointsWithoutFtps</con:operation><con:request name="getAllPhysicalTerminationPointsWithoutFtps"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllPhysicalTerminationPointsWithoutFtps</v1:activityName>
         <v1:msgName>getAllPhysicalTerminationPointsWithoutFtpsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllPhysicalTerminationPointsWithoutFtpsRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:tpLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:tpLayerRateList>
         <!--Optional:-->
         <v11:connectionLayerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionLayerRateList>
      </v11:getAllPhysicalTerminationPointsWithoutFtpsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllPhysicalTerminationPointsWithoutFtps" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllSupportedPhysicalTerminationPoints TestCase" searchProperties="true" id="bc69e6f4-1145-453c-b479-088a1499f302"><con:settings/><con:testStep type="request" name="getAllSupportedPhysicalTerminationPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getAllSupportedPhysicalTerminationPoints</con:operation><con:request name="getAllSupportedPhysicalTerminationPoints"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllSupportedPhysicalTerminationPoints</v1:activityName>
         <v1:msgName>getAllSupportedPhysicalTerminationPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllSupportedPhysicalTerminationPointsRequest>
         <!--Optional:-->
         <v11:equipmentRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:equipmentRef>
      </v11:getAllSupportedPhysicalTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:wsaConfig action="getAllSupportedPhysicalTerminationPoints"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllTerminationPointPools TestCase" searchProperties="true" id="54a6570b-80b9-41fd-9491-25c69c4ea536"><con:settings/><con:testStep type="request" name="getAllTerminationPointPools"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getAllTerminationPointPools</con:operation><con:request name="getAllTerminationPointPools"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllTerminationPointPools</v1:activityName>
         <v1:msgName>getAllTerminationPointPoolsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllTerminationPointPoolsRequest>
         <!--Optional:-->
         <v11:mlsnRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mlsnRef>
      </v11:getAllTerminationPointPoolsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:wsaConfig action="getAllTerminationPointPools"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAssociatedGroupTerminationPoint TestCase" searchProperties="true" id="ff8e6859-9d32-4abd-80ef-5030dc27548f"><con:settings/><con:testStep type="request" name="getAssociatedGroupTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getAssociatedGroupTerminationPoint</con:operation><con:request name="getAssociatedGroupTerminationPoint"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAssociatedGroupTerminationPoint</v1:activityName>
         <v1:msgName>getAssociatedGroupTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAssociatedGroupTerminationPointRequest>
         <!--Optional:-->
         <v11:ctpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:ctpRef>
      </v11:getAssociatedGroupTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAssociatedGroupTerminationPoint" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAssociatedTerminationPoint TestCase" searchProperties="true" id="2d5fd783-505f-4929-9dda-7b728453902f"><con:settings/><con:testStep type="request" name="getAssociatedTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getAssociatedTerminationPoint</con:operation><con:request name="getAssociatedTerminationPoint"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAssociatedTerminationPoint</v1:activityName>
         <v1:msgName>getAssociatedTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAssociatedTerminationPointRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
      </v11:getAssociatedTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:wsaConfig action="getAssociatedTerminationPoint"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAssociatedTerminationPointsWrtTmd TestCase" searchProperties="true" id="e0d144cc-3c3f-433c-978f-8100e948610e"><con:settings/><con:testStep type="request" name="getAssociatedTerminationPointsWrtTmd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getAssociatedTerminationPointsWrtTmd</con:operation><con:request name="getAssociatedTerminationPointsWrtTmd"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAssociatedTerminationPointsWrtTmd</v1:activityName>
         <v1:msgName>getAssociatedTerminationPointsWrtTmdRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAssociatedTerminationPointsWrtTmdRequest>
         <!--Optional:-->
         <v11:tmdRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tmdRef>
      </v11:getAssociatedTerminationPointsWrtTmdRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:wsaConfig action="getAssociatedTerminationPointsWrtTmd"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getContainedCurrentConnectionTerminationPoints TestCase" searchProperties="true" id="ad13d976-5f08-4d18-91d5-daa100c74211"><con:settings/><con:testStep type="request" name="getContainedCurrentConnectionTerminationPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getContainedCurrentConnectionTerminationPoints</con:operation><con:request name="getContainedCurrentConnectionTerminationPoints"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getContainedCurrentConnectionTerminationPoints</v1:activityName>
         <v1:msgName>getContainedCurrentConnectionTerminationPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getContainedCurrentConnectionTerminationPointsRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
         <!--Optional:-->
         <v11:layerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:layerRateList>
      </v11:getContainedCurrentConnectionTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getContainedCurrentConnectionTerminationPoints" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getContainedInUseConnectionTerminationPoints TestCase" searchProperties="true" id="3459f2ef-48d8-40cd-92d8-3c0207d80824"><con:settings/><con:testStep type="request" name="getContainedInUseConnectionTerminationPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getContainedInUseConnectionTerminationPoints</con:operation><con:request name="getContainedInUseConnectionTerminationPoints"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getContainedInUseConnectionTerminationPoints</v1:activityName>
         <v1:msgName>getContainedInUseConnectionTerminationPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getContainedInUseConnectionTerminationPointsRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
         <!--Optional:-->
         <v11:layerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:layerRateList>
      </v11:getContainedInUseConnectionTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:wsaConfig action="getContainedInUseConnectionTerminationPoints"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getContainedPotentialConnectionTerminationPoints TestCase" searchProperties="true" id="1570fe9c-d582-432f-a3e9-febdb04e8e08"><con:settings/><con:testStep type="request" name="getContainedPotentialConnectionTerminationPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getContainedPotentialConnectionTerminationPoints</con:operation><con:request name="getContainedPotentialConnectionTerminationPoints"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getContainedPotentialConnectionTerminationPoints</v1:activityName>
         <v1:msgName>getContainedPotentialConnectionTerminationPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getContainedPotentialConnectionTerminationPointsRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
         <!--Optional:-->
         <v11:layerRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:layerRateList>
      </v11:getContainedPotentialConnectionTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:wsaConfig action="getContainedPotentialConnectionTerminationPoints"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getContainingGroupTerminationPoint TestCase" searchProperties="true" id="0f55b000-7b0f-4e32-83e8-fdac8f4aadb8"><con:settings/><con:testStep type="request" name="getContainingGroupTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getContainingGroupTerminationPoint</con:operation><con:request name="getContainingGroupTerminationPoint"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getContainingGroupTerminationPoint</v1:activityName>
         <v1:msgName>getContainingGroupTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getContainingGroupTerminationPointRequest>
         <!--Optional:-->
         <v11:ctpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:ctpRef>
      </v11:getContainingGroupTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:wsaConfig action="getContainingGroupTerminationPoint"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getContainingTerminationPoints TestCase" searchProperties="true" id="0bd3aaac-ca5f-4f0a-89c4-c5b8fc3bd608"><con:settings/><con:testStep type="request" name="getContainingTerminationPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getContainingTerminationPoints</con:operation><con:request name="getContainingTerminationPoints"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getContainingTerminationPoints</v1:activityName>
         <v1:msgName>getContainingTerminationPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getContainingTerminationPointsRequest>
         <!--Optional:-->
         <v11:ctpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:ctpRef>
      </v11:getContainingTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:wsaConfig action="getContainingTerminationPoints"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getGroupTerminationPoint TestCase" searchProperties="true" id="c33eb66c-d7b3-4943-b5a8-bc98ea3c33bc"><con:settings/><con:testStep type="request" name="getGroupTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getGroupTerminationPoint</con:operation><con:request name="getGroupTerminationPoint"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getGroupTerminationPoint</v1:activityName>
         <v1:msgName>getGroupTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getGroupTerminationPointRequest>
         <!--Optional:-->
         <v11:gtpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:gtpRef>
      </v11:getGroupTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getGroupTerminationPoint" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getGroupTerminationPointsIterator TestCase" searchProperties="true" id="1c9fb7ce-490f-4668-b6ff-e80b9dbbe93f"><con:settings/><con:testStep type="request" name="getGroupTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getGroupTerminationPoint</con:operation><con:request name="getGroupTerminationPoint"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getGroupTerminationPoint</v1:activityName>
         <v1:msgName>getGroupTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getGroupTerminationPointRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>&lt;iteratorReferenceURI></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>iteratorUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getGroupTerminationPoint</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getGroupTerminationPointsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>batchsize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getGroupTerminationPoint</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getGroupTerminationPointsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getGroupTerminationPointsIterator"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getGroupTerminationPointsIterator</con:operation><con:request name="getGroupTerminationPointsIterator"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getGroupTerminationPointsIterator</v1:activityName>
         <v1:msgName>getGroupTerminationPointsIteratorRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
	 <v1:iteratorReferenceURI>http://onx-mdangan-01:9001/mtosi/mri/TerminationPointRetrieval/30</v1:iteratorReferenceURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getGroupTerminationPointsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getGroupTerminationPointsIterator" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getTerminationPointGroupingRelationships TestCase" searchProperties="true" id="6e54d529-0cea-4d7c-b734-b808ad26a299"><con:settings/><con:testStep type="request" name="getTerminationPointGroupingRelationships"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getTerminationPointGroupingRelationships</con:operation><con:request name="getTerminationPointGroupingRelationships"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getTerminationPointGroupingRelationships</v1:activityName>
         <v1:msgName>getTerminationPointGroupingRelationshipsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointGroupingRelationshipsRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
      </v11:getTerminationPointGroupingRelationshipsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:wsaConfig action="getTerminationPointGroupingRelationships"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getTerminationPointPool TestCase" searchProperties="true" id="5086c0d4-fa39-4f4e-920c-94de194a991a"><con:settings/><con:testStep type="request" name="getTerminationPointPool"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getTerminationPointPool</con:operation><con:request name="getTerminationPointPool"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getTerminationPointPool</v1:activityName>
         <v1:msgName>getTerminationPointPoolRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointPoolRequest>
         <!--Optional:-->
         <v11:tpPoolRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpPoolRef>
      </v11:getTerminationPointPoolRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getTerminationPointPool" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getTerminationPointPoolsIterator TestCase" searchProperties="true" id="6d6d29a1-1f57-4766-902f-a5f79a30090b"><con:settings/><con:testStep type="request" name="getTerminationPointPool"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getTerminationPointPool</con:operation><con:request name="getTerminationPointPool"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getTerminationPointPool</v1:activityName>
         <v1:msgName>getTerminationPointPoolRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointPoolRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>&lt;iteratorReferenceURI></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>iteratorUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getTerminationPointPool</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getTerminationPointPoolsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>batchsize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getTerminationPointPool</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getTerminationPointPoolsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getTerminationPointPoolsIterator"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getTerminationPointPoolsIterator</con:operation><con:request name="getTerminationPointPoolsIterator"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getTerminationPointPoolsIterator</v1:activityName>
         <v1:msgName>getTerminationPointPoolsIteratorRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
	 <v1:iteratorReferenceURI>http://onx-mdangan-01:9001/mtosi/mri/TerminationPointRetrieval/26</v1:iteratorReferenceURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointPoolsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getTerminationPointPoolsIterator" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getTerminationPointsIterator TestCase" searchProperties="true" id="fa894b3e-864f-4f08-b4fb-97a76073cbbc"><con:settings/><con:testStep type="request" name="getTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getTerminationPoint</con:operation><con:request name="getTerminationPoint"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getTerminationPoint</v1:activityName>
         <v1:msgName>getTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>&lt;iteratorReferenceURI></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>iteratorUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getTerminationPoint</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getTerminationPointsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>batchsize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getTerminationPoint</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getTerminationPointsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getTerminationPointsIterator"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getTerminationPointsIterator</con:operation><con:request name="getTerminationPointsIterator"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getTerminationPointsIterator</v1:activityName>
         <v1:msgName>getTerminationPointsIteratorRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:iteratorReferenceURI>http://onx-mdangan-01:9001/mtosi/mri/TerminationPointRetrieval/36</v1:iteratorReferenceURI>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getTerminationPointsIterator" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getTrafficConditioningProfileAssociatedTps TestCase" searchProperties="true" id="c182b1f8-de46-46b0-9a87-6ef4a6a0f3dd"><con:settings/><con:testStep type="request" name="getTrafficConditioningProfileAssociatedTps"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getTrafficConditioningProfileAssociatedTps</con:operation><con:request name="getTrafficConditioningProfileAssociatedTps"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getTrafficConditioningProfileAssociatedTps</v1:activityName>
         <v1:msgName>getTrafficConditioningProfileAssociatedTpsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTrafficConditioningProfileAssociatedTpsRequest>
         <!--Optional:-->
         <v11:tcProfileRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tcProfileRef>
      </v11:getTrafficConditioningProfileAssociatedTpsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="operation is &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="&quot;ERROR&quot; message type"><con:configuration><token>&lt;msgType>ERROR&lt;/msgType></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getTrafficConditioningProfileAssociatedTps" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getTerminationPoint" searchProperties="true" id="ae59a3bb-0515-402d-b62e-e0e02d4de4ad"><con:settings/><con:testStep type="request" name="getTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getTerminationPoint</con:operation><con:request name="getTerminationPoint"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getTerminationPoint</v1:activityName>
         <v1:msgName>getTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointRequest>
         <v11:tpRef>
            <v12:rdn>
               <v12:type>PTP</v12:type>
               <v12:value>PTPxyz</v12:value>
            </v12:rdn>
         </v11:tpRef>
      </v11:getTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" name="Not Contains - FAILURE"><con:configuration><token>FAILURE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: direction"><con:configuration><token>direction></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: isEdgePoint"><con:configuration><token>isEdgePoint></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: tpProtectionAssociation"><con:configuration><token>tpProtectionAssociation></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: aliasNameList"><con:configuration><token>:aliasNameList</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: discoveredName"><con:configuration><token>:discoveredName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: name"><con:configuration><token>:name</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: namingOs"><con:configuration><token>:namingOs</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: userLabel"><con:configuration><token>:userLabel</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: source"><con:configuration><token>:source</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getTerminationPoint" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getTerminationPoint - empty tpref" searchProperties="true"><con:settings/><con:testStep type="request" name="getTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getTerminationPoint</con:operation><con:request name="getTerminationPoint"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getTerminationPoint</v1:activityName>
         <v1:msgName>getTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointRequest>
         <v11:tpRef>
            <v12:rdn/>
         </v11:tpRef>
      </v11:getTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains - invalid input"><con:configuration><token>Invalid input</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getTerminationPoint" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getTerminationPoint - invalid tpRef" searchProperties="true"><con:settings/><con:testStep type="request" name="getTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointRetrievalSoapHttpBinding</con:interface><con:operation>getTerminationPoint</con:operation><con:request name="getTerminationPoint"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/tpr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/TerminationPointRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getTerminationPoint</v1:activityName>
         <v1:msgName>getTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getTerminationPointRequest>
         <v11:tpRef>
            <v12:rdn>
               <v12:type>PTP</v12:type>
               <v12:value>ZONE1</v12:value>
            </v12:rdn>
         </v11:tpRef>
      </v11:getTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains - invalid input"><con:configuration><token>Invalid input</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getTerminationPoint" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Connection Retrieval" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllCrossConnections TestCase" searchProperties="true" id="9580de90-f21a-465b-b077-095e71dbf14c"><con:settings/><con:testStep type="request" name="getAllCrossConnections"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getAllCrossConnections</con:operation><con:request name="getAllCrossConnections"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllCrossConnections</v1:activityName>
         <v1:msgName>getAllCrossConnectionsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllCrossConnectionsRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:connectionRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionRateList>
      </v11:getAllCrossConnectionsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllCrossConnections" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllFixedCrossConnections TestCase" searchProperties="true" id="e539ec4b-4fe2-49bf-b431-ab820f6651a8"><con:settings/><con:testStep type="request" name="getAllFixedCrossConnections"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getAllFixedCrossConnections</con:operation><con:request name="getAllFixedCrossConnections"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllFixedCrossConnections</v1:activityName>
         <v1:msgName>getAllFixedCrossConnectionsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllFixedCrossConnectionsRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:connectionRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionRateList>
      </v11:getAllFixedCrossConnectionsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllFixedCrossConnections" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllFixedSubnetworkConnections TestCase" searchProperties="true" id="d5152acb-5683-4478-85ee-9502ace87d67"><con:settings/><con:testStep type="request" name="getAllFixedSubnetworkConnections"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getAllFixedSubnetworkConnections</con:operation><con:request name="getAllFixedSubnetworkConnections"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllFixedSubnetworkConnections</v1:activityName>
         <v1:msgName>getAllFixedSubnetworkConnectionsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllFixedSubnetworkConnectionsRequest>
         <!--Optional:-->
         <v11:mlsnRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mlsnRef>
         <!--Optional:-->
         <v11:connectionRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionRateList>
      </v11:getAllFixedSubnetworkConnectionsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllFixedSubnetworkConnections" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllFixedSubnetworkConnectionsWithTp TestCase" searchProperties="true" id="15b1936e-ef24-47e3-adb1-7c74f971e56c"><con:settings/><con:testStep type="request" name="getAllFixedSubnetworkConnectionsWithTp"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getAllFixedSubnetworkConnectionsWithTp</con:operation><con:request name="getAllFixedSubnetworkConnectionsWithTp"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllFixedSubnetworkConnectionsWithTp</v1:activityName>
         <v1:msgName>getAllFixedSubnetworkConnectionsWithTpRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllFixedSubnetworkConnectionsWithTpRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
         <!--Optional:-->
         <v11:connectionRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionRateList>
      </v11:getAllFixedSubnetworkConnectionsWithTpRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllFixedSubnetworkConnectionsWithTp" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllSubnetworkConnections TestCase" searchProperties="true" id="7a919c73-d28e-43a2-a593-f8c5e557e9b4"><con:settings/><con:testStep type="request" name="getAllSubnetworkConnections"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getAllSubnetworkConnections</con:operation><con:request name="getAllSubnetworkConnections"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllSubnetworkConnections</v1:activityName>
         <v1:msgName>getAllSubnetworkConnectionsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllSubnetworkConnectionsRequest>
         <!--Optional:-->
         <v11:mlsnRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:mlsnRef>
         <!--Optional:-->
         <v11:connectionRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionRateList>
      </v11:getAllSubnetworkConnectionsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllSubnetworkConnections" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllSubnetworkConnectionsWithTp TestCase" searchProperties="true" id="6dd61b33-d976-4992-b0d3-16d38a805aa0"><con:settings/><con:testStep type="request" name="getAllSubnetworkConnectionsWithTp"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getAllSubnetworkConnectionsWithTp</con:operation><con:request name="getAllSubnetworkConnectionsWithTp"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllSubnetworkConnectionsWithTp</v1:activityName>
         <v1:msgName>getAllSubnetworkConnectionsWithTpRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllSubnetworkConnectionsWithTpRequest>
         <!--Optional:-->
         <v11:tpRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpRef>
         <!--Optional:-->
         <v11:connectionRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionRateList>
      </v11:getAllSubnetworkConnectionsWithTpRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllSubnetworkConnectionsWithTp" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getBackupRoutes TestCase" searchProperties="true" id="562463e9-1f7d-4752-a93f-14ea612d79e6"><con:settings/><con:testStep type="request" name="getBackupRoutes"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getBackupRoutes</con:operation><con:request name="getBackupRoutes"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getBackupRoutes</v1:activityName>
         <v1:msgName>getBackupRoutesRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getBackupRoutesRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:isHigherOrderCcListIncluded>?</v11:isHigherOrderCcListIncluded>
         <!--Optional:-->
         <v11:additionalInfo>
            <!--Zero or more repetitions:-->
            <v13:nvs>
               <v13:name>?</v13:name>
               <v13:value>?</v13:value>
            </v13:nvs>
         </v11:additionalInfo>
      </v11:getBackupRoutesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getBackupRoutes" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCrossConnectionsIterator TestCase" searchProperties="true" id="0eb04f2b-b4a2-439d-815b-1c73cd7c4e3f"><con:settings/><con:testStep type="request" name="getAllCrossConnections"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getAllCrossConnections</con:operation><con:request name="getAllCrossConnections"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrb/xsd/lay/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllCrossConnections</v1:activityName>
         <v1:msgName>getAllCrossConnectionsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllCrossConnectionsRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:connectionRateList>
            <!--Zero or more repetitions:-->
            <v13:layerRate extension="?">?</v13:layerRate>
         </v11:connectionRateList>
      </v11:getAllCrossConnectionsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>&lt;iteratorReferenceURI></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>iteratorUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getAllCrossConnections</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getCrossConnectionsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>batchsize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getAllCrossConnections</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getCrossConnectionsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getCrossConnectionsIterator"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getCrossConnectionsIterator</con:operation><con:request name="getCrossConnectionsIterator"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getCrossConnectionsIterator</v1:activityName>
         <v1:msgName>getCrossConnectionsIteratorRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:iteratorReferenceURI>http://onx-mdangan-01:9001/mtosi/mri/ConnectionRetrieval/2</v1:iteratorReferenceURI>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getCrossConnectionsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getCrossConnectionsIterator" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIntendedRoute TestCase" searchProperties="true" id="5f4da7b2-1756-4bba-98e3-bd29613e1c1f"><con:settings/><con:testStep type="request" name="getIntendedRoute"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getIntendedRoute</con:operation><con:request name="getIntendedRoute"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getIntendedRoute</v1:activityName>
         <v1:msgName>getIntendedRouteRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getIntendedRouteRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:isHigherOrderCcListIncluded>?</v11:isHigherOrderCcListIncluded>
         <!--Optional:-->
         <v11:additionalInfo>
            <!--Zero or more repetitions:-->
            <v13:nvs>
               <v13:name>?</v13:name>
               <v13:value>?</v13:value>
            </v13:nvs>
         </v11:additionalInfo>
      </v11:getIntendedRouteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getIntendedRoute" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getPotentialFixedCrossConnections TestCase" searchProperties="true" id="edc71477-1e5f-4f33-a97e-6f9a65a548f2"><con:settings/><con:testStep type="request" name="getPotentialFixedCrossConnections"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getPotentialFixedCrossConnections</con:operation><con:request name="getPotentialFixedCrossConnections"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getPotentialFixedCrossConnections</v1:activityName>
         <v1:msgName>getPotentialFixedCrossConnectionsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getPotentialFixedCrossConnectionsRequest>
         <!--Optional:-->
         <v11:inputTp>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:inputTp>
      </v11:getPotentialFixedCrossConnectionsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getPotentialFixedCrossConnections" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getRoute TestCase" searchProperties="true" id="22f1390b-52c3-4654-bc51-345cab65ee65"><con:settings/><con:testStep type="request" name="getRoute"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getRoute</con:operation><con:request name="getRoute"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getRoute</v1:activityName>
         <v1:msgName>getRouteRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getRouteRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:isHigherOrderCcListIncluded>?</v11:isHigherOrderCcListIncluded>
      </v11:getRouteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getRoute" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getSubnetworkConnection TestCase" searchProperties="true" id="a7f25322-91f4-42b5-b7ee-f0728dfce97e"><con:settings/><con:testStep type="request" name="getSubnetworkConnection"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getSubnetworkConnection</con:operation><con:request name="getSubnetworkConnection"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getSubnetworkConnection</v1:activityName>
         <v1:msgName>getSubnetworkConnectionRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
      </v11:getSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getSubnetworkConnection" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getSubnetworkConnectionModeOfOperation TestCase" searchProperties="true" id="cd261065-44d5-463d-9c49-0c3c029e5b42"><con:settings/><con:testStep type="request" name="getSubnetworkConnectionModeOfOperation"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getSubnetworkConnectionModeOfOperation</con:operation><con:request name="getSubnetworkConnectionModeOfOperation"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getSubnetworkConnectionModeOfOperation</v1:activityName>
         <v1:msgName>getSubnetworkConnectionModeOfOperationRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getSubnetworkConnectionModeOfOperationRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getSubnetworkConnectionModeOfOperation" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getSubnetworkConnectionsByUserLabel TestCase" searchProperties="true" id="5f2cbd03-509c-4c73-8854-0a176ba10945"><con:settings/><con:testStep type="request" name="getSubnetworkConnectionsByUserLabel"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getSubnetworkConnectionsByUserLabel</con:operation><con:request name="getSubnetworkConnectionsByUserLabel"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getSubnetworkConnectionsByUserLabel</v1:activityName>
         <v1:msgName>getSubnetworkConnectionsByUserLabelRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getSubnetworkConnectionsByUserLabelRequest>
         <!--Optional:-->
         <v11:userLabel>?</v11:userLabel>
      </v11:getSubnetworkConnectionsByUserLabelRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getSubnetworkConnectionsByUserLabel" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getSubnetworkConnectionsIterator TestCase" searchProperties="true" id="5aa6f12e-1bb5-4425-925c-931ca73d2a61"><con:settings/><con:testStep type="request" name="getSubnetworkConnection"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getSubnetworkConnection</con:operation><con:request name="getSubnetworkConnection"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getSubnetworkConnection</v1:activityName>
         <v1:msgName>getSubnetworkConnectionRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
      </v11:getSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>&lt;iteratorReferenceURI></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>iteratorUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getSubnetworkConnection</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getSubnetworkConnectionsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>batchsize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getSubnetworkConnection</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getSubnetworkConnectionsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getSubnetworkConnectionsIterator"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionRetrievalSoapHttpBinding</con:interface><con:operation>getSubnetworkConnectionsIterator</con:operation><con:request name="getSubnetworkConnectionsIterator"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/conr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ConnectionRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getSubnetworkConnectionsIterator</v1:activityName>
         <v1:msgName>getSubnetworkConnectionsIteratorRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:iteratorReferenceURI>http://onx-mdangan-01:9001/mtosi/mri/ConnectionRetrieval/3</v1:iteratorReferenceURI>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getSubnetworkConnectionsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getSubnetworkConnectionsIterator" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Operations System Retrieval"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getOperationsSystem TestCase" searchProperties="true" id="925b032d-b31e-4bce-81cf-862144095df3"><con:settings/><con:testStep type="request" name="getOperationsSystem"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OperationsSystemRetrievalSoapHttpBinding</con:interface><con:operation>getOperationsSystem</con:operation><con:request name="getOperationsSystem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/osr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getOperationsSystem</v1:activityName>
         <v1:msgName>getOperationsSystemRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getOperationsSystemRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:assertion type="Simple Contains" name="mandatory response field: manufacturer"><con:configuration><token>manufacturer>Ciena&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: productName"><con:configuration><token>productName>OneControl&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: softwareVersion"><con:configuration><token>softwareVersion></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: name"><con:configuration><token>:name</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: userLabel"><con:configuration><token>:userLabel</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: discoveredName"><con:configuration><token>:discoveredName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: namingOs"><con:configuration><token>:namingOs</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: aliasNameList"><con:configuration><token>:aliasNameList</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: source"><con:configuration><token>:source</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getOperationsSystem" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllOperationsSystems TestCase" searchProperties="true" id="e06b0817-28e2-432a-88d4-a421a9acc47c"><con:settings/><con:testStep type="request" name="getAllOperationsSystems"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OperationsSystemRetrievalSoapHttpBinding</con:interface><con:operation>getAllOperationsSystems</con:operation><con:request name="getAllOperationsSystems"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/osr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllOperationsSystems</v1:activityName>
         <v1:msgName>getAllOperationsSystemsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllOperationsSystemsRequest>?</v11:getAllOperationsSystemsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllOperationsSystems" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getOperationsSystemsIterator TestCase" searchProperties="true" id="1dfe451e-8092-4e06-9b72-1146b14b8d32"><con:settings/><con:testStep type="request" name="getOperationsSystem"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OperationsSystemRetrievalSoapHttpBinding</con:interface><con:operation>getOperationsSystem</con:operation><con:request name="getOperationsSystem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/osr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getOperationsSystem</v1:activityName>
         <v1:msgName>getOperationsSystemRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getOperationsSystemRequest>?</v11:getOperationsSystemRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>&lt;iteratorReferenceURI></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>iteratorUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getOperationsSystem</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getOperationsSystemsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>batchSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getOperationsSystem</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getOperationsSystemsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getOperationsSystemsIterator"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OperationsSystemRetrievalSoapHttpBinding</con:interface><con:operation>getOperationsSystemsIterator</con:operation><con:request name="getOperationsSystemsIterator"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/osr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getOperationsSystemsIterator</v1:activityName>
         <v1:msgName>getOperationsSystemsIteratorRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:iteratorReferenceURI>http://onx-mdangan-01:9001/mtosi/mri/OperationsSystemRetrieval/2</v1:iteratorReferenceURI>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getOperationsSystemsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getOperationsSystemsIterator" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getSubordinateOperationsSystem TestCase" searchProperties="true" id="440132b2-b44a-4b40-a6ea-140f6afa19b2"><con:settings/><con:testStep type="request" name="getSubordinateOperationsSystem"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OperationsSystemRetrievalSoapHttpBinding</con:interface><con:operation>getSubordinateOperationsSystem</con:operation><con:request name="getSubordinateOperationsSystem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/osr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/OperationsSystemRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getSubordinateOperationsSystem</v1:activityName>
         <v1:msgName>getSubordinateOperationsSystemRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getSubordinateOperationsSystemRequest>
         <!--Optional:-->
         <v11:osRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:osRef>
      </v11:getSubordinateOperationsSystemRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getSubordinateOperationsSystem" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Resource Inventory Retrieval"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInventory - invalid diffDateAndTime" searchProperties="true" id="2145b106-fe2c-4a46-b650-7bbe699c18e1"><con:settings/><con:testStep type="request" name="getInventory - included"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - included"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:diffDateAndTime>4545454</v11:diffDateAndTime>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains - invalid input"><con:configuration><token>Input parameter not supported - Diff Date and Time</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getInventory - included and empty, succeed"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - included and empty, succeed"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:diffDateAndTime></v11:diffDateAndTime>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains - invalid input"><con:configuration><token>:name</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInventory - case 1) query expression" searchProperties="true" id="057189ad-a077-4b20-b205-fe4271c30d46"><con:settings/><con:testStep type="request" name="getInventory - just query expression"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - just query expression"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <!--Optional:-->
         <v11:filter>
                 <v11:queryExpression Dialect="?">
               e
               <!--You may enter ANY elements at this point-->
               gero
            </v11:queryExpression>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains - invalid input"><con:configuration><token>Input parameter not supported - Filter Query Expression</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getInventory - good base and objtype contains query"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - good base and objtype contains query"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <!--Optional:-->
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:type>MD</v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
               <v12:rdn>
                  <v12:type>ME</v12:type>
                  <v12:value>OME_0784</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    
            <v11:queryExpression Dialect="?">
               e
               <!--You may enter ANY elements at this point-->
               gero
            </v11:queryExpression>

            <v11:includedObjectType>
               <v11:objectType>ME</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains - invalid input"><con:configuration><token>Input parameter not supported - Filter Query Expression</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInventory - case 2) invalid object type" searchProperties="true" id="d1846ce3-0f2c-49ec-85e9-be3583feb522"><con:settings/><con:testStep type="request" name="getInventory - bad object type"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - bad object type"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <!--Optional:-->
         <v11:filter>
            <v11:includedObjectType>
               <v11:objectType>FTP</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains - invalid input"><con:configuration><token>Invalid parameter - Included Object Type</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getInventory - granularity NAME"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - granularity NAME"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
         <v11:includedObjectType>
               <v11:objectType>ME</v11:objectType>
               <v11:granularity>NAME</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid parameter - Included Object Type</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInventory - case 3) invalid base Instance" searchProperties="true" id="e38b4747-1524-40c7-b850-fdfb3296cd5f"><con:settings/><con:testStep type="request" name="getInventory - missing data"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - missing data"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:type></v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
               <v12:rdn>
                  <v12:type></v12:type>
                  <v12:value>OME_0784</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid parameter - Base Instance</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getInventory - missing tag"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - missing tag"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
               <v12:rdn>
                  <v12:type>ME</v12:type>
                  <v12:value>OME_0784</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid parameter - Base Instance</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getInventory - bad data"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - bad data"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:type>XXXX</v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
               <v12:rdn>
                  <v12:type>YYYYY</v12:type>
                  <v12:value>OME_0784</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid parameter - Base Instance</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInventory - case 4) invalid base instance and invalid includedObjectType" searchProperties="true" id="11ffdfd1-92cc-4d56-9bc3-27f5386c2366"><con:settings/><con:testStep type="request" name="getInventory"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <!--Optional:-->
         <v11:filter>
         <v11:baseInstance>
               <v12:rdn>
                  <v12:type></v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
               <v12:rdn>
                  <v12:type></v12:type>
                  <v12:value>OME_0784</v12:value>
               </v12:rdn>
            </v11:baseInstance>
            <v11:includedObjectType>
               <v11:objectType>FTP</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="Contains - invalid input"><con:configuration><token>Invalid parameter - Base Instance and Included Object Type</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInventory - case 5) success path - All" searchProperties="true" id="0997eae1-1fbf-4f9d-9363-95b77645c481"><con:settings/><con:testStep type="request" name="getInventory - All ME"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - All ME"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:type>MD</v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    <v11:includedObjectType>
               <v11:objectType>ME</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>EH</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>EQ</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>PTP</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: communicationState"><con:configuration><token>communicationState></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: isInSyncState"><con:configuration><token>isInSyncState></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: manufacturer"><con:configuration><token>manufacturer></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: name"><con:configuration><token>:name</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: userLabel"><con:configuration><token>:userLabel</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: source"><con:configuration><token>:source</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: namingOs"><con:configuration><token>:namingOs</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: aliasNameList"><con:configuration><token>:aliasNameList</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: discoveredName" disabled="true"><con:configuration><token>:discoveredName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInventory - All info of single ME" searchProperties="true" id="8ef8a9ac-0d23-461e-9bcf-36479c6ec092"><con:settings/><con:testStep type="request" name="getInventory - All ME"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - All ME"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:type>MD</v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    <v11:includedObjectType>
               <v11:objectType>ME</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>EH</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>EQ</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>PTP</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: communicationState"><con:configuration><token>communicationState></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: isInSyncState"><con:configuration><token>isInSyncState></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: manufacturer"><con:configuration><token>manufacturer></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>transfer MD</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[1]/ns3:value[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[1]/v12:value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>transfer MD type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[1]/ns3:type[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[1]/v12:type[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>transfer ME</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[2]/ns3:value[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[2]/v12:value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>transfer ME type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[2]/ns3:type[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[2]/v12:type[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getInventory"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:type>MD</v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
               <v12:rdn>
                  <v12:type>ME</v12:type>
                  <v12:value>OME0276</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    <v11:includedObjectType>
               <v11:objectType>ME</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>FAILURE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: communicationState"><con:configuration><token>:communicationState</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: isInSyncState"><con:configuration><token>:isInSyncState</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: manufacturer"><con:configuration><token>:manufacturer</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: name"><con:configuration><token>:name</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: userLabel"><con:configuration><token>:userLabel</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: source"><con:configuration><token>:source</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: namingOs"><con:configuration><token>:namingOs</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: aliasNameList"><con:configuration><token>:aliasNameList</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: discoveredName" disabled="true"><con:configuration><token>:discoveredName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInventory - EH" searchProperties="true" id="b168488b-f597-480e-bc73-4f978e3ccd79"><con:settings/><con:testStep type="request" name="getInventory - All ME"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - All ME"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:type>MD</v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    <v11:includedObjectType>
               <v11:objectType>ME</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>EH</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>EQ</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>PTP</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: communicationState"><con:configuration><token>communicationState></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: isInSyncState"><con:configuration><token>isInSyncState></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: manufacturer"><con:configuration><token>manufacturer></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>transfer MD</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[1]/ns3:value[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[1]/v12:value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>transfer MD type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[1]/ns3:type[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[1]/v12:type[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>transfer ME</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[2]/ns3:value[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[2]/v12:value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>transfer ME type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[2]/ns3:type[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[2]/v12:type[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getInventory"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:type>MD</v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
               <v12:rdn>
                  <v12:type>ME</v12:type>
                  <v12:value>OME0276</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    <v11:includedObjectType>
               <v11:objectType>EH</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>FAILURE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: name"><con:configuration><token>:name</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: acceptableEquipmentTypeList"><con:configuration><token>:acceptableEquipmentTypeList</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: expectedOrInstalledEquipmentRef"><con:configuration><token>:exceptedOrInstalledEquipmentRef</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: holderState"><con:configuration><token>:holderState</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: holderType"><con:configuration><token>:holderType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: isReportingAlarms"><con:configuration><token>:isReportingAlarms</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: userLabel"><con:configuration><token>:userLabel</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: namingOs"><con:configuration><token>:namingOs</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: aliasNameList"><con:configuration><token>:aliasNameList</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: source"><con:configuration><token>:source</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: discoveredName" disabled="true"><con:configuration><token>:discoveredName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInventory - PTP" searchProperties="true" id="727074cd-b7f7-44c6-99df-80a95e6b5253"><con:settings/><con:testStep type="request" name="getInventory - All ME"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - All ME"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:type>MD</v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    <v11:includedObjectType>
               <v11:objectType>ME</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>EH</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>EQ</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>PTP</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: communicationState"><con:configuration><token>communicationState></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: isInSyncState"><con:configuration><token>isInSyncState></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: manufacturer"><con:configuration><token>manufacturer></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>transfer MD</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[1]/ns3:value[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[1]/v12:value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>transfer MD type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[1]/ns3:type[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[1]/v12:type[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>transfer ME</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[2]/ns3:value[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[2]/v12:value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>transfer ME type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[2]/ns3:type[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[2]/v12:type[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getInventory"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:type>MD</v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
               <v12:rdn>
                  <v12:type>ME</v12:type>
                  <v12:value>OME0276</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    <v11:includedObjectType>
               <v11:objectType>PTP</v11:objectType>
               <v11:granularity>FULL</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>FAILURE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: name"><con:configuration><token>:name</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: direction"><con:configuration><token>direction></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: isEdgePoint"><con:configuration><token>isEdgePoint></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: tpProtectionAssociation"><con:configuration><token>:tpProtectionAssociation</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: aliasNameList"><con:configuration><token>:aliasNameList</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: discoveredName" disabled="true"><con:configuration><token>:discoveredName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: namingOs"><con:configuration><token>:namingOs</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: userLabel"><con:configuration><token>:userLabel</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: source"><con:configuration><token>:source</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInventory - EQ" searchProperties="true" id="488b0ab7-5882-4a9b-a493-b2c89942ed1c"><con:settings/><con:testStep type="request" name="getInventory - All ME"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory - All ME"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:type>MD</v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    <v11:includedObjectType>
               <v11:objectType>ME</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>EH</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>EQ</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>PTP</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: communicationState"><con:configuration><token>communicationState></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: isInSyncState"><con:configuration><token>isInSyncState></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: manufacturer"><con:configuration><token>manufacturer></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>transfer MD</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[1]/ns3:value[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[1]/v12:value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>transfer MD type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[1]/ns3:type[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[1]/v12:type[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>transfer ME</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[2]/ns3:value[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[2]/v12:value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>transfer ME type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory - All ME</con:sourceStep><con:sourcePath>declare namespace ns3='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace ns39='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
declare namespace ns20='http://www.tmforum.org/mtop/nrf/xsd/invdata/v1';
declare namespace ns4='http://www.tmforum.org/mtop/fmw/xsd/coi/v1';
//ns39:getInventoryResponse[1]/ns39:inventoryData[1]/ns20:mdList[1]/ns20:md[1]/ns20:meList[1]/ns20:meInv[1]/ns20:meAttrs[1]/ns4:name[1]/ns3:rdn[2]/ns3:type[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventory</con:targetStep><con:targetPath>declare namespace v12='http://www.tmforum.org/mtop/fmw/xsd/nam/v1';
declare namespace v11='http://www.tmforum.org/mtop/mri/xsd/rir/v1';
//v11:getInventoryRequest[1]/v11:filter[1]/v11:baseInstance[1]/v12:rdn[2]/v12:type[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getInventory"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:type>MD</v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
               <v12:rdn>
                  <v12:type>ME</v12:type>
                  <v12:value>OME0276</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    <v11:includedObjectType>
               <v11:objectType>EQ</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>FAILURE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: name"><con:configuration><token>:name</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: expectedEquipmentObjectType"><con:configuration><token>:expectedEquipmentObjectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: installedEquipmentObjectType"><con:configuration><token>:installedEquipmentObjectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: installedPartNumber"><con:configuration><token>:installedPartNumber</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: installedSerialNumber"><con:configuration><token>:installedSerialNumber</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: installedVersion"><con:configuration><token>:installedVersion</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: isReportingAlarms"><con:configuration><token>:isReportingAlarms</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: resourceFulfillmentState"><con:configuration><token>:resourceFulfillmentState</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: userLabel"><con:configuration><token>:userLabel</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: discoveredName" disabled="true"><con:configuration><token>:discoveredName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: namingOs"><con:configuration><token>:namingOs</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: aliasNameList"><con:configuration><token>:aliasNameList</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="mandatory response field: source"><con:configuration><token>:source</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventory" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInventoryIterator TestCase" searchProperties="true" id="6ab9475b-a63e-4505-b60a-55f30421c9f0"><con:settings/><con:testStep type="request" name="getInventory"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventory</con:operation><con:request name="getInventory"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventory</v1:activityName>
         <v1:msgName>getInventoryRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryRequest>
         <v11:filter>
            <v11:baseInstance>
               <v12:rdn>
                  <v12:type>MD</v12:type>
                  <v12:value>Ciena</v12:value>
               </v12:rdn>
            </v11:baseInstance>
	    <v11:includedObjectType>
               <v11:objectType>ME</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>EH</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>EQ</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
            <v11:includedObjectType>
               <v11:objectType>PTP</v11:objectType>
               <v11:granularity>ATTRS</v11:granularity>
            </v11:includedObjectType>
         </v11:filter>
      </v11:getInventoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>&lt;iteratorReferenceURI></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>iteratorUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventoryIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>batchSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getInventory</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getInventoryIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getInventoryIterator"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ResourceInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getInventoryIterator</con:operation><con:request name="getInventoryIterator"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/rir/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getInventoryIterator</v1:activityName>
         <v1:msgName>getInventoryIteratorRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:iteratorReferenceURI>http://onx-dsellars-02:9006/mtosi/mri/ResourceInventoryRetrieval/getInventory/2</v1:iteratorReferenceURI>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getInventoryIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains - inventoryData"><con:configuration><token>inventoryData</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getInventoryIterator" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Connection Control" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="activateSubnetworkConnection TestCase" searchProperties="true" id="2b8e4ede-c17a-472f-8f4c-4cd38b93ee30"><con:settings/><con:testStep type="request" name="activateSubnetworkConnection"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>activateSubnetworkConnection</con:operation><con:request name="activateSubnetworkConnection"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>activateSubnetworkConnection</v1:activityName>
         <v1:msgName>activateSubnetworkConnectionRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:activateSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v13:tpData>
               <v13:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:tpRef>
               <!--Optional:-->
               <v13:tpMappingMode>?</v13:tpMappingMode>
               <!--Optional:-->
               <v14:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v14:transmissionParameters>
                     <!--Optional:-->
                     <v14:layerRate extension="?">?</v14:layerRate>
                     <!--Optional:-->
                     <v14:parameterList>
                        <!--Zero or more repetitions:-->
                        <v15:nvs>
                           <v15:name>?</v15:name>
                           <v15:value>?</v15:value>
                        </v15:nvs>
                     </v14:parameterList>
                     <!--Optional:-->
                     <v14:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v14:vendorExtensions>
                  </v14:transmissionParameters>
               </v14:transmissionParametersList>
               <!--Optional:-->
               <v13:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:ingressTmdRef>
               <!--Optional:-->
               <v13:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:egressTmdRef>
            </v13:tpData>
         </v11:tpDataListToModify>
      </v11:activateSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="activateSubnetworkConnection" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addRoute TestCase" searchProperties="true" id="802c0661-4f99-44f1-a765-579d35fdd622"><con:settings/><con:testStep type="request" name="addRoute"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>addRoute</con:operation><con:request name="addRoute"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/cc/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>addRoute</v1:activityName>
         <v1:msgName>addRouteRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:addRouteRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeCreateData>
            <!--Optional:-->
            <v11:isIntendedRoute>?</v11:isIntendedRoute>
            <!--Optional:-->
            <v11:isExclusiveRoute>?</v11:isExclusiveRoute>
            <!--Optional:-->
            <v11:ccInclusionList>
               <!--Zero or more repetitions:-->
               <v13:cc>
                  <!--Optional:-->
                  <v13:isActive>?</v13:isActive>
                  <!--Optional:-->
                  <v13:direction>?</v13:direction>
                  <!--Optional:-->
                  <v13:ccType>?</v13:ccType>
                  <!--Optional:-->
                  <v13:isFixed>?</v13:isFixed>
                  <!--Optional:-->
                  <v13:aEndRefList>
                     <!--1 or more repetitions:-->
                     <v13:aEndName>
                        <!--1 or more repetitions:-->
                        <v12:rdn>
                           <v12:type>?</v12:type>
                           <v12:value>?</v12:value>
                        </v12:rdn>
                     </v13:aEndName>
                  </v13:aEndRefList>
                  <!--Optional:-->
                  <v13:zEndRefList>
                     <!--1 or more repetitions:-->
                     <v13:zEndName>
                        <!--1 or more repetitions:-->
                        <v12:rdn>
                           <v12:type>?</v12:type>
                           <v12:value>?</v12:value>
                        </v12:rdn>
                     </v13:zEndName>
                  </v13:zEndRefList>
                  <!--Optional:-->
                  <v13:connectionId>?</v13:connectionId>
                  <!--Optional:-->
                  <v13:routeActualState>?</v13:routeActualState>
                  <!--Optional:-->
                  <v13:routeAdminState>?</v13:routeAdminState>
                  <!--Optional:-->
                  <v13:isRouteExclusive>?</v13:isRouteExclusive>
                  <!--Optional:-->
                  <v13:routeId>?</v13:routeId>
                  <!--Optional:-->
                  <v13:isRouteIntended>?</v13:isRouteIntended>
                  <!--Optional:-->
                  <v13:isRouteInUseBy>?</v13:isRouteInUseBy>
                  <!--Optional:-->
                  <v13:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v13:vendorExtensions>
               </v13:cc>
            </v11:ccInclusionList>
            <!--Optional:-->
            <v11:inclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:inclusionResourceRefList>
            <!--Optional:-->
            <v11:isFullRoute>?</v11:isFullRoute>
            <!--Optional:-->
            <v11:exclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:exclusionResourceRefList>
            <!--Optional:-->
            <v11:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v11:vendorExtensions>
         </v11:routeCreateData>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
      </v11:addRouteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="addRoute" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="checkValidSubnetworkConnection TestCase" searchProperties="true" id="75181abc-77fc-4745-a7e8-e0e2c847ab95"><con:settings/><con:testStep type="request" name="checkValidSubnetworkConnection"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>checkValidSubnetworkConnection</con:operation><con:request name="checkValidSubnetworkConnection"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v16="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:v17="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:v18="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:v19="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v110="http://www.tmforum.org/mtop/nrb/xsd/lp/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>checkValidSubnetworkConnection</v1:activityName>
         <v1:msgName>checkValidSubnetworkConnectionRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:checkValidSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:createData>
            <!--Optional:-->
            <v12:userLabel>?</v12:userLabel>
            <!--Optional:-->
            <v12:isForceUniqueness>?</v12:isForceUniqueness>
            <!--Optional:-->
            <v12:owner>?</v12:owner>
            <!--Optional:-->
            <v12:aliasNameList>
               <!--Zero or more repetitions:-->
               <v13:alias>
                  <v13:aliasName>?</v13:aliasName>
                  <v13:aliasValue>?</v13:aliasValue>
               </v13:alias>
            </v12:aliasNameList>
            <!--Optional:-->
            <v12:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v12:vendorExtensions>
            <!--Optional:-->
            <v14:name>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v14:name>
            <!--Optional:-->
            <v16:networkAccessDomain>?</v16:networkAccessDomain>
            <!--Optional:-->
            <v11:direction>?</v11:direction>
            <!--Optional:-->
            <v11:staticProtectionLevel extension="?">?</v11:staticProtectionLevel>
            <!--Optional:-->
            <v11:protectionEffort>?</v11:protectionEffort>
            <!--Optional:-->
            <v11:rerouteAllowed>?</v11:rerouteAllowed>
            <!--Optional:-->
            <v11:networkRouted>?</v11:networkRouted>
            <!--Optional:-->
            <v11:type>?</v11:type>
            <!--Optional:-->
            <v11:layerRate extension="?">?</v11:layerRate>
            <!--Optional:-->
            <v11:ccInclusionList>
               <!--Zero or more repetitions:-->
               <v17:cc>
                  <!--Optional:-->
                  <v17:isActive>?</v17:isActive>
                  <!--Optional:-->
                  <v17:direction>?</v17:direction>
                  <!--Optional:-->
                  <v17:ccType>?</v17:ccType>
                  <!--Optional:-->
                  <v17:isFixed>?</v17:isFixed>
                  <!--Optional:-->
                  <v17:aEndRefList>
                     <!--1 or more repetitions:-->
                     <v17:aEndName>
                        <!--1 or more repetitions:-->
                        <v15:rdn>
                           <v15:type>?</v15:type>
                           <v15:value>?</v15:value>
                        </v15:rdn>
                     </v17:aEndName>
                  </v17:aEndRefList>
                  <!--Optional:-->
                  <v17:zEndRefList>
                     <!--1 or more repetitions:-->
                     <v17:zEndName>
                        <!--1 or more repetitions:-->
                        <v15:rdn>
                           <v15:type>?</v15:type>
                           <v15:value>?</v15:value>
                        </v15:rdn>
                     </v17:zEndName>
                  </v17:zEndRefList>
                  <!--Optional:-->
                  <v17:connectionId>?</v17:connectionId>
                  <!--Optional:-->
                  <v17:routeActualState>?</v17:routeActualState>
                  <!--Optional:-->
                  <v17:routeAdminState>?</v17:routeAdminState>
                  <!--Optional:-->
                  <v17:isRouteExclusive>?</v17:isRouteExclusive>
                  <!--Optional:-->
                  <v17:routeId>?</v17:routeId>
                  <!--Optional:-->
                  <v17:isRouteIntended>?</v17:isRouteIntended>
                  <!--Optional:-->
                  <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                  <!--Optional:-->
                  <v17:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v17:vendorExtensions>
               </v17:cc>
            </v11:ccInclusionList>
            <!--Optional:-->
            <v11:inclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v15:name>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v15:name>
            </v11:inclusionResourceRefList>
            <!--Optional:-->
            <v11:isFullRoute>?</v11:isFullRoute>
            <!--Optional:-->
            <v11:exclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v15:name>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v15:name>
            </v11:exclusionResourceRefList>
            <!--Optional:-->
            <v11:aEndRefList>
               <!--Zero or more repetitions:-->
               <v15:name>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v15:name>
            </v11:aEndRefList>
            <!--Optional:-->
            <v11:zEndRefList>
               <!--Zero or more repetitions:-->
               <v15:name>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v15:name>
            </v11:zEndRefList>
            <!--Optional:-->
            <v11:aRoleList>
               <!--Zero or more repetitions:-->
               <v11:role>
                  <!--Zero or more repetitions:-->
                  <v18:role>
                     <!--Optional:-->
                     <v18:role>?</v18:role>
                     <!--Optional:-->
                     <v18:tpIndex>?</v18:tpIndex>
                  </v18:role>
               </v11:role>
            </v11:aRoleList>
            <!--Optional:-->
            <v11:isReportingAlarms>?</v11:isReportingAlarms>
            <!--Optional:-->
            <v11:networkReroute>?</v11:networkReroute>
            <!--Optional:-->
            <v11:isRevertive>?</v11:isRevertive>
            <!--Optional:-->
            <v11:isRevertiveReroute>?</v11:isRevertiveReroute>
            <!--Optional:-->
            <v11:intendedRouteAEnds>?</v11:intendedRouteAEnds>
            <!--Optional:-->
            <v11:isIntendedRouteExclusive>?</v11:isIntendedRouteExclusive>
            <!--Optional:-->
            <v11:intendedRouteZEnds>?</v11:intendedRouteZEnds>
            <!--Optional:-->
            <v11:priority>?</v11:priority>
            <!--Optional:-->
            <v11:zRoleList>
               <!--Zero or more repetitions:-->
               <v11:role>
                  <!--Zero or more repetitions:-->
                  <v18:role>
                     <!--Optional:-->
                     <v18:role>?</v18:role>
                     <!--Optional:-->
                     <v18:tpIndex>?</v18:tpIndex>
                  </v18:role>
               </v11:role>
            </v11:zRoleList>
            <!--Optional:-->
            <v11:asapRef>?</v11:asapRef>
            <!--Optional:-->
            <v11:aEndTpList>?</v11:aEndTpList>
            <!--Optional:-->
            <v11:blsrDirection>?</v11:blsrDirection>
            <!--Optional:-->
            <v11:isBundledSnc>?</v11:isBundledSnc>
            <!--Optional:-->
            <v11:mustRemoveGtps>?</v11:mustRemoveGtps>
            <!--Optional:-->
            <v11:potentialFutureSetupIndicator>?</v11:potentialFutureSetupIndicator>
            <!--Optional:-->
            <v11:routingConstraintEffort>?</v11:routingConstraintEffort>
            <!--Optional:-->
            <v11:timeslot>?</v11:timeslot>
            <!--Optional:-->
            <v11:zEndTpList>?</v11:zEndTpList>
         </v11:createData>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v19:tpData>
               <v19:tpRef>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v19:tpRef>
               <!--Optional:-->
               <v19:tpMappingMode>?</v19:tpMappingMode>
               <!--Optional:-->
               <v110:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v110:transmissionParameters>
                     <!--Optional:-->
                     <v110:layerRate extension="?">?</v110:layerRate>
                     <!--Optional:-->
                     <v110:parameterList>
                        <!--Zero or more repetitions:-->
                        <v13:nvs>
                           <v13:name>?</v13:name>
                           <v13:value>?</v13:value>
                        </v13:nvs>
                     </v110:parameterList>
                     <!--Optional:-->
                     <v110:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v110:vendorExtensions>
                  </v110:transmissionParameters>
               </v110:transmissionParametersList>
               <!--Optional:-->
               <v19:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v19:ingressTmdRef>
               <!--Optional:-->
               <v19:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v19:egressTmdRef>
            </v19:tpData>
         </v11:tpDataListToModify>
         <!--Optional:-->
         <v11:mustConsiderResources>?</v11:mustConsiderResources>
      </v11:checkValidSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="checkValidSubnetworkConnection" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createAndActivateSubnetworkConnection TestCase" searchProperties="true" id="988f617f-8ce3-4c16-aafc-c64e7aa2b1fc"><con:settings/><con:testStep type="request" name="createAndActivateSubnetworkConnection"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>createAndActivateSubnetworkConnection</con:operation><con:request name="createAndActivateSubnetworkConnection"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:v16="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:v17="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:v18="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:v19="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v110="http://www.tmforum.org/mtop/nrb/xsd/lp/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>createAndActivateSubnetworkConnection</v1:activityName>
         <v1:msgName>createAndActivateSubnetworkConnectionRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:createAndActivateSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:containingMlsnRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:containingMlsnRef>
         <!--Optional:-->
         <v11:createData>
            <!--Optional:-->
            <v13:userLabel>?</v13:userLabel>
            <!--Optional:-->
            <v13:isForceUniqueness>?</v13:isForceUniqueness>
            <!--Optional:-->
            <v13:owner>?</v13:owner>
            <!--Optional:-->
            <v13:aliasNameList>
               <!--Zero or more repetitions:-->
               <v14:alias>
                  <v14:aliasName>?</v14:aliasName>
                  <v14:aliasValue>?</v14:aliasValue>
               </v14:alias>
            </v13:aliasNameList>
            <!--Optional:-->
            <v13:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v13:vendorExtensions>
            <!--Optional:-->
            <v15:name>
               <!--1 or more repetitions:-->
               <v12:rdn>
                  <v12:type>?</v12:type>
                  <v12:value>?</v12:value>
               </v12:rdn>
            </v15:name>
            <!--Optional:-->
            <v16:networkAccessDomain>?</v16:networkAccessDomain>
            <!--Optional:-->
            <v11:direction>?</v11:direction>
            <!--Optional:-->
            <v11:staticProtectionLevel extension="?">?</v11:staticProtectionLevel>
            <!--Optional:-->
            <v11:protectionEffort>?</v11:protectionEffort>
            <!--Optional:-->
            <v11:rerouteAllowed>?</v11:rerouteAllowed>
            <!--Optional:-->
            <v11:networkRouted>?</v11:networkRouted>
            <!--Optional:-->
            <v11:type>?</v11:type>
            <!--Optional:-->
            <v11:layerRate extension="?">?</v11:layerRate>
            <!--Optional:-->
            <v11:ccInclusionList>
               <!--Zero or more repetitions:-->
               <v17:cc>
                  <!--Optional:-->
                  <v17:isActive>?</v17:isActive>
                  <!--Optional:-->
                  <v17:direction>?</v17:direction>
                  <!--Optional:-->
                  <v17:ccType>?</v17:ccType>
                  <!--Optional:-->
                  <v17:isFixed>?</v17:isFixed>
                  <!--Optional:-->
                  <v17:aEndRefList>
                     <!--1 or more repetitions:-->
                     <v17:aEndName>
                        <!--1 or more repetitions:-->
                        <v12:rdn>
                           <v12:type>?</v12:type>
                           <v12:value>?</v12:value>
                        </v12:rdn>
                     </v17:aEndName>
                  </v17:aEndRefList>
                  <!--Optional:-->
                  <v17:zEndRefList>
                     <!--1 or more repetitions:-->
                     <v17:zEndName>
                        <!--1 or more repetitions:-->
                        <v12:rdn>
                           <v12:type>?</v12:type>
                           <v12:value>?</v12:value>
                        </v12:rdn>
                     </v17:zEndName>
                  </v17:zEndRefList>
                  <!--Optional:-->
                  <v17:connectionId>?</v17:connectionId>
                  <!--Optional:-->
                  <v17:routeActualState>?</v17:routeActualState>
                  <!--Optional:-->
                  <v17:routeAdminState>?</v17:routeAdminState>
                  <!--Optional:-->
                  <v17:isRouteExclusive>?</v17:isRouteExclusive>
                  <!--Optional:-->
                  <v17:routeId>?</v17:routeId>
                  <!--Optional:-->
                  <v17:isRouteIntended>?</v17:isRouteIntended>
                  <!--Optional:-->
                  <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                  <!--Optional:-->
                  <v17:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v17:vendorExtensions>
               </v17:cc>
            </v11:ccInclusionList>
            <!--Optional:-->
            <v11:inclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:inclusionResourceRefList>
            <!--Optional:-->
            <v11:isFullRoute>?</v11:isFullRoute>
            <!--Optional:-->
            <v11:exclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:exclusionResourceRefList>
            <!--Optional:-->
            <v11:aEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:aEndRefList>
            <!--Optional:-->
            <v11:zEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:zEndRefList>
            <!--Optional:-->
            <v11:aRoleList>
               <!--Zero or more repetitions:-->
               <v11:role>
                  <!--Zero or more repetitions:-->
                  <v18:role>
                     <!--Optional:-->
                     <v18:role>?</v18:role>
                     <!--Optional:-->
                     <v18:tpIndex>?</v18:tpIndex>
                  </v18:role>
               </v11:role>
            </v11:aRoleList>
            <!--Optional:-->
            <v11:isReportingAlarms>?</v11:isReportingAlarms>
            <!--Optional:-->
            <v11:networkReroute>?</v11:networkReroute>
            <!--Optional:-->
            <v11:isRevertive>?</v11:isRevertive>
            <!--Optional:-->
            <v11:isRevertiveReroute>?</v11:isRevertiveReroute>
            <!--Optional:-->
            <v11:intendedRouteAEnds>?</v11:intendedRouteAEnds>
            <!--Optional:-->
            <v11:isIntendedRouteExclusive>?</v11:isIntendedRouteExclusive>
            <!--Optional:-->
            <v11:intendedRouteZEnds>?</v11:intendedRouteZEnds>
            <!--Optional:-->
            <v11:priority>?</v11:priority>
            <!--Optional:-->
            <v11:zRoleList>
               <!--Zero or more repetitions:-->
               <v11:role>
                  <!--Zero or more repetitions:-->
                  <v18:role>
                     <!--Optional:-->
                     <v18:role>?</v18:role>
                     <!--Optional:-->
                     <v18:tpIndex>?</v18:tpIndex>
                  </v18:role>
               </v11:role>
            </v11:zRoleList>
            <!--Optional:-->
            <v11:asapRef>?</v11:asapRef>
            <!--Optional:-->
            <v11:aEndTpList>?</v11:aEndTpList>
            <!--Optional:-->
            <v11:blsrDirection>?</v11:blsrDirection>
            <!--Optional:-->
            <v11:isBundledSnc>?</v11:isBundledSnc>
            <!--Optional:-->
            <v11:mustRemoveGtps>?</v11:mustRemoveGtps>
            <!--Optional:-->
            <v11:potentialFutureSetupIndicator>?</v11:potentialFutureSetupIndicator>
            <!--Optional:-->
            <v11:routingConstraintEffort>?</v11:routingConstraintEffort>
            <!--Optional:-->
            <v11:timeslot>?</v11:timeslot>
            <!--Optional:-->
            <v11:zEndTpList>?</v11:zEndTpList>
         </v11:createData>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v19:tpData>
               <v19:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v19:tpRef>
               <!--Optional:-->
               <v19:tpMappingMode>?</v19:tpMappingMode>
               <!--Optional:-->
               <v110:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v110:transmissionParameters>
                     <!--Optional:-->
                     <v110:layerRate extension="?">?</v110:layerRate>
                     <!--Optional:-->
                     <v110:parameterList>
                        <!--Zero or more repetitions:-->
                        <v14:nvs>
                           <v14:name>?</v14:name>
                           <v14:value>?</v14:value>
                        </v14:nvs>
                     </v110:parameterList>
                     <!--Optional:-->
                     <v110:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v110:vendorExtensions>
                  </v110:transmissionParameters>
               </v110:transmissionParametersList>
               <!--Optional:-->
               <v19:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v19:ingressTmdRef>
               <!--Optional:-->
               <v19:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v19:egressTmdRef>
            </v19:tpData>
         </v11:tpDataListToModify>
      </v11:createAndActivateSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="createAndActivateSubnetworkConnection" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createModifiedSubnetworkConnection TestCase" searchProperties="true" id="3c586561-27f4-44f5-a63d-0d1e7e82f236"><con:settings/><con:testStep type="request" name="createModifiedSubnetworkConnection"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>createModifiedSubnetworkConnection</con:operation><con:request name="createModifiedSubnetworkConnection"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v15="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1" xmlns:v16="http://www.tmforum.org/mtop/nrf/xsd/route/v1" xmlns:v17="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:v18="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v19="http://www.tmforum.org/mtop/nrb/xsd/lp/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>createModifiedSubnetworkConnection</v1:activityName>
         <v1:msgName>createModifiedSubnetworkConnectionRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:createModifiedSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:modifyData>
            <!--Optional:-->
            <v13:userLabel>?</v13:userLabel>
            <!--Optional:-->
            <v13:isForceUniqueness>?</v13:isForceUniqueness>
            <!--Optional:-->
            <v13:owner>?</v13:owner>
            <!--Optional:-->
            <v13:aliasNameList>
               <!--Zero or more repetitions:-->
               <v14:alias>
                  <v14:aliasName>?</v14:aliasName>
                  <v14:aliasValue>?</v14:aliasValue>
               </v14:alias>
            </v13:aliasNameList>
            <!--Optional:-->
            <v13:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v13:vendorExtensions>
            <!--Optional:-->
            <v15:networkAccessDomain>?</v15:networkAccessDomain>
            <!--Optional:-->
            <v11:direction>?</v11:direction>
            <!--Optional:-->
            <v11:modifyType>?</v11:modifyType>
            <!--Optional:-->
            <v11:mustRetainOldSnc>?</v11:mustRetainOldSnc>
            <!--Optional:-->
            <v11:modifyServersAllowed>?</v11:modifyServersAllowed>
            <!--Optional:-->
            <v11:staticProtectionLevel extension="?">?</v11:staticProtectionLevel>
            <!--Optional:-->
            <v11:protectionEffort>?</v11:protectionEffort>
            <!--Optional:-->
            <v11:rerouteAllowed>?</v11:rerouteAllowed>
            <!--Optional:-->
            <v11:networkRouted>?</v11:networkRouted>
            <!--Optional:-->
            <v11:type>?</v11:type>
            <!--Optional:-->
            <v11:layerRate extension="?">?</v11:layerRate>
            <!--Optional:-->
            <v11:addedOrNewRoute>
               <!--Zero or more repetitions:-->
               <v16:route>
                  <!--Optional:-->
                  <v16:ccList>
                     <!--Zero or more repetitions:-->
                     <v17:cc>
                        <!--Optional:-->
                        <v17:isActive>?</v17:isActive>
                        <!--Optional:-->
                        <v17:direction>?</v17:direction>
                        <!--Optional:-->
                        <v17:ccType>?</v17:ccType>
                        <!--Optional:-->
                        <v17:isFixed>?</v17:isFixed>
                        <!--Optional:-->
                        <v17:aEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:aEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:aEndName>
                        </v17:aEndRefList>
                        <!--Optional:-->
                        <v17:zEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:zEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:zEndName>
                        </v17:zEndRefList>
                        <!--Optional:-->
                        <v17:connectionId>?</v17:connectionId>
                        <!--Optional:-->
                        <v17:routeActualState>?</v17:routeActualState>
                        <!--Optional:-->
                        <v17:routeAdminState>?</v17:routeAdminState>
                        <!--Optional:-->
                        <v17:isRouteExclusive>?</v17:isRouteExclusive>
                        <!--Optional:-->
                        <v17:routeId>?</v17:routeId>
                        <!--Optional:-->
                        <v17:isRouteIntended>?</v17:isRouteIntended>
                        <!--Optional:-->
                        <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                        <!--Optional:-->
                        <v17:vendorExtensions>
                           <!--You may enter ANY elements at this point-->
                        </v17:vendorExtensions>
                     </v17:cc>
                  </v16:ccList>
               </v16:route>
            </v11:addedOrNewRoute>
            <!--Optional:-->
            <v11:removedRoute>
               <!--Zero or more repetitions:-->
               <v16:route>
                  <!--Optional:-->
                  <v16:ccList>
                     <!--Zero or more repetitions:-->
                     <v17:cc>
                        <!--Optional:-->
                        <v17:isActive>?</v17:isActive>
                        <!--Optional:-->
                        <v17:direction>?</v17:direction>
                        <!--Optional:-->
                        <v17:ccType>?</v17:ccType>
                        <!--Optional:-->
                        <v17:isFixed>?</v17:isFixed>
                        <!--Optional:-->
                        <v17:aEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:aEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:aEndName>
                        </v17:aEndRefList>
                        <!--Optional:-->
                        <v17:zEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:zEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:zEndName>
                        </v17:zEndRefList>
                        <!--Optional:-->
                        <v17:connectionId>?</v17:connectionId>
                        <!--Optional:-->
                        <v17:routeActualState>?</v17:routeActualState>
                        <!--Optional:-->
                        <v17:routeAdminState>?</v17:routeAdminState>
                        <!--Optional:-->
                        <v17:isRouteExclusive>?</v17:isRouteExclusive>
                        <!--Optional:-->
                        <v17:routeId>?</v17:routeId>
                        <!--Optional:-->
                        <v17:isRouteIntended>?</v17:isRouteIntended>
                        <!--Optional:-->
                        <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                        <!--Optional:-->
                        <v17:vendorExtensions>
                           <!--You may enter ANY elements at this point-->
                        </v17:vendorExtensions>
                     </v17:cc>
                  </v16:ccList>
               </v16:route>
            </v11:removedRoute>
            <!--Optional:-->
            <v11:inclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:inclusionResourceRefList>
            <!--Optional:-->
            <v11:isFullRoute>?</v11:isFullRoute>
            <!--Optional:-->
            <v11:exclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:exclusionResourceRefList>
            <!--Optional:-->
            <v11:aEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:aEndRefList>
            <!--Optional:-->
            <v11:zEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:zEndRefList>
            <!--Optional:-->
            <v11:isReportingAlarms>?</v11:isReportingAlarms>
            <!--Optional:-->
            <v11:networkReroute>?</v11:networkReroute>
            <!--Optional:-->
            <v11:isRevertive>?</v11:isRevertive>
            <!--Optional:-->
            <v11:isRevertiveReroute>?</v11:isRevertiveReroute>
            <!--Optional:-->
            <v11:asapRef>?</v11:asapRef>
            <!--Optional:-->
            <v11:mustRemoveGtps>?</v11:mustRemoveGtps>
            <!--Optional:-->
            <v11:priority>?</v11:priority>
         </v11:modifyData>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:tolerableImpactEffort>?</v11:tolerableImpactEffort>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v18:tpData>
               <v18:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v18:tpRef>
               <!--Optional:-->
               <v18:tpMappingMode>?</v18:tpMappingMode>
               <!--Optional:-->
               <v19:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v19:transmissionParameters>
                     <!--Optional:-->
                     <v19:layerRate extension="?">?</v19:layerRate>
                     <!--Optional:-->
                     <v19:parameterList>
                        <!--Zero or more repetitions:-->
                        <v14:nvs>
                           <v14:name>?</v14:name>
                           <v14:value>?</v14:value>
                        </v14:nvs>
                     </v19:parameterList>
                     <!--Optional:-->
                     <v19:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v19:vendorExtensions>
                  </v19:transmissionParameters>
               </v19:transmissionParametersList>
               <!--Optional:-->
               <v18:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v18:ingressTmdRef>
               <!--Optional:-->
               <v18:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v18:egressTmdRef>
            </v18:tpData>
         </v11:tpDataListToModify>
      </v11:createModifiedSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="createModifiedSubnetworkConnection" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createSubnetworkConnection TestCase" searchProperties="true" id="3a5e6d63-fd21-4ec3-b54b-42b9386248c4"><con:settings/><con:testStep type="request" name="createSubnetworkConnection"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>createSubnetworkConnection</con:operation><con:request name="createSubnetworkConnection"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:v16="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:v17="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:v18="http://www.tmforum.org/mtop/nrf/xsd/com/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>createSubnetworkConnection</v1:activityName>
         <v1:msgName>createSubnetworkConnectionRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:createSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:containingMlsnRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:containingMlsnRef>
         <!--Optional:-->
         <v11:createData>
            <!--Optional:-->
            <v13:userLabel>?</v13:userLabel>
            <!--Optional:-->
            <v13:isForceUniqueness>?</v13:isForceUniqueness>
            <!--Optional:-->
            <v13:owner>?</v13:owner>
            <!--Optional:-->
            <v13:aliasNameList>
               <!--Zero or more repetitions:-->
               <v14:alias>
                  <v14:aliasName>?</v14:aliasName>
                  <v14:aliasValue>?</v14:aliasValue>
               </v14:alias>
            </v13:aliasNameList>
            <!--Optional:-->
            <v13:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v13:vendorExtensions>
            <!--Optional:-->
            <v15:name>
               <!--1 or more repetitions:-->
               <v12:rdn>
                  <v12:type>?</v12:type>
                  <v12:value>?</v12:value>
               </v12:rdn>
            </v15:name>
            <!--Optional:-->
            <v16:networkAccessDomain>?</v16:networkAccessDomain>
            <!--Optional:-->
            <v11:direction>?</v11:direction>
            <!--Optional:-->
            <v11:staticProtectionLevel extension="?">?</v11:staticProtectionLevel>
            <!--Optional:-->
            <v11:protectionEffort>?</v11:protectionEffort>
            <!--Optional:-->
            <v11:rerouteAllowed>?</v11:rerouteAllowed>
            <!--Optional:-->
            <v11:networkRouted>?</v11:networkRouted>
            <!--Optional:-->
            <v11:type>?</v11:type>
            <!--Optional:-->
            <v11:layerRate extension="?">?</v11:layerRate>
            <!--Optional:-->
            <v11:ccInclusionList>
               <!--Zero or more repetitions:-->
               <v17:cc>
                  <!--Optional:-->
                  <v17:isActive>?</v17:isActive>
                  <!--Optional:-->
                  <v17:direction>?</v17:direction>
                  <!--Optional:-->
                  <v17:ccType>?</v17:ccType>
                  <!--Optional:-->
                  <v17:isFixed>?</v17:isFixed>
                  <!--Optional:-->
                  <v17:aEndRefList>
                     <!--1 or more repetitions:-->
                     <v17:aEndName>
                        <!--1 or more repetitions:-->
                        <v12:rdn>
                           <v12:type>?</v12:type>
                           <v12:value>?</v12:value>
                        </v12:rdn>
                     </v17:aEndName>
                  </v17:aEndRefList>
                  <!--Optional:-->
                  <v17:zEndRefList>
                     <!--1 or more repetitions:-->
                     <v17:zEndName>
                        <!--1 or more repetitions:-->
                        <v12:rdn>
                           <v12:type>?</v12:type>
                           <v12:value>?</v12:value>
                        </v12:rdn>
                     </v17:zEndName>
                  </v17:zEndRefList>
                  <!--Optional:-->
                  <v17:connectionId>?</v17:connectionId>
                  <!--Optional:-->
                  <v17:routeActualState>?</v17:routeActualState>
                  <!--Optional:-->
                  <v17:routeAdminState>?</v17:routeAdminState>
                  <!--Optional:-->
                  <v17:isRouteExclusive>?</v17:isRouteExclusive>
                  <!--Optional:-->
                  <v17:routeId>?</v17:routeId>
                  <!--Optional:-->
                  <v17:isRouteIntended>?</v17:isRouteIntended>
                  <!--Optional:-->
                  <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                  <!--Optional:-->
                  <v17:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v17:vendorExtensions>
               </v17:cc>
            </v11:ccInclusionList>
            <!--Optional:-->
            <v11:inclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:inclusionResourceRefList>
            <!--Optional:-->
            <v11:isFullRoute>?</v11:isFullRoute>
            <!--Optional:-->
            <v11:exclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:exclusionResourceRefList>
            <!--Optional:-->
            <v11:aEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:aEndRefList>
            <!--Optional:-->
            <v11:zEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:zEndRefList>
            <!--Optional:-->
            <v11:aRoleList>
               <!--Zero or more repetitions:-->
               <v11:role>
                  <!--Zero or more repetitions:-->
                  <v18:role>
                     <!--Optional:-->
                     <v18:role>?</v18:role>
                     <!--Optional:-->
                     <v18:tpIndex>?</v18:tpIndex>
                  </v18:role>
               </v11:role>
            </v11:aRoleList>
            <!--Optional:-->
            <v11:isReportingAlarms>?</v11:isReportingAlarms>
            <!--Optional:-->
            <v11:networkReroute>?</v11:networkReroute>
            <!--Optional:-->
            <v11:isRevertive>?</v11:isRevertive>
            <!--Optional:-->
            <v11:isRevertiveReroute>?</v11:isRevertiveReroute>
            <!--Optional:-->
            <v11:intendedRouteAEnds>?</v11:intendedRouteAEnds>
            <!--Optional:-->
            <v11:isIntendedRouteExclusive>?</v11:isIntendedRouteExclusive>
            <!--Optional:-->
            <v11:intendedRouteZEnds>?</v11:intendedRouteZEnds>
            <!--Optional:-->
            <v11:priority>?</v11:priority>
            <!--Optional:-->
            <v11:zRoleList>
               <!--Zero or more repetitions:-->
               <v11:role>
                  <!--Zero or more repetitions:-->
                  <v18:role>
                     <!--Optional:-->
                     <v18:role>?</v18:role>
                     <!--Optional:-->
                     <v18:tpIndex>?</v18:tpIndex>
                  </v18:role>
               </v11:role>
            </v11:zRoleList>
            <!--Optional:-->
            <v11:asapRef>?</v11:asapRef>
            <!--Optional:-->
            <v11:aEndTpList>?</v11:aEndTpList>
            <!--Optional:-->
            <v11:blsrDirection>?</v11:blsrDirection>
            <!--Optional:-->
            <v11:isBundledSnc>?</v11:isBundledSnc>
            <!--Optional:-->
            <v11:mustRemoveGtps>?</v11:mustRemoveGtps>
            <!--Optional:-->
            <v11:potentialFutureSetupIndicator>?</v11:potentialFutureSetupIndicator>
            <!--Optional:-->
            <v11:routingConstraintEffort>?</v11:routingConstraintEffort>
            <!--Optional:-->
            <v11:timeslot>?</v11:timeslot>
            <!--Optional:-->
            <v11:zEndTpList>?</v11:zEndTpList>
         </v11:createData>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
      </v11:createSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="createSubnetworkConnection" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deactivateAndDeleteSubnetworkConnection TestCase" searchProperties="true" id="96a5e199-8dc1-46b2-b0f5-2562680d8f79"><con:settings/><con:testStep type="request" name="deactivateAndDeleteSubnetworkConnection"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>deactivateAndDeleteSubnetworkConnection</con:operation><con:request name="deactivateAndDeleteSubnetworkConnection"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>deactivateAndDeleteSubnetworkConnection</v1:activityName>
         <v1:msgName>deactivateAndDeleteSubnetworkConnectionRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:deactivateAndDeleteSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v13:tpData>
               <v13:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:tpRef>
               <!--Optional:-->
               <v13:tpMappingMode>?</v13:tpMappingMode>
               <!--Optional:-->
               <v14:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v14:transmissionParameters>
                     <!--Optional:-->
                     <v14:layerRate extension="?">?</v14:layerRate>
                     <!--Optional:-->
                     <v14:parameterList>
                        <!--Zero or more repetitions:-->
                        <v15:nvs>
                           <v15:name>?</v15:name>
                           <v15:value>?</v15:value>
                        </v15:nvs>
                     </v14:parameterList>
                     <!--Optional:-->
                     <v14:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v14:vendorExtensions>
                  </v14:transmissionParameters>
               </v14:transmissionParametersList>
               <!--Optional:-->
               <v13:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:ingressTmdRef>
               <!--Optional:-->
               <v13:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:egressTmdRef>
            </v13:tpData>
         </v11:tpDataListToModify>
      </v11:deactivateAndDeleteSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="deactivateAndDeleteSubnetworkConnection" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deactivateSubnetworkConnection TestCase" searchProperties="true" id="8b23888a-581b-454c-b73a-91ad21d6f421"><con:settings/><con:testStep type="request" name="deactivateSubnetworkConnection"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>deactivateSubnetworkConnection</con:operation><con:request name="deactivateSubnetworkConnection"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>deactivateSubnetworkConnection</v1:activityName>
         <v1:msgName>deactivateSubnetworkConnectionRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:deactivateSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v13:tpData>
               <v13:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:tpRef>
               <!--Optional:-->
               <v13:tpMappingMode>?</v13:tpMappingMode>
               <!--Optional:-->
               <v14:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v14:transmissionParameters>
                     <!--Optional:-->
                     <v14:layerRate extension="?">?</v14:layerRate>
                     <!--Optional:-->
                     <v14:parameterList>
                        <!--Zero or more repetitions:-->
                        <v15:nvs>
                           <v15:name>?</v15:name>
                           <v15:value>?</v15:value>
                        </v15:nvs>
                     </v14:parameterList>
                     <!--Optional:-->
                     <v14:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v14:vendorExtensions>
                  </v14:transmissionParameters>
               </v14:transmissionParametersList>
               <!--Optional:-->
               <v13:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:ingressTmdRef>
               <!--Optional:-->
               <v13:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:egressTmdRef>
            </v13:tpData>
         </v11:tpDataListToModify>
      </v11:deactivateSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="deactivateSubnetworkConnection" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteSubnetworkConnection TestCase" searchProperties="true" id="9cf6c7fa-7a83-438f-8d8c-1295ff94dc5e"><con:settings/><con:testStep type="request" name="deleteSubnetworkConnection"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>deleteSubnetworkConnection</con:operation><con:request name="deleteSubnetworkConnection"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>deleteSubnetworkConnection</v1:activityName>
         <v1:msgName>deleteSubnetworkConnectionRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:deleteSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
      </v11:deleteSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="deleteSubnetworkConnection" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="modifySubnetworkConnection TestCase" searchProperties="true" id="c86e58a5-f0e0-4563-9fae-7271f61aa8c1"><con:settings/><con:testStep type="request" name="modifySubnetworkConnection"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>modifySubnetworkConnection</con:operation><con:request name="modifySubnetworkConnection"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v15="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1" xmlns:v16="http://www.tmforum.org/mtop/nrf/xsd/route/v1" xmlns:v17="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:v18="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v19="http://www.tmforum.org/mtop/nrb/xsd/lp/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>modifySubnetworkConnection</v1:activityName>
         <v1:msgName>modifySubnetworkConnectionRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:modifySubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:modifyData>
            <!--Optional:-->
            <v13:userLabel>?</v13:userLabel>
            <!--Optional:-->
            <v13:isForceUniqueness>?</v13:isForceUniqueness>
            <!--Optional:-->
            <v13:owner>?</v13:owner>
            <!--Optional:-->
            <v13:aliasNameList>
               <!--Zero or more repetitions:-->
               <v14:alias>
                  <v14:aliasName>?</v14:aliasName>
                  <v14:aliasValue>?</v14:aliasValue>
               </v14:alias>
            </v13:aliasNameList>
            <!--Optional:-->
            <v13:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v13:vendorExtensions>
            <!--Optional:-->
            <v15:networkAccessDomain>?</v15:networkAccessDomain>
            <!--Optional:-->
            <v11:direction>?</v11:direction>
            <!--Optional:-->
            <v11:modifyType>?</v11:modifyType>
            <!--Optional:-->
            <v11:mustRetainOldSnc>?</v11:mustRetainOldSnc>
            <!--Optional:-->
            <v11:modifyServersAllowed>?</v11:modifyServersAllowed>
            <!--Optional:-->
            <v11:staticProtectionLevel extension="?">?</v11:staticProtectionLevel>
            <!--Optional:-->
            <v11:protectionEffort>?</v11:protectionEffort>
            <!--Optional:-->
            <v11:rerouteAllowed>?</v11:rerouteAllowed>
            <!--Optional:-->
            <v11:networkRouted>?</v11:networkRouted>
            <!--Optional:-->
            <v11:type>?</v11:type>
            <!--Optional:-->
            <v11:layerRate extension="?">?</v11:layerRate>
            <!--Optional:-->
            <v11:addedOrNewRoute>
               <!--Zero or more repetitions:-->
               <v16:route>
                  <!--Optional:-->
                  <v16:ccList>
                     <!--Zero or more repetitions:-->
                     <v17:cc>
                        <!--Optional:-->
                        <v17:isActive>?</v17:isActive>
                        <!--Optional:-->
                        <v17:direction>?</v17:direction>
                        <!--Optional:-->
                        <v17:ccType>?</v17:ccType>
                        <!--Optional:-->
                        <v17:isFixed>?</v17:isFixed>
                        <!--Optional:-->
                        <v17:aEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:aEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:aEndName>
                        </v17:aEndRefList>
                        <!--Optional:-->
                        <v17:zEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:zEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:zEndName>
                        </v17:zEndRefList>
                        <!--Optional:-->
                        <v17:connectionId>?</v17:connectionId>
                        <!--Optional:-->
                        <v17:routeActualState>?</v17:routeActualState>
                        <!--Optional:-->
                        <v17:routeAdminState>?</v17:routeAdminState>
                        <!--Optional:-->
                        <v17:isRouteExclusive>?</v17:isRouteExclusive>
                        <!--Optional:-->
                        <v17:routeId>?</v17:routeId>
                        <!--Optional:-->
                        <v17:isRouteIntended>?</v17:isRouteIntended>
                        <!--Optional:-->
                        <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                        <!--Optional:-->
                        <v17:vendorExtensions>
                           <!--You may enter ANY elements at this point-->
                        </v17:vendorExtensions>
                     </v17:cc>
                  </v16:ccList>
               </v16:route>
            </v11:addedOrNewRoute>
            <!--Optional:-->
            <v11:removedRoute>
               <!--Zero or more repetitions:-->
               <v16:route>
                  <!--Optional:-->
                  <v16:ccList>
                     <!--Zero or more repetitions:-->
                     <v17:cc>
                        <!--Optional:-->
                        <v17:isActive>?</v17:isActive>
                        <!--Optional:-->
                        <v17:direction>?</v17:direction>
                        <!--Optional:-->
                        <v17:ccType>?</v17:ccType>
                        <!--Optional:-->
                        <v17:isFixed>?</v17:isFixed>
                        <!--Optional:-->
                        <v17:aEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:aEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:aEndName>
                        </v17:aEndRefList>
                        <!--Optional:-->
                        <v17:zEndRefList>
                           <!--1 or more repetitions:-->
                           <v17:zEndName>
                              <!--1 or more repetitions:-->
                              <v12:rdn>
                                 <v12:type>?</v12:type>
                                 <v12:value>?</v12:value>
                              </v12:rdn>
                           </v17:zEndName>
                        </v17:zEndRefList>
                        <!--Optional:-->
                        <v17:connectionId>?</v17:connectionId>
                        <!--Optional:-->
                        <v17:routeActualState>?</v17:routeActualState>
                        <!--Optional:-->
                        <v17:routeAdminState>?</v17:routeAdminState>
                        <!--Optional:-->
                        <v17:isRouteExclusive>?</v17:isRouteExclusive>
                        <!--Optional:-->
                        <v17:routeId>?</v17:routeId>
                        <!--Optional:-->
                        <v17:isRouteIntended>?</v17:isRouteIntended>
                        <!--Optional:-->
                        <v17:isRouteInUseBy>?</v17:isRouteInUseBy>
                        <!--Optional:-->
                        <v17:vendorExtensions>
                           <!--You may enter ANY elements at this point-->
                        </v17:vendorExtensions>
                     </v17:cc>
                  </v16:ccList>
               </v16:route>
            </v11:removedRoute>
            <!--Optional:-->
            <v11:inclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:inclusionResourceRefList>
            <!--Optional:-->
            <v11:isFullRoute>?</v11:isFullRoute>
            <!--Optional:-->
            <v11:exclusionResourceRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:exclusionResourceRefList>
            <!--Optional:-->
            <v11:aEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:aEndRefList>
            <!--Optional:-->
            <v11:zEndRefList>
               <!--Zero or more repetitions:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v12:name>
            </v11:zEndRefList>
            <!--Optional:-->
            <v11:isReportingAlarms>?</v11:isReportingAlarms>
            <!--Optional:-->
            <v11:networkReroute>?</v11:networkReroute>
            <!--Optional:-->
            <v11:isRevertive>?</v11:isRevertive>
            <!--Optional:-->
            <v11:isRevertiveReroute>?</v11:isRevertiveReroute>
            <!--Optional:-->
            <v11:asapRef>?</v11:asapRef>
            <!--Optional:-->
            <v11:mustRemoveGtps>?</v11:mustRemoveGtps>
            <!--Optional:-->
            <v11:priority>?</v11:priority>
         </v11:modifyData>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:tolerableImpactEffort>?</v11:tolerableImpactEffort>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v18:tpData>
               <v18:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v18:tpRef>
               <!--Optional:-->
               <v18:tpMappingMode>?</v18:tpMappingMode>
               <!--Optional:-->
               <v19:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v19:transmissionParameters>
                     <!--Optional:-->
                     <v19:layerRate extension="?">?</v19:layerRate>
                     <!--Optional:-->
                     <v19:parameterList>
                        <!--Zero or more repetitions:-->
                        <v14:nvs>
                           <v14:name>?</v14:name>
                           <v14:value>?</v14:value>
                        </v14:nvs>
                     </v19:parameterList>
                     <!--Optional:-->
                     <v19:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v19:vendorExtensions>
                  </v19:transmissionParameters>
               </v19:transmissionParametersList>
               <!--Optional:-->
               <v18:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v18:ingressTmdRef>
               <!--Optional:-->
               <v18:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v18:egressTmdRef>
            </v18:tpData>
         </v11:tpDataListToModify>
      </v11:modifySubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="modifySubnetworkConnection" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="removeRoute TestCase" searchProperties="true" id="f92418e8-6ada-422a-9ae5-a2ac1e713257"><con:settings/><con:testStep type="request" name="removeRoute"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>removeRoute</con:operation><con:request name="removeRoute"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>removeRoute</v1:activityName>
         <v1:msgName>removeRouteRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:removeRouteRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v11:vendorExtensions>
      </v11:removeRouteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="removeRoute" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="setIntendedRoute TestCase" searchProperties="true" id="d3742e52-b1f3-4602-95ff-4de2514e441f"><con:settings/><con:testStep type="request" name="setIntendedRoute"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>setIntendedRoute</con:operation><con:request name="setIntendedRoute"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>setIntendedRoute</v1:activityName>
         <v1:msgName>setIntendedRouteRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:setIntendedRouteRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v11:vendorExtensions>
      </v11:setIntendedRouteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="setIntendedRoute" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="setRoutesAdminState TestCase" searchProperties="true" id="7c085fbe-ff4f-440b-8872-796ef318aa6e"><con:settings/><con:testStep type="request" name="setRoutesAdminState"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>setRoutesAdminState</con:operation><con:request name="setRoutesAdminState"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>setRoutesAdminState</v1:activityName>
         <v1:msgName>setRoutesAdminStateRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:setRoutesAdminStateRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeNameAndAdminStateList>
            <!--Zero or more repetitions:-->
            <v11:item>
               <!--Optional:-->
               <v11:id>?</v11:id>
               <!--Optional:-->
               <v11:administrativeState>?</v11:administrativeState>
               <!--Optional:-->
               <v11:vendorExtensions>
                  <!--You may enter ANY elements at this point-->
               </v11:vendorExtensions>
            </v11:item>
         </v11:routeNameAndAdminStateList>
      </v11:setRoutesAdminStateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="setRoutesAdminState" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="swapSubnetworkConnection TestCase" searchProperties="true" id="37a3d5df-da27-498b-8534-2405d1aaef65"><con:settings/><con:testStep type="request" name="swapSubnetworkConnection"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>swapSubnetworkConnection</con:operation><con:request name="swapSubnetworkConnection"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>swapSubnetworkConnection</v1:activityName>
         <v1:msgName>swapSubnetworkConnectionRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:swapSubnetworkConnectionRequest>
         <!--Optional:-->
         <v11:sncToBeDeactivatedRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncToBeDeactivatedRef>
         <!--Optional:-->
         <v11:sncToBeActivatedRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncToBeActivatedRef>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v13:tpData>
               <v13:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:tpRef>
               <!--Optional:-->
               <v13:tpMappingMode>?</v13:tpMappingMode>
               <!--Optional:-->
               <v14:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v14:transmissionParameters>
                     <!--Optional:-->
                     <v14:layerRate extension="?">?</v14:layerRate>
                     <!--Optional:-->
                     <v14:parameterList>
                        <!--Zero or more repetitions:-->
                        <v15:nvs>
                           <v15:name>?</v15:name>
                           <v15:value>?</v15:value>
                        </v15:nvs>
                     </v14:parameterList>
                     <!--Optional:-->
                     <v14:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v14:vendorExtensions>
                  </v14:transmissionParameters>
               </v14:transmissionParametersList>
               <!--Optional:-->
               <v13:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:ingressTmdRef>
               <!--Optional:-->
               <v13:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:egressTmdRef>
            </v13:tpData>
         </v11:tpDataListToModify>
      </v11:swapSubnetworkConnectionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="swapSubnetworkConnection" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="switchRoute TestCase" searchProperties="true" id="5fa85adb-403e-4202-92a9-10c8ffbb242d"><con:settings/><con:testStep type="request" name="switchRoute"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ConnectionControlSoapHttpBinding</con:interface><con:operation>switchRoute</con:operation><con:request name="switchRoute"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/conc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/ConnectionControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>switchRoute</v1:activityName>
         <v1:msgName>switchRouteRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:switchRouteRequest>
         <!--Optional:-->
         <v11:sncRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:sncRef>
         <!--Optional:-->
         <v11:routeId>?</v11:routeId>
         <!--Optional:-->
         <v11:tolerableImpact>?</v11:tolerableImpact>
         <!--Optional:-->
         <v11:osFreedomLevel>?</v11:osFreedomLevel>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v13:tpData>
               <v13:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:tpRef>
               <!--Optional:-->
               <v13:tpMappingMode>?</v13:tpMappingMode>
               <!--Optional:-->
               <v14:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v14:transmissionParameters>
                     <!--Optional:-->
                     <v14:layerRate extension="?">?</v14:layerRate>
                     <!--Optional:-->
                     <v14:parameterList>
                        <!--Zero or more repetitions:-->
                        <v15:nvs>
                           <v15:name>?</v15:name>
                           <v15:value>?</v15:value>
                        </v15:nvs>
                     </v14:parameterList>
                     <!--Optional:-->
                     <v14:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v14:vendorExtensions>
                  </v14:transmissionParameters>
               </v14:transmissionParametersList>
               <!--Optional:-->
               <v13:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:ingressTmdRef>
               <!--Optional:-->
               <v13:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:egressTmdRef>
            </v13:tpData>
         </v11:tpDataListToModify>
         <!--Optional:-->
         <v11:vendorExtensions>
            <!--You may enter ANY elements at this point-->
         </v11:vendorExtensions>
      </v11:switchRouteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="switchRoute" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Termination Point Control" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createFloatingTerminationPoint TestCase" searchProperties="true" id="dea31917-c36c-4b95-98ed-4e446b5dc10d"><con:settings/><con:testStep type="request" name="createFloatingTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointControlSoapHttpBinding</con:interface><con:operation>createFloatingTerminationPoint</con:operation><con:request name="createFloatingTerminationPoint"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v16="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:v17="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v18="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>createFloatingTerminationPoint</v1:activityName>
         <v1:msgName>createFloatingTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:createFloatingTerminationPointRequest>
         <!--Optional:-->
         <v11:createData>
            <!--Optional:-->
            <v12:userLabel>?</v12:userLabel>
            <!--Optional:-->
            <v12:isForceUniqueness>?</v12:isForceUniqueness>
            <!--Optional:-->
            <v12:owner>?</v12:owner>
            <!--Optional:-->
            <v12:aliasNameList>
               <!--Zero or more repetitions:-->
               <v13:alias>
                  <v13:aliasName>?</v13:aliasName>
                  <v13:aliasValue>?</v13:aliasValue>
               </v13:alias>
            </v12:aliasNameList>
            <!--Optional:-->
            <v12:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v12:vendorExtensions>
            <!--Optional:-->
            <v14:name>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v14:name>
            <!--Optional:-->
            <v16:networkAccessDomain>?</v16:networkAccessDomain>
            <!--Optional:-->
            <v11:equipmentRef>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v11:equipmentRef>
            <!--Optional:-->
            <v11:ingressTmdRef>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v11:ingressTmdRef>
            <!--Optional:-->
            <v11:egressTmdRef>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v11:egressTmdRef>
            <!--Optional:-->
            <v11:tpMappingMode>?</v11:tpMappingMode>
            <!--Optional:-->
            <v11:direction>?</v11:direction>
            <!--Optional:-->
            <v17:transmissionParametersList>
               <!--Zero or more repetitions:-->
               <v17:transmissionParameters>
                  <!--Optional:-->
                  <v17:layerRate extension="?">?</v17:layerRate>
                  <!--Optional:-->
                  <v17:parameterList>
                     <!--Zero or more repetitions:-->
                     <v13:nvs>
                        <v13:name>?</v13:name>
                        <v13:value>?</v13:value>
                     </v13:nvs>
                  </v17:parameterList>
                  <!--Optional:-->
                  <v17:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v17:vendorExtensions>
               </v17:transmissionParameters>
            </v17:transmissionParametersList>
         </v11:createData>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v18:tpData>
               <v18:tpRef>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v18:tpRef>
               <!--Optional:-->
               <v18:tpMappingMode>?</v18:tpMappingMode>
               <!--Optional:-->
               <v17:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v17:transmissionParameters>
                     <!--Optional:-->
                     <v17:layerRate extension="?">?</v17:layerRate>
                     <!--Optional:-->
                     <v17:parameterList>
                        <!--Zero or more repetitions:-->
                        <v13:nvs>
                           <v13:name>?</v13:name>
                           <v13:value>?</v13:value>
                        </v13:nvs>
                     </v17:parameterList>
                     <!--Optional:-->
                     <v17:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v17:vendorExtensions>
                  </v17:transmissionParameters>
               </v17:transmissionParametersList>
               <!--Optional:-->
               <v18:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v18:ingressTmdRef>
               <!--Optional:-->
               <v18:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v18:egressTmdRef>
            </v18:tpData>
         </v11:tpDataListToModify>
      </v11:createFloatingTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="createFloatingTerminationPoint" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createGroupTerminationPoint TestCase" searchProperties="true" id="8f5b7e8b-10f4-4000-9592-43b1e7c330f9"><con:settings/><con:testStep type="request" name="createGroupTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointControlSoapHttpBinding</con:interface><con:operation>createGroupTerminationPoint</con:operation><con:request name="createGroupTerminationPoint"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v16="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>createGroupTerminationPoint</v1:activityName>
         <v1:msgName>createGroupTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:createGroupTerminationPointRequest>
         <!--Optional:-->
         <v11:createData>
            <!--Optional:-->
            <v12:userLabel>?</v12:userLabel>
            <!--Optional:-->
            <v12:isForceUniqueness>?</v12:isForceUniqueness>
            <!--Optional:-->
            <v12:owner>?</v12:owner>
            <!--Optional:-->
            <v12:aliasNameList>
               <!--Zero or more repetitions:-->
               <v13:alias>
                  <v13:aliasName>?</v13:aliasName>
                  <v13:aliasValue>?</v13:aliasValue>
               </v13:alias>
            </v12:aliasNameList>
            <!--Optional:-->
            <v12:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v12:vendorExtensions>
            <!--Optional:-->
            <v14:name>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v14:name>
            <!--Optional:-->
            <v16:networkAccessDomain>?</v16:networkAccessDomain>
            <!--Optional:-->
            <v11:containingMeRef>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v11:containingMeRef>
            <!--Optional:-->
            <v11:tpRefList>
               <!--Zero or more repetitions:-->
               <v15:name>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v15:name>
            </v11:tpRefList>
            <!--Optional:-->
            <v11:initialCtpRef>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v11:initialCtpRef>
            <!--Optional:-->
            <v11:numberOfCtp>?</v11:numberOfCtp>
            <!--Optional:-->
            <v11:gtpEffort>?</v11:gtpEffort>
            <!--Optional:-->
            <v11:isReportingAlarms>?</v11:isReportingAlarms>
            <!--Optional:-->
            <v11:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v11:vendorExtensions>
         </v11:createData>
      </v11:createGroupTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="createGroupTerminationPoint" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createTerminationPointPool TestCase" searchProperties="true" id="d64940ce-8ccb-479a-927b-b57980a3593b"><con:settings/><con:testStep type="request" name="createTerminationPointPool"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointControlSoapHttpBinding</con:interface><con:operation>createTerminationPointPool</con:operation><con:request name="createTerminationPointPool"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/cosd/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:v14="http://www.tmforum.org/mtop/fmw/xsd/cocd/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v16="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:v17="http://www.tmforum.org/mtop/nrb/xsd/lp/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>createTerminationPointPool</v1:activityName>
         <v1:msgName>createTerminationPointPoolRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:createTerminationPointPoolRequest>
         <!--Optional:-->
         <v11:createData>
            <!--Optional:-->
            <v12:userLabel>?</v12:userLabel>
            <!--Optional:-->
            <v12:isForceUniqueness>?</v12:isForceUniqueness>
            <!--Optional:-->
            <v12:owner>?</v12:owner>
            <!--Optional:-->
            <v12:aliasNameList>
               <!--Zero or more repetitions:-->
               <v13:alias>
                  <v13:aliasName>?</v13:aliasName>
                  <v13:aliasValue>?</v13:aliasValue>
               </v13:alias>
            </v12:aliasNameList>
            <!--Optional:-->
            <v12:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v12:vendorExtensions>
            <!--Optional:-->
            <v14:name>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v14:name>
            <!--Optional:-->
            <v16:networkAccessDomain>?</v16:networkAccessDomain>
            <!--Optional:-->
            <v11:userLabel>?</v11:userLabel>
            <!--Optional:-->
            <v11:forceUniqueness>?</v11:forceUniqueness>
            <!--Optional:-->
            <v11:owner>?</v11:owner>
            <!--Optional:-->
            <v11:containingMlsnRef>
               <!--1 or more repetitions:-->
               <v15:rdn>
                  <v15:type>?</v15:type>
                  <v15:value>?</v15:value>
               </v15:rdn>
            </v11:containingMlsnRef>
            <!--Optional:-->
            <v11:containedMembersRefList>
               <!--Zero or more repetitions:-->
               <v15:name>
                  <!--1 or more repetitions:-->
                  <v15:rdn>
                     <v15:type>?</v15:type>
                     <v15:value>?</v15:value>
                  </v15:rdn>
               </v15:name>
            </v11:containedMembersRefList>
            <!--Optional:-->
            <v17:transmissionParametersList>
               <!--Zero or more repetitions:-->
               <v17:transmissionParameters>
                  <!--Optional:-->
                  <v17:layerRate extension="?">?</v17:layerRate>
                  <!--Optional:-->
                  <v17:parameterList>
                     <!--Zero or more repetitions:-->
                     <v13:nvs>
                        <v13:name>?</v13:name>
                        <v13:value>?</v13:value>
                     </v13:nvs>
                  </v17:parameterList>
                  <!--Optional:-->
                  <v17:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v17:vendorExtensions>
               </v17:transmissionParameters>
            </v17:transmissionParametersList>
            <!--Optional:-->
            <v11:descriptionOfUse>?</v11:descriptionOfUse>
            <!--Optional:-->
            <v11:vendorExtensions>
               <!--You may enter ANY elements at this point-->
            </v11:vendorExtensions>
         </v11:createData>
      </v11:createTerminationPointPoolRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="createTerminationPointPool" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteFloatingTerminationPoint TestCase" searchProperties="true" id="a7440830-d6a8-4c9c-8bbe-2d764efbfe8c"><con:settings/><con:testStep type="request" name="deleteFloatingTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointControlSoapHttpBinding</con:interface><con:operation>deleteFloatingTerminationPoint</con:operation><con:request name="deleteFloatingTerminationPoint"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v13="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>deleteFloatingTerminationPoint</v1:activityName>
         <v1:msgName>deleteFloatingTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:deleteFloatingTerminationPointRequest>
         <!--Optional:-->
         <v11:ftpName>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:ftpName>
         <!--Optional:-->
         <v11:tpDataListToModify>
            <!--Zero or more repetitions:-->
            <v13:tpData>
               <v13:tpRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:tpRef>
               <!--Optional:-->
               <v13:tpMappingMode>?</v13:tpMappingMode>
               <!--Optional:-->
               <v14:transmissionParametersList>
                  <!--Zero or more repetitions:-->
                  <v14:transmissionParameters>
                     <!--Optional:-->
                     <v14:layerRate extension="?">?</v14:layerRate>
                     <!--Optional:-->
                     <v14:parameterList>
                        <!--Zero or more repetitions:-->
                        <v15:nvs>
                           <v15:name>?</v15:name>
                           <v15:value>?</v15:value>
                        </v15:nvs>
                     </v14:parameterList>
                     <!--Optional:-->
                     <v14:vendorExtensions>
                        <!--You may enter ANY elements at this point-->
                     </v14:vendorExtensions>
                  </v14:transmissionParameters>
               </v14:transmissionParametersList>
               <!--Optional:-->
               <v13:ingressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:ingressTmdRef>
               <!--Optional:-->
               <v13:egressTmdRef>
                  <!--1 or more repetitions:-->
                  <v12:rdn>
                     <v12:type>?</v12:type>
                     <v12:value>?</v12:value>
                  </v12:rdn>
               </v13:egressTmdRef>
            </v13:tpData>
         </v11:tpDataListToModify>
      </v11:deleteFloatingTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="deleteFloatingTerminationPoint" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteGroupTerminationPoint TestCase" searchProperties="true" id="fd0c1c34-b352-45b3-a29d-e939319edcb4"><con:settings/><con:testStep type="request" name="deleteGroupTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointControlSoapHttpBinding</con:interface><con:operation>deleteGroupTerminationPoint</con:operation><con:request name="deleteGroupTerminationPoint"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>deleteGroupTerminationPoint</v1:activityName>
         <v1:msgName>deleteGroupTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:deleteGroupTerminationPointRequest>
         <!--Optional:-->
         <v11:gtpName>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:gtpName>
      </v11:deleteGroupTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="deleteGroupTerminationPoint" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteTerminationPointPool TestCase" searchProperties="true" id="8167f115-12de-4bc0-8274-0337f98b6ed6"><con:settings/><con:testStep type="request" name="deleteTerminationPointPool"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointControlSoapHttpBinding</con:interface><con:operation>deleteTerminationPointPool</con:operation><con:request name="deleteTerminationPointPool"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>deleteTerminationPointPool</v1:activityName>
         <v1:msgName>deleteTerminationPointPoolRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:deleteTerminationPointPoolRequest>
         <!--Optional:-->
         <v11:tpPoolName>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpPoolName>
      </v11:deleteTerminationPointPoolRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="deleteTerminationPointPool" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="modifyGroupTerminationPoint TestCase" searchProperties="true" id="01380bb4-9cda-4e6e-b4de-efa688ef37fe"><con:settings/><con:testStep type="request" name="modifyGroupTerminationPoint"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointControlSoapHttpBinding</con:interface><con:operation>modifyGroupTerminationPoint</con:operation><con:request name="modifyGroupTerminationPoint"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>modifyGroupTerminationPoint</v1:activityName>
         <v1:msgName>modifyGroupTerminationPointRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:modifyGroupTerminationPointRequest>
         <!--Optional:-->
         <v11:gtpName>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:gtpName>
         <!--Optional:-->
         <v11:tpRefList>
            <!--Zero or more repetitions:-->
            <v12:name>
               <!--1 or more repetitions:-->
               <v12:rdn>
                  <v12:type>?</v12:type>
                  <v12:value>?</v12:value>
               </v12:rdn>
            </v12:name>
         </v11:tpRefList>
         <!--Optional:-->
         <v11:actionType>?</v11:actionType>
      </v11:modifyGroupTerminationPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="modifyGroupTerminationPoint" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="modifyTerminationPointPool TestCase" searchProperties="true" id="35e75064-bad4-43e2-826b-e028b53c73d6"><con:settings/><con:testStep type="request" name="modifyTerminationPointPool"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointControlSoapHttpBinding</con:interface><con:operation>modifyTerminationPointPool</con:operation><con:request name="modifyTerminationPointPool"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>modifyTerminationPointPool</v1:activityName>
         <v1:msgName>modifyTerminationPointPoolRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:modifyTerminationPointPoolRequest>
         <!--Optional:-->
         <v11:tpPoolName>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpPoolName>
         <!--Optional:-->
         <v11:containedMembersRefList>
            <!--Zero or more repetitions:-->
            <v12:name>
               <!--1 or more repetitions:-->
               <v12:rdn>
                  <v12:type>?</v12:type>
                  <v12:value>?</v12:value>
               </v12:rdn>
            </v12:name>
         </v11:containedMembersRefList>
         <!--Optional:-->
         <v11:actionType>?</v11:actionType>
      </v11:modifyTerminationPointPoolRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="modifyTerminationPointPool" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="setTerminationPointData TestCase" searchProperties="true" id="891e0709-f9ce-49c5-bb6d-266dad286231"><con:settings/><con:testStep type="request" name="setTerminationPointData"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TerminationPointControlSoapHttpBinding</con:interface><con:operation>setTerminationPointData</con:operation><con:request name="setTerminationPointData"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:v12="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:v15="http://www.tmforum.org/mtop/fmw/xsd/gen/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rp/TerminationPointControl</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>setTerminationPointData</v1:activityName>
         <v1:msgName>setTerminationPointDataRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:setTerminationPointDataRequest>
         <!--Optional:-->
         <v11:tpInfo>
            <v12:tpRef>
               <!--1 or more repetitions:-->
               <v13:rdn>
                  <v13:type>?</v13:type>
                  <v13:value>?</v13:value>
               </v13:rdn>
            </v12:tpRef>
            <!--Optional:-->
            <v12:tpMappingMode>?</v12:tpMappingMode>
            <!--Optional:-->
            <v14:transmissionParametersList>
               <!--Zero or more repetitions:-->
               <v14:transmissionParameters>
                  <!--Optional:-->
                  <v14:layerRate extension="?">?</v14:layerRate>
                  <!--Optional:-->
                  <v14:parameterList>
                     <!--Zero or more repetitions:-->
                     <v15:nvs>
                        <v15:name>?</v15:name>
                        <v15:value>?</v15:value>
                     </v15:nvs>
                  </v14:parameterList>
                  <!--Optional:-->
                  <v14:vendorExtensions>
                     <!--You may enter ANY elements at this point-->
                  </v14:vendorExtensions>
               </v14:transmissionParameters>
            </v14:transmissionParametersList>
            <!--Optional:-->
            <v12:ingressTmdRef>
               <!--1 or more repetitions:-->
               <v13:rdn>
                  <v13:type>?</v13:type>
                  <v13:value>?</v13:value>
               </v13:rdn>
            </v12:ingressTmdRef>
            <!--Optional:-->
            <v12:egressTmdRef>
               <!--1 or more repetitions:-->
               <v13:rdn>
                  <v13:type>?</v13:type>
                  <v13:value>?</v13:value>
               </v13:rdn>
            </v12:egressTmdRef>
         </v11:tpInfo>
      </v11:setTerminationPointDataRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="setTerminationPointData" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Performance Management Retrieval" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllCurrentPerformanceMonitoringData TestCase" searchProperties="true" id="c51ab3bd-735f-42db-9237-02c95a77f654"><con:settings/><con:testStep type="request" name="getAllCurrentPerformanceMonitoringData"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PerformanceManagementRetrievalSoapHttpBinding</con:interface><con:operation>getAllCurrentPerformanceMonitoringData</con:operation><con:request name="getAllCurrentPerformanceMonitoringData"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:v12="http://www.tmforum.org/mtop/nra/xsd/pmtgt/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:v15="http://www.tmforum.org/mtop/nra/xsd/pm/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllCurrentPerformanceMonitoringData</v1:activityName>
         <v1:msgName>getAllCurrentPerformanceMonitoringDataRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllCurrentPerformanceMonitoringDataRequest>
         <!--Optional:-->
         <v11:pmObjectSelectList>
            <!--Zero or more repetitions:-->
            <v12:pmObjectSelect>
               <!--Optional:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v13:rdn>
                     <v13:type>?</v13:type>
                     <v13:value>?</v13:value>
                  </v13:rdn>
               </v12:name>
               <!--Optional:-->
               <v12:layerRateList>
                  <!--Zero or more repetitions:-->
                  <v14:layerRate extension="?">?</v14:layerRate>
               </v12:layerRateList>
               <!--Optional:-->
               <v12:pmLocationList>
                  <!--Zero or more repetitions:-->
                  <v15:pmLocation>?</v15:pmLocation>
               </v12:pmLocationList>
               <!--Optional:-->
               <v12:granularityList>
                  <!--Zero or more repetitions:-->
                  <v15:pmGranularity>?</v15:pmGranularity>
               </v12:granularityList>
            </v12:pmObjectSelect>
         </v11:pmObjectSelectList>
         <!--Optional:-->
         <v11:pmParameterList>
            <!--Zero or more repetitions:-->
            <v15:pmParameterName>?</v15:pmParameterName>
         </v11:pmParameterList>
      </v11:getAllCurrentPerformanceMonitoringDataRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllCurrentPerformanceMonitoringData" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllPerformanceMonitoringPoints TestCase" searchProperties="true" id="cfa31e3b-6e09-4530-928a-a73e8ed4f78a"><con:settings/><con:testStep type="request" name="getAllPerformanceMonitoringPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PerformanceManagementRetrievalSoapHttpBinding</con:interface><con:operation>getAllPerformanceMonitoringPoints</con:operation><con:request name="getAllPerformanceMonitoringPoints"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllPerformanceMonitoringPoints</v1:activityName>
         <v1:msgName>getAllPerformanceMonitoringPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllPerformanceMonitoringPointsRequest>
         <!--Optional:-->
         <v11:tpOrMeName>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpOrMeName>
      </v11:getAllPerformanceMonitoringPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getAllPerformanceMonitoringPoints" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getHistoryPerformanceMonitoringData TestCase" searchProperties="true" id="96443101-bcee-4adb-aa53-b03b7c58ef25"><con:settings/><con:testStep type="request" name="getHistoryPerformanceMonitoringData"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PerformanceManagementRetrievalSoapHttpBinding</con:interface><con:operation>getHistoryPerformanceMonitoringData</con:operation><con:request name="getHistoryPerformanceMonitoringData"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:v12="http://www.tmforum.org/mtop/nra/xsd/pmtgt/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:v15="http://www.tmforum.org/mtop/nra/xsd/pm/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getHistoryPerformanceMonitoringData</v1:activityName>
         <v1:msgName>getHistoryPerformanceMonitoringDataRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getHistoryPerformanceMonitoringDataRequest>
         <v11:userName>?</v11:userName>
         <v11:password>?</v11:password>
         <v11:destination>?</v11:destination>
         <!--Optional:-->
         <v11:pmObjectSelectList>
            <!--Zero or more repetitions:-->
            <v12:pmObjectSelect>
               <!--Optional:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v13:rdn>
                     <v13:type>?</v13:type>
                     <v13:value>?</v13:value>
                  </v13:rdn>
               </v12:name>
               <!--Optional:-->
               <v12:layerRateList>
                  <!--Zero or more repetitions:-->
                  <v14:layerRate extension="?">?</v14:layerRate>
               </v12:layerRateList>
               <!--Optional:-->
               <v12:pmLocationList>
                  <!--Zero or more repetitions:-->
                  <v15:pmLocation>?</v15:pmLocation>
               </v12:pmLocationList>
               <!--Optional:-->
               <v12:granularityList>
                  <!--Zero or more repetitions:-->
                  <v15:pmGranularity>?</v15:pmGranularity>
               </v12:granularityList>
            </v12:pmObjectSelect>
         </v11:pmObjectSelectList>
         <!--Optional:-->
         <v11:pmParameterList>
            <!--Zero or more repetitions:-->
            <v15:pmParameterName>?</v15:pmParameterName>
         </v11:pmParameterList>
         <!--Optional:-->
         <v11:startTime>?</v11:startTime>
         <!--Optional:-->
         <v11:endTime>?</v11:endTime>
         <!--Optional:-->
         <v11:mustForceUpload>?</v11:mustForceUpload>
      </v11:getHistoryPerformanceMonitoringDataRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getHistoryPerformanceMonitoringData" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getHoldingTime TestCase" searchProperties="true" id="274ba40e-ec7d-44f6-98c7-c53b3ba26b3b"><con:settings/><con:testStep type="request" name="getHoldingTime"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PerformanceManagementRetrievalSoapHttpBinding</con:interface><con:operation>getHoldingTime</con:operation><con:request name="getHoldingTime"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getHoldingTime</v1:activityName>
         <v1:msgName>getHoldingTimeRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getHoldingTimeRequest>?</v11:getHoldingTimeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getHoldingTime" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getMePerformanceMonitoringCapabilities TestCase" searchProperties="true" id="7b8ae6ab-a87a-4177-add0-fd9da1ca4595"><con:settings/><con:testStep type="request" name="getMePerformanceMonitoringCapabilities"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PerformanceManagementRetrievalSoapHttpBinding</con:interface><con:operation>getMePerformanceMonitoringCapabilities</con:operation><con:request name="getMePerformanceMonitoringCapabilities"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getMePerformanceMonitoringCapabilities</v1:activityName>
         <v1:msgName>getMePerformanceMonitoringCapabilitiesRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getMePerformanceMonitoringCapabilitiesRequest>
         <!--Optional:-->
         <v11:meRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:meRef>
         <!--Optional:-->
         <v11:layerRate extension="?">?</v11:layerRate>
      </v11:getMePerformanceMonitoringCapabilitiesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getMePerformanceMonitoringCapabilities" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getPerformanceMonitoringDataIterator TestCase" searchProperties="true" id="1048ebae-775a-4c35-918a-ffec211b2e8a"><con:settings/><con:testStep type="request" name="getAllCurrentPerformanceMonitoringData"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PerformanceManagementRetrievalSoapHttpBinding</con:interface><con:operation>getAllCurrentPerformanceMonitoringData</con:operation><con:request name="getAllCurrentPerformanceMonitoringData"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:v12="http://www.tmforum.org/mtop/nra/xsd/pmtgt/v1" xmlns:v13="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:v14="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:v15="http://www.tmforum.org/mtop/nra/xsd/pm/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllCurrentPerformanceMonitoringData</v1:activityName>
         <v1:msgName>getAllCurrentPerformanceMonitoringDataRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllCurrentPerformanceMonitoringDataRequest>
         <!--Optional:-->
         <v11:pmObjectSelectList>
            <!--Zero or more repetitions:-->
            <v12:pmObjectSelect>
               <!--Optional:-->
               <v12:name>
                  <!--1 or more repetitions:-->
                  <v13:rdn>
                     <v13:type>?</v13:type>
                     <v13:value>?</v13:value>
                  </v13:rdn>
               </v12:name>
               <!--Optional:-->
               <v12:layerRateList>
                  <!--Zero or more repetitions:-->
                  <v14:layerRate extension="?">?</v14:layerRate>
               </v12:layerRateList>
               <!--Optional:-->
               <v12:pmLocationList>
                  <!--Zero or more repetitions:-->
                  <v15:pmLocation>?</v15:pmLocation>
               </v12:pmLocationList>
               <!--Optional:-->
               <v12:granularityList>
                  <!--Zero or more repetitions:-->
                  <v15:pmGranularity>?</v15:pmGranularity>
               </v12:granularityList>
            </v12:pmObjectSelect>
         </v11:pmObjectSelectList>
         <!--Optional:-->
         <v11:pmParameterList>
            <!--Zero or more repetitions:-->
            <v15:pmParameterName>?</v15:pmParameterName>
         </v11:pmParameterList>
      </v11:getAllCurrentPerformanceMonitoringDataRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>&lt;iteratorReferenceURI></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>iteratorUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getAllCurrentPerformanceMonitoringData</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getPerformanceMonitoringDataIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>batchSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getAllCurrentPerformanceMonitoringData</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getPerformanceMonitoringDataIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getPerformanceMonitoringDataIterator"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PerformanceManagementRetrievalSoapHttpBinding</con:interface><con:operation>getPerformanceMonitoringDataIterator</con:operation><con:request name="getPerformanceMonitoringDataIterator"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getPerformanceMonitoringDataIterator</v1:activityName>
         <v1:msgName>getPerformanceMonitoringDataIteratorRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:iteratorReferenceURI>http://onx-mdangan-01:9001/mtosi/mri/TerminationPointRetrieval/3</v1:iteratorReferenceURI>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getPerformanceMonitoringDataIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getPerformanceMonitoringDataIterator" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getPerformanceMonitoringPointsIterator TestCase" searchProperties="true" id="07d2a208-77cd-4349-80e4-65b27f8d9c06"><con:settings/><con:testStep type="request" name="getAllPerformanceMonitoringPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PerformanceManagementRetrievalSoapHttpBinding</con:interface><con:operation>getAllPerformanceMonitoringPoints</con:operation><con:request name="getAllPerformanceMonitoringPoints"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getAllPerformanceMonitoringPoints</v1:activityName>
         <v1:msgName>getAllPerformanceMonitoringPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getAllPerformanceMonitoringPointsRequest>
         <!--Optional:-->
         <v11:tpOrMeName>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:tpOrMeName>
      </v11:getAllPerformanceMonitoringPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>&lt;iteratorReferenceURI></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>iteratorUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getAllPerformanceMonitoringPoints</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getPerformanceMonitoringPointsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:iteratorReferenceURI</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>batchsize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getAllPerformanceMonitoringPoints</con:sourceStep><con:sourcePath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getPerformanceMonitoringPointsIterator</con:targetStep><con:targetPath>declare namespace v1 = "http://www.tmforum.org/mtop/fmw/xsd/hdr/v1"
//v1:requestedBatchSize</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getPerformanceMonitoringPointsIterator"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PerformanceManagementRetrievalSoapHttpBinding</con:interface><con:operation>getPerformanceMonitoringPointsIterator</con:operation><con:request name="getPerformanceMonitoringPointsIterator"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</v1:destinationURI>
         <v1:communicationPattern>MultipleBatchResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getPerformanceMonitoringPointsIterator</v1:activityName>
         <v1:msgName>getPerformanceMonitoringPointsIteratorRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
	 <v1:iteratorReferenceURI>http://onx-mdangan-01:9001/mtosi/mri/TerminationPointRetrieval/5</v1:iteratorReferenceURI>
	 <v1:requestedBatchSize>10</v1:requestedBatchSize>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getPerformanceMonitoringPointsIteratorRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getPerformanceMonitoringPointsIterator" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getProfileAssociatedTerminationPoints TestCase" searchProperties="true" id="b6e06f41-98ac-4393-9ff7-c61555e52e13"><con:settings/><con:testStep type="request" name="getProfileAssociatedTerminationPoints"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PerformanceManagementRetrievalSoapHttpBinding</con:interface><con:operation>getProfileAssociatedTerminationPoints</con:operation><con:request name="getProfileAssociatedTerminationPoints"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/rpm/xsd/pmr/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/rpm/PerformanceManagementRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getProfileAssociatedTerminationPoints</v1:activityName>
         <v1:msgName>getProfileAssociatedTerminationPointsRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getProfileAssociatedTerminationPointsRequest>
         <!--Optional:-->
         <v11:profileRef>
            <!--1 or more repetitions:-->
            <v12:rdn>
               <v12:type>?</v12:type>
               <v12:value>?</v12:value>
            </v12:rdn>
         </v11:profileRef>
      </v11:getProfileAssociatedTerminationPointsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Simple Contains" name="Contains &quot;Not Implemented&quot;"><con:configuration><token>&lt;message>Not Implemented&lt;/message></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains FAILURE"><con:configuration><token>>FAILURE&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="getProfileAssociatedTerminationPoints" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Equipment Inventory Retrieval"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getEquipment" searchProperties="true" id="2a6884f4-753b-4d18-938a-ce98b7faffbb"><con:settings/><con:testStep type="request" name="getEquipment - equipment"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EquipmentInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getEquipment</con:operation><con:request name="getEquipment - equipment" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/eir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getEquipment</v1:activityName>
         <v1:msgName>getEquipmentRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getEquipmentRequest>
         <v11:equipmentOrEhRef>
            <v12:rdn>
               <v12:type>MD</v12:type>
               <v12:value>CIENA/OneControl</v12:value>
            </v12:rdn>
            <v12:rdn>
               <v12:type>ME</v12:type>
               <v12:value>OME0276</v12:value>
            </v12:rdn>
            <v12:rdn>
               <v12:type>EQ</v12:type>
               <v12:value>6</v12:value>
            </v12:rdn>
         </v11:equipmentOrEhRef>
      </v11:getEquipmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:assertion type="Simple Contains" name="discoveredName"><con:configuration><token>:discoveredName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="name"><con:configuration><token>:name</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="namingOs"><con:configuration><token>:namingOs</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="owner"><con:configuration><token>:owner</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="userLabel"><con:configuration><token>:userLabel</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="source"><con:configuration><token>:source</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="aliasNameList"><con:configuration><token>:aliasNameList</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="vendorExtension"><con:configuration><token>:vendorExtension</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="resourceFulfillmentState"><con:configuration><token>:resourceFulfillmentState</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="isReportingAlarms"><con:configuration><token>:isReportingAlarms</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="expectedEquipmentObjectType"><con:configuration><token>:expectedEquipmentObjectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="installedEquipmentObjectType"><con:configuration><token>:installedEquipmentObjectType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="installedPartNumber"><con:configuration><token>:installedPartNumber</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="installedSerialNumber"><con:configuration><token>:installedSerialNumber</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name=":installedVersion"><con:configuration><token>:installedVersion</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="manufacturer"><con:configuration><token>:manufacturer</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getEquipment"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getEquipment - equipmentHolder"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EquipmentInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getEquipment</con:operation><con:request name="getEquipment - equipmentHolder" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/eir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getEquipment</v1:activityName>
         <v1:msgName>getEquipmentRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getEquipmentRequest>
         <v11:equipmentOrEhRef>
            <v12:rdn>
               <v12:type>MD</v12:type>
               <v12:value>CIENA/OneControl</v12:value>
            </v12:rdn>
            <v12:rdn>
               <v12:type>ME</v12:type>
               <v12:value>OME0276</v12:value>
            </v12:rdn>
            <v12:rdn>
               <v12:type>EH</v12:type>
               <v12:value>6</v12:value>
            </v12:rdn>
         </v11:equipmentOrEhRef>
      </v11:getEquipmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:assertion type="Simple Contains" name="discoveredName"><con:configuration><token>:discoveredName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="name"><con:configuration><token>:name</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="namingOs"><con:configuration><token>:namingOs</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="owner"><con:configuration><token>:owner</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="userLabel"><con:configuration><token>:userLabel</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="source"><con:configuration><token>:source</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="aliasNameList"><con:configuration><token>:aliasNameList</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="vendorExtension"><con:configuration><token>:vendorExtension</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="isReportingAlarms"><con:configuration><token>:isReportingAlarms</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="holderType"><con:configuration><token>:holderType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="expectedOrInstalledEquipmentRef"><con:configuration><token>:expectedOrInstalledEquipmentRef</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="acceptableEquipmentTypeList"><con:configuration><token>:acceptableEquipmentTypeList</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="holderState"><con:configuration><token>:holderState</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getEquipment"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getEquipment - invalid rdn"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EquipmentInventoryRetrievalSoapHttpBinding</con:interface><con:operation>getEquipment</con:operation><con:request name="getEquipment - invalid rdn" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://62.190.191.48:9006/mtosi/mri/EquipmentInventoryRetrieval/EquipmentInventoryRetrievalHttp</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://www.tmforum.org/mtop/fmw/xsd/hdr/v1" xmlns:v11="http://www.tmforum.org/mtop/mri/xsd/eir/v1" xmlns:v12="http://www.tmforum.org/mtop/fmw/xsd/nam/v1">
   <soapenv:Header>
      <v1:header>
         <v1:destinationURI>http://62.190.191.48:9006/mtosi/mri/ResourceInventoryRetrieval</v1:destinationURI>
         <v1:communicationPattern>SimpleResponse</v1:communicationPattern>
         <v1:communicationStyle>RPC</v1:communicationStyle>
         <v1:activityName>getEquipment</v1:activityName>
         <v1:msgName>getEquipmentRequest</v1:msgName>
         <v1:senderURI>http://62.190.191.48:9009</v1:senderURI>
         <v1:msgType>REQUEST</v1:msgType>
      </v1:header>
   </soapenv:Header>
   <soapenv:Body>
      <v11:getEquipmentRequest>
         <v11:equipmentOrEhRef>
            <v12:rdn>
               <v12:type>MD</v12:type>
               <v12:value>CIENA/OneControl</v12:value>
            </v12:rdn>
            <v12:rdn>
               <v12:type>ME</v12:type>
               <v12:value>OME0276</v12:value>
            </v12:rdn>
         </v11:equipmentOrEhRef>
      </v11:getEquipmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault"/><con:assertion type="Simple Contains" name="error message"><con:configuration><token>EquipmentOrEhRef must be defined with a MD and ME with either an EQ or EH type</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getEquipment"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:mockService port="9009" path="/mtosi/fmw/NotificationConsumer" host="62.190.191.48" name="Notification Consumer" bindToHostOnly="false" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:mockOperation name="notify" interface="NotificationConsumerSoapHttpBinding" operation="notify"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Response 1" encoding="UTF-8"><con:settings/><con:responseContent/><con:wsaConfig mustUnderstand="NONE" version="200508" action="notify"/></con:response><con:dispatchConfig/></con:mockOperation><con:properties/></con:mockService><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>